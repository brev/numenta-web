/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/numenta-web/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ((function(modules) {
	// Check all modules for deduplicated modules
	for(var i in modules) {
		if(Object.prototype.hasOwnProperty.call(modules, i)) {
			switch(typeof modules[i]) {
			case "function": break;
			case "object":
				// Module can be created from a template
				modules[i] = (function(_m) {
					var args = _m.slice(1), fn = modules[_m[0]];
					return function (a,b,c) {
						fn.apply(this, [a,b,c].concat(args));
					};
				}(modules[i]));
				break;
			default:
				// Module is a copy of another module
				modules[i] = modules[modules[i]];
				break;
			}
		}
	}
	return modules;
}([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(30);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _reactRouter = __webpack_require__(162);
	
	var _reactRouterScroll = __webpack_require__(224);
	
	var _reactRouterScroll2 = _interopRequireDefault(_reactRouterScroll);
	
	var _createRoutes = __webpack_require__(234);
	
	var _createRoutes2 = _interopRequireDefault(_createRoutes);
	
	var _gatsbyBrowser = __webpack_require__(500);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var loadContext = __webpack_require__(501); /*  weak */
	
	function loadConfig(cb) {
	  var stuff = __webpack_require__(364);
	  if (false) {
	    module.hot.accept(stuff.id, function () {
	      return cb();
	    });
	  }
	  return cb();
	}
	
	var currentLocation = null;
	
	_reactRouter.browserHistory.listen(function (location) {
	  currentLocation = location;
	  if (_gatsbyBrowser.onRouteChange) {
	    console.warn('onRouteChange is now deprecated and will be removed in the next major Gatsby release (0.12). Please use onRouteUpdate instead. See the PR for more info (https://github.com/gatsbyjs/gatsby/pull/321).');
	    (0, _gatsbyBrowser.onRouteChange)(location);
	  }
	});
	
	function onUpdate() {
	  if (_gatsbyBrowser.onRouteUpdate) {
	    (0, _gatsbyBrowser.onRouteUpdate)(currentLocation);
	  }
	}
	
	var routes = void 0;
	loadConfig(function () {
	  return loadContext(function (pagesReq) {
	    var _require = __webpack_require__(364);
	
	    var pages = _require.pages;
	
	    if (!routes) {
	      routes = (0, _createRoutes2.default)(pages, pagesReq);
	    } else {
	      (0, _createRoutes2.default)(pages, pagesReq);
	    }
	
	    _reactDom2.default.render(_react2.default.createElement(_reactRouter.Router, {
	      history: _reactRouter.browserHistory,
	      routes: routes,
	      render: (0, _reactRouter.applyRouterMiddleware)((0, _reactRouterScroll2.default)()),
	      onUpdate: onUpdate
	    }), typeof window !== 'undefined' ? document.getElementById('react-mount') : void 0);
	  });
	});

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(3);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactChildren = __webpack_require__(5);
	var ReactComponent = __webpack_require__(17);
	var ReactClass = __webpack_require__(20);
	var ReactDOMFactories = __webpack_require__(25);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypes = __webpack_require__(27);
	var ReactVersion = __webpack_require__(28);
	
	var onlyChild = __webpack_require__(29);
	var warning = __webpack_require__(11);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (false) {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	module.exports = React;

/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(6);
	var ReactElement = __webpack_require__(9);
	
	var emptyFunction = __webpack_require__(12);
	var traverseAllChildren = __webpack_require__(14);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;

/***/ },
/* 7 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactCurrentOwner = __webpack_require__(10);
	
	var warning = __webpack_require__(11);
	var canDefineProperty = __webpack_require__(13);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (false) {
	    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	
	    // Create dummy `key` and `ref` property to `props` to warn users against its use
	    var warnAboutAccessingKey = function () {
	      if (!specialPropKeyWarningShown) {
	        specialPropKeyWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingKey.isReactWarning = true;
	
	    var warnAboutAccessingRef = function () {
	      if (!specialPropRefWarningShown) {
	        specialPropRefWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingRef.isReactWarning = true;
	
	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: warnAboutAccessingKey,
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: warnAboutAccessingRef,
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;
	
	module.exports = ReactElement;

/***/ },
/* 10 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(12);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (false) {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;

/***/ },
/* 12 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (false) {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactElement = __webpack_require__(9);
	
	var getIteratorFn = __webpack_require__(15);
	var invariant = __webpack_require__(8);
	var KeyEscapeUtils = __webpack_require__(16);
	var warning = __webpack_require__(11);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 16 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactNoopUpdateQueue = __webpack_require__(18);
	
	var canDefineProperty = __webpack_require__(13);
	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(11);
	
	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (false) {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var ReactComponent = __webpack_require__(17);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypeLocations = __webpack_require__(21);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactNoopUpdateQueue = __webpack_require__(18);
	
	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(8);
	var keyMirror = __webpack_require__(22);
	var keyOf = __webpack_require__(24);
	var warning = __webpack_require__(11);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (false) {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (false) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (false) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(22);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 24 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(9);
	
	var mapObject = __webpack_require__(26);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (false) {
	    var ReactElementValidator = require('./ReactElementValidator');
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOMFactories;

/***/ },
/* 26 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(9);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	
	var emptyFunction = __webpack_require__(12);
	var getIteratorFn = __webpack_require__(15);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

/***/ },
/* 28 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '15.2.1';

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactElement = __webpack_require__(9);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(31);


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactDefaultInjection = __webpack_require__(35);
	var ReactMount = __webpack_require__(154);
	var ReactReconciler = __webpack_require__(55);
	var ReactUpdates = __webpack_require__(52);
	var ReactVersion = __webpack_require__(28);
	
	var findDOMNode = __webpack_require__(159);
	var getHostComponentFromComposite = __webpack_require__(160);
	var renderSubtreeIntoContainer = __webpack_require__(161);
	var warning = __webpack_require__(11);
	
	ReactDefaultInjection.inject();
	
	var React = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	module.exports = React;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var DOMProperty = __webpack_require__(33);
	var ReactDOMComponentFlags = __webpack_require__(34);
	
	var invariant = __webpack_require__(8);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID == null) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;

/***/ },
/* 34 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(36);
	var ChangeEventPlugin = __webpack_require__(51);
	var DefaultEventPluginOrder = __webpack_require__(63);
	var EnterLeaveEventPlugin = __webpack_require__(64);
	var HTMLDOMPropertyConfig = __webpack_require__(69);
	var ReactComponentBrowserEnvironment = __webpack_require__(70);
	var ReactDOMComponent = __webpack_require__(84);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactDOMEmptyComponent = __webpack_require__(125);
	var ReactDOMTreeTraversal = __webpack_require__(126);
	var ReactDOMTextComponent = __webpack_require__(127);
	var ReactDefaultBatchingStrategy = __webpack_require__(128);
	var ReactEventListener = __webpack_require__(129);
	var ReactInjection = __webpack_require__(132);
	var ReactReconcileTransaction = __webpack_require__(133);
	var SVGDOMPropertyConfig = __webpack_require__(141);
	var SelectEventPlugin = __webpack_require__(142);
	var SimpleEventPlugin = __webpack_require__(143);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(37);
	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(45);
	var FallbackCompositionState = __webpack_require__(46);
	var SyntheticCompositionEvent = __webpack_require__(48);
	var SyntheticInputEvent = __webpack_require__(50);
	
	var keyOf = __webpack_require__(24);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(22);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(37);
	var EventPluginHub = __webpack_require__(39);
	var EventPluginUtils = __webpack_require__(41);
	
	var accumulateInto = __webpack_require__(43);
	var forEachAccumulated = __webpack_require__(44);
	var warning = __webpack_require__(11);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var EventPluginRegistry = __webpack_require__(40);
	var EventPluginUtils = __webpack_require__(41);
	var ReactErrorUtils = __webpack_require__(42);
	
	var accumulateInto = __webpack_require__(43);
	var forEachAccumulated = __webpack_require__(44);
	var invariant = __webpack_require__(8);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[inst._rootNodeID] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[inst._rootNodeID];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][inst._rootNodeID]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][inst._rootNodeID];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	
	  if (false) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  false ? {} : null,
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (false) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var EventConstants = __webpack_require__(37);
	var ReactErrorUtils = __webpack_require__(42);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;

/***/ },
/* 44 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ },
/* 45 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(6);
	
	var getTextContentAccessor = __webpack_require__(47);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(45);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(49);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(6);
	
	var emptyFunction = __webpack_require__(12);
	var warning = __webpack_require__(11);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (false) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (false) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (false) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (false) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (false) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(49);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(37);
	var EventPluginHub = __webpack_require__(39);
	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(45);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactUpdates = __webpack_require__(52);
	var SyntheticEvent = __webpack_require__(49);
	
	var getEventTarget = __webpack_require__(60);
	var isEventSupported = __webpack_require__(61);
	var isTextInputElement = __webpack_require__(62);
	var keyOf = __webpack_require__(24);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var CallbackQueue = __webpack_require__(53);
	var PooledClass = __webpack_require__(6);
	var ReactFeatureFlags = __webpack_require__(54);
	var ReactReconciler = __webpack_require__(55);
	var Transaction = __webpack_require__(59);
	
	var invariant = __webpack_require__(8);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(6);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	_assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },
	
	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;

/***/ },
/* 54 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactRef = __webpack_require__(56);
	var ReactInstrumentation = __webpack_require__(58);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      !(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1) ?  false ? invariant(false, 'performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : _prodInvariant('121', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(57);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */
	
	'use strict';
	
	var debugTool = null;
	
	if (false) {
	  var ReactDebugTool = require('./ReactDebugTool');
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;

/***/ },
/* 60 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(45);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 62 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(24);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(37);
	var EventPropagators = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(32);
	var SyntheticMouseEvent = __webpack_require__(65);
	
	var keyOf = __webpack_require__(24);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(66);
	var ViewportMetrics = __webpack_require__(67);
	
	var getEventModifierState = __webpack_require__(68);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(49);
	
	var getEventTarget = __webpack_require__(60);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 67 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 68 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(33);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(71);
	var ReactDOMIDOperations = __webpack_require__(83);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
	
	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {}
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(72);
	var Danger = __webpack_require__(78);
	var ReactMultiChildUpdateTypes = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactInstrumentation = __webpack_require__(58);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(75);
	var setInnerHTML = __webpack_require__(74);
	var setTextContent = __webpack_require__(76);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (false) {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (false) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (false) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(73);
	var setInnerHTML = __webpack_require__(74);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(75);
	var setTextContent = __webpack_require__(76);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 73 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(45);
	var DOMNamespaces = __webpack_require__(73);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(75);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 75 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(45);
	var escapeTextContentForBrowser = __webpack_require__(77);
	var setInnerHTML = __webpack_require__(74);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var DOMLazyTree = __webpack_require__(72);
	var ExecutionEnvironment = __webpack_require__(45);
	
	var createNodesFromMarkup = __webpack_require__(79);
	var emptyFunction = __webpack_require__(12);
	var invariant = __webpack_require__(8);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(45);
	
	var createArrayFromMixed = __webpack_require__(80);
	var getMarkupWrap = __webpack_require__(81);
	var invariant = __webpack_require__(8);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(45);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(22);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(71);
	var ReactDOMComponentTree = __webpack_require__(32);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var AutoFocusUtils = __webpack_require__(85);
	var CSSPropertyOperations = __webpack_require__(87);
	var DOMLazyTree = __webpack_require__(72);
	var DOMNamespaces = __webpack_require__(73);
	var DOMProperty = __webpack_require__(33);
	var DOMPropertyOperations = __webpack_require__(95);
	var EventConstants = __webpack_require__(37);
	var EventPluginHub = __webpack_require__(39);
	var EventPluginRegistry = __webpack_require__(40);
	var ReactBrowserEventEmitter = __webpack_require__(98);
	var ReactComponentBrowserEnvironment = __webpack_require__(70);
	var ReactDOMButton = __webpack_require__(101);
	var ReactDOMComponentFlags = __webpack_require__(34);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactDOMInput = __webpack_require__(103);
	var ReactDOMOption = __webpack_require__(105);
	var ReactDOMSelect = __webpack_require__(106);
	var ReactDOMTextarea = __webpack_require__(107);
	var ReactInstrumentation = __webpack_require__(58);
	var ReactMultiChild = __webpack_require__(108);
	var ReactServerRenderingTransaction = __webpack_require__(120);
	
	var emptyFunction = __webpack_require__(12);
	var escapeTextContentForBrowser = __webpack_require__(77);
	var invariant = __webpack_require__(8);
	var isEventSupported = __webpack_require__(61);
	var keyOf = __webpack_require__(24);
	var shallowEqual = __webpack_require__(123);
	var validateDOMNesting = __webpack_require__(124);
	var warning = __webpack_require__(11);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setContentChildForInstrumentation = emptyFunction;
	if (false) {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    var contentDebugID = debugID + '#text';
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    this._contentDebugID = contentDebugID;
	    var text = '' + content;
	
	    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
	    ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
	    ReactInstrumentation.debugTool.onSetText(contentDebugID, text);
	
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = null;
	  this._domID = null;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (false) {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the containing DOM component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (false) {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (false) {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (false) {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (false) {
	        setContentChildForInstrumentation.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._domID = null;
	    this._wrapperState = null;
	
	    if (false) {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(32);
	
	var focusNode = __webpack_require__(86);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(88);
	var ExecutionEnvironment = __webpack_require__(45);
	var ReactInstrumentation = __webpack_require__(58);
	
	var camelizeStyleName = __webpack_require__(89);
	var dangerousStyleValue = __webpack_require__(91);
	var hyphenateStyleName = __webpack_require__(92);
	var memoizeStringOnly = __webpack_require__(94);
	var warning = __webpack_require__(11);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (false) {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (false) {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;

/***/ },
/* 88 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(90);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 90 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(88);
	var warning = __webpack_require__(11);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(93);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 93 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 94 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(33);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactDOMInstrumentation = __webpack_require__(96);
	var ReactInstrumentation = __webpack_require__(58);
	
	var quoteAttributeValueForBrowser = __webpack_require__(97);
	var warning = __webpack_require__(11);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    if (false) {
	      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
	    }
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (false) {
	      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (false) {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (false) {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInstrumentation
	 */
	
	'use strict';
	
	var debugTool = null;
	
	if (false) {
	  var ReactDOMDebugTool = require('./ReactDOMDebugTool');
	  debugTool = ReactDOMDebugTool;
	}
	
	module.exports = { debugTool: debugTool };

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(77);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var EventConstants = __webpack_require__(37);
	var EventPluginRegistry = __webpack_require__(40);
	var ReactEventEmitterMixin = __webpack_require__(99);
	var ViewportMetrics = __webpack_require__(67);
	
	var getVendorPrefixedEventName = __webpack_require__(100);
	var isEventSupported = __webpack_require__(61);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(39);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(45);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var DisabledInputUtils = __webpack_require__(102);
	
	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};
	
	module.exports = ReactDOMButton;

/***/ },
/* 102 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */
	
	'use strict';
	
	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }
	
	    return hostProps;
	  }
	};
	
	module.exports = DisabledInputUtils;

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var DisabledInputUtils = __webpack_require__(102);
	var DOMPropertyOperations = __webpack_require__(95);
	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactUpdates = __webpack_require__(52);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (false) {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (false) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	    if (props.type !== 'submit' && props.type !== 'reset') {
	      node.value = node.value;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactPropTypes = __webpack_require__(27);
	var ReactPropTypeLocations = __webpack_require__(21);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactChildren = __webpack_require__(5);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactDOMSelect = __webpack_require__(106);
	
	var warning = __webpack_require__(11);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var DisabledInputUtils = __webpack_require__(102);
	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactUpdates = __webpack_require__(52);
	
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	       false ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else {
	       false ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var DisabledInputUtils = __webpack_require__(102);
	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactUpdates = __webpack_require__(52);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactComponentEnvironment = __webpack_require__(109);
	var ReactInstanceMap = __webpack_require__(110);
	var ReactInstrumentation = __webpack_require__(58);
	var ReactMultiChildUpdateTypes = __webpack_require__(82);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactReconciler = __webpack_require__(55);
	var ReactChildReconciler = __webpack_require__(111);
	
	var emptyFunction = __webpack_require__(12);
	var flattenChildren = __webpack_require__(119);
	var invariant = __webpack_require__(8);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setParentForInstrumentation = emptyFunction;
	var setChildrenForInstrumentation = emptyFunction;
	if (false) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setParentForInstrumentation = function (child) {
	    if (child._debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
	    }
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (false) {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
	      var nextChildren;
	      if (false) {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          if (false) {
	            setParentForInstrumentation.call(this, child);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (false) {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (false) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, afterNode, index, transaction, context) {
	      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;

/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(55);
	
	var instantiateReactComponent = __webpack_require__(112);
	var KeyEscapeUtils = __webpack_require__(16);
	var shouldUpdateReactComponent = __webpack_require__(116);
	var traverseAllChildren = __webpack_require__(14);
	var warning = __webpack_require__(11);
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // __DEV__ only
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (false) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var ReactCompositeComponent = __webpack_require__(113);
	var ReactEmptyComponent = __webpack_require__(117);
	var ReactHostComponent = __webpack_require__(118);
	var ReactInstrumentation = __webpack_require__(58);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function getDisplayName(instance) {
	  var element = instance._currentElement;
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else if (instance.getName) {
	    return instance.getName() || 'Unknown';
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	var nextDebugID = 1;
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (false) {
	    if (shouldHaveDebugID) {
	      var debugID = nextDebugID++;
	      instance._debugID = debugID;
	      var displayName = getDisplayName(instance);
	      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
	      var owner = node && node._owner;
	      if (owner) {
	        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
	      }
	    } else {
	      instance._debugID = 0;
	    }
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var ReactComponentEnvironment = __webpack_require__(109);
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactElement = __webpack_require__(9);
	var ReactErrorUtils = __webpack_require__(42);
	var ReactInstanceMap = __webpack_require__(110);
	var ReactInstrumentation = __webpack_require__(58);
	var ReactNodeTypes = __webpack_require__(114);
	var ReactPropTypeLocations = __webpack_require__(21);
	var ReactReconciler = __webpack_require__(55);
	
	var checkReactTypeSpec = __webpack_require__(115);
	
	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(8);
	var shouldUpdateReactComponent = __webpack_require__(116);
	var warning = __webpack_require__(11);
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}
	
	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}
	
	function shouldConstruct(Component) {
	  return Component.prototype && Component.prototype.isReactComponent;
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (false) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var inst = this._constructComponent(publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!shouldConstruct(Component) && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	    }
	
	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (publicProps, publicContext, updateQueue) {
	    if (false) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (shouldConstruct(Component)) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	    if (false) {
	      if (child._debugID !== 0 && this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	      }
	    }
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));
	
	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (false) {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (false) {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (false) {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	    var nextProps;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate && inst.shouldComponentUpdate) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	      shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	    }
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	      if (false) {
	        if (child._debugID !== 0 && this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	        }
	      }
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));
	
	      if (false) {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	
	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (false) {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	
	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactElement = __webpack_require__(9);
	
	var invariant = __webpack_require__(8);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactPropTypeLocationNames = __webpack_require__(23);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (false) {
	          var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
	          }
	        }
	
	         false ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;

/***/ },
/* 116 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 117 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var invariant = __webpack_require__(8);
	
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(16);
	var traverseAllChildren = __webpack_require__(14);
	var warning = __webpack_require__(11);
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (false) {
	      var ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
	      process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (false) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(6);
	var Transaction = __webpack_require__(59);
	var ReactInstrumentation = __webpack_require__(58);
	var ReactServerUpdateQueue = __webpack_require__(121);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(122);
	var Transaction = __webpack_require__(59);
	var warning = __webpack_require__(11);
	
	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */
	
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactInstanceMap = __webpack_require__(110);
	var ReactInstrumentation = __webpack_require__(58);
	var ReactUpdates = __webpack_require__(52);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
	    }
	    return null;
	  }
	
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;

/***/ },
/* 123 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var emptyFunction = __webpack_require__(12);
	var warning = __webpack_require__(11);
	
	var validateDOMNesting = emptyFunction;
	
	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var DOMLazyTree = __webpack_require__(72);
	var ReactDOMComponentTree = __webpack_require__(32);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = null;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var DOMChildrenOperations = __webpack_require__(71);
	var DOMLazyTree = __webpack_require__(72);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactInstrumentation = __webpack_require__(58);
	
	var escapeTextContentForBrowser = __webpack_require__(77);
	var invariant = __webpack_require__(8);
	var validateDOMNesting = __webpack_require__(124);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = null;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);
	
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	
	        if (false) {
	          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
	        }
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactUpdates = __webpack_require__(52);
	var Transaction = __webpack_require__(59);
	
	var emptyFunction = __webpack_require__(12);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var EventListener = __webpack_require__(130);
	var ExecutionEnvironment = __webpack_require__(45);
	var PooledClass = __webpack_require__(6);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactUpdates = __webpack_require__(52);
	
	var getEventTarget = __webpack_require__(60);
	var getUnboundedScrollPosition = __webpack_require__(131);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(12);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;

/***/ },
/* 131 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(33);
	var EventPluginHub = __webpack_require__(39);
	var EventPluginUtils = __webpack_require__(41);
	var ReactComponentEnvironment = __webpack_require__(109);
	var ReactClass = __webpack_require__(20);
	var ReactEmptyComponent = __webpack_require__(117);
	var ReactBrowserEventEmitter = __webpack_require__(98);
	var ReactHostComponent = __webpack_require__(118);
	var ReactUpdates = __webpack_require__(52);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var CallbackQueue = __webpack_require__(53);
	var PooledClass = __webpack_require__(6);
	var ReactBrowserEventEmitter = __webpack_require__(98);
	var ReactInputSelection = __webpack_require__(134);
	var ReactInstrumentation = __webpack_require__(58);
	var Transaction = __webpack_require__(59);
	var ReactUpdateQueue = __webpack_require__(122);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(135);
	
	var containsNode = __webpack_require__(137);
	var focusNode = __webpack_require__(86);
	var getActiveElement = __webpack_require__(140);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(45);
	
	var getNodeForCharacterOffset = __webpack_require__(136);
	var getTextContentAccessor = __webpack_require__(47);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(138);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(139);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 139 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 140 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 141 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(37);
	var EventPropagators = __webpack_require__(38);
	var ExecutionEnvironment = __webpack_require__(45);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactInputSelection = __webpack_require__(134);
	var SyntheticEvent = __webpack_require__(49);
	
	var getActiveElement = __webpack_require__(140);
	var isTextInputElement = __webpack_require__(62);
	var keyOf = __webpack_require__(24);
	var shallowEqual = __webpack_require__(123);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var EventConstants = __webpack_require__(37);
	var EventListener = __webpack_require__(130);
	var EventPropagators = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(32);
	var SyntheticAnimationEvent = __webpack_require__(144);
	var SyntheticClipboardEvent = __webpack_require__(145);
	var SyntheticEvent = __webpack_require__(49);
	var SyntheticFocusEvent = __webpack_require__(146);
	var SyntheticKeyboardEvent = __webpack_require__(147);
	var SyntheticMouseEvent = __webpack_require__(65);
	var SyntheticDragEvent = __webpack_require__(150);
	var SyntheticTouchEvent = __webpack_require__(151);
	var SyntheticTransitionEvent = __webpack_require__(152);
	var SyntheticUIEvent = __webpack_require__(66);
	var SyntheticWheelEvent = __webpack_require__(153);
	
	var emptyFunction = __webpack_require__(12);
	var getEventCharCode = __webpack_require__(148);
	var invariant = __webpack_require__(8);
	var keyOf = __webpack_require__(24);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(49);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(49);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(66);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(66);
	
	var getEventCharCode = __webpack_require__(148);
	var getEventKey = __webpack_require__(149);
	var getEventModifierState = __webpack_require__(68);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 148 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(148);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(65);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(66);
	
	var getEventModifierState = __webpack_require__(68);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(49);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(65);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var DOMLazyTree = __webpack_require__(72);
	var DOMProperty = __webpack_require__(33);
	var ReactBrowserEventEmitter = __webpack_require__(98);
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactDOMContainerInfo = __webpack_require__(155);
	var ReactDOMFeatureFlags = __webpack_require__(156);
	var ReactElement = __webpack_require__(9);
	var ReactFeatureFlags = __webpack_require__(54);
	var ReactInstanceMap = __webpack_require__(110);
	var ReactInstrumentation = __webpack_require__(58);
	var ReactMarkupChecksum = __webpack_require__(157);
	var ReactReconciler = __webpack_require__(55);
	var ReactUpdateQueue = __webpack_require__(122);
	var ReactUpdates = __webpack_require__(52);
	
	var emptyObject = __webpack_require__(19);
	var instantiateReactComponent = __webpack_require__(112);
	var invariant = __webpack_require__(8);
	var setInnerHTML = __webpack_require__(74);
	var shouldUpdateReactComponent = __webpack_require__(116);
	var warning = __webpack_require__(11);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (false) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (false) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by devtools!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    if (false) {
	      // The instance here is TopLevelWrapper so we report mount for its child.
	      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
	    }
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (false) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(124);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (false) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;

/***/ },
/* 156 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(158);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 158 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(32);
	var ReactInstanceMap = __webpack_require__(110);
	
	var getHostComponentFromComposite = __webpack_require__(160);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(114);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/
	
	'use strict';
	
	var ReactMount = __webpack_require__(154);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.PropTypes = exports.RoutingContext = exports.RouterContext = exports.createRoutes = exports.useRoutes = exports.RouteContext = exports.Lifecycle = exports.History = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;
	
	var _RouteUtils = __webpack_require__(163);
	
	Object.defineProperty(exports, 'createRoutes', {
	  enumerable: true,
	  get: function get() {
	    return _RouteUtils.createRoutes;
	  }
	});
	
	var _PropTypes2 = __webpack_require__(164);
	
	Object.defineProperty(exports, 'locationShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.locationShape;
	  }
	});
	Object.defineProperty(exports, 'routerShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.routerShape;
	  }
	});
	
	var _PatternUtils = __webpack_require__(169);
	
	Object.defineProperty(exports, 'formatPattern', {
	  enumerable: true,
	  get: function get() {
	    return _PatternUtils.formatPattern;
	  }
	});
	
	var _Router2 = __webpack_require__(171);
	
	var _Router3 = _interopRequireDefault(_Router2);
	
	var _Link2 = __webpack_require__(201);
	
	var _Link3 = _interopRequireDefault(_Link2);
	
	var _IndexLink2 = __webpack_require__(202);
	
	var _IndexLink3 = _interopRequireDefault(_IndexLink2);
	
	var _withRouter2 = __webpack_require__(203);
	
	var _withRouter3 = _interopRequireDefault(_withRouter2);
	
	var _IndexRedirect2 = __webpack_require__(205);
	
	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);
	
	var _IndexRoute2 = __webpack_require__(207);
	
	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);
	
	var _Redirect2 = __webpack_require__(206);
	
	var _Redirect3 = _interopRequireDefault(_Redirect2);
	
	var _Route2 = __webpack_require__(208);
	
	var _Route3 = _interopRequireDefault(_Route2);
	
	var _History2 = __webpack_require__(209);
	
	var _History3 = _interopRequireDefault(_History2);
	
	var _Lifecycle2 = __webpack_require__(210);
	
	var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);
	
	var _RouteContext2 = __webpack_require__(211);
	
	var _RouteContext3 = _interopRequireDefault(_RouteContext2);
	
	var _useRoutes2 = __webpack_require__(212);
	
	var _useRoutes3 = _interopRequireDefault(_useRoutes2);
	
	var _RouterContext2 = __webpack_require__(198);
	
	var _RouterContext3 = _interopRequireDefault(_RouterContext2);
	
	var _RoutingContext2 = __webpack_require__(213);
	
	var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);
	
	var _PropTypes3 = _interopRequireDefault(_PropTypes2);
	
	var _match2 = __webpack_require__(214);
	
	var _match3 = _interopRequireDefault(_match2);
	
	var _useRouterHistory2 = __webpack_require__(218);
	
	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);
	
	var _applyRouterMiddleware2 = __webpack_require__(219);
	
	var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);
	
	var _browserHistory2 = __webpack_require__(220);
	
	var _browserHistory3 = _interopRequireDefault(_browserHistory2);
	
	var _hashHistory2 = __webpack_require__(223);
	
	var _hashHistory3 = _interopRequireDefault(_hashHistory2);
	
	var _createMemoryHistory2 = __webpack_require__(215);
	
	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Router = _Router3.default; /* components */
	
	exports.Link = _Link3.default;
	exports.IndexLink = _IndexLink3.default;
	exports.withRouter = _withRouter3.default;
	
	/* components (configuration) */
	
	exports.IndexRedirect = _IndexRedirect3.default;
	exports.IndexRoute = _IndexRoute3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	
	/* mixins */
	
	exports.History = _History3.default;
	exports.Lifecycle = _Lifecycle3.default;
	exports.RouteContext = _RouteContext3.default;
	
	/* utils */
	
	exports.useRoutes = _useRoutes3.default;
	exports.RouterContext = _RouterContext3.default;
	exports.RoutingContext = _RoutingContext3.default;
	exports.PropTypes = _PropTypes3.default;
	exports.match = _match3.default;
	exports.useRouterHistory = _useRouterHistory3.default;
	exports.applyRouterMiddleware = _applyRouterMiddleware3.default;
	
	/* histories */
	
	exports.browserHistory = _browserHistory3.default;
	exports.hashHistory = _hashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function isValidChild(object) {
	  return object == null || _react2.default.isValidElement(object);
	}
	
	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}
	
	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}
	
	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);
	
	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);
	
	    if (childRoutes.length) route.childRoutes = childRoutes;
	
	    delete route.children;
	  }
	
	  return route;
	}
	
	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];
	
	  _react2.default.Children.forEach(children, function (element) {
	    if (_react2.default.isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);
	
	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });
	
	  return routes;
	}
	
	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }
	
	  return routes;
	}

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.router = exports.routes = exports.route = exports.components = exports.component = exports.location = exports.history = exports.falsy = exports.locationShape = exports.routerShape = undefined;
	
	var _react = __webpack_require__(2);
	
	var _deprecateObjectProperties = __webpack_require__(165);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	var _InternalPropTypes = __webpack_require__(168);
	
	var InternalPropTypes = _interopRequireWildcard(_InternalPropTypes);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	var routerShape = exports.routerShape = shape({
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired,
	  setRouteLeaveHook: func.isRequired,
	  isActive: func.isRequired
	});
	
	var locationShape = exports.locationShape = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});
	
	// Deprecated stuff below:
	
	var falsy = exports.falsy = InternalPropTypes.falsy;
	var history = exports.history = InternalPropTypes.history;
	var location = exports.location = locationShape;
	var component = exports.component = InternalPropTypes.component;
	var components = exports.components = InternalPropTypes.components;
	var route = exports.route = InternalPropTypes.route;
	var routes = exports.routes = InternalPropTypes.routes;
	var router = exports.router = routerShape;
	
	if (false) {
	  (function () {
	    var deprecatePropType = function deprecatePropType(propType, message) {
	      return function () {
	        process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	        return propType.apply(undefined, arguments);
	      };
	    };
	
	    var deprecateInternalPropType = function deprecateInternalPropType(propType) {
	      return deprecatePropType(propType, 'This prop type is not intended for external use, and was previously exported by mistake. These internal prop types are deprecated for external use, and will be removed in a later version.');
	    };
	
	    var deprecateRenamedPropType = function deprecateRenamedPropType(propType, name) {
	      return deprecatePropType(propType, 'The `' + name + '` prop type is now exported as `' + name + 'Shape` to avoid name conflicts. This export is deprecated and will be removed in a later version.');
	    };
	
	    exports.falsy = falsy = deprecateInternalPropType(falsy);
	    exports.history = history = deprecateInternalPropType(history);
	    exports.component = component = deprecateInternalPropType(component);
	    exports.components = components = deprecateInternalPropType(components);
	    exports.route = route = deprecateInternalPropType(route);
	    exports.routes = routes = deprecateInternalPropType(routes);
	
	    exports.location = location = deprecateRenamedPropType(location, 'location');
	    exports.router = router = deprecateRenamedPropType(router, 'router');
	  })();
	}
	
	var defaultExport = {
	  falsy: falsy,
	  history: history,
	  location: location,
	  component: component,
	  components: components,
	  route: route,
	  // For some reason, routes was never here.
	  router: router
	};
	
	if (false) {
	  defaultExport = (0, _deprecateObjectProperties2.default)(defaultExport, 'The default export from `react-router/lib/PropTypes` is deprecated. Please use the named exports instead.');
	}
	
	exports.default = defaultExport;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.canUseMembrane = undefined;
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var canUseMembrane = exports.canUseMembrane = false;
	
	// No-op by default.
	var deprecateObjectProperties = function deprecateObjectProperties(object) {
	  return object;
	};
	
	if (false) {
	  try {
	    if (Object.defineProperty({}, 'x', {
	      get: function get() {
	        return true;
	      }
	    }).x) {
	      exports.canUseMembrane = canUseMembrane = true;
	    }
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	
	  if (canUseMembrane) {
	    deprecateObjectProperties = function deprecateObjectProperties(object, message) {
	      // Wrap the deprecated object in a membrane to warn on property access.
	      var membrane = {};
	
	      var _loop = function _loop(prop) {
	        if (!Object.prototype.hasOwnProperty.call(object, prop)) {
	          return 'continue';
	        }
	
	        if (typeof object[prop] === 'function') {
	          // Can't use fat arrow here because of use of arguments below.
	          membrane[prop] = function () {
	            process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	            return object[prop].apply(object, arguments);
	          };
	          return 'continue';
	        }
	
	        // These properties are non-enumerable to prevent React dev tools from
	        // seeing them and causing spurious warnings when accessing them. In
	        // principle this could be done with a proxy, but support for the
	        // ownKeys trap on proxies is not universal, even among browsers that
	        // otherwise support proxies.
	        Object.defineProperty(membrane, prop, {
	          get: function get() {
	            process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	            return object[prop];
	          }
	        });
	      };
	
	      for (var prop in object) {
	        var _ret = _loop(prop);
	
	        if (_ret === 'continue') continue;
	      }
	
	      return membrane;
	    };
	  }
	}
	
	exports.default = deprecateObjectProperties;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = routerWarning;
	exports._resetWarned = _resetWarned;
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var warned = {};
	
	function routerWarning(falseToWarn, message) {
	  // Only issue deprecation warnings once.
	  if (message.indexOf('deprecated') !== -1) {
	    if (warned[message]) {
	      return;
	    }
	
	    warned[message] = true;
	  }
	
	  message = '[react-router] ' + message;
	
	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }
	
	  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
	}
	
	function _resetWarned() {
	  warned = {};
	}

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = function() {};
	
	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
	exports.falsy = falsy;
	
	var _react = __webpack_require__(2);
	
	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var arrayOf = _react.PropTypes.arrayOf;
	var oneOfType = _react.PropTypes.oneOfType;
	var element = _react.PropTypes.element;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}
	
	var history = exports.history = shape({
	  listen: func.isRequired,
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired
	});
	
	var component = exports.component = oneOfType([func, string]);
	var components = exports.components = oneOfType([component, object]);
	var route = exports.route = oneOfType([object, element]);
	var routes = exports.routes = oneOfType([route, arrayOf(route)]);

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}
	
	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];
	
	  var match = void 0,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
	    }
	
	    if (match[1]) {
	      regexpSource += '([^/]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '(.*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '(.*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    }
	
	    tokens.push(match[0]);
	
	    lastIndex = matcher.lastIndex;
	  }
	
	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
	  }
	
	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}
	
	var CompiledPatternsCache = {};
	
	function compilePattern(pattern) {
	  if (!(pattern in CompiledPatternsCache)) CompiledPatternsCache[pattern] = _compilePattern(pattern);
	
	  return CompiledPatternsCache[pattern];
	}
	
	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 *  The function calls callback(error, matched) when finished.
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	function matchPattern(pattern, pathname) {
	  // Ensure pattern starts with leading slash for consistency with pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }
	
	  var _compilePattern2 = compilePattern(pattern);
	
	  var regexpSource = _compilePattern2.regexpSource;
	  var paramNames = _compilePattern2.paramNames;
	  var tokens = _compilePattern2.tokens;
	
	
	  if (pattern.charAt(pattern.length - 1) !== '/') {
	    regexpSource += '/?'; // Allow optional path separator at end.
	  }
	
	  // Special-case patterns like '*' for catch-all routes.
	  if (tokens[tokens.length - 1] === '*') {
	    regexpSource += '$';
	  }
	
	  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
	  if (match == null) {
	    return null;
	  }
	
	  var matchedPath = match[0];
	  var remainingPathname = pathname.substr(matchedPath.length);
	
	  if (remainingPathname) {
	    // Require that the match ends at a path separator, if we didn't match
	    // the full path, so any remaining pathname is a new path segment.
	    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
	      return null;
	    }
	
	    // If there is a remaining pathname, treat the path separator as part of
	    // the remaining pathname for properly continuing the match.
	    remainingPathname = '/' + remainingPathname;
	  }
	
	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: match.slice(1).map(function (v) {
	      return v && decodeURIComponent(v);
	    })
	  };
	}
	
	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}
	
	function getParams(pattern, pathname) {
	  var match = matchPattern(pattern, pathname);
	  if (!match) {
	    return null;
	  }
	
	  var paramNames = match.paramNames;
	  var paramValues = match.paramValues;
	
	  var params = {};
	
	  paramNames.forEach(function (paramName, index) {
	    params[paramName] = paramValues[index];
	  });
	
	  return params;
	}
	
	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	function formatPattern(pattern, params) {
	  params = params || {};
	
	  var _compilePattern3 = compilePattern(pattern);
	
	  var tokens = _compilePattern3.tokens;
	
	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0;
	
	  var token = void 0,
	      paramName = void 0,
	      paramValue = void 0;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];
	
	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;
	
	      !(paramValue != null || parenCount > 0) ?  false ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenCount += 1;
	    } else if (token === ')') {
	      parenCount -= 1;
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];
	
	      !(paramValue != null || parenCount > 0) ?  false ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue != null) pathname += encodeURIComponent(paramValue);
	    } else {
	      pathname += token;
	    }
	  }
	
	  return pathname.replace(/\/+/g, '/');
	}

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;


/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createHashHistory = __webpack_require__(172);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _useQueries = __webpack_require__(187);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _createTransitionManager = __webpack_require__(190);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _InternalPropTypes = __webpack_require__(168);
	
	var _RouterContext = __webpack_require__(198);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _RouteUtils = __webpack_require__(163);
	
	var _RouterUtils = __webpack_require__(200);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function isDeprecatedHistory(history) {
	  return !history || !history.__v2_compatible__;
	}
	
	/* istanbul ignore next: sanity check */
	function isUnsupportedHistory(history) {
	  // v3 histories expose getCurrentLocation, but aren't currently supported.
	  return history && history.getCurrentLocation;
	}
	
	var _React$PropTypes = _react2.default.PropTypes;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	
	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RouterContext> with all the props
	 * it needs each time the URL changes.
	 */
	
	var Router = _react2.default.createClass({
	  displayName: 'Router',
	
	
	  propTypes: {
	    history: object,
	    children: _InternalPropTypes.routes,
	    routes: _InternalPropTypes.routes, // alias for children
	    render: func,
	    createElement: func,
	    onError: func,
	    onUpdate: func,
	
	    // Deprecated:
	    parseQueryString: func,
	    stringifyQuery: func,
	
	    // PRIVATE: For client-side rehydration of server match.
	    matchContext: object
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      render: function render(props) {
	        return _react2.default.createElement(_RouterContext2.default, props);
	      }
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  },
	  handleError: function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;
	
	    var _props = this.props;
	    var parseQueryString = _props.parseQueryString;
	    var stringifyQuery = _props.stringifyQuery;
	
	     false ? (0, _routerWarning2.default)(!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : void 0;
	
	    var _createRouterObjects = this.createRouterObjects();
	
	    var history = _createRouterObjects.history;
	    var transitionManager = _createRouterObjects.transitionManager;
	    var router = _createRouterObjects.router;
	
	
	    this._unlisten = transitionManager.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });
	
	    this.history = history;
	    this.router = router;
	  },
	  createRouterObjects: function createRouterObjects() {
	    var matchContext = this.props.matchContext;
	
	    if (matchContext) {
	      return matchContext;
	    }
	
	    var history = this.props.history;
	    var _props2 = this.props;
	    var routes = _props2.routes;
	    var children = _props2.children;
	
	
	    !!isUnsupportedHistory(history) ?  false ? (0, _invariant2.default)(false, 'You have provided a history object created with history v3.x. ' + 'This version of React Router is not compatible with v3 history ' + 'objects. Please use history v2.x instead.') : (0, _invariant2.default)(false) : void 0;
	
	    if (isDeprecatedHistory(history)) {
	      history = this.wrapDeprecatedHistory(history);
	    }
	
	    var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
	    var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
	    var routingHistory = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);
	
	    return { history: routingHistory, transitionManager: transitionManager, router: router };
	  },
	  wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {
	    var _props3 = this.props;
	    var parseQueryString = _props3.parseQueryString;
	    var stringifyQuery = _props3.stringifyQuery;
	
	
	    var createHistory = void 0;
	    if (history) {
	       false ? (0, _routerWarning2.default)(false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \'react-router\'` or `import { hashHistory } from \'react-router\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : void 0;
	      createHistory = function createHistory() {
	        return history;
	      };
	    } else {
	       false ? (0, _routerWarning2.default)(false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : void 0;
	      createHistory = _createHashHistory2.default;
	    }
	
	    return (0, _useQueries2.default)(createHistory)({ parseQueryString: parseQueryString, stringifyQuery: stringifyQuery });
	  },
	
	
	  /* istanbul ignore next: sanity check */
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	     false ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;
	
	     false ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  },
	  render: function render() {
	    var _state = this.state;
	    var location = _state.location;
	    var routes = _state.routes;
	    var params = _state.params;
	    var components = _state.components;
	    var _props4 = this.props;
	    var createElement = _props4.createElement;
	    var render = _props4.render;
	
	    var props = _objectWithoutProperties(_props4, ['createElement', 'render']);
	
	    if (location == null) return null; // Async match
	
	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });
	
	    return render(_extends({}, props, {
	      history: this.history,
	      router: this.router,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components,
	      createElement: createElement
	    }));
	  }
	});
	
	exports.default = Router;
	module.exports = exports['default'];

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(173);
	
	var _PathUtils = __webpack_require__(174);
	
	var _ExecutionEnvironment = __webpack_require__(175);
	
	var _DOMUtils = __webpack_require__(176);
	
	var _DOMStateStorage = __webpack_require__(177);
	
	var _createDOMHistory = __webpack_require__(178);
	
	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
	
	function isAbsolutePath(path) {
	  return typeof path === 'string' && path.charAt(0) === '/';
	}
	
	function ensureSlash() {
	  var path = _DOMUtils.getHashPath();
	
	  if (isAbsolutePath(path)) return true;
	
	  _DOMUtils.replaceHashPath('/' + path);
	
	  return false;
	}
	
	function addQueryStringValueToPath(path, key, value) {
	  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
	}
	
	function stripQueryStringValueFromPath(path, key) {
	  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
	}
	
	function getQueryStringValueFromPath(path, key) {
	  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
	  return match && match[1];
	}
	
	var DefaultQueryKey = '_k';
	
	function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;
	
	  var queryKey = options.queryKey;
	
	  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;
	
	  function getCurrentLocation() {
	    var path = _DOMUtils.getHashPath();
	
	    var key = undefined,
	        state = undefined;
	    if (queryKey) {
	      key = getQueryStringValueFromPath(path, queryKey);
	      path = stripQueryStringValueFromPath(path, queryKey);
	
	      if (key) {
	        state = _DOMStateStorage.readState(key);
	      } else {
	        state = null;
	        key = history.createKey();
	        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
	      }
	    } else {
	      key = state = null;
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function startHashChangeListener(_ref) {
	    var transitionTo = _ref.transitionTo;
	
	    function hashChangeListener() {
	      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.
	
	      transitionTo(getCurrentLocation());
	    }
	
	    ensureSlash();
	    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);
	
	    return function () {
	      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
	    };
	  }
	
	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;
	
	    if (action === _Actions.POP) return; // Nothing to do.
	
	    var path = (basename || '') + pathname + search;
	
	    if (queryKey) {
	      path = addQueryStringValueToPath(path, queryKey, key);
	      _DOMStateStorage.saveState(key, state);
	    } else {
	      // Drop key and state.
	      location.key = location.state = null;
	    }
	
	    var currentHash = _DOMUtils.getHashPath();
	
	    if (action === _Actions.PUSH) {
	      if (currentHash !== path) {
	        window.location.hash = path;
	      } else {
	         false ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
	      }
	    } else if (currentHash !== path) {
	      // REPLACE
	      _DOMUtils.replaceHashPath(path);
	    }
	  }
	
	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));
	
	  var listenerCount = 0,
	      stopHashChangeListener = undefined;
	
	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    var unlisten = history.listenBefore(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }
	
	  function listen(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    var unlisten = history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }
	
	  function push(location) {
	     false ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.push(location);
	  }
	
	  function replace(location) {
	     false ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.replace(location);
	  }
	
	  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();
	
	  function go(n) {
	     false ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;
	
	    history.go(n);
	  }
	
	  function createHref(path) {
	    return '#' + history.createHref(path);
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    history.registerTransitionHook(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);
	
	    if (--listenerCount === 0) stopHashChangeListener();
	  }
	
	  // deprecated
	  function pushState(state, path) {
	     false ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.pushState(state, path);
	  }
	
	  // deprecated
	  function replaceState(state, path) {
	     false ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.replaceState(state, path);
	  }
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    push: push,
	    replace: replace,
	    go: go,
	    createHref: createHref,
	
	    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
	    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
	    pushState: pushState, // deprecated - warning is in createHistory
	    replaceState: replaceState // deprecated - warning is in createHistory
	  });
	}
	
	exports['default'] = createHashHistory;
	module.exports = exports['default'];

/***/ },
/* 173 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';
	
	exports.__esModule = true;
	var PUSH = 'PUSH';
	
	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';
	
	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';
	
	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.extractPath = extractPath;
	exports.parsePath = parsePath;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);
	
	  if (match == null) return string;
	
	  return string.substring(match[0].length);
	}
	
	function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';
	
	   false ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;
	
	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }
	
	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }
	
	  if (pathname === '') pathname = '/';
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}

/***/ },
/* 175 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	exports.canUseDOM = canUseDOM;

/***/ },
/* 176 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.addEventListener = addEventListener;
	exports.removeEventListener = removeEventListener;
	exports.getHashPath = getHashPath;
	exports.replaceHashPath = replaceHashPath;
	exports.getWindowPath = getWindowPath;
	exports.go = go;
	exports.getUserConfirmation = getUserConfirmation;
	exports.supportsHistory = supportsHistory;
	exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;
	
	function addEventListener(node, event, listener) {
	  if (node.addEventListener) {
	    node.addEventListener(event, listener, false);
	  } else {
	    node.attachEvent('on' + event, listener);
	  }
	}
	
	function removeEventListener(node, event, listener) {
	  if (node.removeEventListener) {
	    node.removeEventListener(event, listener, false);
	  } else {
	    node.detachEvent('on' + event, listener);
	  }
	}
	
	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  return window.location.href.split('#')[1] || '';
	}
	
	function replaceHashPath(path) {
	  window.location.replace(window.location.pathname + window.location.search + '#' + path);
	}
	
	function getWindowPath() {
	  return window.location.pathname + window.location.search + window.location.hash;
	}
	
	function go(n) {
	  if (n) window.history.go(n);
	}
	
	function getUserConfirmation(message, callback) {
	  callback(window.confirm(message));
	}
	
	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	 */
	
	function supportsHistory() {
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}
	
	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	
	function supportsGoWithoutReloadUsingHash() {
	  var ua = navigator.userAgent;
	  return ua.indexOf('Firefox') === -1;
	}

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/*eslint-disable no-empty */
	'use strict';
	
	exports.__esModule = true;
	exports.saveState = saveState;
	exports.readState = readState;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var KeyPrefix = '@@History/';
	var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];
	
	var SecurityError = 'SecurityError';
	
	function createKey(key) {
	  return KeyPrefix + key;
	}
	
	function saveState(key, state) {
	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;
	
	      return;
	    }
	
	    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	       false ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;
	
	      return;
	    }
	
	    throw error;
	  }
	}
	
	function readState(key) {
	  var json = undefined;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;
	
	      return null;
	    }
	  }
	
	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }
	
	  return null;
	}

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _ExecutionEnvironment = __webpack_require__(175);
	
	var _DOMUtils = __webpack_require__(176);
	
	var _createHistory = __webpack_require__(179);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function createDOMHistory(options) {
	  var history = _createHistory2['default'](_extends({
	    getUserConfirmation: _DOMUtils.getUserConfirmation
	  }, options, {
	    go: _DOMUtils.go
	  }));
	
	  function listen(listener) {
	    !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;
	
	    return history.listen(listener);
	  }
	
	  return _extends({}, history, {
	    listen: listen
	  });
	}
	
	exports['default'] = createDOMHistory;
	module.exports = exports['default'];

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _deepEqual = __webpack_require__(180);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _PathUtils = __webpack_require__(174);
	
	var _AsyncUtils = __webpack_require__(183);
	
	var _Actions = __webpack_require__(173);
	
	var _createLocation2 = __webpack_require__(184);
	
	var _createLocation3 = _interopRequireDefault(_createLocation2);
	
	var _runTransitionHook = __webpack_require__(185);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _deprecate = __webpack_require__(186);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function createRandomKey(length) {
	  return Math.random().toString(36).substr(2, length);
	}
	
	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search &&
	  //a.action === b.action && // Different action !== location change.
	  a.key === b.key && _deepEqual2['default'](a.state, b.state);
	}
	
	var DefaultKeyLength = 6;
	
	function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var finishTransition = options.finishTransition;
	  var saveState = options.saveState;
	  var go = options.go;
	  var getUserConfirmation = options.getUserConfirmation;
	  var keyLength = options.keyLength;
	
	  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;
	
	  var transitionHooks = [];
	
	  function listenBefore(hook) {
	    transitionHooks.push(hook);
	
	    return function () {
	      transitionHooks = transitionHooks.filter(function (item) {
	        return item !== hook;
	      });
	    };
	  }
	
	  var allKeys = [];
	  var changeListeners = [];
	  var location = undefined;
	
	  function getCurrent() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) {
	      return allKeys.indexOf(pendingLocation.key);
	    } else if (location) {
	      return allKeys.indexOf(location.key);
	    } else {
	      return -1;
	    }
	  }
	
	  function updateLocation(newLocation) {
	    var current = getCurrent();
	
	    location = newLocation;
	
	    if (location.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
	    } else if (location.action === _Actions.REPLACE) {
	      allKeys[current] = location.key;
	    }
	
	    changeListeners.forEach(function (listener) {
	      listener(location);
	    });
	  }
	
	  function listen(listener) {
	    changeListeners.push(listener);
	
	    if (location) {
	      listener(location);
	    } else {
	      var _location = getCurrentLocation();
	      allKeys = [_location.key];
	      updateLocation(_location);
	    }
	
	    return function () {
	      changeListeners = changeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }
	
	  function confirmTransitionTo(location, callback) {
	    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
	      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
	        if (result != null) {
	          done(result);
	        } else {
	          next();
	        }
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  }
	
	  var pendingLocation = undefined;
	
	  function transitionTo(nextLocation) {
	    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.
	
	    pendingLocation = nextLocation;
	
	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted.
	
	      if (ok) {
	        // treat PUSH to current path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = createPath(location);
	          var nextPath = createPath(nextLocation);
	
	          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }
	
	        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
	      } else if (location && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(location.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);
	
	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
	      }
	    });
	  }
	
	  function push(location) {
	    transitionTo(createLocation(location, _Actions.PUSH, createKey()));
	  }
	
	  function replace(location) {
	    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
	  }
	
	  function goBack() {
	    go(-1);
	  }
	
	  function goForward() {
	    go(1);
	  }
	
	  function createKey() {
	    return createRandomKey(keyLength);
	  }
	
	  function createPath(location) {
	    if (location == null || typeof location === 'string') return location;
	
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	
	    var result = pathname;
	
	    if (search) result += search;
	
	    if (hash) result += hash;
	
	    return result;
	  }
	
	  function createHref(location) {
	    return createPath(location);
	  }
	
	  function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];
	
	    if (typeof action === 'object') {
	       false ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      location = _extends({}, location, { state: action });
	
	      action = key;
	      key = arguments[3] || createKey();
	    }
	
	    return _createLocation3['default'](location, action, key);
	  }
	
	  // deprecated
	  function setState(state) {
	    if (location) {
	      updateLocationState(location, state);
	      updateLocation(location);
	    } else {
	      updateLocationState(getCurrentLocation(), state);
	    }
	  }
	
	  function updateLocationState(location, state) {
	    location.state = _extends({}, location.state, state);
	    saveState(location.key, location.state);
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    transitionHooks = transitionHooks.filter(function (item) {
	      return item !== hook;
	    });
	  }
	
	  // deprecated
	  function pushState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	    push(_extends({ state: state }, path));
	  }
	
	  // deprecated
	  function replaceState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	    replace(_extends({ state: state }, path));
	  }
	
	  return {
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: createPath,
	    createHref: createHref,
	    createLocation: createLocation,
	
	    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
	    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
	    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
	    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	  };
	}
	
	exports['default'] = createHistory;
	module.exports = exports['default'];

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(181);
	var isArguments = __webpack_require__(182);
	
	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	
	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();
	
	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;
	
	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}
	
	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}
	
	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}
	
	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 181 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;
	
	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 182 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';
	
	exports = module.exports = supportsArgumentsClass ? supported : unsupported;
	
	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};
	
	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 183 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	var _slice = Array.prototype.slice;
	exports.loopAsync = loopAsync;
	
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = undefined;
	
	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(_slice.call(arguments));
	      return;
	    }
	
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) {
	      return;
	    }
	
	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }
	
	    sync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }
	
	    sync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }
	
	  next();
	}

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _Actions = __webpack_require__(173);
	
	var _PathUtils = __webpack_require__(174);
	
	function createLocation() {
	  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
	  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];
	
	  if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	  if (typeof action === 'object') {
	     false ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;
	
	    location = _extends({}, location, { state: action });
	
	    action = key || _Actions.POP;
	    key = _fourthArg;
	  }
	
	  var pathname = location.pathname || '/';
	  var search = location.search || '';
	  var hash = location.hash || '';
	  var state = location.state || null;
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	}
	
	exports['default'] = createLocation;
	module.exports = exports['default'];

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);
	
	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	     false ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
	  }
	}
	
	exports['default'] = runTransitionHook;
	module.exports = exports['default'];

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function deprecate(fn, message) {
	  return function () {
	     false ? _warning2['default'](false, '[history] ' + message) : undefined;
	    return fn.apply(this, arguments);
	  };
	}
	
	exports['default'] = deprecate;
	module.exports = exports['default'];

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _queryString = __webpack_require__(188);
	
	var _runTransitionHook = __webpack_require__(185);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _PathUtils = __webpack_require__(174);
	
	var _deprecate = __webpack_require__(186);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	var SEARCH_BASE_KEY = '$searchBase';
	
	function defaultStringifyQuery(query) {
	  return _queryString.stringify(query).replace(/%20/g, '+');
	}
	
	var defaultParseQueryString = _queryString.parse;
	
	function isNestedObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;
	  }return false;
	}
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var history = createHistory(options);
	
	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;
	
	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;
	
	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;
	
	    function addQuery(location) {
	      if (location.query == null) {
	        var search = location.search;
	
	        location.query = parseQueryString(search.substring(1));
	        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
	      }
	
	      // TODO: Instead of all the book-keeping here, this should just strip the
	      // stringified query from the search.
	
	      return location;
	    }
	
	    function appendQuery(location, query) {
	      var _extends2;
	
	      var searchBaseSpec = location[SEARCH_BASE_KEY];
	      var queryString = query ? stringifyQuery(query) : '';
	      if (!searchBaseSpec && !queryString) {
	        return location;
	      }
	
	       false ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      var searchBase = undefined;
	      if (searchBaseSpec && location.search === searchBaseSpec.search) {
	        searchBase = searchBaseSpec.searchBase;
	      } else {
	        searchBase = location.search || '';
	      }
	
	      var search = searchBase;
	      if (queryString) {
	        search += (search ? '&' : '?') + queryString;
	      }
	
	      return _extends({}, location, (_extends2 = {
	        search: search
	      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));
	    }
	
	    // Override all read methods with query-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addQuery(location), callback);
	      });
	    }
	
	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addQuery(location));
	      });
	    }
	
	    // Override all write methods with query-aware versions.
	    function push(location) {
	      history.push(appendQuery(location, location.query));
	    }
	
	    function replace(location) {
	      history.replace(appendQuery(location, location.query));
	    }
	
	    function createPath(location, query) {
	       false ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;
	
	      return history.createPath(appendQuery(location, query || location.query));
	    }
	
	    function createHref(location, query) {
	       false ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;
	
	      return history.createHref(appendQuery(location, query || location.query));
	    }
	
	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));
	      if (location.query) {
	        fullLocation.query = location.query;
	      }
	      return addQuery(fullLocation);
	    }
	
	    // deprecated
	    function pushState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      push(_extends({ state: state }, path, { query: query }));
	    }
	
	    // deprecated
	    function replaceState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      replace(_extends({ state: state }, path, { query: query }));
	    }
	
	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,
	
	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}
	
	exports['default'] = useQueries;
	module.exports = exports['default'];

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(189);
	var objectAssign = __webpack_require__(4);
	
	function encode(value, opts) {
		if (opts.encode) {
			return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
		}
	
		return value;
	}
	
	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};
	
	exports.parse = function (str) {
		// Create an object with no prototype
		// https://github.com/sindresorhus/query-string/issues/47
		var ret = Object.create(null);
	
		if (typeof str !== 'string') {
			return ret;
		}
	
		str = str.trim().replace(/^(\?|#|&)/, '');
	
		if (!str) {
			return ret;
		}
	
		str.split('&').forEach(function (param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;
	
			key = decodeURIComponent(key);
	
			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);
	
			if (ret[key] === undefined) {
				ret[key] = val;
			} else if (Array.isArray(ret[key])) {
				ret[key].push(val);
			} else {
				ret[key] = [ret[key], val];
			}
		});
	
		return ret;
	};
	
	exports.stringify = function (obj, opts) {
		var defaults = {
			encode: true,
			strict: true
		};
	
		opts = objectAssign(defaults, opts);
	
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];
	
			if (val === undefined) {
				return '';
			}
	
			if (val === null) {
				return encode(key, opts);
			}
	
			if (Array.isArray(val)) {
				var result = [];
	
				val.slice().forEach(function (val2) {
					if (val2 === undefined) {
						return;
					}
	
					if (val2 === null) {
						result.push(encode(key, opts));
					} else {
						result.push(encode(key, opts) + '=' + encode(val2, opts));
					}
				});
	
				return result.join('&');
			}
	
			return encode(key, opts) + '=' + encode(val, opts);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 189 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = createTransitionManager;
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _Actions = __webpack_require__(173);
	
	var _computeChangedRoutes2 = __webpack_require__(191);
	
	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);
	
	var _TransitionUtils = __webpack_require__(192);
	
	var _isActive2 = __webpack_require__(194);
	
	var _isActive3 = _interopRequireDefault(_isActive2);
	
	var _getComponents = __webpack_require__(195);
	
	var _getComponents2 = _interopRequireDefault(_getComponents);
	
	var _matchRoutes = __webpack_require__(197);
	
	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return true;
	  }return false;
	}
	
	function createTransitionManager(history, routes) {
	  var state = {};
	
	  // Signature should be (location, indexOnly), but needs to support (path,
	  // query, indexOnly)
	  function isActive(location) {
	    var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	    var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
	    var indexOnly = void 0;
	    if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {
	       false ? (0, _routerWarning2.default)(false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
	      location = { pathname: location, query: indexOnlyOrDeprecatedQuery };
	      indexOnly = deprecatedIndexOnly || false;
	    } else {
	      location = history.createLocation(location);
	      indexOnly = indexOnlyOrDeprecatedQuery;
	    }
	
	    return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
	  }
	
	  function createLocationFromRedirectInfo(location) {
	    return history.createLocation(location, _Actions.REPLACE);
	  }
	
	  var partialNextState = void 0;
	
	  function match(location, callback) {
	    if (partialNextState && partialNextState.location === location) {
	      // Continue from where we left off.
	      finishMatch(partialNextState, callback);
	    } else {
	      (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	        if (error) {
	          callback(error);
	        } else if (nextState) {
	          finishMatch(_extends({}, nextState, { location: location }), callback);
	        } else {
	          callback();
	        }
	      });
	    }
	  }
	
	  function finishMatch(nextState, callback) {
	    var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState);
	
	    var leaveRoutes = _computeChangedRoutes.leaveRoutes;
	    var changeRoutes = _computeChangedRoutes.changeRoutes;
	    var enterRoutes = _computeChangedRoutes.enterRoutes;
	
	
	    (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);
	
	    // Tear down confirmation hooks for left routes
	    leaveRoutes.filter(function (route) {
	      return enterRoutes.indexOf(route) === -1;
	    }).forEach(removeListenBeforeHooksForRoute);
	
	    // change and enter hooks are run in series
	    (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function (error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
	    });
	
	    function finishEnterHooks(error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      // TODO: Fetch components after state is updated.
	      (0, _getComponents2.default)(nextState, function (error, components) {
	        if (error) {
	          callback(error);
	        } else {
	          // TODO: Make match a pure function and have some other API
	          // for "match and update state".
	          callback(null, null, state = _extends({}, nextState, { components: components }));
	        }
	      });
	    }
	
	    function handleErrorOrRedirect(error, redirectInfo) {
	      if (error) callback(error);else callback(null, createLocationFromRedirectInfo(redirectInfo));
	    }
	  }
	
	  var RouteGuid = 1;
	
	  function getRouteID(route) {
	    var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
	
	    return route.__id__ || create && (route.__id__ = RouteGuid++);
	  }
	
	  var RouteHooks = Object.create(null);
	
	  function getRouteHooksForRoutes(routes) {
	    return routes.reduce(function (hooks, route) {
	      hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
	      return hooks;
	    }, []);
	  }
	
	  function transitionHook(location, callback) {
	    (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	      if (nextState == null) {
	        // TODO: We didn't actually match anything, but hang
	        // onto error/nextState so we don't have to matchRoutes
	        // again in the listen callback.
	        callback();
	        return;
	      }
	
	      // Cache some state here so we don't have to
	      // matchRoutes() again in the listen callback.
	      partialNextState = _extends({}, nextState, { location: location });
	
	      var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);
	
	      var result = void 0;
	      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	        // Passing the location arg here indicates to
	        // the user that this is a transition hook.
	        result = hooks[i](location);
	      }
	
	      callback(result);
	    });
	  }
	
	  /* istanbul ignore next: untestable with Karma */
	  function beforeUnloadHook() {
	    // Synchronously check to see if any route hooks want
	    // to prevent the current window/tab from closing.
	    if (state.routes) {
	      var hooks = getRouteHooksForRoutes(state.routes);
	
	      var message = void 0;
	      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	        // Passing no args indicates to the user that this is a
	        // beforeunload hook. We don't know the next location.
	        message = hooks[i]();
	      }
	
	      return message;
	    }
	  }
	
	  var unlistenBefore = void 0,
	      unlistenBeforeUnload = void 0;
	
	  function removeListenBeforeHooksForRoute(route) {
	    var routeID = getRouteID(route, false);
	    if (!routeID) {
	      return;
	    }
	
	    delete RouteHooks[routeID];
	
	    if (!hasAnyProperties(RouteHooks)) {
	      // teardown transition & beforeunload hooks
	      if (unlistenBefore) {
	        unlistenBefore();
	        unlistenBefore = null;
	      }
	
	      if (unlistenBeforeUnload) {
	        unlistenBeforeUnload();
	        unlistenBeforeUnload = null;
	      }
	    }
	  }
	
	  /**
	   * Registers the given hook function to run before leaving the given route.
	   *
	   * During a normal transition, the hook function receives the next location
	   * as its only argument and can return either a prompt message (string) to show the user,
	   * to make sure they want to leave the page; or `false`, to prevent the transition.
	   * Any other return value will have no effect.
	   *
	   * During the beforeunload event (in browsers) the hook receives no arguments.
	   * In this case it must return a prompt message to prevent the transition.
	   *
	   * Returns a function that may be used to unbind the listener.
	   */
	  function listenBeforeLeavingRoute(route, hook) {
	    // TODO: Warn if they register for a route that isn't currently
	    // active. They're probably doing something wrong, like re-creating
	    // route objects on every location change.
	    var routeID = getRouteID(route);
	    var hooks = RouteHooks[routeID];
	
	    if (!hooks) {
	      var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);
	
	      RouteHooks[routeID] = [hook];
	
	      if (thereWereNoRouteHooks) {
	        // setup transition & beforeunload hooks
	        unlistenBefore = history.listenBefore(transitionHook);
	
	        if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	      }
	    } else {
	      if (hooks.indexOf(hook) === -1) {
	         false ? (0, _routerWarning2.default)(false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : void 0;
	
	        hooks.push(hook);
	      }
	    }
	
	    return function () {
	      var hooks = RouteHooks[routeID];
	
	      if (hooks) {
	        var newHooks = hooks.filter(function (item) {
	          return item !== hook;
	        });
	
	        if (newHooks.length === 0) {
	          removeListenBeforeHooksForRoute(route);
	        } else {
	          RouteHooks[routeID] = newHooks;
	        }
	      }
	    };
	  }
	
	  /**
	   * This is the API for stateful environments. As the location
	   * changes, we update state and call the listener. We can also
	   * gracefully handle errors and redirects.
	   */
	  function listen(listener) {
	    // TODO: Only use a single history listener. Otherwise we'll
	    // end up with multiple concurrent calls to match.
	    return history.listen(function (location) {
	      if (state.location === location) {
	        listener(null, state);
	      } else {
	        match(location, function (error, redirectLocation, nextState) {
	          if (error) {
	            listener(error);
	          } else if (redirectLocation) {
	            history.transitionTo(redirectLocation);
	          } else if (nextState) {
	            listener(null, nextState);
	          } else {
	             false ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
	          }
	        });
	      }
	    });
	  }
	
	  return {
	    isActive: isActive,
	    match: match,
	    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	    listen: listen
	  };
	}
	
	//export default useRoutes
	module.exports = exports['default'];

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(169);
	
	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;
	
	  var paramNames = (0, _PatternUtils.getParamNames)(route.path);
	
	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}
	
	/**
	 * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 *
	 * changeRoutes are any routes that didn't leave or enter during
	 * the transition.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;
	
	  var leaveRoutes = void 0,
	      changeRoutes = void 0,
	      enterRoutes = void 0;
	  if (prevRoutes) {
	    (function () {
	      var parentIsLeaving = false;
	      leaveRoutes = prevRoutes.filter(function (route) {
	        if (parentIsLeaving) {
	          return true;
	        } else {
	          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	          if (isLeaving) parentIsLeaving = true;
	          return isLeaving;
	        }
	      });
	
	      // onLeave hooks start at the leaf route.
	      leaveRoutes.reverse();
	
	      enterRoutes = [];
	      changeRoutes = [];
	
	      nextRoutes.forEach(function (route) {
	        var isNew = prevRoutes.indexOf(route) === -1;
	        var paramsChanged = leaveRoutes.indexOf(route) !== -1;
	
	        if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);
	      });
	    })();
	  } else {
	    leaveRoutes = [];
	    changeRoutes = [];
	    enterRoutes = nextRoutes;
	  }
	
	  return {
	    leaveRoutes: leaveRoutes,
	    changeRoutes: changeRoutes,
	    enterRoutes: enterRoutes
	  };
	}
	
	exports.default = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runChangeHooks = runChangeHooks;
	exports.runLeaveHooks = runLeaveHooks;
	
	var _AsyncUtils = __webpack_require__(193);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createTransitionHook(hook, route, asyncArity) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    hook.apply(route, args);
	
	    if (hook.length < asyncArity) {
	      var callback = args[args.length - 1];
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	}
	
	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createTransitionHook(route.onEnter, route, 3));
	
	    return hooks;
	  }, []);
	}
	
	function getChangeHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onChange) hooks.push(createTransitionHook(route.onChange, route, 4));
	    return hooks;
	  }, []);
	}
	
	function runTransitionHooks(length, iter, callback) {
	  if (!length) {
	    callback();
	    return;
	  }
	
	  var redirectInfo = void 0;
	  function replace(location, deprecatedPathname, deprecatedQuery) {
	    if (deprecatedPathname) {
	       false ? (0, _routerWarning2.default)(false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
	      redirectInfo = {
	        pathname: deprecatedPathname,
	        query: deprecatedQuery,
	        state: location
	      };
	
	      return;
	    }
	
	    redirectInfo = location;
	  }
	
	  (0, _AsyncUtils.loopAsync)(length, function (index, next, done) {
	    iter(index, replace, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	
	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runEnterHooks(routes, nextState, callback) {
	  var hooks = getEnterHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    hooks[index](nextState, replace, next);
	  }, callback);
	}
	
	/**
	 * Runs all onChange hooks in the given array of routes in order
	 * with onChange(prevState, nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runChangeHooks(routes, state, nextState, callback) {
	  var hooks = getChangeHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    hooks[index](state, nextState, replace, next);
	  }, callback);
	}
	
	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */
	function runLeaveHooks(routes, prevState) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i], prevState);
	  }
	}

/***/ },
/* 193 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = void 0;
	
	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(Array.prototype.slice.call(arguments));
	      return;
	    }
	
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) {
	      return;
	    }
	
	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }
	
	    sync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }
	
	    sync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }
	
	  next();
	}
	
	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];
	
	  if (length === 0) return callback(null, values);
	
	  var isDone = false,
	      doneCount = 0;
	
	  function done(index, error, value) {
	    if (isDone) return;
	
	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;
	
	      isDone = ++doneCount === length;
	
	      if (isDone) callback(null, values);
	    }
	  }
	
	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.default = isActive;
	
	var _PatternUtils = __webpack_require__(169);
	
	function deepEqual(a, b) {
	  if (a == b) return true;
	
	  if (a == null || b == null) return false;
	
	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }
	
	  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
	    for (var p in a) {
	      if (!Object.prototype.hasOwnProperty.call(a, p)) {
	        continue;
	      }
	
	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }
	
	    return true;
	  }
	
	  return String(a) === String(b);
	}
	
	/**
	 * Returns true if the current pathname matches the supplied one, net of
	 * leading and trailing slash normalization. This is sufficient for an
	 * indexOnly route match.
	 */
	function pathIsActive(pathname, currentPathname) {
	  // Normalize leading slash for consistency. Leading slash on pathname has
	  // already been normalized in isActive. See caveat there.
	  if (currentPathname.charAt(0) !== '/') {
	    currentPathname = '/' + currentPathname;
	  }
	
	  // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
	  // `/foo` as active, but in this case, we would already have failed the
	  // match.
	  if (pathname.charAt(pathname.length - 1) !== '/') {
	    pathname += '/';
	  }
	  if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
	    currentPathname += '/';
	  }
	
	  return currentPathname === pathname;
	}
	
	/**
	 * Returns true if the given pathname matches the active routes and params.
	 */
	function routeIsActive(pathname, routes, params) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];
	
	  // for...of would work here but it's probably slower post-transpilation.
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    var route = routes[i];
	    var pattern = route.path || '';
	
	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }
	
	    if (remainingPathname !== null && pattern) {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	
	      if (remainingPathname === '') {
	        // We have an exact match on the route. Just check that all the params
	        // match.
	        // FIXME: This doesn't work on repeated params.
	        return paramNames.every(function (paramName, index) {
	          return String(paramValues[index]) === String(params[paramName]);
	        });
	      }
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;
	
	  if (query == null) return true;
	
	  return deepEqual(query, activeQuery);
	}
	
	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(_ref, indexOnly, currentLocation, routes, params) {
	  var pathname = _ref.pathname;
	  var query = _ref.query;
	
	  if (currentLocation == null) return false;
	
	  // TODO: This is a bit ugly. It keeps around support for treating pathnames
	  // without preceding slashes as absolute paths, but possibly also works
	  // around the same quirks with basenames as in matchRoutes.
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }
	
	  if (!pathIsActive(pathname, currentLocation.pathname)) {
	    // The path check is necessary and sufficient for indexOnly, but otherwise
	    // we still need to check the routes.
	    if (indexOnly || !routeIsActive(pathname, routes, params)) {
	      return false;
	    }
	  }
	
	  return queryIsActive(query, currentLocation.query);
	}
	module.exports = exports['default'];

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _AsyncUtils = __webpack_require__(193);
	
	var _makeStateWithLocation = __webpack_require__(196);
	
	var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getComponentsForRoute(nextState, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	    return;
	  }
	
	  var getComponent = route.getComponent || route.getComponents;
	  if (!getComponent) {
	    callback();
	    return;
	  }
	
	  var location = nextState.location;
	
	  var nextStateWithLocation = (0, _makeStateWithLocation2.default)(nextState, location);
	
	  getComponent.call(route, nextStateWithLocation, callback);
	}
	
	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState, route, callback);
	  }, callback);
	}
	
	exports.default = getComponents;
	module.exports = exports['default'];

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = makeStateWithLocation;
	
	var _deprecateObjectProperties = __webpack_require__(165);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function makeStateWithLocation(state, location) {
	  if (false) {
	    var stateWithLocation = _extends({}, state);
	
	    // I don't use deprecateObjectProperties here because I want to keep the
	    // same code path between development and production, in that we just
	    // assign extra properties to the copy of the state object in both cases.
	
	    var _loop = function _loop(prop) {
	      if (!Object.prototype.hasOwnProperty.call(location, prop)) {
	        return 'continue';
	      }
	
	      Object.defineProperty(stateWithLocation, prop, {
	        get: function get() {
	          process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'Accessing location properties directly from the first argument to `getComponent`, `getComponents`, `getChildRoutes`, and `getIndexRoute` is deprecated. That argument is now the router state (`nextState` or `partialNextState`) rather than the location. To access the location, use `nextState.location` or `partialNextState.location`.') : void 0;
	          return location[prop];
	        }
	      });
	    };
	
	    for (var prop in location) {
	      var _ret = _loop(prop);
	
	      if (_ret === 'continue') continue;
	    }
	
	    return stateWithLocation;
	  }
	
	  return _extends({}, state, location);
	}
	module.exports = exports['default'];

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.default = matchRoutes;
	
	var _AsyncUtils = __webpack_require__(193);
	
	var _makeStateWithLocation = __webpack_require__(196);
	
	var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);
	
	var _PatternUtils = __webpack_require__(169);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _RouteUtils = __webpack_require__(163);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getChildRoutes(route, location, paramNames, paramValues, callback) {
	  if (route.childRoutes) {
	    return [null, route.childRoutes];
	  }
	  if (!route.getChildRoutes) {
	    return [];
	  }
	
	  var sync = true,
	      result = void 0;
	
	  var partialNextState = {
	    location: location,
	    params: createParams(paramNames, paramValues)
	  };
	
	  var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);
	
	  route.getChildRoutes(partialNextStateWithLocation, function (error, childRoutes) {
	    childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
	    if (sync) {
	      result = [error, childRoutes];
	      return;
	    }
	
	    callback(error, childRoutes);
	  });
	
	  sync = false;
	  return result; // Might be undefined.
	}
	
	function getIndexRoute(route, location, paramNames, paramValues, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    var partialNextState = {
	      location: location,
	      params: createParams(paramNames, paramValues)
	    };
	
	    var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);
	
	    route.getIndexRoute(partialNextStateWithLocation, function (error, indexRoute) {
	      callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    });
	  } else if (route.childRoutes) {
	    (function () {
	      var pathless = route.childRoutes.filter(function (childRoute) {
	        return !childRoute.path;
	      });
	
	      (0, _AsyncUtils.loopAsync)(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    })();
	  } else {
	    callback();
	  }
	}
	
	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];
	
	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }
	
	    return params;
	  }, params);
	}
	
	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}
	
	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';
	
	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }
	
	  // Only try to match the path if the route actually has a pattern, and if
	  // we're not just searching for potential nested absolute paths.
	  if (remainingPathname !== null && pattern) {
	    try {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	    } catch (error) {
	      callback(error);
	    }
	
	    // By assumption, pattern is non-empty here, which is the prerequisite for
	    // actually terminating a match.
	    if (remainingPathname === '') {
	      var _ret2 = function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };
	
	        getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;
	
	               false ? (0, _routerWarning2.default)(indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : void 0;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	               false ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
	              match.routes.push(indexRoute);
	            }
	
	            callback(null, match);
	          }
	        });
	
	        return {
	          v: void 0
	        };
	      }();
	
	      if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
	    }
	  }
	
	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    };
	
	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback, remainingPathname) {
	  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
	  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];
	
	  if (remainingPathname === undefined) {
	    // TODO: This is a little bit ugly, but it works around a quirk in history
	    // that strips the leading slash from pathnames when using basenames with
	    // trailing slashes.
	    if (location.pathname.charAt(0) !== '/') {
	      location = _extends({}, location, {
	        pathname: '/' + location.pathname
	      });
	    }
	    remainingPathname = location.pathname;
	  }
	
	  (0, _AsyncUtils.loopAsync)(routes.length, function (index, next, done) {
	    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	      if (error || match) {
	        done(error, match);
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	module.exports = exports['default'];

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _deprecateObjectProperties = __webpack_require__(165);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	var _getRouteParams = __webpack_require__(199);
	
	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);
	
	var _RouteUtils = __webpack_require__(163);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var array = _React$PropTypes.array;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	
	/**
	 * A <RouterContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */
	
	var RouterContext = _react2.default.createClass({
	  displayName: 'RouterContext',
	
	
	  propTypes: {
	    history: object,
	    router: object.isRequired,
	    location: object.isRequired,
	    routes: array.isRequired,
	    params: object.isRequired,
	    components: array.isRequired,
	    createElement: func.isRequired
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      createElement: _react2.default.createElement
	    };
	  },
	
	
	  childContextTypes: {
	    history: object,
	    location: object.isRequired,
	    router: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    var _props = this.props;
	    var router = _props.router;
	    var history = _props.history;
	    var location = _props.location;
	
	    if (!router) {
	       false ? (0, _routerWarning2.default)(false, '`<RouterContext>` expects a `router` rather than a `history`') : void 0;
	
	      router = _extends({}, history, {
	        setRouteLeaveHook: history.listenBeforeLeavingRoute
	      });
	      delete router.listenBeforeLeavingRoute;
	    }
	
	    if (false) {
	      location = (0, _deprecateObjectProperties2.default)(location, '`context.location` is deprecated, please use a route component\'s `props.location` instead. http://tiny.cc/router-accessinglocation');
	    }
	
	    return { history: history, location: location, router: router };
	  },
	  createElement: function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  },
	  render: function render() {
	    var _this = this;
	
	    var _props2 = this.props;
	    var history = _props2.history;
	    var location = _props2.location;
	    var routes = _props2.routes;
	    var params = _props2.params;
	    var components = _props2.components;
	
	    var element = null;
	
	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.
	
	        var route = routes[index];
	        var routeParams = (0, _getRouteParams2.default)(route, params);
	        var props = {
	          history: history,
	          location: location,
	          params: params,
	          route: route,
	          routeParams: routeParams,
	          routes: routes
	        };
	
	        if ((0, _RouteUtils.isReactChildren)(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (Object.prototype.hasOwnProperty.call(element, prop)) props[prop] = element[prop];
	          }
	        }
	
	        if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
	          var elements = {};
	
	          for (var key in components) {
	            if (Object.prototype.hasOwnProperty.call(components, key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }
	
	          return elements;
	        }
	
	        return _this.createElement(components, props);
	      }, element);
	    }
	
	    !(element === null || element === false || _react2.default.isValidElement(element)) ?  false ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;
	
	    return element;
	  }
	});
	
	exports.default = RouterContext;
	module.exports = exports['default'];

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(169);
	
	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};
	
	  if (!route.path) return routeParams;
	
	  (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
	    if (Object.prototype.hasOwnProperty.call(params, p)) {
	      routeParams[p] = params[p];
	    }
	  });
	
	  return routeParams;
	}
	
	exports.default = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createRouterObject = createRouterObject;
	exports.createRoutingHistory = createRoutingHistory;
	
	var _deprecateObjectProperties = __webpack_require__(165);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createRouterObject(history, transitionManager) {
	  return _extends({}, history, {
	    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
	    isActive: transitionManager.isActive
	  });
	}
	
	// deprecated
	function createRoutingHistory(history, transitionManager) {
	  history = _extends({}, history, transitionManager);
	
	  if (false) {
	    history = (0, _deprecateObjectProperties2.default)(history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');
	  }
	
	  return history;
	}

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _PropTypes = __webpack_require__(164);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var bool = _React$PropTypes.bool;
	var object = _React$PropTypes.object;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	var oneOfType = _React$PropTypes.oneOfType;
	
	
	function isLeftClickEvent(event) {
	  return event.button === 0;
	}
	
	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}
	
	// TODO: De-duplicate against hasAnyProperties in createTransitionManager.
	function isEmptyObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return false;
	  }return true;
	}
	
	function createLocationDescriptor(to, _ref) {
	  var query = _ref.query;
	  var hash = _ref.hash;
	  var state = _ref.state;
	
	  if (query || hash || state) {
	    return { pathname: to, query: query, hash: hash, state: state };
	  }
	
	  return to;
	}
	
	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * activeClassName prop.
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	var Link = _react2.default.createClass({
	  displayName: 'Link',
	
	
	  contextTypes: {
	    router: _PropTypes.routerShape
	  },
	
	  propTypes: {
	    to: oneOfType([string, object]).isRequired,
	    query: object,
	    hash: string,
	    state: object,
	    activeStyle: object,
	    activeClassName: string,
	    onlyActiveOnIndex: bool.isRequired,
	    onClick: func,
	    target: string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      onlyActiveOnIndex: false,
	      style: {}
	    };
	  },
	  handleClick: function handleClick(event) {
	    if (this.props.onClick) this.props.onClick(event);
	
	    if (event.defaultPrevented) return;
	
	    !this.context.router ?  false ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot navigate.') : (0, _invariant2.default)(false) : void 0;
	
	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;
	
	    // If target prop is set (e.g. to "_blank"), let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) return;
	
	    event.preventDefault();
	
	    var _props = this.props;
	    var to = _props.to;
	    var query = _props.query;
	    var hash = _props.hash;
	    var state = _props.state;
	
	    var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });
	
	    this.context.router.push(location);
	  },
	  render: function render() {
	    var _props2 = this.props;
	    var to = _props2.to;
	    var query = _props2.query;
	    var hash = _props2.hash;
	    var state = _props2.state;
	    var activeClassName = _props2.activeClassName;
	    var activeStyle = _props2.activeStyle;
	    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;
	
	    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);
	
	     false ? (0, _routerWarning2.default)(!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : void 0;
	
	    // Ignore if rendered outside the context of router, simplifies unit testing.
	    var router = this.context.router;
	
	
	    if (router) {
	      var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });
	      props.href = router.createHref(location);
	
	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (router.isActive(location, onlyActiveOnIndex)) {
	          if (activeClassName) {
	            if (props.className) {
	              props.className += ' ' + activeClassName;
	            } else {
	              props.className = activeClassName;
	            }
	          }
	
	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }
	
	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick }));
	  }
	});
	
	exports.default = Link;
	module.exports = exports['default'];

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Link = __webpack_require__(201);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	var IndexLink = _react2.default.createClass({
	  displayName: 'IndexLink',
	  render: function render() {
	    return _react2.default.createElement(_Link2.default, _extends({}, this.props, { onlyActiveOnIndex: true }));
	  }
	});
	
	exports.default = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = withRouter;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _hoistNonReactStatics = __webpack_require__(204);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _PropTypes = __webpack_require__(164);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}
	
	function withRouter(WrappedComponent) {
	  var WithRouter = _react2.default.createClass({
	    displayName: 'WithRouter',
	
	    contextTypes: { router: _PropTypes.routerShape },
	    render: function render() {
	      return _react2.default.createElement(WrappedComponent, _extends({}, this.props, { router: this.context.router }));
	    }
	  });
	
	  WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
	  WithRouter.WrappedComponent = WrappedComponent;
	
	  return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
	}
	module.exports = exports['default'];

/***/ },
/* 204 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';
	
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};
	
	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';
	
	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);
	
	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }
	
	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {
	
	                }
	            }
	        }
	    }
	
	    return targetComponent;
	};


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Redirect = __webpack_require__(206);
	
	var _Redirect2 = _interopRequireDefault(_Redirect);
	
	var _InternalPropTypes = __webpack_require__(168);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;
	
	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */
	
	var IndexRedirect = _react2.default.createClass({
	  displayName: 'IndexRedirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
	      } else {
	         false ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRedirect;
	module.exports = exports['default'];

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(163);
	
	var _PatternUtils = __webpack_require__(169);
	
	var _InternalPropTypes = __webpack_require__(168);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;
	
	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */
	
	var Redirect = _react2.default.createClass({
	  displayName: 'Redirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element) {
	      var route = (0, _RouteUtils.createRouteFromReactElement)(element);
	
	      if (route.from) route.path = route.from;
	
	      route.onEnter = function (nextState, replace) {
	        var location = nextState.location;
	        var params = nextState.params;
	
	
	        var pathname = void 0;
	        if (route.to.charAt(0) === '/') {
	          pathname = (0, _PatternUtils.formatPattern)(route.to, params);
	        } else if (!route.to) {
	          pathname = location.pathname;
	        } else {
	          var routeIndex = nextState.routes.indexOf(route);
	          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	          pathname = (0, _PatternUtils.formatPattern)(pattern, params);
	        }
	
	        replace({
	          pathname: pathname,
	          query: route.query || location.query,
	          state: route.state || location.state
	        });
	      };
	
	      return route;
	    },
	    getRoutePattern: function getRoutePattern(routes, routeIndex) {
	      var parentPattern = '';
	
	      for (var i = routeIndex; i >= 0; i--) {
	        var route = routes[i];
	        var pattern = route.path || '';
	
	        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;
	
	        if (pattern.indexOf('/') === 0) break;
	      }
	
	      return '/' + parentPattern;
	    }
	  },
	
	  propTypes: {
	    path: string,
	    from: string, // Alias for path
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Redirect;
	module.exports = exports['default'];

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(163);
	
	var _InternalPropTypes = __webpack_require__(168);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var func = _react2.default.PropTypes.func;
	
	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */
	
	var IndexRoute = _react2.default.createClass({
	  displayName: 'IndexRoute',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
	      } else {
	         false ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    path: _InternalPropTypes.falsy,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRoute;
	module.exports = exports['default'];

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(163);
	
	var _InternalPropTypes = __webpack_require__(168);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	
	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */
	
	var Route = _react2.default.createClass({
	  displayName: 'Route',
	
	
	  statics: {
	    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
	  },
	
	  propTypes: {
	    path: string,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Route;
	module.exports = exports['default'];

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _InternalPropTypes = __webpack_require__(168);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * A mixin that adds the "history" instance variable to components.
	 */
	var History = {
	
	  contextTypes: {
	    history: _InternalPropTypes.history
	  },
	
	  componentWillMount: function componentWillMount() {
	     false ? (0, _routerWarning2.default)(false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : void 0;
	    this.history = this.context.history;
	  }
	};
	
	exports.default = History;
	module.exports = exports['default'];

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var object = _react2.default.PropTypes.object;
	
	/**
	 * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
	 * component that may be used to cancel a transition or prompt the user
	 * for confirmation.
	 *
	 * On standard transitions, routerWillLeave receives a single argument: the
	 * location we're transitioning to. To cancel the transition, return false.
	 * To prompt the user for confirmation, return a prompt message (string).
	 *
	 * During the beforeunload event (assuming you're using the useBeforeUnload
	 * history enhancer), routerWillLeave does not receive a location object
	 * because it isn't possible for us to know the location we're transitioning
	 * to. In this case routerWillLeave must return a prompt message to prevent
	 * the user from closing the window/tab.
	 */
	
	var Lifecycle = {
	
	  contextTypes: {
	    history: object.isRequired,
	    // Nested children receive the route as context, either
	    // set by the route component using the RouteContext mixin
	    // or by some other ancestor.
	    route: object
	  },
	
	  propTypes: {
	    // Route components receive the route object as a prop.
	    route: object
	  },
	
	  componentDidMount: function componentDidMount() {
	     false ? (0, _routerWarning2.default)(false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : void 0;
	    !this.routerWillLeave ?  false ? (0, _invariant2.default)(false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : (0, _invariant2.default)(false) : void 0;
	
	    var route = this.props.route || this.context.route;
	
	    !route ?  false ? (0, _invariant2.default)(false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : (0, _invariant2.default)(false) : void 0;
	
	    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();
	  }
	};
	
	exports.default = Lifecycle;
	module.exports = exports['default'];

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var object = _react2.default.PropTypes.object;
	
	/**
	 * The RouteContext mixin provides a convenient way for route
	 * components to set the route in context. This is needed for
	 * routes that render elements that want to use the Lifecycle
	 * mixin to prevent transitions.
	 */
	
	var RouteContext = {
	
	  propTypes: {
	    route: object.isRequired
	  },
	
	  childContextTypes: {
	    route: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    return {
	      route: this.props.route
	    };
	  },
	  componentWillMount: function componentWillMount() {
	     false ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;
	  }
	};
	
	exports.default = RouteContext;
	module.exports = exports['default'];

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _useQueries = __webpack_require__(187);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _createTransitionManager = __webpack_require__(190);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know about routing.
	 *
	 * Enhances history objects with the following methods:
	 *
	 * - listen((error, nextState) => {})
	 * - listenBeforeLeavingRoute(route, (nextLocation) => {})
	 * - match(location, (error, redirectLocation, nextState) => {})
	 * - isActive(pathname, query, indexOnly=false)
	 */
	function useRoutes(createHistory) {
	   false ? (0, _routerWarning2.default)(false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : void 0;
	
	  return function () {
	    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var routes = _ref.routes;
	
	    var options = _objectWithoutProperties(_ref, ['routes']);
	
	    var history = (0, _useQueries2.default)(createHistory)(options);
	    var transitionManager = (0, _createTransitionManager2.default)(history, routes);
	    return _extends({}, history, transitionManager);
	  };
	}
	
	exports.default = useRoutes;
	module.exports = exports['default'];

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouterContext = __webpack_require__(198);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _routerWarning = __webpack_require__(166);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var RoutingContext = _react2.default.createClass({
	  displayName: 'RoutingContext',
	  componentWillMount: function componentWillMount() {
	     false ? (0, _routerWarning2.default)(false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \'react-router\'`. http://tiny.cc/router-routercontext') : void 0;
	  },
	  render: function render() {
	    return _react2.default.createElement(_RouterContext2.default, this.props);
	  }
	});
	
	exports.default = RoutingContext;
	module.exports = exports['default'];

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _createMemoryHistory = __webpack_require__(215);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	var _createTransitionManager = __webpack_require__(190);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _RouteUtils = __webpack_require__(163);
	
	var _RouterUtils = __webpack_require__(200);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser unless you're using
	 * server-side rendering with async routes.
	 */
	function match(_ref, callback) {
	  var history = _ref.history;
	  var routes = _ref.routes;
	  var location = _ref.location;
	
	  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);
	
	  !(history || location) ?  false ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;
	
	  history = history ? history : (0, _createMemoryHistory2.default)(options);
	  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));
	
	  var unlisten = void 0;
	
	  if (location) {
	    // Allow match({ location: '/the/path', ... })
	    location = history.createLocation(location);
	  } else {
	    // Pick up the location from the history via synchronous history.listen
	    // call if needed.
	    unlisten = history.listen(function (historyLocation) {
	      location = historyLocation;
	    });
	  }
	
	  var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
	  history = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);
	
	  transitionManager.match(location, function (error, redirectLocation, nextState) {
	    callback(error, redirectLocation, nextState && _extends({}, nextState, {
	      history: history,
	      router: router,
	      matchContext: { history: history, transitionManager: transitionManager, router: router }
	    }));
	
	    // Defer removing the listener to here to prevent DOM histories from having
	    // to unwind DOM event listeners unnecessarily, in case callback renders a
	    // <Router> and attaches another history listener.
	    if (unlisten) {
	      unlisten();
	    }
	  });
	}
	
	exports.default = match;
	module.exports = exports['default'];

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = createMemoryHistory;
	
	var _useQueries = __webpack_require__(187);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(216);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	var _createMemoryHistory = __webpack_require__(217);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createMemoryHistory(options) {
	  // signatures and type checking differ between `useRoutes` and
	  // `createMemoryHistory`, have to create `memoryHistory` first because
	  // `useQueries` doesn't understand the signature
	  var memoryHistory = (0, _createMemoryHistory2.default)(options);
	  var createHistory = function createHistory() {
	    return memoryHistory;
	  };
	  var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	  history.__v2_compatible__ = true;
	  return history;
	}
	module.exports = exports['default'];

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _ExecutionEnvironment = __webpack_require__(175);
	
	var _PathUtils = __webpack_require__(174);
	
	var _runTransitionHook = __webpack_require__(185);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _deprecate = __webpack_require__(186);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var history = createHistory(options);
	
	    var basename = options.basename;
	
	    var checkedBaseHref = false;
	
	    function checkBaseHref() {
	      if (checkedBaseHref) {
	        return;
	      }
	
	      // Automatically use the value of <base href> in HTML
	      // documents as basename if it's not explicitly given.
	      if (basename == null && _ExecutionEnvironment.canUseDOM) {
	        var base = document.getElementsByTagName('base')[0];
	        var baseHref = base && base.getAttribute('href');
	
	        if (baseHref != null) {
	          basename = baseHref;
	
	           false ? _warning2['default'](false, 'Automatically setting basename using <base href> is deprecated and will ' + 'be removed in the next major release. The semantics of <base href> are ' + 'subtly different from basename. Please pass the basename explicitly in ' + 'the options to createHistory') : undefined;
	        }
	      }
	
	      checkedBaseHref = true;
	    }
	
	    function addBasename(location) {
	      checkBaseHref();
	
	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;
	
	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }
	
	      return location;
	    }
	
	    function prependBasename(location) {
	      checkBaseHref();
	
	      if (!basename) return location;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      var pname = location.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;
	
	      return _extends({}, location, {
	        pathname: pathname
	      });
	    }
	
	    // Override all read methods with basename-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addBasename(location), callback);
	      });
	    }
	
	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addBasename(location));
	      });
	    }
	
	    // Override all write methods with basename-aware versions.
	    function push(location) {
	      history.push(prependBasename(location));
	    }
	
	    function replace(location) {
	      history.replace(prependBasename(location));
	    }
	
	    function createPath(location) {
	      return history.createPath(prependBasename(location));
	    }
	
	    function createHref(location) {
	      return history.createHref(prependBasename(location));
	    }
	
	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    }
	
	    // deprecated
	    function pushState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      push(_extends({ state: state }, path));
	    }
	
	    // deprecated
	    function replaceState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      replace(_extends({ state: state }, path));
	    }
	
	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,
	
	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}
	
	exports['default'] = useBasename;
	module.exports = exports['default'];

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(167);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _PathUtils = __webpack_require__(174);
	
	var _Actions = __webpack_require__(173);
	
	var _createHistory = __webpack_require__(179);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	}
	
	function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }
	
	  var history = _createHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: saveState,
	    go: go
	  }));
	
	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;
	
	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }
	
	  entries = entries.map(function (entry) {
	    var key = history.createKey();
	
	    if (typeof entry === 'string') return { pathname: entry, key: key };
	
	    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });
	
	     true ?  false ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
	  });
	
	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ?  false ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
	  }
	
	  var storage = createStateStorage(entries);
	
	  function saveState(key, state) {
	    storage[key] = state;
	  }
	
	  function readState(key) {
	    return storage[key];
	  }
	
	  function getCurrentLocation() {
	    var entry = entries[current];
	    var basename = entry.basename;
	    var pathname = entry.pathname;
	    var search = entry.search;
	
	    var path = (basename || '') + pathname + (search || '');
	
	    var key = undefined,
	        state = undefined;
	    if (entry.key) {
	      key = entry.key;
	      state = readState(key);
	    } else {
	      key = history.createKey();
	      state = null;
	      entry.key = key;
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  }
	
	  function go(n) {
	    if (n) {
	      if (!canGo(n)) {
	         false ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
	        return;
	      }
	
	      current += n;
	
	      var currentLocation = getCurrentLocation();
	
	      // change action to POP
	      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	    }
	  }
	
	  function finishTransition(location) {
	    switch (location.action) {
	      case _Actions.PUSH:
	        current += 1;
	
	        // if we are not on the top of stack
	        // remove rest and push new
	        if (current < entries.length) entries.splice(current);
	
	        entries.push(location);
	        saveState(location.key, location.state);
	        break;
	      case _Actions.REPLACE:
	        entries[current] = location;
	        saveState(location.key, location.state);
	        break;
	    }
	  }
	
	  return history;
	}
	
	exports['default'] = createMemoryHistory;
	module.exports = exports['default'];

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = useRouterHistory;
	
	var _useQueries = __webpack_require__(187);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(216);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function useRouterHistory(createHistory) {
	  return function (options) {
	    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	    history.__v2_compatible__ = true;
	    return history;
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouterContext = __webpack_require__(198);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  var withContext = middlewares.map(function (m) {
	    return m.renderRouterContext;
	  }).filter(function (f) {
	    return f;
	  });
	  var withComponent = middlewares.map(function (m) {
	    return m.renderRouteComponent;
	  }).filter(function (f) {
	    return f;
	  });
	  var makeCreateElement = function makeCreateElement() {
	    var baseCreateElement = arguments.length <= 0 || arguments[0] === undefined ? _react.createElement : arguments[0];
	    return function (Component, props) {
	      return withComponent.reduceRight(function (previous, renderRouteComponent) {
	        return renderRouteComponent(previous, props);
	      }, baseCreateElement(Component, props));
	    };
	  };
	
	  return function (renderProps) {
	    return withContext.reduceRight(function (previous, renderRouterContext) {
	      return renderRouterContext(previous, renderProps);
	    }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {
	      createElement: makeCreateElement(renderProps.createElement)
	    })));
	  };
	};
	
	module.exports = exports['default'];

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createBrowserHistory = __webpack_require__(221);
	
	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);
	
	var _createRouterHistory = __webpack_require__(222);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(173);
	
	var _PathUtils = __webpack_require__(174);
	
	var _ExecutionEnvironment = __webpack_require__(175);
	
	var _DOMUtils = __webpack_require__(176);
	
	var _DOMStateStorage = __webpack_require__(177);
	
	var _createDOMHistory = __webpack_require__(178);
	
	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
	
	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve URLs.
	 */
	function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;
	
	  var forceRefresh = options.forceRefresh;
	
	  var isSupported = _DOMUtils.supportsHistory();
	  var useRefresh = !isSupported || forceRefresh;
	
	  function getCurrentLocation(historyState) {
	    historyState = historyState || window.history.state || {};
	
	    var path = _DOMUtils.getWindowPath();
	    var _historyState = historyState;
	    var key = _historyState.key;
	
	    var state = undefined;
	    if (key) {
	      state = _DOMStateStorage.readState(key);
	    } else {
	      state = null;
	      key = history.createKey();
	
	      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null);
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function startPopStateListener(_ref) {
	    var transitionTo = _ref.transitionTo;
	
	    function popStateListener(event) {
	      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.
	
	      transitionTo(getCurrentLocation(event.state));
	    }
	
	    _DOMUtils.addEventListener(window, 'popstate', popStateListener);
	
	    return function () {
	      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
	    };
	  }
	
	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;
	
	    if (action === _Actions.POP) return; // Nothing to do.
	
	    _DOMStateStorage.saveState(key, state);
	
	    var path = (basename || '') + pathname + search + hash;
	    var historyState = {
	      key: key
	    };
	
	    if (action === _Actions.PUSH) {
	      if (useRefresh) {
	        window.location.href = path;
	        return false; // Prevent location update.
	      } else {
	          window.history.pushState(historyState, null, path);
	        }
	    } else {
	      // REPLACE
	      if (useRefresh) {
	        window.location.replace(path);
	        return false; // Prevent location update.
	      } else {
	          window.history.replaceState(historyState, null, path);
	        }
	    }
	  }
	
	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));
	
	  var listenerCount = 0,
	      stopPopStateListener = undefined;
	
	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    var unlisten = history.listenBefore(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }
	
	  function listen(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    var unlisten = history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    history.registerTransitionHook(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);
	
	    if (--listenerCount === 0) stopPopStateListener();
	  }
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}
	
	exports['default'] = createBrowserHistory;
	module.exports = exports['default'];

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	exports.default = function (createHistory) {
	  var history = void 0;
	  if (canUseDOM) history = (0, _useRouterHistory2.default)(createHistory)();
	  return history;
	};
	
	var _useRouterHistory = __webpack_require__(218);
	
	var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	module.exports = exports['default'];

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createHashHistory = __webpack_require__(172);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _createRouterHistory = __webpack_require__(222);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = useScroll;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ScrollBehaviorContainer = __webpack_require__(225);
	
	var _ScrollBehaviorContainer2 = _interopRequireDefault(_ScrollBehaviorContainer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function useScroll(shouldUpdateScroll) {
	  return {
	    renderRouterContext: function renderRouterContext(child, props) {
	      return _react2.default.createElement(
	        _ScrollBehaviorContainer2.default,
	        {
	          shouldUpdateScroll: shouldUpdateScroll,
	          routerProps: props
	        },
	        child
	      );
	    }
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ScrollBehavior = __webpack_require__(226);
	
	var _ScrollBehavior2 = _interopRequireDefault(_ScrollBehavior);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ScrollBehaviorContainer = function (_React$Component) {
	  _inherits(ScrollBehaviorContainer, _React$Component);
	
	  function ScrollBehaviorContainer() {
	    _classCallCheck(this, ScrollBehaviorContainer);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  ScrollBehaviorContainer.prototype.componentDidMount = function componentDidMount() {
	    var _this2 = this;
	
	    var routerProps = this.props.routerProps;
	
	
	    this.scrollBehavior = new _ScrollBehavior2.default(routerProps.router, function () {
	      return _this2.props.routerProps.location;
	    });
	
	    this.onUpdate(null, routerProps);
	  };
	
	  ScrollBehaviorContainer.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var routerProps = this.props.routerProps;
	
	    var prevRouterProps = prevProps.routerProps;
	
	    if (routerProps.location === prevRouterProps.location) {
	      return;
	    }
	
	    this.onUpdate(prevRouterProps, routerProps);
	  };
	
	  ScrollBehaviorContainer.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.scrollBehavior.stop();
	  };
	
	  ScrollBehaviorContainer.prototype.onUpdate = function onUpdate(prevRouterProps, routerProps) {
	    var shouldUpdateScroll = this.props.shouldUpdateScroll;
	
	
	    var scrollPosition = void 0;
	    if (!shouldUpdateScroll) {
	      scrollPosition = true;
	    } else {
	      scrollPosition = shouldUpdateScroll.call(this.scrollBehavior, prevRouterProps, routerProps);
	    }
	
	    this.scrollBehavior.updateScroll(scrollPosition);
	  };
	
	  ScrollBehaviorContainer.prototype.render = function render() {
	    return this.props.children;
	  };
	
	  return ScrollBehaviorContainer;
	}(_react2.default.Component);
	
	ScrollBehaviorContainer.propTypes = {
	  shouldUpdateScroll: _react2.default.PropTypes.func,
	  routerProps: _react2.default.PropTypes.object.isRequired,
	  children: _react2.default.PropTypes.node.isRequired
	};
	exports.default = ScrollBehaviorContainer;
	module.exports = exports['default'];

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _off = __webpack_require__(227);
	
	var _off2 = _interopRequireDefault(_off);
	
	var _on = __webpack_require__(229);
	
	var _on2 = _interopRequireDefault(_on);
	
	var _scrollLeft = __webpack_require__(230);
	
	var _scrollLeft2 = _interopRequireDefault(_scrollLeft);
	
	var _scrollTop = __webpack_require__(232);
	
	var _scrollTop2 = _interopRequireDefault(_scrollTop);
	
	var _requestAnimationFrame = __webpack_require__(233);
	
	var _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);
	
	var _Actions = __webpack_require__(173);
	
	var _DOMStateStorage = __webpack_require__(177);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } /* eslint-disable no-underscore-dangle */
	
	// FIXME: Stop using this gross hack. This won't collide with any actual
	// history location keys, but it's dirty to sneakily use the same storage here.
	var KEY_PREFIX = 's/';
	
	// Try at most this many times to scroll, to avoid getting stuck.
	var MAX_SCROLL_ATTEMPTS = 2;
	
	var ScrollBehavior = function () {
	  function ScrollBehavior(history, getCurrentLocation) {
	    var _this = this;
	
	    _classCallCheck(this, ScrollBehavior);
	
	    this._onScroll = function () {
	      // It's possible that this scroll operation was triggered by what will be a
	      // `POP` transition. Instead of updating the saved location immediately, we
	      // have to enqueue the update, then potentially cancel it if we observe a
	      // location update.
	      if (_this._savePositionHandle === null) {
	        _this._savePositionHandle = (0, _requestAnimationFrame2.default)(_this._savePosition);
	      }
	
	      if (_this._scrollTarget) {
	        var _scrollTarget = _this._scrollTarget;
	        var xTarget = _scrollTarget[0];
	        var yTarget = _scrollTarget[1];
	
	        var x = (0, _scrollLeft2.default)(window);
	        var y = (0, _scrollTop2.default)(window);
	
	        if (x === xTarget && y === yTarget) {
	          _this._scrollTarget = null;
	          _this._cancelCheckScroll();
	        }
	      }
	    };
	
	    this._savePosition = function () {
	      _this._savePositionHandle = null;
	
	      // We have to directly update `DOMStateStorage`, because actually updating
	      // the location could cause e.g. React Router to re-render the entire page,
	      // which would lead to observably bad scroll performance.
	      (0, _DOMStateStorage.saveState)(_this._getKey(_this._getCurrentLocation()), [(0, _scrollLeft2.default)(window), (0, _scrollTop2.default)(window)]);
	    };
	
	    this._checkScrollPosition = function () {
	      _this._checkScrollHandle = null;
	
	      // We can only get here if scrollTarget is set. Every code path that unsets
	      // scroll target also cancels the handle to avoid calling this handler.
	      // Still, check anyway just in case.
	      /* istanbul ignore if: paranoid guard */
	      if (!_this._scrollTarget) {
	        return;
	      }
	
	      var _scrollTarget2 = _this._scrollTarget;
	      var x = _scrollTarget2[0];
	      var y = _scrollTarget2[1];
	
	      window.scrollTo(x, y);
	
	      ++_this._numScrollAttempts;
	
	      /* istanbul ignore if: paranoid guard */
	      if (_this._numScrollAttempts >= MAX_SCROLL_ATTEMPTS) {
	        _this._scrollTarget = null;
	        return;
	      }
	
	      _this._checkScrollHandle = (0, _requestAnimationFrame2.default)(_this._checkScrollPosition);
	    };
	
	    this._history = history;
	    this._getCurrentLocation = getCurrentLocation;
	
	    // This helps avoid some jankiness in fighting against the browser's
	    // default scroll behavior on `POP` transitions.
	    /* istanbul ignore if: not supported by any browsers on Travis */
	    if ('scrollRestoration' in window.history) {
	      this._oldScrollRestoration = window.history.scrollRestoration;
	      window.history.scrollRestoration = 'manual';
	    } else {
	      this._oldScrollRestoration = null;
	    }
	
	    this._savePositionHandle = null;
	    this._checkScrollHandle = null;
	    this._scrollTarget = null;
	    this._numScrollAttempts = 0;
	
	    // We have to listen to each scroll update rather than to just location
	    // updates, because some browsers will update scroll position before
	    // emitting the location change.
	    (0, _on2.default)(window, 'scroll', this._onScroll);
	
	    this._unlistenBefore = history.listenBefore(function () {
	      if (_this._savePositionHandle !== null) {
	        _requestAnimationFrame2.default.cancel(_this._savePositionHandle);
	        _this._savePositionHandle = null;
	      }
	    });
	  }
	
	  ScrollBehavior.prototype.stop = function stop() {
	    /* istanbul ignore if: not supported by any browsers on Travis */
	    if (this._oldScrollRestoration) {
	      window.history.scrollRestoration = this._oldScrollRestoration;
	    }
	
	    (0, _off2.default)(window, 'scroll', this._onScroll);
	    this._cancelCheckScroll();
	
	    this._unlistenBefore();
	  };
	
	  ScrollBehavior.prototype.updateScroll = function updateScroll(scrollPosition) {
	    // Whatever we were doing before isn't relevant any more.
	    this._cancelCheckScroll();
	
	    if (scrollPosition && !Array.isArray(scrollPosition)) {
	      this._scrollTarget = this._getDefaultScrollTarget();
	    } else {
	      this._scrollTarget = scrollPosition;
	    }
	
	    // Check the scroll position to see if we even need to scroll.
	    this._onScroll();
	
	    if (!this._scrollTarget) {
	      return;
	    }
	
	    this._numScrollAttempts = 0;
	    this._checkScrollPosition();
	  };
	
	  ScrollBehavior.prototype.readPosition = function readPosition(location) {
	    return (0, _DOMStateStorage.readState)(this._getKey(location));
	  };
	
	  ScrollBehavior.prototype._getKey = function _getKey(location) {
	    // Use fallback key when actual key is unavailable.
	    var key = location.key || this._history.createPath(location);
	
	    return '' + KEY_PREFIX + key;
	  };
	
	  ScrollBehavior.prototype._cancelCheckScroll = function _cancelCheckScroll() {
	    if (this._checkScrollHandle !== null) {
	      _requestAnimationFrame2.default.cancel(this._checkScrollHandle);
	      this._checkScrollHandle = null;
	    }
	  };
	
	  ScrollBehavior.prototype._getDefaultScrollTarget = function _getDefaultScrollTarget() {
	    var location = this._getCurrentLocation();
	    if (location.action === _Actions.PUSH) {
	      return [0, 0];
	    }
	
	    return this.readPosition(location) || [0, 0];
	  };
	
	  return ScrollBehavior;
	}();
	
	exports.default = ScrollBehavior;
	module.exports = exports['default'];

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(228);
	var off = function off() {};
	
	if (canUseDOM) {
	
	  off = (function () {
	
	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.removeEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.detachEvent('on' + eventName, handler);
	    };
	  })();
	}
	
	module.exports = off;

/***/ },
/* 228 */
/***/ function(module, exports) {

	'use strict';
	module.exports = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(228);
	var on = function on() {};
	
	if (canUseDOM) {
	  on = (function () {
	
	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.addEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.attachEvent('on' + eventName, handler);
	    };
	  })();
	}
	
	module.exports = on;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var getWindow = __webpack_require__(231);
	
	module.exports = function scrollTop(node, val) {
	  var win = getWindow(node);
	
	  if (val === undefined) return win ? 'pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft : node.scrollLeft;
	
	  if (win) win.scrollTo(val, 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop);else node.scrollLeft = val;
	};

/***/ },
/* 231 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function getWindow(node) {
	  return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
	};

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var getWindow = __webpack_require__(231);
	
	module.exports = function scrollTop(node, val) {
	  var win = getWindow(node);
	
	  if (val === undefined) return win ? 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop : node.scrollTop;
	
	  if (win) win.scrollTo('pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft, val);else node.scrollTop = val;
	};

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var canUseDOM = __webpack_require__(228);
	
	var vendors = ['', 'webkit', 'moz', 'o', 'ms'],
	    cancel = 'clearTimeout',
	    raf = fallback,
	    compatRaf;
	
	var getKey = function getKey(vendor, k) {
	  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';
	};
	
	if (canUseDOM) {
	  vendors.some(function (vendor) {
	    var rafKey = getKey(vendor, 'request');
	
	    if (rafKey in window) {
	      cancel = getKey(vendor, 'cancel');
	      return raf = function (cb) {
	        return window[rafKey](cb);
	      };
	    }
	  });
	}
	
	/* https://github.com/component/raf */
	var prev = new Date().getTime();
	
	function fallback(fn) {
	  var curr = new Date().getTime(),
	      ms = Math.max(0, 16 - (curr - prev)),
	      req = setTimeout(fn, ms);
	
	  prev = curr;
	  return req;
	}
	
	compatRaf = function (cb) {
	  return raf(cb);
	};
	compatRaf.cancel = function (id) {
	  return window[cancel](id);
	};
	
	module.exports = compatRaf;

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _last2 = __webpack_require__(235);
	
	var _last3 = _interopRequireDefault(_last2);
	
	var _sortBy2 = __webpack_require__(236);
	
	var _sortBy3 = _interopRequireDefault(_sortBy2);
	
	var _filter2 = __webpack_require__(360);
	
	var _filter3 = _interopRequireDefault(_filter2);
	
	var _gatsbyHelpers = __webpack_require__(363);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*  weak */
	
	
	module.exports = function (files, pagesReq) {
	  // Remove files that start with an underscore as this indicates
	  // the file shouldn't be turned into a page.
	  var pages = (0, _filter3.default)(files, function (file) {
	    return file.file.name.slice(0, 1) !== '_';
	  });
	  var templates = (0, _filter3.default)(files, function (file) {
	    return file.file.name === '_template';
	  });
	
	  var routes = {
	    path: (0, _gatsbyHelpers.prefixLink)('/'),
	    component: __webpack_require__(365),
	    childRoutes: [],
	    indexRoute: {},
	    pages: pages,
	    templates: templates
	  };
	  var notFound = null;
	  var templatesHash = {};
	  templatesHash.root = routes;
	  templatesHash['/'] = routes;
	
	  // Arrange pages in data structure according to their position
	  // on the file system. Then use this to create routes.
	  //
	  // Algorithm
	  // 1. Find all templates.
	  // 2. Create routes for each template russian-doll style.
	  // 3. For each index file paired with a template, create a default route
	  // 4. Create normal routes for each remaining file under the appropriate
	  // template
	  var templatesWithoutRoot = (0, _filter3.default)(files, function (file) {
	    return file.file.name === '_template' && file.file.dirname !== '';
	  });
	
	  // Find the parent template for each template file and create a route
	  // with it.
	  templatesWithoutRoot.forEach(function (templateFile) {
	    var parentTemplates = (0, _filter3.default)(templatesWithoutRoot, function (template) {
	      return templateFile.requirePath.indexOf(template.file.dirname) === 0;
	    });
	    // Sort parent templates by directory length. In cases
	    // where a template has multiple parents
	    // e.g. /_template.js/blog/_template.js/archive/_template.js
	    // we want to nest this template under its most immediate parent.
	    parentTemplates = (0, _sortBy3.default)(parentTemplates, function (template) {
	      if (template) {
	        return template.file.dirname.length;
	      } else {
	        return 0;
	      }
	    });
	    var parentTemplateFile = (0, _last3.default)(parentTemplates);
	    var parentRoute = void 0;
	    if (parentTemplateFile) {
	      parentRoute = templatesHash[parentTemplateFile.file.dirname];
	    }
	    if (!parentRoute) {
	      parentRoute = templatesHash.root;
	    }
	
	    // Create new route for the template.
	    var route = {
	      path: (0, _gatsbyHelpers.prefixLink)(templateFile.templatePath),
	      component: pagesReq('./' + templateFile.requirePath),
	      childRoutes: [],
	      indexRoute: {},
	      pages: pages,
	      templates: templates,
	      parentTemplateFile: parentTemplateFile
	    };
	
	    // Add route to the templates object for easy access.
	    templatesHash[templateFile.file.dirname] = route;
	
	    // Push new route onto its parent.
	    parentRoute.childRoutes.push(route);
	  });
	
	  var staticFileTypes = ['md', 'html', 'json', 'yaml', 'toml'];
	  var reactComponentFileTypes = ['js', 'jsx', 'cjsx'];
	  var wrappers = {};
	  staticFileTypes.forEach(function (type) {
	    try {
	      // $FlowIssue - https://github.com/facebook/flow/issues/1975
	      wrappers[type] = __webpack_require__(460)("./" + type);
	    } catch (e) {
	      // Ignore error.
	    }
	  });
	
	  pages.forEach(function (p) {
	    var page = p;
	    var handler = void 0;
	    if (staticFileTypes.indexOf(page.file.ext) !== -1) {
	      handler = wrappers[page.file.ext];
	      page.data = pagesReq('./' + page.requirePath);
	    } else if (reactComponentFileTypes.indexOf(page.file.ext) !== -1) {
	      handler = pagesReq('./' + page.requirePath);
	      page.data = function () {
	        if (pagesReq('./' + page.requirePath).metadata) {
	          return pagesReq('./' + page.requirePath).metadata();
	        } else {
	          return {};
	        }
	      }();
	    }
	
	    // Determine parent template for page.
	    var parentTemplates = (0, _filter3.default)(templatesWithoutRoot, function (templateFile) {
	      return page.requirePath.indexOf(templateFile.file.dirname) === 0;
	    });
	
	    var sortedParentTemplates = (0, _sortBy3.default)(parentTemplates, function (route) {
	      return route.file.dirname.length;
	    });
	
	    var parentTemplateFile = (0, _last3.default)(sortedParentTemplates);
	    var parentRoute = void 0;
	    if (parentTemplateFile) {
	      parentRoute = templatesHash[parentTemplateFile.file.dirname];
	    }
	
	    if (!parentRoute) {
	      parentRoute = templatesHash.root;
	    }
	
	    // If page is an index page *and* has the same path as its parentRoute,
	    // it is the index route (for that template).
	    if (page.file.name === 'index' && (0, _gatsbyHelpers.prefixLink)(page.path) === parentRoute.path) {
	      parentRoute.indexRoute = {
	        component: handler,
	        page: page,
	        pages: pages,
	        templates: templates,
	        parentTemplateFile: parentTemplateFile
	      };
	    } else {
	      parentRoute.childRoutes.push({
	        path: (0, _gatsbyHelpers.prefixLink)(page.path),
	        component: handler,
	        page: page,
	        pages: pages,
	        templates: templates,
	        parentTemplateFile: parentTemplateFile
	      });
	    }
	
	    if (page.path.indexOf('/404') !== -1) {
	      notFound = {
	        path: '*',
	        component: handler,
	        page: page,
	        pages: pages,
	        templates: templates,
	        parentTemplateFile: parentTemplateFile
	      };
	    }
	  });
	
	  if (notFound) {
	    routes.childRoutes.push(notFound);
	  }
	
	  return routes;
	};

/***/ },
/* 235 */
/***/ function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array ? array.length : 0;
	  return length ? array[length - 1] : undefined;
	}
	
	module.exports = last;


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(237),
	    baseOrderBy = __webpack_require__(253),
	    baseRest = __webpack_require__(357),
	    isIterateeCall = __webpack_require__(359);
	
	/**
	 * Creates an array of elements, sorted in ascending order by the results of
	 * running each element in a collection thru each iteratee. This method
	 * performs a stable sort, that is, it preserves the original sort order of
	 * equal elements. The iteratees are invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {...(Function|Function[])} [iteratees=[_.identity]]
	 *  The iteratees to sort by.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 36 },
	 *   { 'user': 'fred',   'age': 40 },
	 *   { 'user': 'barney', 'age': 34 }
	 * ];
	 *
	 * _.sortBy(users, function(o) { return o.user; });
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 *
	 * _.sortBy(users, ['user', 'age']);
	 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	 *
	 * _.sortBy(users, 'user', function(o) {
	 *   return Math.floor(o.age / 10);
	 * });
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 */
	var sortBy = baseRest(function(collection, iteratees) {
	  if (collection == null) {
	    return [];
	  }
	  var length = iteratees.length;
	  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	    iteratees = [];
	  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	    iteratees = [iteratees[0]];
	  }
	  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	});
	
	module.exports = sortBy;


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(238),
	    isFlattenable = __webpack_require__(239);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ },
/* 238 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(240),
	    isArguments = __webpack_require__(243),
	    isArray = __webpack_require__(252);
	
	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol])
	}
	
	module.exports = isFlattenable;


/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(241);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(242);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ },
/* 242 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(244);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	module.exports = isArguments;


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(245),
	    isObjectLike = __webpack_require__(251);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	var getLength = __webpack_require__(246),
	    isFunction = __webpack_require__(248),
	    isLength = __webpack_require__(250);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value)) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(247);
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a
	 * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	 * Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	module.exports = getLength;


/***/ },
/* 247 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	module.exports = baseProperty;


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(249);
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8 which returns 'object' for typed array and weak map constructors,
	  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	module.exports = isFunction;


/***/ },
/* 249 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ },
/* 250 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length,
	 *  else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ },
/* 251 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 252 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(254),
	    baseIteratee = __webpack_require__(255),
	    baseMap = __webpack_require__(348),
	    baseSortBy = __webpack_require__(354),
	    baseUnary = __webpack_require__(325),
	    compareMultiple = __webpack_require__(355),
	    identity = __webpack_require__(345);
	
	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  var index = -1;
	  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));
	
	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });
	
	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}
	
	module.exports = baseOrderBy;


/***/ },
/* 254 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(256),
	    baseMatchesProperty = __webpack_require__(331),
	    identity = __webpack_require__(345),
	    isArray = __webpack_require__(252),
	    property = __webpack_require__(346);
	
	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}
	
	module.exports = baseIteratee;


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(257),
	    getMatchData = __webpack_require__(328),
	    matchesStrictComparable = __webpack_require__(330);
	
	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}
	
	module.exports = baseMatches;


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(258),
	    baseIsEqual = __webpack_require__(295);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;
	
	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];
	
	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}
	
	module.exports = baseIsMatch;


/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(259),
	    stackClear = __webpack_require__(267),
	    stackDelete = __webpack_require__(268),
	    stackGet = __webpack_require__(269),
	    stackHas = __webpack_require__(270),
	    stackSet = __webpack_require__(271);
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	module.exports = Stack;


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(260),
	    listCacheDelete = __webpack_require__(261),
	    listCacheGet = __webpack_require__(264),
	    listCacheHas = __webpack_require__(265),
	    listCacheSet = __webpack_require__(266);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ },
/* 260 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}
	
	module.exports = listCacheClear;


/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(262);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(263);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ },
/* 263 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(262);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(262);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(262);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(259);
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}
	
	module.exports = stackClear;


/***/ },
/* 268 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}
	
	module.exports = stackDelete;


/***/ },
/* 269 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	module.exports = stackGet;


/***/ },
/* 270 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	module.exports = stackHas;


/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(259),
	    Map = __webpack_require__(272),
	    MapCache = __webpack_require__(280);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache) {
	    var pairs = cache.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      return this;
	    }
	    cache = this.__data__ = new MapCache(pairs);
	  }
	  cache.set(key, value);
	  return this;
	}
	
	module.exports = stackSet;


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(273),
	    root = __webpack_require__(241);
	
	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');
	
	module.exports = Map;


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(274),
	    getValue = __webpack_require__(279);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	module.exports = getNative;


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(248),
	    isHostObject = __webpack_require__(275),
	    isMasked = __webpack_require__(276),
	    isObject = __webpack_require__(249),
	    toSource = __webpack_require__(278);
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	module.exports = baseIsNative;


/***/ },
/* 275 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	module.exports = isHostObject;


/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(277);
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	module.exports = isMasked;


/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(241);
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	module.exports = coreJsData;


/***/ },
/* 278 */
/***/ function(module, exports) {

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	module.exports = toSource;


/***/ },
/* 279 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(281),
	    mapCacheDelete = __webpack_require__(289),
	    mapCacheGet = __webpack_require__(292),
	    mapCacheHas = __webpack_require__(293),
	    mapCacheSet = __webpack_require__(294);
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	module.exports = MapCache;


/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(282),
	    ListCache = __webpack_require__(259),
	    Map = __webpack_require__(272);
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	module.exports = mapCacheClear;


/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(283),
	    hashDelete = __webpack_require__(285),
	    hashGet = __webpack_require__(286),
	    hashHas = __webpack_require__(287),
	    hashSet = __webpack_require__(288);
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	module.exports = Hash;


/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(284);
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}
	
	module.exports = hashClear;


/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(273);
	
	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');
	
	module.exports = nativeCreate;


/***/ },
/* 285 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}
	
	module.exports = hashDelete;


/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(284);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	module.exports = hashGet;


/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(284);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}
	
	module.exports = hashHas;


/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(284);
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	module.exports = hashSet;


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(290);
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}
	
	module.exports = mapCacheDelete;


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(291);
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	module.exports = getMapData;


/***/ },
/* 291 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	module.exports = isKeyable;


/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(290);
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	module.exports = mapCacheGet;


/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(290);
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	module.exports = mapCacheHas;


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(290);
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}
	
	module.exports = mapCacheSet;


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(296),
	    isObject = __webpack_require__(249),
	    isObjectLike = __webpack_require__(251);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqual;


/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(258),
	    equalArrays = __webpack_require__(297),
	    equalByTag = __webpack_require__(302),
	    equalObjects = __webpack_require__(306),
	    getTag = __webpack_require__(317),
	    isArray = __webpack_require__(252),
	    isHostObject = __webpack_require__(275),
	    isTypedArray = __webpack_require__(323);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;
	
	  if (!objIsArr) {
	    objTag = getTag(object);
	    objTag = objTag == argsTag ? objectTag : objTag;
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    othTag = othTag == argsTag ? objectTag : othTag;
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	  }
	  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(298),
	    arraySome = __webpack_require__(301);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!seen.has(othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	              return seen.add(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, customizer, bitmask, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(280),
	    setCacheAdd = __webpack_require__(299),
	    setCacheHas = __webpack_require__(300);
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	module.exports = SetCache;


/***/ },
/* 299 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	module.exports = setCacheAdd;


/***/ },
/* 300 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	module.exports = setCacheHas;


/***/ },
/* 301 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(240),
	    Uint8Array = __webpack_require__(303),
	    eq = __webpack_require__(263),
	    equalArrays = __webpack_require__(297),
	    mapToArray = __webpack_require__(304),
	    setToArray = __webpack_require__(305);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= UNORDERED_COMPARE_FLAG;
	
	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	      stack['delete'](object);
	      return result;
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	module.exports = equalByTag;


/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(241);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ },
/* 304 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	module.exports = mapToArray;


/***/ },
/* 305 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	module.exports = setToArray;


/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(307),
	    keys = __webpack_require__(310);
	
	/** Used to compose bitmasks for comparison styles. */
	var PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : baseHas(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	var getPrototype = __webpack_require__(308);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	  // that are composed entirely of index properties, return `false` for
	  // `hasOwnProperty` checks of them.
	  return object != null &&
	    (hasOwnProperty.call(object, key) ||
	      (typeof object == 'object' && key in object && getPrototype(object) === null));
	}
	
	module.exports = baseHas;


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(309);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf;
	
	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	var getPrototype = overArg(nativeGetPrototype, Object);
	
	module.exports = getPrototype;


/***/ },
/* 309 */
/***/ function(module, exports) {

	/**
	 * Creates a function that invokes `func` with its first argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(307),
	    baseKeys = __webpack_require__(311),
	    indexKeys = __webpack_require__(312),
	    isArrayLike = __webpack_require__(245),
	    isIndex = __webpack_require__(315),
	    isPrototype = __webpack_require__(316);
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keys;


/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(309);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = Object.keys;
	
	/**
	 * The base implementation of `_.keys` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	var baseKeys = overArg(nativeKeys, Object);
	
	module.exports = baseKeys;


/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(313),
	    isArguments = __webpack_require__(243),
	    isArray = __webpack_require__(252),
	    isLength = __webpack_require__(250),
	    isString = __webpack_require__(314);
	
	/**
	 * Creates an array of index keys for `object` values of arrays,
	 * `arguments` objects, and strings, otherwise `null` is returned.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array|null} Returns index keys, else `null`.
	 */
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}
	
	module.exports = indexKeys;


/***/ },
/* 313 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	module.exports = baseTimes;


/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(252),
	    isObjectLike = __webpack_require__(251);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}
	
	module.exports = isString;


/***/ },
/* 315 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ },
/* 316 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	module.exports = isPrototype;


/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(318),
	    Map = __webpack_require__(272),
	    Promise = __webpack_require__(319),
	    Set = __webpack_require__(320),
	    WeakMap = __webpack_require__(321),
	    baseGetTag = __webpack_require__(322),
	    toSource = __webpack_require__(278);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';
	
	var dataViewTag = '[object DataView]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;
	
	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	module.exports = getTag;


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(273),
	    root = __webpack_require__(241);
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');
	
	module.exports = DataView;


/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(273),
	    root = __webpack_require__(241);
	
	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');
	
	module.exports = Promise;


/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(273),
	    root = __webpack_require__(241);
	
	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');
	
	module.exports = Set;


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(273),
	    root = __webpack_require__(241);
	
	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');
	
	module.exports = WeakMap;


/***/ },
/* 322 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * The base implementation of `getTag`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  return objectToString.call(value);
	}
	
	module.exports = baseGetTag;


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(324),
	    baseUnary = __webpack_require__(325),
	    nodeUtil = __webpack_require__(326);
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	module.exports = isTypedArray;


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	var isLength = __webpack_require__(250),
	    isObjectLike = __webpack_require__(251);
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}
	
	module.exports = baseIsTypedArray;


/***/ },
/* 325 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(242);
	
	/** Detect free variable `exports`. */
	var freeExports = freeGlobal && typeof exports == 'object' && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	module.exports = nodeUtil;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(327)(module)))

/***/ },
/* 327 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(329),
	    keys = __webpack_require__(310);
	
	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;
	
	  while (length--) {
	    var key = result[length],
	        value = object[key];
	
	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}
	
	module.exports = getMatchData;


/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(249);
	
	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}
	
	module.exports = isStrictComparable;


/***/ },
/* 330 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}
	
	module.exports = matchesStrictComparable;


/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(295),
	    get = __webpack_require__(332),
	    hasIn = __webpack_require__(342),
	    isKey = __webpack_require__(340),
	    isStrictComparable = __webpack_require__(329),
	    matchesStrictComparable = __webpack_require__(330),
	    toKey = __webpack_require__(341);
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	  };
	}
	
	module.exports = baseMatchesProperty;


/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(333);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(334),
	    isKey = __webpack_require__(340),
	    toKey = __webpack_require__(341);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = isKey(path, object) ? [path] : castPath(path);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(252),
	    stringToPath = __webpack_require__(335);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value) {
	  return isArray(value) ? value : stringToPath(value);
	}
	
	module.exports = castPath;


/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(336),
	    toString = __webpack_require__(337);
	
	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoize(function(string) {
	  var result = [];
	  toString(string).replace(rePropName, function(match, number, quote, string) {
	    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(280);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;
	
	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result);
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}
	
	// Assign cache to `_.memoize`.
	memoize.Cache = MapCache;
	
	module.exports = memoize;


/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(338);
	
	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	
	module.exports = toString;


/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(240),
	    isSymbol = __webpack_require__(339);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(251);
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}
	
	module.exports = isSymbol;


/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(252),
	    isSymbol = __webpack_require__(339);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(339);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(343),
	    hasPath = __webpack_require__(344);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ },
/* 343 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(334),
	    isArguments = __webpack_require__(243),
	    isArray = __webpack_require__(252),
	    isIndex = __webpack_require__(315),
	    isKey = __webpack_require__(340),
	    isLength = __webpack_require__(250),
	    isString = __webpack_require__(314),
	    toKey = __webpack_require__(341);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = isKey(path, object) ? [path] : castPath(path);
	
	  var result,
	      index = -1,
	      length = path.length;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result) {
	    return result;
	  }
	  var length = object ? object.length : 0;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isString(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ },
/* 345 */
/***/ function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(247),
	    basePropertyDeep = __webpack_require__(347),
	    isKey = __webpack_require__(340),
	    toKey = __webpack_require__(341);
	
	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}
	
	module.exports = property;


/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(333);
	
	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}
	
	module.exports = basePropertyDeep;


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(349),
	    isArrayLike = __webpack_require__(245);
	
	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];
	
	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}
	
	module.exports = baseMap;


/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(350),
	    createBaseEach = __webpack_require__(353);
	
	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);
	
	module.exports = baseEach;


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(351),
	    keys = __webpack_require__(310);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(352);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ },
/* 352 */
/***/ function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(245);
	
	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}
	
	module.exports = createBaseEach;


/***/ },
/* 354 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;
	
	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}
	
	module.exports = baseSortBy;


/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(356);
	
	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;
	
	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}
	
	module.exports = compareMultiple;


/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(339);
	
	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsDefined = value !== undefined,
	        valIsNull = value === null,
	        valIsReflexive = value === value,
	        valIsSymbol = isSymbol(value);
	
	    var othIsDefined = other !== undefined,
	        othIsNull = other === null,
	        othIsReflexive = other === other,
	        othIsSymbol = isSymbol(other);
	
	    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	        (valIsNull && othIsDefined && othIsReflexive) ||
	        (!valIsDefined && othIsReflexive) ||
	        !valIsReflexive) {
	      return 1;
	    }
	    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	        (othIsNull && valIsDefined && valIsReflexive) ||
	        (!othIsDefined && valIsReflexive) ||
	        !othIsReflexive) {
	      return -1;
	    }
	  }
	  return 0;
	}
	
	module.exports = compareAscending;


/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(358);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = baseRest;


/***/ },
/* 358 */
/***/ function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(263),
	    isArrayLike = __webpack_require__(245),
	    isIndex = __webpack_require__(315),
	    isObject = __webpack_require__(249);
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	module.exports = isIterateeCall;


/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(361),
	    baseFilter = __webpack_require__(362),
	    baseIteratee = __webpack_require__(255),
	    isArray = __webpack_require__(252);
	
	/**
	 * Iterates over elements of `collection`, returning an array of all elements
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * **Note:** Unlike `_.remove`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity]
	 *  The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @see _.reject
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * _.filter(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, { 'age': 36, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.filter(users, 'active');
	 * // => objects for ['barney']
	 */
	function filter(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, baseIteratee(predicate, 3));
	}
	
	module.exports = filter;


/***/ },
/* 361 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = arrayFilter;


/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(349);
	
	/**
	 * The base implementation of `_.filter` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function baseFilter(collection, predicate) {
	  var result = [];
	  baseEach(collection, function(value, index, collection) {
	    if (predicate(value, index, collection)) {
	      result.push(value);
	    }
	  });
	  return result;
	}
	
	module.exports = baseFilter;


/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _isString2 = __webpack_require__(314);
	
	var _isString3 = _interopRequireDefault(_isString2);
	
	var _config = __webpack_require__(364);
	
	var _invariant = __webpack_require__(170);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*  weak */
	
	
	function isDataURL(s) {
	  // Regex from https://gist.github.com/bgrins/6194623#gistcomment-1671744
	  // eslint-disable-next-line max-len
	  var regex = /^\s*data:([a-z]+\/[a-z0-9\-\+]+(;[a-z\-]+=[a-z0-9\-]+)?)?(;base64)?,[a-z0-9!\$&',\(\)\*\+,;=\-\._~:@\/\?%\s]*\s*$/i;
	  return !!s.match(regex);
	}
	
	// Function to add prefix to links.
	var prefixLink = function prefixLink(_link) {
	  if ("boolean" !== 'undefined' && (true) !== null && (true) && _config.config.linkPrefix !== null) {
	    var invariantMessage = '\n    You\'re trying to build your site with links prefixed\n    but you haven\'t set \'linkPrefix\' in your config.toml.\n    ';
	    (0, _invariant2.default)((0, _isString3.default)(_config.config.linkPrefix), invariantMessage);
	
	    // When url-loader is used with the limit option, some of images are encoded to
	    // base64 data url, this check prevent such links from being prefixed.
	    if (isDataURL(_link)) {
	      return _link;
	    } else {
	      return _config.config.linkPrefix + _link;
	    }
	  } else {
	    return _link;
	  }
	};
	
	module.exports = {
	  prefixLink: prefixLink
	};

/***/ },
/* 364 */
/***/ function(module, exports) {

	module.exports = {
		"config": {
			"linkPrefix": "/numenta-web",
			"siteHost": "Numenta.com",
			"siteTitle": "Numenta",
			"description": "Leading the New Era of Machine Intelligence",
			"contact": {
				"email": {
					"press": "press@numenta.com",
					"sales": "sales@numenta.com",
					"support": "support@numenta.com"
				},
				"phone": {
					"fax": "650-369-8283",
					"tel": "650-369-8282"
				}
			},
			"links": {
				"out": {
					"grokGet": "http://grokstream.com/#pricing",
					"geo": "https://github.com/numenta/nupic.geospatial",
					"geoPaper": "http://numenta.com/assets/pdf/whitepapers/Geospatial+Tracking+White+Paper.pdf",
					"htmstocksApp": "https://itunes.apple.com/us/app/htm-for-stocks/id1049429350?mt=8",
					"htmstocksPlay": "https://play.google.com/store/apps/details?id=com.numenta.taurus",
					"nabBiz": "http://numenta.com/assets/pdf/numenta-anomaly-benchmark/NAB-Business-Paper.pdf",
					"nabPaper": "http://arxiv.org/abs/1510.03336",
					"rogue": "https://github.com/numenta/nupic.rogue",
					"roguePaper": "http://numenta.com/assets/pdf/whitepapers/Rogue+Behavior+Detection+White+Paper.pdf",
					"license": "http://numenta.org/licenses/",
					"trial": "http://numenta.org/licenses/trial/",
					"cortical": "http://cortical.io",
					"grok": "http://grokstream.com/",
					"org": "http://numenta.org",
					"facebook": "https://www.facebook.com/pages/Numenta/321559142118?ref=br_tf",
					"linkedin": "https://www.linkedin.com/company/numenta",
					"map": "http://maps.google.com/maps?q=791+Middlefield+Road,+Redwood+City,+CA+94063",
					"twitter": "https://twitter.com/numenta",
					"youtube": "https://www.youtube.com/user/numenta"
				},
				"in": {
					"home": "/",
					"mission": "/mission-and-history/",
					"technology": "/technology-overview/",
					"opensource": "/open-source-project/",
					"applications": "/applications/",
					"benchmark": "/anomaly-detection-benchmark/",
					"partners": "/partners/",
					"business": "/business-strategy-and-ip/",
					"papers": "/papers-videos-and-more/",
					"careers": "/careers-team-and-contact/",
					"blog": "/blog/",
					"events": "/events/",
					"htmstocks": "/htm-for-stocks/",
					"htmstudio": "/htm-studio/",
					"nab": "/numenta-anomaly-benchmark/",
					"newsletter": "/newsletter/",
					"press": "/press/",
					"privacy": "/legal/privacy/",
					"sitemap": "/sitemap/",
					"terms": "/legal/terms/"
				},
				"anchor": {
					"mission": "#mission",
					"history": "#history",
					"htmstudio": "#htmstudio",
					"htmstocks": "#htmstocks",
					"grokit": "#grokit",
					"rogue": "#rogue",
					"geo": "#geo",
					"nlp": "#nlp",
					"cortical": "#cortical",
					"grok": "#grok",
					"transparency": "#transparency",
					"science": "#science",
					"deployment": "#deployment",
					"licenses": "#licenses",
					"faq": "#faq",
					"careers": "#careers",
					"team": "#team",
					"board": "#board",
					"contact": "#contact",
					"office": "#office",
					"follow": "#follow",
					"get": "#get"
				}
			}
		},
		"relativePath": "",
		"pages": [
			{
				"file": {
					"root": "",
					"dir": "",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "",
					"stem": "_Section",
					"path": "_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "",
					"base": "_template.jsx",
					"ext": "jsx",
					"name": "_template",
					"extname": ".jsx",
					"basename": "_template.jsx",
					"dirname": "",
					"stem": "_template",
					"path": "_template.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/_template.jsx",
					"isAbsolute": false
				},
				"requirePath": "_template.jsx",
				"templatePath": "//",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "",
					"base": "404.md",
					"ext": "md",
					"name": "404",
					"extname": ".md",
					"basename": "404.md",
					"dirname": "",
					"stem": "404",
					"path": "404.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/404.md",
					"isAbsolute": false
				},
				"requirePath": "404.md",
				"path": "/404/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "anomaly-detection-benchmark",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "anomaly-detection-benchmark",
					"stem": "_Section",
					"path": "anomaly-detection-benchmark/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/anomaly-detection-benchmark/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "anomaly-detection-benchmark/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "anomaly-detection-benchmark",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "anomaly-detection-benchmark",
					"stem": "index",
					"path": "anomaly-detection-benchmark/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/anomaly-detection-benchmark/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "anomaly-detection-benchmark/index.jsx",
				"path": "/anomaly-detection-benchmark/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "applications",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "applications",
					"stem": "_Section",
					"path": "applications/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/applications/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "applications/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "applications",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "applications",
					"stem": "index",
					"path": "applications/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/applications/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "applications/index.jsx",
				"path": "/applications/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2012/05/23",
					"base": "streams-and-lakes.md",
					"ext": "md",
					"name": "streams-and-lakes",
					"extname": ".md",
					"basename": "streams-and-lakes.md",
					"dirname": "blog/2012/05/23",
					"stem": "streams-and-lakes",
					"path": "blog/2012/05/23/streams-and-lakes.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2012/05/23/streams-and-lakes.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2012/05/23/streams-and-lakes.md",
				"path": "/blog/2012/05/23/streams-and-lakes/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "Today we hear so much about \"big data\" and the database tools you can use to sort through large amounts of data. However at Numenta we see a different future.",
					"date": "2012/05/23",
					"featured": false,
					"image": "../images/image.png",
					"org": "Founder",
					"title": "Streams and Lakes",
					"tags": "Machine Learning, Data, Neuroscience"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2012/06/04",
					"base": "how-is-groks-algorithm-different.md",
					"ext": "md",
					"name": "how-is-groks-algorithm-different",
					"extname": ".md",
					"basename": "how-is-groks-algorithm-different.md",
					"dirname": "blog/2012/06/04",
					"stem": "how-is-groks-algorithm-different",
					"path": "blog/2012/06/04/how-is-groks-algorithm-different.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2012/06/04/how-is-groks-algorithm-different.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2012/06/04/how-is-groks-algorithm-different.md",
				"path": "/blog/2012/06/04/how-is-groks-algorithm-different/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "There is a well known truism in machine learning, the \"No Free Lunch Theorem,\" which states that no algorithm is inherently better than any other algorithm.",
					"date": "2012/06/04",
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "Machine Learning",
					"title": "How is Grok's algorithm different?"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2012/08/27",
					"base": "the-problem-of-representation.md",
					"ext": "md",
					"name": "the-problem-of-representation",
					"extname": ".md",
					"basename": "the-problem-of-representation.md",
					"dirname": "blog/2012/08/27",
					"stem": "the-problem-of-representation",
					"path": "blog/2012/08/27/the-problem-of-representation.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2012/08/27/the-problem-of-representation.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2012/08/27/the-problem-of-representation.md",
				"path": "/blog/2012/08/27/the-problem-of-representation/",
				"data": {
					"author": "Rob Haitani",
					"brief": "Years ago, a retiring artificial intelligence researcher told Jeff Hawkins that \"one of biggest problems in AI--no, the only problem in AI--is the problem of representation.\" If the meaning of that statement isn't intuitively obvious",
					"date": "2012/08/27",
					"featured": false,
					"image": "../images/image.png",
					"org": "Marketing",
					"title": "The Problem of Representation",
					"tags": "Neuroscience, Machine Learning"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2012/09/06",
					"base": "big-datas-digital-nervous-system.md",
					"ext": "md",
					"name": "big-datas-digital-nervous-system",
					"extname": ".md",
					"basename": "big-datas-digital-nervous-system.md",
					"dirname": "blog/2012/09/06",
					"stem": "big-datas-digital-nervous-system",
					"path": "blog/2012/09/06/big-datas-digital-nervous-system.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2012/09/06/big-datas-digital-nervous-system.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2012/09/06/big-datas-digital-nervous-system.md",
				"path": "/blog/2012/09/06/big-datas-digital-nervous-system/",
				"data": {
					"author": "Rob Haitani",
					"brief": "But a major shift is underway. \"The arrival of the Internet and web has added a new dimension, bringing in an era of entirely digital business. Customer",
					"date": "2012/09/06",
					"featured": false,
					"image": "../images/image.png",
					"org": "Marketing",
					"tags": "Data",
					"title": "Big Data's Digital Nervous System"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2012/10/01",
					"base": "jeff-hawkins-speaks-at-berkeley.md",
					"ext": "md",
					"name": "jeff-hawkins-speaks-at-berkeley",
					"extname": ".md",
					"basename": "jeff-hawkins-speaks-at-berkeley.md",
					"dirname": "blog/2012/10/01",
					"stem": "jeff-hawkins-speaks-at-berkeley",
					"path": "blog/2012/10/01/jeff-hawkins-speaks-at-berkeley.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2012/10/01/jeff-hawkins-speaks-at-berkeley.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2012/10/01/jeff-hawkins-speaks-at-berkeley.md",
				"path": "/blog/2012/10/01/jeff-hawkins-speaks-at-berkeley/",
				"data": {
					"author": "Rob Haitani",
					"brief": "This week Jeff Hawkins will present two talks in the prestigious Berkeley Hitchcock Lectures series. We're proud of the recognition that Jeff's work has received in the academic community.",
					"date": "2012/10/01",
					"featured": false,
					"image": "../images/image.png",
					"org": "Marketing",
					"tags": "Neuroscience, Machine Learning",
					"title": "Jeff Hawkins speaks this week at Berkeley"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2012/10/07",
					"base": "wait-the-brain-is-a-bloom-filter.md",
					"ext": "md",
					"name": "wait-the-brain-is-a-bloom-filter",
					"extname": ".md",
					"basename": "wait-the-brain-is-a-bloom-filter.md",
					"dirname": "blog/2012/10/07",
					"stem": "wait-the-brain-is-a-bloom-filter",
					"path": "blog/2012/10/07/wait-the-brain-is-a-bloom-filter.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2012/10/07/wait-the-brain-is-a-bloom-filter.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2012/10/07/wait-the-brain-is-a-bloom-filter.md",
				"path": "/blog/2012/10/07/wait-the-brain-is-a-bloom-filter/",
				"data": {
					"author": "Ian Danforth",
					"brief": "This insightful tweet came from the Strangeloop keynote after Jeff Hawkins described Sparse Distributed Representations (SDRs). This isn't the first time",
					"date": "2012/10/07",
					"featured": false,
					"image": "../images/bloom-thumb.jpg",
					"org": "Engineering",
					"tags": "Neuroscience",
					"title": "Wait, the brain is a Bloom filter? - @petrillic"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2012/10/22",
					"base": "jeff-hawkins-at-strange-loop.md",
					"ext": "md",
					"name": "jeff-hawkins-at-strange-loop",
					"extname": ".md",
					"basename": "jeff-hawkins-at-strange-loop.md",
					"dirname": "blog/2012/10/22",
					"stem": "jeff-hawkins-at-strange-loop",
					"path": "blog/2012/10/22/jeff-hawkins-at-strange-loop.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2012/10/22/jeff-hawkins-at-strange-loop.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2012/10/22/jeff-hawkins-at-strange-loop.md",
				"path": "/blog/2012/10/22/jeff-hawkins-at-strange-loop/",
				"data": {
					"author": "Rob Haitani",
					"brief": "Jeff Hawkins recently gave a keynote address at Strange Loop 2012, a conference on diverse topics like emerging languages, alternative databases, concurrency and distributed systems.",
					"date": "2012/10/22",
					"featured": false,
					"image": "../images/image.png",
					"org": "Marketing",
					"tags": "Neuroscience, Machine Learning",
					"title": "Jeff Hawkins at Strange Loop"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2012/12/13",
					"base": "jeff-hawkins-on-skynet-vs-c3po.md",
					"ext": "md",
					"name": "jeff-hawkins-on-skynet-vs-c3po",
					"extname": ".md",
					"basename": "jeff-hawkins-on-skynet-vs-c3po.md",
					"dirname": "blog/2012/12/13",
					"stem": "jeff-hawkins-on-skynet-vs-c3po",
					"path": "blog/2012/12/13/jeff-hawkins-on-skynet-vs-c3po.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2012/12/13/jeff-hawkins-on-skynet-vs-c3po.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2012/12/13/jeff-hawkins-on-skynet-vs-c3po.md",
				"path": "/blog/2012/12/13/jeff-hawkins-on-skynet-vs-c3po/",
				"data": {
					"author": "Rob Haitani",
					"brief": "Will the future of machine intelligence lead to evil robots and a dystopian apocalypse?  Or robotic butlers and immortal carriers of our memories?  Berkeley",
					"date": "2012/12/13",
					"featured": false,
					"image": "../images/image.png",
					"org": "Marketing",
					"tags": "Machine Learning, Neuroscience",
					"title": "Jeff Hawkins on Skynet vs. C3PO"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/01/03",
					"base": "the-neuroscience-behind-grok.md",
					"ext": "md",
					"name": "the-neuroscience-behind-grok",
					"extname": ".md",
					"basename": "the-neuroscience-behind-grok.md",
					"dirname": "blog/2013/01/03",
					"stem": "the-neuroscience-behind-grok",
					"path": "blog/2013/01/03/the-neuroscience-behind-grok.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/01/03/the-neuroscience-behind-grok.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/01/03/the-neuroscience-behind-grok.md",
				"path": "/blog/2013/01/03/the-neuroscience-behind-grok/",
				"data": {
					"author": "Rob Haitani",
					"brief": "We modeled Grok after the human brain because the brain is a predictive modeling system.  This is the first post in a series describing what this",
					"date": "2013/01/03",
					"featured": false,
					"image": "../images/image.png",
					"org": "Marketing",
					"tags": "Neuroscience",
					"title": "The Neuroscience Behind Grok, Part 1"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/01/27",
					"base": "introducing-the-first-ever-sparse-football-pool.md",
					"ext": "md",
					"name": "introducing-the-first-ever-sparse-football-pool",
					"extname": ".md",
					"basename": "introducing-the-first-ever-sparse-football-pool.md",
					"dirname": "blog/2013/01/27",
					"stem": "introducing-the-first-ever-sparse-football-pool",
					"path": "blog/2013/01/27/introducing-the-first-ever-sparse-football-pool.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/01/27/introducing-the-first-ever-sparse-football-pool.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/01/27/introducing-the-first-ever-sparse-football-pool.md",
				"path": "/blog/2013/01/27/introducing-the-first-ever-sparse-football-pool/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "Did you ever think the Super Bowl could help you understand how your brain works? Numenta's core algorithm, the Cortical Learning Algorithmm (CLA) relies on the",
					"date": "2013/01/27",
					"featured": false,
					"image": "../images/image.jpg",
					"org": "VP Research",
					"tags": "Neuroscience, Machine Learning",
					"title": "Introducing the first ever Sparse Football Pool!"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/01/29",
					"base": "sparse-football-pool-winner.md",
					"ext": "md",
					"name": "sparse-football-pool-winner",
					"extname": ".md",
					"basename": "sparse-football-pool-winner.md",
					"dirname": "blog/2013/01/29",
					"stem": "sparse-football-pool-winner",
					"path": "blog/2013/01/29/sparse-football-pool-winner.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/01/29/sparse-football-pool-winner.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/01/29/sparse-football-pool-winner.md",
				"path": "/blog/2013/01/29/sparse-football-pool-winner/",
				"data": {
					"author": "Rob Haitani",
					"brief": "Thanks to everyone for participating in the Sparse Football Pool!  It was a tight race that, given the game, went down to the wire.  The winner had a total",
					"date": "2013/01/29",
					"featured": false,
					"image": "../images/image.jpg",
					"org": "Marketing",
					"tags": "Neuroscience, Machine Learning",
					"title": "Sparse Football Pool Winner"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/02/11",
					"base": "super-bowl-neuroscience.md",
					"ext": "md",
					"name": "super-bowl-neuroscience",
					"extname": ".md",
					"basename": "super-bowl-neuroscience.md",
					"dirname": "blog/2013/02/11",
					"stem": "super-bowl-neuroscience",
					"path": "blog/2013/02/11/super-bowl-neuroscience.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/02/11/super-bowl-neuroscience.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/02/11/super-bowl-neuroscience.md",
				"path": "/blog/2013/02/11/super-bowl-neuroscience/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "We promised to explain how the Sparse Football Pool relates to the brain, the CLA (Numenta's Cortical Learning Algorithm) and Intelligence.  The CLA relies on",
					"date": "2013/02/11",
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "Neuroscience, Machine Learning",
					"title": "Super Bowl Neuroscience"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/02/19",
					"base": "not-your-fathers-neural-network.md",
					"ext": "md",
					"name": "not-your-fathers-neural-network",
					"extname": ".md",
					"basename": "not-your-fathers-neural-network.md",
					"dirname": "blog/2013/02/19",
					"stem": "not-your-fathers-neural-network",
					"path": "blog/2013/02/19/not-your-fathers-neural-network.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/02/19/not-your-fathers-neural-network.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/02/19/not-your-fathers-neural-network.md",
				"path": "/blog/2013/02/19/not-your-fathers-neural-network/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "I am often asked, \"Is Numenta’s Cortical Learning Algorithm a neural network?\" The short answer to this question is \"Yes,\" but the problem with this short",
					"date": "2013/02/19",
					"featured": false,
					"image": "../images/main.jpg",
					"org": "Founder",
					"tags": "Machine Learning, Neuroscience",
					"title": "Not Your Father's Neural Network"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/03/04",
					"base": "brain-activity-map-project-arrives.md",
					"ext": "md",
					"name": "brain-activity-map-project-arrives",
					"extname": ".md",
					"basename": "brain-activity-map-project-arrives.md",
					"dirname": "blog/2013/03/04",
					"stem": "brain-activity-map-project-arrives",
					"path": "blog/2013/03/04/brain-activity-map-project-arrives.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/03/04/brain-activity-map-project-arrives.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/03/04/brain-activity-map-project-arrives.md",
				"path": "/blog/2013/03/04/brain-activity-map-project-arrives/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "Last month the Obama administration announced a new ten year $3B science initiative called the \"Brain Activity Map Project\" (BAM). The ultimate goal is",
					"date": "2013/03/04",
					"featured": false,
					"image": "../images/image.png",
					"org": "Founder",
					"tags": "Neuroscience",
					"title": "BAM! The Brain Activity Map Project arrives"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/04/02",
					"base": "numenta-and-complex-event-processing.md",
					"ext": "md",
					"name": "numenta-and-complex-event-processing",
					"extname": ".md",
					"basename": "numenta-and-complex-event-processing.md",
					"dirname": "blog/2013/04/02",
					"stem": "numenta-and-complex-event-processing",
					"path": "blog/2013/04/02/numenta-and-complex-event-processing.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/04/02/numenta-and-complex-event-processing.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/04/02/numenta-and-complex-event-processing.md",
				"path": "/blog/2013/04/02/numenta-and-complex-event-processing/",
				"data": {
					"author": "Joe Hayashi",
					"brief": "A question we get from time to time is, “How is Grok different from complex event processing systems?”  Like Grok, CEP systems are all about streaming data",
					"date": "2013/04/02",
					"featured": false,
					"image": "../images/image.jpg",
					"org": "Marketing",
					"tags": "Company, Data",
					"title": "Numenta and Complex Event Processing"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/04/11",
					"base": "the-online-learning-advantage.md",
					"ext": "md",
					"name": "the-online-learning-advantage",
					"extname": ".md",
					"basename": "the-online-learning-advantage.md",
					"dirname": "blog/2013/04/11",
					"stem": "the-online-learning-advantage",
					"path": "blog/2013/04/11/the-online-learning-advantage.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/04/11/the-online-learning-advantage.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/04/11/the-online-learning-advantage.md",
				"path": "/blog/2013/04/11/the-online-learning-advantage/",
				"data": {
					"author": "Rahul Agarwal",
					"brief": "Streaming data is the future of data. Businesses need real-time solutions that can keep up with the accelerating pace and scale of information they are",
					"date": "2013/04/11",
					"featured": false,
					"image": "../images/image.png",
					"org": "Engineering",
					"tags": "Machine Learning, Data",
					"title": "The Online Learning Advantage"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2013/05/01",
					"base": "the-neuroscience-behind-grok-part-2.md",
					"ext": "md",
					"name": "the-neuroscience-behind-grok-part-2",
					"extname": ".md",
					"basename": "the-neuroscience-behind-grok-part-2.md",
					"dirname": "blog/2013/05/01",
					"stem": "the-neuroscience-behind-grok-part-2",
					"path": "blog/2013/05/01/the-neuroscience-behind-grok-part-2.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2013/05/01/the-neuroscience-behind-grok-part-2.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2013/05/01/the-neuroscience-behind-grok-part-2.md",
				"path": "/blog/2013/05/01/the-neuroscience-behind-grok-part-2/",
				"data": {
					"author": "Rob Haitani",
					"brief": "Representations are patterns in a computer or a brain that represent something in the real world. They are building blocks to understanding our world, that",
					"date": "2013/05/01",
					"featured": false,
					"image": "../images/image.png",
					"org": "Marketing",
					"tags": "Neuroscience",
					"title": "The Neuroscience Behind Grok, Part 2"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/03/17",
					"base": "navigating-names-at-numenta.md",
					"ext": "md",
					"name": "navigating-names-at-numenta",
					"extname": ".md",
					"basename": "navigating-names-at-numenta.md",
					"dirname": "blog/2014/03/17",
					"stem": "navigating-names-at-numenta",
					"path": "blog/2014/03/17/navigating-names-at-numenta.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/03/17/navigating-names-at-numenta.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/03/17/navigating-names-at-numenta.md",
				"path": "/blog/2014/03/17/navigating-names-at-numenta/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "For a company that is launching its first product, we have an unusual number of terms and names, including Numenta, Grok, HTM, and NuPIC. This abundance of names reflects our unusual mission.",
					"date": "2014/03/17",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "numenta, name, change, grok",
					"title": "Navigating Names at Numenta"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/03/20",
					"base": "science-of-anomaly-detection.md",
					"ext": "md",
					"name": "science-of-anomaly-detection",
					"extname": ".md",
					"basename": "science-of-anomaly-detection.md",
					"dirname": "blog/2014/03/20",
					"stem": "science-of-anomaly-detection",
					"path": "blog/2014/03/20/science-of-anomaly-detection.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/03/20/science-of-anomaly-detection.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/03/20/science-of-anomaly-detection.md",
				"path": "/blog/2014/03/20/science-of-anomaly-detection/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "I’ve written a paper that explains how we have applied the science of the CLA to the technology of anomaly detection.  It illustrates how a simple-to-use product",
					"date": "2014/03/20",
					"featured": false,
					"image": "../images/image.png",
					"org": "Founder",
					"tags": "science, anomaly, detection, grok",
					"title": "The Science of Anomaly Detection"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/04/04",
					"base": "anomaly-of-the-week.md",
					"ext": "md",
					"name": "anomaly-of-the-week",
					"extname": ".md",
					"basename": "anomaly-of-the-week.md",
					"dirname": "blog/2014/04/04",
					"stem": "anomaly-of-the-week",
					"path": "blog/2014/04/04/anomaly-of-the-week.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/04/04/anomaly-of-the-week.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/04/04/anomaly-of-the-week.md",
				"path": "/blog/2014/04/04/anomaly-of-the-week/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "My smartphone buzzed: Grok had sent an alert. I know that with Grok it just takes a few seconds to check things out, so I clicked on the notification graph",
					"date": "2014/04/04",
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "science, anomaly, detection, grok, aws",
					"title": "Anomaly of the Week"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/04/22",
					"base": "caught-red-handed.md",
					"ext": "md",
					"name": "caught-red-handed",
					"extname": ".md",
					"basename": "caught-red-handed.md",
					"dirname": "blog/2014/04/22",
					"stem": "caught-red-handed",
					"path": "blog/2014/04/22/caught-red-handed.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/04/22/caught-red-handed.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/04/22/caught-red-handed.md",
				"path": "/blog/2014/04/22/caught-red-handed/",
				"data": {
					"author": "Jared Casner",
					"brief": "Like most engineering managers, I like to know when someone is manually touching one of our servers. That’s especially true for production systems, but also",
					"date": "2014/04/22",
					"featured": false,
					"image": "../images/image.png",
					"org": "Director, Product Development",
					"tags": "science, anomaly, detection, grok, aws",
					"title": "Caught Red Handed"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/07/15",
					"base": "detecting-anomalies-in-stock-volumes.md",
					"ext": "md",
					"name": "detecting-anomalies-in-stock-volumes",
					"extname": ".md",
					"basename": "detecting-anomalies-in-stock-volumes.md",
					"dirname": "blog/2014/07/15",
					"stem": "detecting-anomalies-in-stock-volumes",
					"path": "blog/2014/07/15/detecting-anomalies-in-stock-volumes.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/07/15/detecting-anomalies-in-stock-volumes.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/07/15/detecting-anomalies-in-stock-volumes.md",
				"path": "/blog/2014/07/15/detecting-anomalies-in-stock-volumes/",
				"data": {
					"author": "Viraj Sinha",
					"brief": "I decided to apply Grok and the Cortical Learning Algorithm to stock data: have the CLA learn patterns and alert me to anomalies. I decided to monitor volume",
					"date": "2014/07/15",
					"featured": false,
					"image": "../images/image.png",
					"org": "Summer Intern, Engineering",
					"tags": "anomaly, detection, stock, finance, volume",
					"title": "Detecting Anomalies in Stock Volumes"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/07/22",
					"base": "cleanup-on-asg-3.md",
					"ext": "md",
					"name": "cleanup-on-asg-3",
					"extname": ".md",
					"basename": "cleanup-on-asg-3.md",
					"dirname": "blog/2014/07/22",
					"stem": "cleanup-on-asg-3",
					"path": "blog/2014/07/22/cleanup-on-asg-3.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/07/22/cleanup-on-asg-3.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/07/22/cleanup-on-asg-3.md",
				"path": "/blog/2014/07/22/cleanup-on-asg-3/",
				"data": {
					"author": "Joe Block",
					"brief": "I saw a notification from Grok that our web server auto scaling group (ASG) was acting anomalously. At first I thought it was only because we were heavier",
					"date": "2014/07/22",
					"featured": false,
					"image": "../images/image.png",
					"org": "Site Reliability Engineer",
					"tags": "science, anomaly, detection, grok, aws",
					"title": "Cleanup on ASG 3"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/08/11",
					"base": "summer-internships-and-extensibility-of-htm.md",
					"ext": "md",
					"name": "summer-internships-and-extensibility-of-htm",
					"extname": ".md",
					"basename": "summer-internships-and-extensibility-of-htm.md",
					"dirname": "blog/2014/08/11",
					"stem": "summer-internships-and-extensibility-of-htm",
					"path": "blog/2014/08/11/summer-internships-and-extensibility-of-htm.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/08/11/summer-internships-and-extensibility-of-htm.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/08/11/summer-internships-and-extensibility-of-htm.md",
				"path": "/blog/2014/08/11/summer-internships-and-extensibility-of-htm/",
				"data": {
					"author": "Nick DeFalco",
					"brief": "On the other hand, HTM machine intelligence – like your brain – comprises a single underlying processing method that is extensible across a wide range of applications. Over the course of this summer alone, we have used our underlying",
					"date": "2014/08/11",
					"featured": false,
					"image": "../images/image.png",
					"org": "Marketing Intern",
					"tags": "summer internships hierarchical temporal memory htm extensible",
					"title": "Summer Internships and the Extensibility of HTM"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/08/18",
					"base": "progress-at-numenta.md",
					"ext": "md",
					"name": "progress-at-numenta",
					"extname": ".md",
					"basename": "progress-at-numenta.md",
					"dirname": "blog/2014/08/18",
					"stem": "progress-at-numenta",
					"path": "blog/2014/08/18/progress-at-numenta.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/08/18/progress-at-numenta.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/08/18/progress-at-numenta.md",
				"path": "/blog/2014/08/18/progress-at-numenta/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "Late last year we shipped our first product, Grok for IT Analytics on AWS. Since then, we’ve released several enhancements for the product, including the recent version 1.5 with a new web charting feature.",
					"date": "2014/08/18",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "progress numenta grok htm aws it analytics anomaly detection streaming data",
					"title": "Progress at Numenta"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/08/29",
					"base": "grok-for-managing-aws-cost-anomalies.md",
					"ext": "md",
					"name": "grok-for-managing-aws-cost-anomalies",
					"extname": ".md",
					"basename": "grok-for-managing-aws-cost-anomalies.md",
					"dirname": "blog/2014/08/29",
					"stem": "grok-for-managing-aws-cost-anomalies",
					"path": "blog/2014/08/29/grok-for-managing-aws-cost-anomalies.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/08/29/grok-for-managing-aws-cost-anomalies.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/08/29/grok-for-managing-aws-cost-anomalies.md",
				"path": "/blog/2014/08/29/grok-for-managing-aws-cost-anomalies/",
				"data": {
					"author": "Jared Weiss",
					"brief": "Using Grok's custom metrics, I sampled and fed AWS burnrate statistics into Grok for regional burnrates as well as instance counts. Since AWS instances vary in pricing, spinning up one EC2 I2-8xlarge instance could be just as much of a",
					"date": "2014/08/29",
					"featured": false,
					"image": "../images/image.png",
					"org": "Engineering Intern",
					"tags": "grok numenta managing aws amazon web services cost anomalies burn rate",
					"title": "Grok for Managing AWS Cost Anomalies"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/09/17",
					"base": "increasing-research-transparency.md",
					"ext": "md",
					"name": "increasing-research-transparency",
					"extname": ".md",
					"basename": "increasing-research-transparency.md",
					"dirname": "blog/2014/09/17",
					"stem": "increasing-research-transparency",
					"path": "blog/2014/09/17/increasing-research-transparency.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/09/17/increasing-research-transparency.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/09/17/increasing-research-transparency.md",
				"path": "/blog/2014/09/17/increasing-research-transparency/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "I am pleased to tell you about a change we recently made to our research process. We have made our day to day experimental code public. We've already released our commercial HTM algorithm code to the",
					"date": "2014/09/17",
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "increasing research transparency numenta nupic machine intelligence",
					"title": "Increasing Research Transparency"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/10/07",
					"base": "learning-through-active-exploration.md",
					"ext": "md",
					"name": "learning-through-active-exploration",
					"extname": ".md",
					"basename": "learning-through-active-exploration.md",
					"dirname": "blog/2014/10/07",
					"stem": "learning-through-active-exploration",
					"path": "blog/2014/10/07/learning-through-active-exploration.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/10/07/learning-through-active-exploration.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/10/07/learning-through-active-exploration.md",
				"path": "/blog/2014/10/07/learning-through-active-exploration/",
				"data": {
					"author": "Yuwei Cui",
					"brief": "At Numenta, we are working on a next-generation machine intelligence algorithm that learns complex patterns through active exploration. The stream of sensory inputs is actively generated by execution of a series of motor commands. We call",
					"date": "2014/10/07",
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Intern",
					"tags": "learning through active exploration numenta nupic sensorimotor learning prediciton",
					"title": "Learning Through Active Exploration"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2014/12/15",
					"base": "custom-burnrate-metric.md",
					"ext": "md",
					"name": "custom-burnrate-metric",
					"extname": ".md",
					"basename": "custom-burnrate-metric.md",
					"dirname": "blog/2014/12/15",
					"stem": "custom-burnrate-metric",
					"path": "blog/2014/12/15/custom-burnrate-metric.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2014/12/15/custom-burnrate-metric.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2014/12/15/custom-burnrate-metric.md",
				"path": "/blog/2014/12/15/custom-burnrate-metric/",
				"data": {
					"author": "Joe Block",
					"brief": "Using the burnrate custom metrics script with your Grok server",
					"date": "2014/12/15",
					"featured": false,
					"image": "../images/image.png",
					"org": "Site Reliability Engineer",
					"tags": "grok aws ec2 custom metrics burn rate numenta machine intelligence",
					"title": "Monitoring AWS EC2 Burnrate with Grok"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2015/01/22",
					"base": "introducing-sparse-football-pool-ii-super-bowl-xlix.md",
					"ext": "md",
					"name": "introducing-sparse-football-pool-ii-super-bowl-xlix",
					"extname": ".md",
					"basename": "introducing-sparse-football-pool-ii-super-bowl-xlix.md",
					"dirname": "blog/2015/01/22",
					"stem": "introducing-sparse-football-pool-ii-super-bowl-xlix",
					"path": "blog/2015/01/22/introducing-sparse-football-pool-ii-super-bowl-xlix.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2015/01/22/introducing-sparse-football-pool-ii-super-bowl-xlix.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2015/01/22/introducing-sparse-football-pool-ii-super-bowl-xlix.md",
				"path": "/blog/2015/01/22/introducing-sparse-football-pool-ii-super-bowl-xlix/",
				"data": {
					"author": "Numenta",
					"brief": "Around this time of year the US goes crazy over the Super Bowl. So be it, but did you ever think the Super Bowl could help you understand how your brain works? Well, it can!",
					"date": "2015/01/22",
					"featured": false,
					"image": "../images/image.jpg",
					"org": "Subutai Ahmad & Ryan McCall",
					"tags": "sparse football pool ii 2015 super bowl xlix sdr sparse distributed representation htm",
					"title": "Introducing Sparse Football Pool II"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2015/02/04",
					"base": "super-bowl-neuroscience-sparse-pool-ii-2015-results.md",
					"ext": "md",
					"name": "super-bowl-neuroscience-sparse-pool-ii-2015-results",
					"extname": ".md",
					"basename": "super-bowl-neuroscience-sparse-pool-ii-2015-results.md",
					"dirname": "blog/2015/02/04",
					"stem": "super-bowl-neuroscience-sparse-pool-ii-2015-results",
					"path": "blog/2015/02/04/super-bowl-neuroscience-sparse-pool-ii-2015-results.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2015/02/04/super-bowl-neuroscience-sparse-pool-ii-2015-results.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2015/02/04/super-bowl-neuroscience-sparse-pool-ii-2015-results.md",
				"path": "/blog/2015/02/04/super-bowl-neuroscience-sparse-pool-ii-2015-results/",
				"data": {
					"author": "Numenta",
					"brief": "This year’s Super Bowl between the New England Patriots and the Seattle Seahawks was a cliffhanger. In fact, the twists and turns in the last few minutes had a significant effect on our result",
					"date": "2015/02/04",
					"featured": false,
					"image": "../images/image.png",
					"org": "Subutai Ahmad & Ryan McCall",
					"tags": "super bowl xlix neuroscience 2015 machine learning numenta sparse football pool results",
					"title": "Super Bowl Neuroscience: Sparse Football Pool 2015 Results"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2015/06/02",
					"base": "nab-a-benchmark-for-streaming-anomaly-detection.md",
					"ext": "md",
					"name": "nab-a-benchmark-for-streaming-anomaly-detection",
					"extname": ".md",
					"basename": "nab-a-benchmark-for-streaming-anomaly-detection.md",
					"dirname": "blog/2015/06/02",
					"stem": "nab-a-benchmark-for-streaming-anomaly-detection",
					"path": "blog/2015/06/02/nab-a-benchmark-for-streaming-anomaly-detection.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2015/06/02/nab-a-benchmark-for-streaming-anomaly-detection.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2015/06/02/nab-a-benchmark-for-streaming-anomaly-detection.md",
				"path": "/blog/2015/06/02/nab-a-benchmark-for-streaming-anomaly-detection/",
				"data": {
					"author": "Alexander Lavin",
					"brief": "Data is in ever-increasing supply as sensors inhabit more and more of our world. Examples abound from health data tracked by pacemakers and fitness wearables, to temperature sensors",
					"date": "2015/06/02",
					"featured": false,
					"image": "../images/graph2.png",
					"org": "Software Engineer",
					"tags": "nab numenta anomaly benchmark streaming data detection realtime",
					"title": "NAB - A Benchmark for Streaming Anomaly Detection"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2015/07/01",
					"base": "winner-of-htm-contest-at-yale.md",
					"ext": "md",
					"name": "winner-of-htm-contest-at-yale",
					"extname": ".md",
					"basename": "winner-of-htm-contest-at-yale.md",
					"dirname": "blog/2015/07/01",
					"stem": "winner-of-htm-contest-at-yale",
					"path": "blog/2015/07/01/winner-of-htm-contest-at-yale.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2015/07/01/winner-of-htm-contest-at-yale.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2015/07/01/winner-of-htm-contest-at-yale.md",
				"path": "/blog/2015/07/01/winner-of-htm-contest-at-yale/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "This past month, Numenta sponsored a contest at Yale University, in collaboration with the Yale Entrepreneurial Institute, for a prize to create an application using our HTM technology.",
					"date": "2015/07/01",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "numenta htm hierarchical temporal memory app entrepreneur contest yale university",
					"title": "Winner of HTM Contest at Yale"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2015/08/15",
					"base": "numenta-licensing-update-agpl.md",
					"ext": "md",
					"name": "numenta-licensing-update-agpl",
					"extname": ".md",
					"basename": "numenta-licensing-update-agpl.md",
					"dirname": "blog/2015/08/15",
					"stem": "numenta-licensing-update-agpl",
					"path": "blog/2015/08/15/numenta-licensing-update-agpl.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2015/08/15/numenta-licensing-update-agpl.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2015/08/15/numenta-licensing-update-agpl.md",
				"path": "/blog/2015/08/15/numenta-licensing-update-agpl/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "In this post, I’d like to tell you about some changes and updates to our open source and commercial licensing strategy. First, effective today, we will be using the AGPL open source license instead of",
					"date": "2015/08/15",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "numenta licensing update switch agpl agplv3 open source free software machine intelligence htm hierarchical temporal memory streaming temporal data patterns anomaly outlier detection",
					"title": "Numenta Licensing Update and AGPLv3"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2015/09/29",
					"base": "introducing-the-numenta-htm-challenge.md",
					"ext": "md",
					"name": "introducing-the-numenta-htm-challenge",
					"extname": ".md",
					"basename": "introducing-the-numenta-htm-challenge.md",
					"dirname": "blog/2015/09/29",
					"stem": "introducing-the-numenta-htm-challenge",
					"path": "blog/2015/09/29/introducing-the-numenta-htm-challenge.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2015/09/29/introducing-the-numenta-htm-challenge.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2015/09/29/introducing-the-numenta-htm-challenge.md",
				"path": "/blog/2015/09/29/introducing-the-numenta-htm-challenge/",
				"data": {
					"author": "Matthew Taylor",
					"brief": "Numenta has held five hackathons over the past several years to engage our community of dedicated and passionate HTM enthusiasts. It's been a great time for lots of people involved. We've grown together and created some really interesting things!",
					"date": "2015/09/29",
					"featured": false,
					"image": "../images/image.png",
					"org": "Open Source Manager",
					"tags": "introducing numenta htm challenge hackathon nov 2015 onsite contest judging prizes jeff hawkins",
					"title": "Introducing the Numenta HTM Challenge"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2015/12/01",
					"base": "htm-challenge-2015-results.md",
					"ext": "md",
					"name": "htm-challenge-2015-results",
					"extname": ".md",
					"basename": "htm-challenge-2015-results.md",
					"dirname": "blog/2015/12/01",
					"stem": "htm-challenge-2015-results",
					"path": "blog/2015/12/01/htm-challenge-2015-results.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2015/12/01/htm-challenge-2015-results.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2015/12/01/htm-challenge-2015-results.md",
				"path": "/blog/2015/12/01/htm-challenge-2015-results/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "Earlier this month, we ran a contest for our developer community to use our algorithms on real world problems.  The contest, called the HTM Challenge, was conceived by Matt Taylor, our community flag-bearer, as a way to enable the",
					"date": "2015/12/01",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "numenta htm challenge 2015 results hierarchical temporal memory hackathon nupic open source project intelligent applications",
					"title": "Numenta HTM Challenge 2015 Results"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2016/01/11",
					"base": "machine-intelligence-machine-learning-deep-learning-artificial-intelligence.md",
					"ext": "md",
					"name": "machine-intelligence-machine-learning-deep-learning-artificial-intelligence",
					"extname": ".md",
					"basename": "machine-intelligence-machine-learning-deep-learning-artificial-intelligence.md",
					"dirname": "blog/2016/01/11",
					"stem": "machine-intelligence-machine-learning-deep-learning-artificial-intelligence",
					"path": "blog/2016/01/11/machine-intelligence-machine-learning-deep-learning-artificial-intelligence.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2016/01/11/machine-intelligence-machine-learning-deep-learning-artificial-intelligence.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2016/01/11/machine-intelligence-machine-learning-deep-learning-artificial-intelligence.md",
				"path": "/blog/2016/01/11/machine-intelligence-machine-learning-deep-learning-artificial-intelligence/",
				"data": {
					"author": "Numenta",
					"brief": "We are frequently asked how we distinguish our technology from others. This task is made difficult by the fact that there is not an agreed vocabulary; everybody uses the above terms (and other associated terms) differently",
					"date": "2016/01/11",
					"featured": false,
					"image": "../images/image.png",
					"org": "Jeff Hawkins & Donna Dubinsky",
					"tags": "numenta machine intelligence learning deep artificial ai htm brain neurons",
					"title": "What is Machine Intelligence vs. Machine Learning vs. Deep Learning vs. Artificial Intelligence (AI)?"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2016/01/14",
					"base": "and-the-award-goes-to.md",
					"ext": "md",
					"name": "and-the-award-goes-to",
					"extname": ".md",
					"basename": "and-the-award-goes-to.md",
					"dirname": "blog/2016/01/14",
					"stem": "and-the-award-goes-to",
					"path": "blog/2016/01/14/and-the-award-goes-to.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2016/01/14/and-the-award-goes-to.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2016/01/14/and-the-award-goes-to.md",
				"path": "/blog/2016/01/14/and-the-award-goes-to/",
				"data": {
					"author": "Christy Maver",
					"brief": "This morning, as Hollywood anxiously awaited to hear the nominees for this year’s Academy Awards, another set of winners was recognized – not for motion pictures, but for artificial intelligence.",
					"date": "2016/01/14",
					"featured": false,
					"image": "../images/image.png",
					"org": "Director of Marketing",
					"tags": "numenta AI awards artificial machine intelligence learning deep htm brain neurons nupic",
					"title": "And the award goes to"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2016/02/11",
					"base": "numenta-anomaly-benchmark-contest-ieee-wcci-2016.md",
					"ext": "md",
					"name": "numenta-anomaly-benchmark-contest-ieee-wcci-2016",
					"extname": ".md",
					"basename": "numenta-anomaly-benchmark-contest-ieee-wcci-2016.md",
					"dirname": "blog/2016/02/11",
					"stem": "numenta-anomaly-benchmark-contest-ieee-wcci-2016",
					"path": "blog/2016/02/11/numenta-anomaly-benchmark-contest-ieee-wcci-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2016/02/11/numenta-anomaly-benchmark-contest-ieee-wcci-2016.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2016/02/11/numenta-anomaly-benchmark-contest-ieee-wcci-2016.md",
				"path": "/blog/2016/02/11/numenta-anomaly-benchmark-contest-ieee-wcci-2016/",
				"data": {
					"author": "Taylor Wirfs",
					"brief": "We are excited to announce the Numenta Anomaly Benchmark (NAB) Competition! Last year, we released NAB, the first ever open-source benchmark for evaluating real-time anomaly detection algorithms. This year, we want to further expand NAB",
					"date": "2016/02/11",
					"featured": false,
					"hideImage": true,
					"image": "../images/image.png",
					"org": "Marketing",
					"tags": "numenta anomaly benchmark nab competition ieee wcci world congress computational intelligence 2016",
					"title": "The NAB Competition 2016"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2016/02/18",
					"base": "real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone.md",
					"ext": "md",
					"name": "real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone",
					"extname": ".md",
					"basename": "real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone.md",
					"dirname": "blog/2016/02/18",
					"stem": "real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone",
					"path": "blog/2016/02/18/real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2016/02/18/real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2016/02/18/real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone.md",
				"path": "/blog/2016/02/18/real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone/",
				"data": {
					"author": "Christy Maver",
					"brief": "While Numenta may not be in the business of selling traditional products, we are in the business of making our technology pervasive. To that end, we build sample applications that demonstrate the value of HTM",
					"date": "2016/02/18",
					"featured": false,
					"hideImage": true,
					"image": "../images/image.png",
					"org": "Director of Marketing",
					"tags": "htm for stocks iphone apple app store real time insights random walk hierarchical temporal memory",
					"title": "Real-time Insights from a Random Walk: HTM for Stocks Hits the iPhone"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2016/03/30",
					"base": "numenta-at-computational-and-systems-neuroscience-conference.md",
					"ext": "md",
					"name": "numenta-at-computational-and-systems-neuroscience-conference",
					"extname": ".md",
					"basename": "numenta-at-computational-and-systems-neuroscience-conference.md",
					"dirname": "blog/2016/03/30",
					"stem": "numenta-at-computational-and-systems-neuroscience-conference",
					"path": "blog/2016/03/30/numenta-at-computational-and-systems-neuroscience-conference.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2016/03/30/numenta-at-computational-and-systems-neuroscience-conference.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2016/03/30/numenta-at-computational-and-systems-neuroscience-conference.md",
				"path": "/blog/2016/03/30/numenta-at-computational-and-systems-neuroscience-conference/",
				"data": {
					"author": "Yuwei Cui",
					"brief": "Earlier this month, I attended the annual Computational and Systems Neuroscience meeting (Cosyne) in Salt Lake City. Cosyne is a peer reviewed scientific conference that brings experimental and theoretical neuroscientists together to exchange data and ideas.",
					"date": "2016/03/30",
					"featured": false,
					"hideImage": true,
					"image": "../images/image.png",
					"org": "Research Engineer",
					"tags": "numenta computational systems neuroscience conference",
					"title": "Numenta at the Computational and Systems Neuroscience Conference (COSYNE)"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog/2016/06/16",
					"base": "can-neuroscientists-understand-the-brain.md",
					"ext": "md",
					"name": "can-neuroscientists-understand-the-brain",
					"extname": ".md",
					"basename": "can-neuroscientists-understand-the-brain.md",
					"dirname": "blog/2016/06/16",
					"stem": "can-neuroscientists-understand-the-brain",
					"path": "blog/2016/06/16/can-neuroscientists-understand-the-brain.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/2016/06/16/can-neuroscientists-understand-the-brain.md",
					"isAbsolute": false
				},
				"requirePath": "blog/2016/06/16/can-neuroscientists-understand-the-brain.md",
				"path": "/blog/2016/06/16/can-neuroscientists-understand-the-brain/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "Eric Jonas and Konrad Kording just released a provocative paper, \"Could a neuroscientist understand a microprocessor?\". In their paper, they ask whether current neuroscience techniques could discover the operations of a simple microprocessor.",
					"date": "2016/06/16",
					"featured": false,
					"hideImage": false,
					"image": "../images/image.png",
					"org": "VP of Research",
					"tags": "neuroscientist understand microprocessor",
					"title": "Can Neuroscientists Understand the Brain?"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "blog",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "blog",
					"stem": "index",
					"path": "blog/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/blog/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "blog/index.jsx",
				"path": "/blog/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "brains-and-machine-intelligence",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "brains-and-machine-intelligence",
					"stem": "index",
					"path": "brains-and-machine-intelligence/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/brains-and-machine-intelligence/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "brains-and-machine-intelligence/index.jsx",
				"path": "/brains-and-machine-intelligence/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "business-strategy-and-ip",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "business-strategy-and-ip",
					"stem": "_Section",
					"path": "business-strategy-and-ip/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/business-strategy-and-ip/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "business-strategy-and-ip/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "business-strategy-and-ip",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "business-strategy-and-ip",
					"stem": "index",
					"path": "business-strategy-and-ip/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/business-strategy-and-ip/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "business-strategy-and-ip/index.jsx",
				"path": "/business-strategy-and-ip/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "careers-team-and-contact",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "careers-team-and-contact",
					"stem": "_Section",
					"path": "careers-team-and-contact/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/careers-team-and-contact/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "careers-team-and-contact/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "careers-team-and-contact/careers",
					"base": "internship-program.md",
					"ext": "md",
					"name": "internship-program",
					"extname": ".md",
					"basename": "internship-program.md",
					"dirname": "careers-team-and-contact/careers",
					"stem": "internship-program",
					"path": "careers-team-and-contact/careers/internship-program.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/careers-team-and-contact/careers/internship-program.md",
					"isAbsolute": false
				},
				"requirePath": "careers-team-and-contact/careers/internship-program.md",
				"path": "/careers-team-and-contact/careers/internship-program/",
				"data": {
					"anchor": "careers-intern",
					"date": "2014/01/01",
					"email": "interns@numenta.com",
					"sort": 9,
					"title": "Internship Program"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "careers-team-and-contact/careers",
					"base": "research-internship.md",
					"ext": "md",
					"name": "research-internship",
					"extname": ".md",
					"basename": "research-internship.md",
					"dirname": "careers-team-and-contact/careers",
					"stem": "research-internship",
					"path": "careers-team-and-contact/careers/research-internship.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/careers-team-and-contact/careers/research-internship.md",
					"isAbsolute": false
				},
				"requirePath": "careers-team-and-contact/careers/research-internship.md",
				"path": "/careers-team-and-contact/careers/research-internship/",
				"data": {
					"anchor": "careers-research-intern",
					"date": "2016/01/22",
					"email": "interns@numenta.com",
					"sort": 1,
					"title": "Research Internship"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "careers-team-and-contact",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "careers-team-and-contact",
					"stem": "index",
					"path": "careers-team-and-contact/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/careers-team-and-contact/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "careers-team-and-contact/index.jsx",
				"path": "/careers-team-and-contact/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "careers-team-and-contact",
					"base": "thanks.md",
					"ext": "md",
					"name": "thanks",
					"extname": ".md",
					"basename": "thanks.md",
					"dirname": "careers-team-and-contact",
					"stem": "thanks",
					"path": "careers-team-and-contact/thanks.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/careers-team-and-contact/thanks.md",
					"isAbsolute": false
				},
				"requirePath": "careers-team-and-contact/thanks.md",
				"path": "/careers-team-and-contact/thanks/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/03/26",
					"base": "amazon-web-services-summit-sf.md",
					"ext": "md",
					"name": "amazon-web-services-summit-sf",
					"extname": ".md",
					"basename": "amazon-web-services-summit-sf.md",
					"dirname": "events/2014/03/26",
					"stem": "amazon-web-services-summit-sf",
					"path": "events/2014/03/26/amazon-web-services-summit-sf.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/03/26/amazon-web-services-summit-sf.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/03/26/amazon-web-services-summit-sf.md",
				"path": "/events/2014/03/26/amazon-web-services-summit-sf/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2014/03/26",
					"event": {
						"when": {
							"begin": "2014/03/26",
							"end": "2014/03/26"
						},
						"where": {
							"desc": "Moscone Center Booth 100",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "https://aws.amazon.com/aws-summit-2014/san-francisco/"
						}
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Event",
					"tags": "grok it analytics aws amazon web services summit sf san francisco 2014",
					"title": "AWS Summit San Francisco"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/05/03",
					"base": "nupic-spring-2014-hackathon.md",
					"ext": "md",
					"name": "nupic-spring-2014-hackathon",
					"extname": ".md",
					"basename": "nupic-spring-2014-hackathon.md",
					"dirname": "events/2014/05/03",
					"stem": "nupic-spring-2014-hackathon",
					"path": "events/2014/05/03/nupic-spring-2014-hackathon.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/05/03/nupic-spring-2014-hackathon.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/05/03/nupic-spring-2014-hackathon.md",
				"path": "/events/2014/05/03/nupic-spring-2014-hackathon/",
				"data": {
					"author": "Matthew Taylor",
					"brief": null,
					"date": "2014/05/03",
					"event": {
						"when": {
							"begin": "2014/05/03",
							"end": "2014/05/04"
						},
						"where": {
							"desc": "Pinger, Inc.",
							"city": "San Jose",
							"state": "CA",
							"country": "USA",
							"web": "http://numenta.org/events.html#nupic_spring_2014_hackathon"
						}
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Open Source Manager",
					"tags": "nupic spring 2014 hackathon numenta platform for intelligent computing open source",
					"title": "NuPIC Spring 2014 Hackathon"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/05/05",
					"base": "grok-for-it-analytics-at-monitorama.md",
					"ext": "md",
					"name": "grok-for-it-analytics-at-monitorama",
					"extname": ".md",
					"basename": "grok-for-it-analytics-at-monitorama.md",
					"dirname": "events/2014/05/05",
					"stem": "grok-for-it-analytics-at-monitorama",
					"path": "events/2014/05/05/grok-for-it-analytics-at-monitorama.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/05/05/grok-for-it-analytics-at-monitorama.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/05/05/grok-for-it-analytics-at-monitorama.md",
				"path": "/events/2014/05/05/grok-for-it-analytics-at-monitorama/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2014/05/05",
					"event": {
						"when": {
							"begin": "2014/05/05",
							"end": "2014/05/07"
						},
						"where": {
							"desc": "Gerding Theater at the Armory",
							"city": "Portland",
							"state": "OR",
							"country": "USA",
							"web": "http://monitorama.com/"
						}
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Event",
					"tags": "grok it analytics monitorama 2014",
					"title": "Monitorama"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/07/09",
					"base": "amazon-web-services-summit-ny.md",
					"ext": "md",
					"name": "amazon-web-services-summit-ny",
					"extname": ".md",
					"basename": "amazon-web-services-summit-ny.md",
					"dirname": "events/2014/07/09",
					"stem": "amazon-web-services-summit-ny",
					"path": "events/2014/07/09/amazon-web-services-summit-ny.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/07/09/amazon-web-services-summit-ny.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/07/09/amazon-web-services-summit-ny.md",
				"path": "/events/2014/07/09/amazon-web-services-summit-ny/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2014/07/09",
					"event": {
						"when": {
							"begin": "2014/07/09",
							"end": "2014/07/10"
						},
						"where": {
							"desc": "Javits Center",
							"city": "New York",
							"state": "NY",
							"country": "USA",
							"web": "https://aws.amazon.com/aws-summit-2014/"
						}
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Event",
					"tags": "grok it analytics aws amazon web services summit ny 2014",
					"title": "AWS Summit New York"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/08/20",
					"base": "cognitive-computing-forum.md",
					"ext": "md",
					"name": "cognitive-computing-forum",
					"extname": ".md",
					"basename": "cognitive-computing-forum.md",
					"dirname": "events/2014/08/20",
					"stem": "cognitive-computing-forum",
					"path": "events/2014/08/20/cognitive-computing-forum.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/08/20/cognitive-computing-forum.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/08/20/cognitive-computing-forum.md",
				"path": "/events/2014/08/20/cognitive-computing-forum/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": null,
					"date": "2014/08/20",
					"event": {
						"what": "Understanding Cortical Principles and Building Intelligent Machines",
						"when": {
							"begin": "2014/08/20 15:10",
							"end": "2014/08/20 15:10"
						},
						"where": {
							"desc": "Sainte Claire Hotel",
							"city": "San Jose",
							"state": "CA",
							"country": "USA",
							"web": "http://www.cognitivecomputingforum.com/"
						},
						"who": "Subutai Ahmad",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "numenta grok cognitive computing forum san jose 2014",
					"title": "Cognitive Computing Forum"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/10/02",
					"base": "brainscales-neuromorphic-computing-conference.md",
					"ext": "md",
					"name": "brainscales-neuromorphic-computing-conference",
					"extname": ".md",
					"basename": "brainscales-neuromorphic-computing-conference.md",
					"dirname": "events/2014/10/02",
					"stem": "brainscales-neuromorphic-computing-conference",
					"path": "events/2014/10/02/brainscales-neuromorphic-computing-conference.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/10/02/brainscales-neuromorphic-computing-conference.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/10/02/brainscales-neuromorphic-computing-conference.md",
				"path": "/events/2014/10/02/brainscales-neuromorphic-computing-conference/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": null,
					"date": "2014/10/02",
					"event": {
						"what": "Modeling Cortical Layers",
						"when": {
							"begin": "2014/10/02",
							"end": "2014/10/02"
						},
						"where": {
							"desc": "Kirchhoff Institute for Physics",
							"city": "Heidelberg",
							"state": "Baden-Württemberg",
							"country": "Germany",
							"web": "https://brainscales.kip.uni-heidelberg.de/"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-founder",
					"tags": "brainscales neuromorphic computing conference jeff hawkins model cortical layers",
					"title": "Frontiers in Neuromorphic Computing Conference"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/10/15",
					"base": "advanced-aws-meetup.md",
					"ext": "md",
					"name": "advanced-aws-meetup",
					"extname": ".md",
					"basename": "advanced-aws-meetup.md",
					"dirname": "events/2014/10/15",
					"stem": "advanced-aws-meetup",
					"path": "events/2014/10/15/advanced-aws-meetup.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/10/15/advanced-aws-meetup.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/10/15/advanced-aws-meetup.md",
				"path": "/events/2014/10/15/advanced-aws-meetup/",
				"data": {
					"ignored": true,
					"author": "Scott Purdy",
					"brief": null,
					"date": "2014/10/15",
					"event": {
						"what": "Building an Anomaly Service for AWS",
						"when": {
							"begin": "2014/10/15",
							"end": "2014/10/15"
						},
						"where": {
							"desc": "AirBnB",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA"
						},
						"who": "Scott Purdy",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Engineering Manager",
					"tags": "numenta grok event advanced aws meetup lightning talk anomlay service",
					"title": "Advanced AWS Meetup Lightning Talk"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/10/17",
					"base": "numenta-training-workshop.md",
					"ext": "md",
					"name": "numenta-training-workshop",
					"extname": ".md",
					"basename": "numenta-training-workshop.md",
					"dirname": "events/2014/10/17",
					"stem": "numenta-training-workshop",
					"path": "events/2014/10/17/numenta-training-workshop.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/10/17/numenta-training-workshop.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/10/17/numenta-training-workshop.md",
				"path": "/events/2014/10/17/numenta-training-workshop/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2014/10/17",
					"event": {
						"when": {
							"begin": "2014/10/17",
							"end": "2014/10/17"
						},
						"where": {
							"desc": "Numenta",
							"city": "Redwood City",
							"state": "CA",
							"country": "USA",
							"web": "https://www.eventbrite.com/e/numenta-training-workshop-registration-12898835765"
						}
					},
					"featured": true,
					"image": "../images/image.png",
					"org": "Event",
					"tags": "numenta training workshop htm hierarchical temporal memory october 2014",
					"title": "Numenta Training Workshop"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/10/18",
					"base": "nupic-fall-2014-hackathon.md",
					"ext": "md",
					"name": "nupic-fall-2014-hackathon",
					"extname": ".md",
					"basename": "nupic-fall-2014-hackathon.md",
					"dirname": "events/2014/10/18",
					"stem": "nupic-fall-2014-hackathon",
					"path": "events/2014/10/18/nupic-fall-2014-hackathon.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/10/18/nupic-fall-2014-hackathon.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/10/18/nupic-fall-2014-hackathon.md",
				"path": "/events/2014/10/18/nupic-fall-2014-hackathon/",
				"data": {
					"author": "Matthew Taylor",
					"brief": null,
					"date": "2014/10/18",
					"event": {
						"when": {
							"begin": "2014-10-18 10:00",
							"end": "2014-10-19 18:00"
						},
						"where": {
							"desc": "Pinger Inc",
							"city": "San Jose",
							"state": "CA",
							"country": "USA",
							"web": "http://numenta.org/events.html#nupic_fall_2014_hackathon"
						}
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Open Source Manager",
					"tags": "nupic numenta platform intelligent computing fall 2014 hackathon san jose california",
					"title": "NuPIC Fall 2014 Hackathon"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/10/30",
					"base": "ibm-research-cognitive-systems-colloquium.md",
					"ext": "md",
					"name": "ibm-research-cognitive-systems-colloquium",
					"extname": ".md",
					"basename": "ibm-research-cognitive-systems-colloquium.md",
					"dirname": "events/2014/10/30",
					"stem": "ibm-research-cognitive-systems-colloquium",
					"path": "events/2014/10/30/ibm-research-cognitive-systems-colloquium.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/10/30/ibm-research-cognitive-systems-colloquium.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/10/30/ibm-research-cognitive-systems-colloquium.md",
				"path": "/events/2014/10/30/ibm-research-cognitive-systems-colloquium/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": null,
					"date": "2014/10/30",
					"event": {
						"what": "What the Brain Can Tell Us About the Future of Computing",
						"when": {
							"begin": "2014/10/30",
							"end": "2014/10/30"
						},
						"where": {
							"desc": "T.J. Watson Research Center",
							"city": "Yorktown Heights",
							"state": "NY",
							"country": "USA"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-Founder",
					"tags": "ibm research cognitive systems colloquium jeff hawkins numenta machine intelligence cognitive computing",
					"title": "IBM Research Cognitive Systems Colloquium"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/11/11",
					"base": "AWS-reInvent.md",
					"ext": "md",
					"name": "AWS-reInvent",
					"extname": ".md",
					"basename": "AWS-reInvent.md",
					"dirname": "events/2014/11/11",
					"stem": "AWS-reInvent",
					"path": "events/2014/11/11/AWS-reInvent.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/11/11/AWS-reInvent.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/11/11/AWS-reInvent.md",
				"path": "/events/2014/11/11/AWS-reInvent/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2014/11/11",
					"event": {
						"when": {
							"begin": "2014/11/11",
							"end": "2014/11/13"
						},
						"where": {
							"desc": "The Venetian, Booth 648",
							"city": "Las Vegas",
							"state": "NV",
							"country": "USA",
							"web": "https://reinvent.awsevents.com/"
						}
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Event",
					"tags": "grok it analytics aws reinvent 2014",
					"title": "AWS re:Invent"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2014/12/04",
					"base": "sv-forum-ihuman-the-future-of-minds-and-machines.md",
					"ext": "md",
					"name": "sv-forum-ihuman-the-future-of-minds-and-machines",
					"extname": ".md",
					"basename": "sv-forum-ihuman-the-future-of-minds-and-machines.md",
					"dirname": "events/2014/12/04",
					"stem": "sv-forum-ihuman-the-future-of-minds-and-machines",
					"path": "events/2014/12/04/sv-forum-ihuman-the-future-of-minds-and-machines.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2014/12/04/sv-forum-ihuman-the-future-of-minds-and-machines.md",
					"isAbsolute": false
				},
				"requirePath": "events/2014/12/04/sv-forum-ihuman-the-future-of-minds-and-machines.md",
				"path": "/events/2014/12/04/sv-forum-ihuman-the-future-of-minds-and-machines/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": null,
					"date": "2014/12/04",
					"event": {
						"when": {
							"begin": "2014/12/04 14:00",
							"end": "2014/12/04 19:30"
						},
						"where": {
							"desc": "Hero City at Draper University",
							"city": "San Mateo",
							"state": "CA",
							"country": "USA",
							"web": "http://svforum.org/Education-Tech-Conference/iHuman-Future-Minds-and-Machines"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-Founder",
					"tags": "sv silicon valley forum ihuman future of minds and machines jeff hawkins numenta machine intelligence",
					"title": "SV Forum iHuman - The Future of Minds and Machines"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/02/17",
					"base": "strata-hadoop-world.md",
					"ext": "md",
					"name": "strata-hadoop-world",
					"extname": ".md",
					"basename": "strata-hadoop-world.md",
					"dirname": "events/2015/02/17",
					"stem": "strata-hadoop-world",
					"path": "events/2015/02/17/strata-hadoop-world.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/02/17/strata-hadoop-world.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/02/17/strata-hadoop-world.md",
				"path": "/events/2015/02/17/strata-hadoop-world/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": null,
					"date": "2015/02/17",
					"event": {
						"what": "Streaming Analytics - It’s Not The Same Game",
						"when": {
							"begin": "2015/02/17",
							"end": "2015/02/20"
						},
						"where": {
							"desc": "San Jose Convention Center",
							"city": "San Jose",
							"state": "CA",
							"country": "USA",
							"web": "http://strataconf.com/big-data-conference-ca-2015/public/schedule/detail/38703"
						},
						"who": "Subutai Ahmad",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "strata hadoop world big data subutai ahmad numenta machine intelligence streaming analytics",
					"title": "Strata + Hadoop World 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/02/23",
					"base": "sandia-national-labs-neuro-computational-workshop-2015.md",
					"ext": "md",
					"name": "sandia-national-labs-neuro-computational-workshop-2015",
					"extname": ".md",
					"basename": "sandia-national-labs-neuro-computational-workshop-2015.md",
					"dirname": "events/2015/02/23",
					"stem": "sandia-national-labs-neuro-computational-workshop-2015",
					"path": "events/2015/02/23/sandia-national-labs-neuro-computational-workshop-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/02/23/sandia-national-labs-neuro-computational-workshop-2015.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/02/23/sandia-national-labs-neuro-computational-workshop-2015.md",
				"path": "/events/2015/02/23/sandia-national-labs-neuro-computational-workshop-2015/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": null,
					"date": "2015/02/23",
					"event": {
						"when": {
							"begin": "2015/02/23",
							"end": "2015/02/25"
						},
						"where": {
							"desc": "Hyatt Regency Tamaya",
							"city": "Santa Ana Pueblo",
							"state": "NM",
							"country": "USA",
							"web": "http://nice.sandia.gov/"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-Founder",
					"tags": "numenta jeff hawkins speaking sandia national laboratories neuro inspired computational elements workshop 2015",
					"title": "Sandia National Laboratories Neuro-Inspired Computational Elements Workshop 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/03/05",
					"base": "cosyne-computational-systems-neuroscience-2015.md",
					"ext": "md",
					"name": "cosyne-computational-systems-neuroscience-2015",
					"extname": ".md",
					"basename": "cosyne-computational-systems-neuroscience-2015.md",
					"dirname": "events/2015/03/05",
					"stem": "cosyne-computational-systems-neuroscience-2015",
					"path": "events/2015/03/05/cosyne-computational-systems-neuroscience-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/03/05/cosyne-computational-systems-neuroscience-2015.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/03/05/cosyne-computational-systems-neuroscience-2015.md",
				"path": "/events/2015/03/05/cosyne-computational-systems-neuroscience-2015/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": null,
					"date": "2015/03/05",
					"event": {
						"what": "Maintaining Stable Perception During Active Exploration",
						"when": {
							"begin": "2015/03/05",
							"end": "2015/03/08"
						},
						"where": {
							"desc": "Hilton Salt Lake City Center",
							"city": "Salt Lake City",
							"state": "UT",
							"country": "USA",
							"web": "http://www.cosyne.org/c/index.php?title=Cosyne_15"
						},
						"who": "Yuwei Cui, Subutai Ahmad, Chetan Surpur, and Jeff Hawkins",
						"why": "Authors"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "computational systems neuroscience cosyne 2015 numenta nupic machine intelligence",
					"title": "Computational and Systems Neuroscience (Cosyne) 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/03/17",
					"base": "what-the-brain-says-about-machine-intelligence-nyc-meetup.md",
					"ext": "md",
					"name": "what-the-brain-says-about-machine-intelligence-nyc-meetup",
					"extname": ".md",
					"basename": "what-the-brain-says-about-machine-intelligence-nyc-meetup.md",
					"dirname": "events/2015/03/17",
					"stem": "what-the-brain-says-about-machine-intelligence-nyc-meetup",
					"path": "events/2015/03/17/what-the-brain-says-about-machine-intelligence-nyc-meetup.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/03/17/what-the-brain-says-about-machine-intelligence-nyc-meetup.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/03/17/what-the-brain-says-about-machine-intelligence-nyc-meetup.md",
				"path": "/events/2015/03/17/what-the-brain-says-about-machine-intelligence-nyc-meetup/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": null,
					"date": "2015/03/17",
					"event": {
						"what": "What the Brain Says About Machine Intelligence",
						"when": {
							"begin": "2015/03/17 19:00",
							"end": "2015/03/17 21:00"
						},
						"where": {
							"desc": "Cornell Tech",
							"city": "New York",
							"state": "NY",
							"country": "USA",
							"web": "http://www.meetup.com/numenta/events/220895892/"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-Founder",
					"tags": "meetup nyc new york city cornell tech what the brain says about machine intelligence jeff hawkins numenta",
					"title": "What the Brain Says About Machine Intelligence NYC Meetup"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/05/30",
					"base": "nupic-spring-2015-hackathon.md",
					"ext": "md",
					"name": "nupic-spring-2015-hackathon",
					"extname": ".md",
					"basename": "nupic-spring-2015-hackathon.md",
					"dirname": "events/2015/05/30",
					"stem": "nupic-spring-2015-hackathon",
					"path": "events/2015/05/30/nupic-spring-2015-hackathon.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/05/30/nupic-spring-2015-hackathon.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/05/30/nupic-spring-2015-hackathon.md",
				"path": "/events/2015/05/30/nupic-spring-2015-hackathon/",
				"data": {
					"author": "Matthew Taylor",
					"brief": null,
					"date": "2015/05/30",
					"event": {
						"when": {
							"begin": "2015/05/30 10:00",
							"end": "2015/05/31 20:00"
						},
						"where": {
							"desc": "Cornell Tech",
							"city": "New York City",
							"state": "NY",
							"country": "USA",
							"web": "http://www.meetup.com/numenta/events/220422020/"
						}
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Open Source Manager",
					"tags": "nupic spring 2015 hackathon numenta machine intelligence htm hierarchical temporal memory",
					"title": "NuPIC Spring 2015 Hackathon NYC"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/06/01",
					"base": "orange-institute-14-silicon-valley-redefining-business-again.md",
					"ext": "md",
					"name": "orange-institute-14-silicon-valley-redefining-business-again",
					"extname": ".md",
					"basename": "orange-institute-14-silicon-valley-redefining-business-again.md",
					"dirname": "events/2015/06/01",
					"stem": "orange-institute-14-silicon-valley-redefining-business-again",
					"path": "events/2015/06/01/orange-institute-14-silicon-valley-redefining-business-again.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/06/01/orange-institute-14-silicon-valley-redefining-business-again.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/06/01/orange-institute-14-silicon-valley-redefining-business-again.md",
				"path": "/events/2015/06/01/orange-institute-14-silicon-valley-redefining-business-again/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": null,
					"date": "2015/06/01",
					"event": {
						"when": {
							"begin": "2015/06/01",
							"end": "2015/06/04"
						},
						"where": {
							"desc": "TBD",
							"city": "Silicon Valley",
							"state": "CA",
							"country": "USA",
							"web": "http://institute.orange.com/sessions/2015-2016-program"
						},
						"who": "Donna Dubinsky",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO, Co-Founder",
					"tags": "orange institute 14 silicon valley redefine business donna dubinsky numenta machine intelligence",
					"title": "Orange Institute 14 How Silicon Valley is Redefining Business Again"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/08/18",
					"base": "dataversity-smart-data-conference-san-jose-2015.md",
					"ext": "md",
					"name": "dataversity-smart-data-conference-san-jose-2015",
					"extname": ".md",
					"basename": "dataversity-smart-data-conference-san-jose-2015.md",
					"dirname": "events/2015/08/18",
					"stem": "dataversity-smart-data-conference-san-jose-2015",
					"path": "events/2015/08/18/dataversity-smart-data-conference-san-jose-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/08/18/dataversity-smart-data-conference-san-jose-2015.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/08/18/dataversity-smart-data-conference-san-jose-2015.md",
				"path": "/events/2015/08/18/dataversity-smart-data-conference-san-jose-2015/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "We are witnessing an explosion of sensors and machine generated data. Every server, every building, and every device generates a continuous stream of information that is ever changing and potentially valuable",
					"date": "2015/08/18",
					"event": {
						"what": "How Cognitive Computing Will Drive the Future of Analytics",
						"when": {
							"begin": "2015/08/18",
							"end": "2015/08/20"
						},
						"where": {
							"desc": "San Jose Convention Center",
							"city": "San Jose",
							"state": "CA",
							"country": "USA",
							"web": "http://smartdata2015.dataversity.net/"
						},
						"who": "Subutai Ahmad",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "dataversity smart data conference san jose 2015 subutai ahmad numenta htm hierarchical temporal memory cognitive computing",
					"title": "Dataversity Smart Data Conference San Jose 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/10/01",
					"base": "berkeley-symposium-on-energy-efficient-electronic-systems.md",
					"ext": "md",
					"name": "berkeley-symposium-on-energy-efficient-electronic-systems",
					"extname": ".md",
					"basename": "berkeley-symposium-on-energy-efficient-electronic-systems.md",
					"dirname": "events/2015/10/01",
					"stem": "berkeley-symposium-on-energy-efficient-electronic-systems",
					"path": "events/2015/10/01/berkeley-symposium-on-energy-efficient-electronic-systems.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/10/01/berkeley-symposium-on-energy-efficient-electronic-systems.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/10/01/berkeley-symposium-on-energy-efficient-electronic-systems.md",
				"path": "/events/2015/10/01/berkeley-symposium-on-energy-efficient-electronic-systems/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "The Berkeley Symposium on Energy Efficient Electronic Systems brings together researchers from around the world who are working on breakthrough improvements in energy efficiency for information processing systems",
					"date": "2015/10/01",
					"event": {
						"when": {
							"begin": "2015/10/01",
							"end": "2015/10/02"
						},
						"where": {
							"desc": "Sutardja Dai Hall @ UC Berkeley",
							"city": "Berkeley",
							"state": "CA",
							"country": "USA",
							"web": "http://www.e3s-center.org/events/e3s-symposium/"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-Founder",
					"tags": "numenta jeff hawkins berkeley symposium energy efficient electronic systems htm hierarchical temporal memory",
					"title": "Fourth Berkeley Symposium on Energy Efficient Electronic Systems"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/10/07",
					"base": "gsv-labs-pioneer-summit.md",
					"ext": "md",
					"name": "gsv-labs-pioneer-summit",
					"extname": ".md",
					"basename": "gsv-labs-pioneer-summit.md",
					"dirname": "events/2015/10/07",
					"stem": "gsv-labs-pioneer-summit",
					"path": "events/2015/10/07/gsv-labs-pioneer-summit.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/10/07/gsv-labs-pioneer-summit.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/10/07/gsv-labs-pioneer-summit.md",
				"path": "/events/2015/10/07/gsv-labs-pioneer-summit/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "We are convening the leading venture and growth companies from around the world, highly curated by the GSV TEAM, to gather in Silicon Valley. We don’t want incremental ideas",
					"date": "2015/10/07",
					"event": {
						"when": {
							"begin": "2015/10/07",
							"end": "2015/10/09"
						},
						"where": {
							"desc": "GSVlabs",
							"city": "Redwood City",
							"state": "CA",
							"country": "USA",
							"web": "http://gsvlabs.com/gsv-pioneer/"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-Founder",
					"tags": "numenta jeff hawkins nupic htm machine intelligence gsv labs gsvlabs pioneer summit",
					"title": "GSVlabs Pioneer Summit 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/10/22",
					"base": "compute-midwest-imagine-the-future-2015.md",
					"ext": "md",
					"name": "compute-midwest-imagine-the-future-2015",
					"extname": ".md",
					"basename": "compute-midwest-imagine-the-future-2015.md",
					"dirname": "events/2015/10/22",
					"stem": "compute-midwest-imagine-the-future-2015",
					"path": "events/2015/10/22/compute-midwest-imagine-the-future-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/10/22/compute-midwest-imagine-the-future-2015.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/10/22/compute-midwest-imagine-the-future-2015.md",
				"path": "/events/2015/10/22/compute-midwest-imagine-the-future-2015/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "Get inspired. Learn about what is next in technology. Straight from tech leaders, startup founders and visionaries. Hear the stories of innovators who are building companies that change our life, our work and our business.",
					"date": "2015/10/22",
					"event": {
						"what": "The Future of Machine Intelligence",
						"when": {
							"begin": "2015/10/22",
							"end": "2015/10/23"
						},
						"where": {
							"desc": "Municipal Arena",
							"city": "Kansas City",
							"state": "MO",
							"country": "USA",
							"web": "http://www.computemidwest.com/"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-Founder",
					"tags": "compute midwest 2015 jeff hawkins numenta future of machine intelligence imagine the future",
					"title": "Compute Midwest 2015 - Imagine the Future"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/11/01",
					"base": "hhmi-janelia-emerging-tools-for-whole-brain-functional-data.md",
					"ext": "md",
					"name": "hhmi-janelia-emerging-tools-for-whole-brain-functional-data",
					"extname": ".md",
					"basename": "hhmi-janelia-emerging-tools-for-whole-brain-functional-data.md",
					"dirname": "events/2015/11/01",
					"stem": "hhmi-janelia-emerging-tools-for-whole-brain-functional-data",
					"path": "events/2015/11/01/hhmi-janelia-emerging-tools-for-whole-brain-functional-data.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/11/01/hhmi-janelia-emerging-tools-for-whole-brain-functional-data.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/11/01/hhmi-janelia-emerging-tools-for-whole-brain-functional-data.md",
				"path": "/events/2015/11/01/hhmi-janelia-emerging-tools-for-whole-brain-functional-data/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "In the last few years, optical techniques have emerged that allow near-simultaneous acquisition of neuronal activity at the whole-brain level and with single-cell resolution",
					"date": "2015/11/01",
					"event": {
						"when": {
							"begin": "2015/11/01",
							"end": "2015/11/04"
						},
						"where": {
							"desc": "HHMI Janelia Research Campus",
							"city": "Ashburn",
							"state": "VA",
							"country": "USA",
							"web": "https://www.janelia.org/you-janelia/conferences/emerging-tools-acquisition-and-interpretation-whole-brain-functional-data"
						},
						"who": "Subutai Ahmad",
						"why": "Invited Participant"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "subutai ahmad numenta htm machine intelligence janelia research emerging tools whole brain functional data",
					"title": "HHMI Janelia Emerging Tools for Acquisition and Interpretation of Whole-Brain Functional Data"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/11/13",
					"base": "ml-conf-machine-learning-conference-san-francisco.md",
					"ext": "md",
					"name": "ml-conf-machine-learning-conference-san-francisco",
					"extname": ".md",
					"basename": "ml-conf-machine-learning-conference-san-francisco.md",
					"dirname": "events/2015/11/13",
					"stem": "ml-conf-machine-learning-conference-san-francisco",
					"path": "events/2015/11/13/ml-conf-machine-learning-conference-san-francisco.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/11/13/ml-conf-machine-learning-conference-san-francisco.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/11/13/ml-conf-machine-learning-conference-san-francisco.md",
				"path": "/events/2015/11/13/ml-conf-machine-learning-conference-san-francisco/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "Subutai Ahmad, VP Research at Numenta, speaks at MLConf SF on Real-time Anomaly Detection for Real-time Data Needs. MLconf gathers communities to discuss the recent research and application of Algorithms, Tools, and Platforms to solve the hard problems that exist within",
					"date": "2015/11/13",
					"event": {
						"what": "Real-time Anomaly Detection for Real-time Data Needs",
						"when": {
							"begin": "2015/11/13",
							"end": "2015/11/13"
						},
						"where": {
							"desc": "Julia Morgan Ballroom",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "http://mlconf.com/events/san-francisco-ca/"
						},
						"who": "Subutai Ahmad",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Research",
					"tags": "subutai ahmad numenta htm real time streaming data anomaly detection mlconf machine learning conference san francisco sf 2015",
					"title": "MLConf Machine Learning Conference San Francisco 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/11/13",
					"base": "numenta-htm-challenge-community-meetup.md",
					"ext": "md",
					"name": "numenta-htm-challenge-community-meetup",
					"extname": ".md",
					"basename": "numenta-htm-challenge-community-meetup.md",
					"dirname": "events/2015/11/13",
					"stem": "numenta-htm-challenge-community-meetup",
					"path": "events/2015/11/13/numenta-htm-challenge-community-meetup.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/11/13/numenta-htm-challenge-community-meetup.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/11/13/numenta-htm-challenge-community-meetup.md",
				"path": "/events/2015/11/13/numenta-htm-challenge-community-meetup/",
				"data": {
					"author": "Matthew Taylor",
					"brief": "This is an event organized by the NuPIC community to accompany the Numenta HTM Challenge Onsite. If you are coming to the Challenge and want to meet members of the NuPIC community the night before, please RSVP.",
					"date": "2015/11/13",
					"event": {
						"what": "Numenta HTM Challenge Community Meetup",
						"when": {
							"begin": "2015/11/13 15:00",
							"end": "2015/11/13 21:00"
						},
						"where": {
							"desc": "Numenta",
							"city": "Redwood City",
							"state": "CA",
							"country": "USA",
							"web": "http://www.meetup.com/numenta/events/224711563/"
						},
						"who": null,
						"why": null
					},
					"featured": false,
					"image": "../images/htm-challenge.png",
					"org": "Open Source Flag-Bearer",
					"tags": "numenta htm challenge 2015 community meetup hierarchical temporal memory machine intelligence learning brain neocortex",
					"title": "Numenta HTM Challenge Community Meetup"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/11/14",
					"base": "numenta-htm-challenge-onsite.md",
					"ext": "md",
					"name": "numenta-htm-challenge-onsite",
					"extname": ".md",
					"basename": "numenta-htm-challenge-onsite.md",
					"dirname": "events/2015/11/14",
					"stem": "numenta-htm-challenge-onsite",
					"path": "events/2015/11/14/numenta-htm-challenge-onsite.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/11/14/numenta-htm-challenge-onsite.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/11/14/numenta-htm-challenge-onsite.md",
				"path": "/events/2015/11/14/numenta-htm-challenge-onsite/",
				"data": {
					"author": "Matthew Taylor",
					"brief": "The Numenta HTM Challenge is an online coding contest encouraging the creation of Hierarchical Temporal Memory applications.",
					"date": "2015/11/14",
					"event": {
						"what": "Numenta HTM Challenge Onsite",
						"when": {
							"begin": "2015/11/14 10:00",
							"end": "2015/11/14 20:00"
						},
						"where": {
							"desc": "San Mateo County History Museum",
							"city": "Redwood City",
							"state": "CA",
							"country": "USA",
							"web": "http://www.meetup.com/numenta/events/224711586/"
						},
						"who": null,
						"why": null
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Open Source Flag-Bearer",
					"tags": "numenta htm challenge onsite 2015 nupic hierarchical temporal memory brain neocortex machine learning intelligence",
					"title": "Numenta HTM Challenge Onsite"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2015/12/09",
					"base": "14th-ieee-international-conference-on-machine-learning-icmla.md",
					"ext": "md",
					"name": "14th-ieee-international-conference-on-machine-learning-icmla",
					"extname": ".md",
					"basename": "14th-ieee-international-conference-on-machine-learning-icmla.md",
					"dirname": "events/2015/12/09",
					"stem": "14th-ieee-international-conference-on-machine-learning-icmla",
					"path": "events/2015/12/09/14th-ieee-international-conference-on-machine-learning-icmla.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2015/12/09/14th-ieee-international-conference-on-machine-learning-icmla.md",
					"isAbsolute": false
				},
				"requirePath": "events/2015/12/09/14th-ieee-international-conference-on-machine-learning-icmla.md",
				"path": "/events/2015/12/09/14th-ieee-international-conference-on-machine-learning-icmla/",
				"data": {
					"author": "Alexander Lavin",
					"brief": "Alexander Lavin, Numenta Research Engineer, speaks on Evaluating Realtime Anomaly Detection Algorithms – the Numenta Anomaly Benchmark, at IEEE ICMLA'15 Miami.",
					"date": "2015/12/09",
					"event": {
						"what": "Evaluating Realtime Anomaly Detection Algorithms – the Numenta Anomaly Benchmark",
						"when": {
							"begin": "2015/12/09",
							"end": "2015/12/11"
						},
						"where": {
							"desc": "TBD",
							"city": "Miami",
							"state": "FL",
							"country": "USA",
							"web": "http://www.icmla-conference.org/icmla15/"
						},
						"who": "Alexander Lavin",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Engineer",
					"tags": "ieee machine learning conference numenta alexander lavin reserach numenta anomaly detection algorithm benchmark",
					"title": "14th IEEE International Conference on Machine Learning and Applications (ICMLA)"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/02/25",
					"base": "cosyne-computational-and-systems-neuroscience-meeting-2016.md",
					"ext": "md",
					"name": "cosyne-computational-and-systems-neuroscience-meeting-2016",
					"extname": ".md",
					"basename": "cosyne-computational-and-systems-neuroscience-meeting-2016.md",
					"dirname": "events/2016/02/25",
					"stem": "cosyne-computational-and-systems-neuroscience-meeting-2016",
					"path": "events/2016/02/25/cosyne-computational-and-systems-neuroscience-meeting-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/02/25/cosyne-computational-and-systems-neuroscience-meeting-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/02/25/cosyne-computational-and-systems-neuroscience-meeting-2016.md",
				"path": "/events/2016/02/25/cosyne-computational-and-systems-neuroscience-meeting-2016/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2016/02/25",
					"event": {
						"what": "A Theory of Sequence Memory in the Neocortex",
						"when": {
							"begin": "2016/02/25",
							"end": "2016/02/28"
						},
						"where": {
							"desc": "Marriott Downtown",
							"city": "Salt Lake City",
							"state": "UT",
							"country": "USA",
							"web": "http://www.cosyne.org/c/index.php?title=Cosyne_16"
						},
						"who": "Jeff Hawkins, Subutai Ahmad, Yuwei Cui, and Scott Purdy",
						"why": "Poster Presentation"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Team",
					"tags": "theory sequence memory neocortex cosyne 2016 computational and systems neuroscience numenta jeff hawkins",
					"title": "COSYNE 2016 Computational and Systems Neuroscience Meeting"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/03/07",
					"base": "global-big-data-conference-2016.md",
					"ext": "md",
					"name": "global-big-data-conference-2016",
					"extname": ".md",
					"basename": "global-big-data-conference-2016.md",
					"dirname": "events/2016/03/07",
					"stem": "global-big-data-conference-2016",
					"path": "events/2016/03/07/global-big-data-conference-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/03/07/global-big-data-conference-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/03/07/global-big-data-conference-2016.md",
				"path": "/events/2016/03/07/global-big-data-conference-2016/",
				"data": {
					"author": "Alexander Lavin",
					"brief": null,
					"date": "2016/03/07",
					"event": {
						"what": "Global Big Data Conference 2016",
						"when": {
							"begin": "2016/03/07",
							"end": "2016/03/09"
						},
						"where": {
							"desc": "Santa Clara Convention Center",
							"city": "Santa Clara",
							"state": "CA",
							"country": "USA",
							"web": "http://globalbigdataconference.com/67/santa-clara/global-data-science-conference/event.html"
						},
						"who": "Alexander Lavin",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/bigdata.png",
					"org": "Research Engineer",
					"tags": "global big data conference 2016 numenta htm hierarchical temporal memory",
					"title": "Global Big Data Conference 2016"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/03/07",
					"base": "neuro-inspired-elements-workshop-nice-2016.md",
					"ext": "md",
					"name": "neuro-inspired-elements-workshop-nice-2016",
					"extname": ".md",
					"basename": "neuro-inspired-elements-workshop-nice-2016.md",
					"dirname": "events/2016/03/07",
					"stem": "neuro-inspired-elements-workshop-nice-2016",
					"path": "events/2016/03/07/neuro-inspired-elements-workshop-nice-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/03/07/neuro-inspired-elements-workshop-nice-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/03/07/neuro-inspired-elements-workshop-nice-2016.md",
				"path": "/events/2016/03/07/neuro-inspired-elements-workshop-nice-2016/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": null,
					"date": "2016/03/07",
					"event": {
						"what": null,
						"when": {
							"begin": "2016/03/07",
							"end": "2016/03/09"
						},
						"where": {
							"desc": "Clark Kerr Campus, UC Berkeley",
							"city": "Berkeley",
							"state": "CA",
							"country": "USA",
							"web": "http://neuroscience.berkeley.edu/2016-neuro-inspired-computational-elements-workshop/"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/nice.png",
					"org": "Co-Founder",
					"tags": "numenta jeff hawkins speaking neuro inspired computational elements workshop nice 2016",
					"title": "Neuro-Inspired Computational Elements (NICE) Workshop 2016"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/03/14",
					"base": "numenta-htm-bay-area-meetup-santa-clara.md",
					"ext": "md",
					"name": "numenta-htm-bay-area-meetup-santa-clara",
					"extname": ".md",
					"basename": "numenta-htm-bay-area-meetup-santa-clara.md",
					"dirname": "events/2016/03/14",
					"stem": "numenta-htm-bay-area-meetup-santa-clara",
					"path": "events/2016/03/14/numenta-htm-bay-area-meetup-santa-clara.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/03/14/numenta-htm-bay-area-meetup-santa-clara.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/03/14/numenta-htm-bay-area-meetup-santa-clara.md",
				"path": "/events/2016/03/14/numenta-htm-bay-area-meetup-santa-clara/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2016/03/14",
					"event": {
						"what": "HTM Bay Area Meetup",
						"when": {
							"begin": "2016/03/14 18:30",
							"end": "2016/03/14 21:30"
						},
						"where": {
							"desc": "Trustly @ 4500 Great America Pkwy",
							"city": "Santa Clara",
							"state": "CA",
							"country": "USA",
							"web": "http://www.meetup.com/numenta"
						},
						"who": "Matthew Taylor & Christy Maver",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Matt Taylor & Christy Maver",
					"tags": "numenta htm hierarchical temporal memory bay area meetup santa clara ca",
					"title": "HTM Bay Area Meetup in Santa Clara"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/03/17",
					"base": "numenta-htm-workshop-berkeley-institute-for-data-science.md",
					"ext": "md",
					"name": "numenta-htm-workshop-berkeley-institute-for-data-science",
					"extname": ".md",
					"basename": "numenta-htm-workshop-berkeley-institute-for-data-science.md",
					"dirname": "events/2016/03/17",
					"stem": "numenta-htm-workshop-berkeley-institute-for-data-science",
					"path": "events/2016/03/17/numenta-htm-workshop-berkeley-institute-for-data-science.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/03/17/numenta-htm-workshop-berkeley-institute-for-data-science.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/03/17/numenta-htm-workshop-berkeley-institute-for-data-science.md",
				"path": "/events/2016/03/17/numenta-htm-workshop-berkeley-institute-for-data-science/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2016/03/17",
					"event": {
						"what": "Introductory Workshop - Numenta's Hierarchical Temporal Memory (HTM)",
						"when": {
							"begin": "2016/03/17 18:00",
							"end": "2016/03/17 20:00"
						},
						"where": {
							"desc": "190 Doe Memorial Library, UC Berkeley",
							"city": "Berkeley",
							"state": "CA",
							"country": "USA",
							"web": "http://bids.berkeley.edu/events/numenta-workshop"
						},
						"who": "Numenta Engineering",
						"why": "Speaking"
					},
					"featured": true,
					"image": "../images/image.png",
					"org": "Event",
					"tags": "numenta htm workshop hierarchical temporal memory berkeley institute data science bids",
					"title": "Numenta HTM Workshop at Berkeley Institute for Data Science"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/03/29",
					"base": "strata-hadoop-world-big-data-conference-2016.md",
					"ext": "md",
					"name": "strata-hadoop-world-big-data-conference-2016",
					"extname": ".md",
					"basename": "strata-hadoop-world-big-data-conference-2016.md",
					"dirname": "events/2016/03/29",
					"stem": "strata-hadoop-world-big-data-conference-2016",
					"path": "events/2016/03/29/strata-hadoop-world-big-data-conference-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/03/29/strata-hadoop-world-big-data-conference-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/03/29/strata-hadoop-world-big-data-conference-2016.md",
				"path": "/events/2016/03/29/strata-hadoop-world-big-data-conference-2016/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2016/03/29",
					"event": {
						"what": null,
						"when": {
							"begin": "2016/03/29",
							"end": "2016/03/31"
						},
						"where": {
							"desc": "San Jose Convention Center, Booth #540",
							"city": "San Jose",
							"state": "CA",
							"country": "USA",
							"web": "http://conferences.oreilly.com/strata/hadoop-big-data-ca"
						},
						"who": null,
						"why": null
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Event",
					"tags": "strata hadoop world big data conference 2016 oreilly numenta machine intelligence",
					"title": "Strata + Hadoop World 2016: O’Reilly Big Data Conference"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/04/07",
					"base": "ai-meetup-hierarchical-temporal-memory-san-francisco.md",
					"ext": "md",
					"name": "ai-meetup-hierarchical-temporal-memory-san-francisco",
					"extname": ".md",
					"basename": "ai-meetup-hierarchical-temporal-memory-san-francisco.md",
					"dirname": "events/2016/04/07",
					"stem": "ai-meetup-hierarchical-temporal-memory-san-francisco",
					"path": "events/2016/04/07/ai-meetup-hierarchical-temporal-memory-san-francisco.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/04/07/ai-meetup-hierarchical-temporal-memory-san-francisco.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/04/07/ai-meetup-hierarchical-temporal-memory-san-francisco.md",
				"path": "/events/2016/04/07/ai-meetup-hierarchical-temporal-memory-san-francisco/",
				"data": {
					"author": "Yuwei Cui",
					"brief": null,
					"date": "2016/04/07",
					"event": {
						"what": null,
						"when": {
							"begin": "2016/04/07 18:30",
							"end": "2016/04/07 19:30"
						},
						"where": {
							"desc": "404 Bryant Street",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "https://www.eventbrite.com/e/ai-meetup-hierarchal-temporal-memory-presented-by-numenta-tickets-24327505223"
						},
						"who": "Yuwei Cui",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Engineer",
					"tags": "numenta htm hierarchical temporal memory ai meetup san francisco",
					"title": "AI Meetup - Hierarchical Temporal Memory"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/04/09",
					"base": "connected-car-hackathon-oakland-ca.md",
					"ext": "md",
					"name": "connected-car-hackathon-oakland-ca",
					"extname": ".md",
					"basename": "connected-car-hackathon-oakland-ca.md",
					"dirname": "events/2016/04/09",
					"stem": "connected-car-hackathon-oakland-ca",
					"path": "events/2016/04/09/connected-car-hackathon-oakland-ca.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/04/09/connected-car-hackathon-oakland-ca.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/04/09/connected-car-hackathon-oakland-ca.md",
				"path": "/events/2016/04/09/connected-car-hackathon-oakland-ca/",
				"data": {
					"author": "Matthew Taylor",
					"brief": null,
					"date": "2016/04/09",
					"event": {
						"what": "Using HTM with GPS Data",
						"when": {
							"begin": "2016/04/09",
							"end": "2016/04/10"
						},
						"where": {
							"desc": "Joseph P. Bort MetroCenter Auditorium",
							"city": "Oakland",
							"state": "CA",
							"country": "USA",
							"web": "http://connected-car.devpost.com/"
						},
						"who": "Matthew Taylor",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Open Source Manager",
					"tags": "mtc connected car hackathon oakland numenta nupic",
					"title": "Connected Car Hackathon"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/04/23",
					"base": "ted-x-cornell-tech.md",
					"ext": "md",
					"name": "ted-x-cornell-tech",
					"extname": ".md",
					"basename": "ted-x-cornell-tech.md",
					"dirname": "events/2016/04/23",
					"stem": "ted-x-cornell-tech",
					"path": "events/2016/04/23/ted-x-cornell-tech.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/04/23/ted-x-cornell-tech.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/04/23/ted-x-cornell-tech.md",
				"path": "/events/2016/04/23/ted-x-cornell-tech/",
				"data": {
					"author": "Alexander Lavin",
					"brief": null,
					"date": "2016/04/23",
					"event": {
						"what": "TEDx Cornell Tech",
						"when": {
							"begin": "2016/04/23 10:00",
							"end": "2016/04/23 16:00"
						},
						"where": {
							"desc": "Infor, 641 Avenue of the Americas",
							"city": "New York City",
							"state": "NY",
							"country": "USA",
							"web": "http://www.tedxcornelltech.com/"
						},
						"who": "Alexander Lavin",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Engineer",
					"tags": "ted tedx cornell tech alexander lavin numenta research engineer",
					"title": "TEDx Cornell Tech"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/04/26",
					"base": "numenta-webinar.md",
					"ext": "md",
					"name": "numenta-webinar",
					"extname": ".md",
					"basename": "numenta-webinar.md",
					"dirname": "events/2016/04/26",
					"stem": "numenta-webinar",
					"path": "events/2016/04/26/numenta-webinar.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/04/26/numenta-webinar.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/04/26/numenta-webinar.md",
				"path": "/events/2016/04/26/numenta-webinar/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2016/04/26",
					"event": {
						"what": "Machine Intelligence with Streaming Data. A new approach for anomaly detection and time-based learning.",
						"when": {
							"begin": "2016/04/26 09:00",
							"end": "2016/04/26 10:00"
						},
						"where": {
							"desc": "Online",
							"city": null,
							"state": null,
							"country": null,
							"web": "http://www.prohuddle.com/webinars/ChristyAndScott/Machine_Intelligence_with_Streaming_Data_A_New_Approach.php"
						},
						"who": "Christy Maver & Scott Purdy",
						"why": "Webinar"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Christy Maver & Scott Purdy",
					"tags": "numenta webinar machine intelligence with streaming data",
					"title": "Webinar: Machine Intelligence with Streaming Data"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/05/12",
					"base": "neuro-tech-x-meetup-featuring-jeff-hawkins.md",
					"ext": "md",
					"name": "neuro-tech-x-meetup-featuring-jeff-hawkins",
					"extname": ".md",
					"basename": "neuro-tech-x-meetup-featuring-jeff-hawkins.md",
					"dirname": "events/2016/05/12",
					"stem": "neuro-tech-x-meetup-featuring-jeff-hawkins",
					"path": "events/2016/05/12/neuro-tech-x-meetup-featuring-jeff-hawkins.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/05/12/neuro-tech-x-meetup-featuring-jeff-hawkins.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/05/12/neuro-tech-x-meetup-featuring-jeff-hawkins.md",
				"path": "/events/2016/05/12/neuro-tech-x-meetup-featuring-jeff-hawkins/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": null,
					"date": "2016/05/12",
					"event": {
						"what": "What is Intelligence, that a Machine Might Have Some?",
						"when": {
							"begin": "2016/05/12 18:30",
							"end": "2016/05/12 20:00"
						},
						"where": {
							"desc": "Indiegogo",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "http://www.meetup.com/NeuroTechSF/events/230385690/"
						},
						"who": "Jeff Hawkins",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Co-Founder",
					"tags": "jeff hawkins numenta founder speaking machine intelligence artificial neocortex",
					"title": "NeuroTechX meetup featuring Jeff Hawkins"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/05/19",
					"base": "ai-by-the-bay.md",
					"ext": "md",
					"name": "ai-by-the-bay",
					"extname": ".md",
					"basename": "ai-by-the-bay.md",
					"dirname": "events/2016/05/19",
					"stem": "ai-by-the-bay",
					"path": "events/2016/05/19/ai-by-the-bay.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/05/19/ai-by-the-bay.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/05/19/ai-by-the-bay.md",
				"path": "/events/2016/05/19/ai-by-the-bay/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": null,
					"date": "2016/05/19",
					"event": {
						"what": "Detecting Anomalies in Streaming Data - Real-time Algorithms for Real-world applications",
						"when": {
							"begin": "2016/05/19 14:10",
							"end": "2016/05/19 14:50"
						},
						"where": {
							"desc": "Galvanize SOMA",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "http://ai.bythebay.io/"
						},
						"who": "Subutai Ahmad",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/aibythebay.png",
					"org": "VP Research",
					"tags": "ai by the bay numenta detecting anomalies streaming data real time algorithms real world applications machine intelligence",
					"title": "AI by the Bay"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/05/19",
					"base": "business-analytics-innovation-summit-chicago-2016.md",
					"ext": "md",
					"name": "business-analytics-innovation-summit-chicago-2016",
					"extname": ".md",
					"basename": "business-analytics-innovation-summit-chicago-2016.md",
					"dirname": "events/2016/05/19",
					"stem": "business-analytics-innovation-summit-chicago-2016",
					"path": "events/2016/05/19/business-analytics-innovation-summit-chicago-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/05/19/business-analytics-innovation-summit-chicago-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/05/19/business-analytics-innovation-summit-chicago-2016.md",
				"path": "/events/2016/05/19/business-analytics-innovation-summit-chicago-2016/",
				"data": {
					"author": "Christy Maver",
					"brief": null,
					"date": "2016/05/19",
					"event": {
						"what": null,
						"when": {
							"begin": "2016/05/19",
							"end": "2016/05/20"
						},
						"where": {
							"desc": "InterContinental Chicago Magnificent Mile",
							"city": "Chicago",
							"state": "IL",
							"country": "USA",
							"web": "https://theinnovationenterprise.com/summits/business-analytics-innovation-summit-chicago-2016"
						},
						"who": "Christy Maver",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Director of Marketing",
					"tags": "business analytics innovation summit chicago 2016 numenta htm",
					"title": "Business Analytics Innovation Summit Chicago 2016"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/05/25",
					"base": "ai-startups-conference.md",
					"ext": "md",
					"name": "ai-startups-conference",
					"extname": ".md",
					"basename": "ai-startups-conference.md",
					"dirname": "events/2016/05/25",
					"stem": "ai-startups-conference",
					"path": "events/2016/05/25/ai-startups-conference.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/05/25/ai-startups-conference.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/05/25/ai-startups-conference.md",
				"path": "/events/2016/05/25/ai-startups-conference/",
				"data": {
					"author": "Celeste Baranski",
					"brief": null,
					"date": "2016/05/25",
					"event": {
						"what": "Reverse-Engineering the Neocortex",
						"when": {
							"begin": "2016/05/25 12:10",
							"end": "2016/05/25 12:35"
						},
						"where": {
							"desc": "Rackspace",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "https://www.eventbrite.com/e/ai-startups-conference-tickets-24722374287"
						},
						"who": "Celeste Baranski",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "VP Engineering",
					"tags": "ai startups conference 2016 san francisco reverse engineering neocortex machine intelligence",
					"title": "AI Startups Conference"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/06/01",
					"base": "orange-county-meetup-deriving-machine-intelligence-from-neuroscience.md",
					"ext": "md",
					"name": "orange-county-meetup-deriving-machine-intelligence-from-neuroscience",
					"extname": ".md",
					"basename": "orange-county-meetup-deriving-machine-intelligence-from-neuroscience.md",
					"dirname": "events/2016/06/01",
					"stem": "orange-county-meetup-deriving-machine-intelligence-from-neuroscience",
					"path": "events/2016/06/01/orange-county-meetup-deriving-machine-intelligence-from-neuroscience.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/06/01/orange-county-meetup-deriving-machine-intelligence-from-neuroscience.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/06/01/orange-county-meetup-deriving-machine-intelligence-from-neuroscience.md",
				"path": "/events/2016/06/01/orange-county-meetup-deriving-machine-intelligence-from-neuroscience/",
				"data": {
					"author": "Alexander Lavin",
					"brief": null,
					"date": "2016/06/01",
					"event": {
						"what": "Deriving Machine Intelligence from Neuroscience",
						"when": {
							"begin": "2016/06/01 19:00",
							"end": "2016/06/01 20:00"
						},
						"where": {
							"desc": "OC Deep Learning, HTM, ANN, NLP & AI Meetup",
							"city": "Irvine",
							"state": "CA",
							"country": "USA",
							"web": "http://www.meetup.com/OC-Deep-Learning-HTM-ANN-NLP-AI/events/230346144/"
						},
						"who": "Alexander Lavin",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Engineer",
					"tags": "numenta machine intelligence neuroscience orange county oc meetup",
					"title": "OC Meetup - Deriving Machine Intelligence from Neuroscience"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/06/18",
					"base": "dendritic-anatomy-molecules-and-function-heraklion-crete.md",
					"ext": "md",
					"name": "dendritic-anatomy-molecules-and-function-heraklion-crete",
					"extname": ".md",
					"basename": "dendritic-anatomy-molecules-and-function-heraklion-crete.md",
					"dirname": "events/2016/06/18",
					"stem": "dendritic-anatomy-molecules-and-function-heraklion-crete",
					"path": "events/2016/06/18/dendritic-anatomy-molecules-and-function-heraklion-crete.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/06/18/dendritic-anatomy-molecules-and-function-heraklion-crete.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/06/18/dendritic-anatomy-molecules-and-function-heraklion-crete.md",
				"path": "/events/2016/06/18/dendritic-anatomy-molecules-and-function-heraklion-crete/",
				"data": {
					"author": "Yuwei Cui",
					"brief": null,
					"date": "2016/06/18",
					"event": {
						"what": null,
						"when": {
							"begin": "2016/06/18",
							"end": "2016/06/21"
						},
						"where": {
							"desc": "The Foundation for Research and Technology-Hellas (FORTH)",
							"city": "Heraklion",
							"state": "Crete",
							"country": "Greece",
							"web": "http://www.dendrites2016.gr/"
						},
						"who": "Yuwei Cui",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Engineer",
					"tags": "numenta htm hierarchical temporal memory dendritic anatomy molecules function herkalion crete 2016 event",
					"title": "Dendritic Anatomy, Molecules and Function"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/06/22",
					"base": "areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles.md",
					"ext": "md",
					"name": "areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles",
					"extname": ".md",
					"basename": "areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles.md",
					"dirname": "events/2016/06/22",
					"stem": "areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles",
					"path": "events/2016/06/22/areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/06/22/areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/06/22/areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles.md",
				"path": "/events/2016/06/22/areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles/",
				"data": {
					"author": "Yuwei Cui",
					"brief": null,
					"date": "2016/06/22",
					"event": {
						"what": null,
						"when": {
							"begin": "2016/06/22",
							"end": "2016/06/26"
						},
						"where": {
							"desc": "Nomikos Conference Centre",
							"city": "Fira",
							"state": "Santorini",
							"country": "Greece",
							"web": "http://areadne.org/"
						},
						"who": "Yuwei Cui",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Engineer",
					"tags": "numenta htm hierarchical temporal memory areadne 2016 research encoding decoding neural ensembles",
					"title": "Areadne 2016 - Research in Encoding And Decoding of Neural Ensembles"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/07/01",
					"base": "the-playfair-ai-summit-2016.md",
					"ext": "md",
					"name": "the-playfair-ai-summit-2016",
					"extname": ".md",
					"basename": "the-playfair-ai-summit-2016.md",
					"dirname": "events/2016/07/01",
					"stem": "the-playfair-ai-summit-2016",
					"path": "events/2016/07/01/the-playfair-ai-summit-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/07/01/the-playfair-ai-summit-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/07/01/the-playfair-ai-summit-2016.md",
				"path": "/events/2016/07/01/the-playfair-ai-summit-2016/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": null,
					"date": "2016/07/01",
					"event": {
						"what": "Hierarchical Temporal Memory, a theoretical framework for both biological and machine intelligence",
						"when": {
							"begin": "2016/07/01 13:15",
							"end": "2016/07/01 13:40"
						},
						"where": {
							"desc": null,
							"city": "London",
							"state": "United Kingdom",
							"country": "England",
							"web": "https://playfairaisummit2016.splashthat.com/"
						},
						"who": "Subutai Ahmad",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "VP of Research",
					"tags": "playfair ai summit 2016 subutai ahmad numenta htm hierarchical temporal memory theoretical biological machine intelligence",
					"title": "Playfair AI Summit 2016"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/07/13",
					"base": "data-science-summit.md",
					"ext": "md",
					"name": "data-science-summit",
					"extname": ".md",
					"basename": "data-science-summit.md",
					"dirname": "events/2016/07/13",
					"stem": "data-science-summit",
					"path": "events/2016/07/13/data-science-summit.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/07/13/data-science-summit.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/07/13/data-science-summit.md",
				"path": "/events/2016/07/13/data-science-summit/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": null,
					"date": "2016/07/13",
					"event": {
						"what": "Understanding Cortical Principles and Building Intelligent Machines",
						"when": {
							"begin": "2016/07/13 14:30",
							"end": "2016/07/13 14:55"
						},
						"where": {
							"desc": "Fairmont Hotel",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "http://conf.dato.com/2016/us/speakers/subutai-ahmad/"
						},
						"who": "Subutai Ahmad",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Numenta Event",
					"tags": "data science summit 2016 numenta sponsor machine intelligence ai",
					"title": "Data Science Summit US 2016"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/07/24",
					"base": "numenta-anomaly-benchmark-competition-at-ieee-wcci-2016.md",
					"ext": "md",
					"name": "numenta-anomaly-benchmark-competition-at-ieee-wcci-2016",
					"extname": ".md",
					"basename": "numenta-anomaly-benchmark-competition-at-ieee-wcci-2016.md",
					"dirname": "events/2016/07/24",
					"stem": "numenta-anomaly-benchmark-competition-at-ieee-wcci-2016",
					"path": "events/2016/07/24/numenta-anomaly-benchmark-competition-at-ieee-wcci-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/07/24/numenta-anomaly-benchmark-competition-at-ieee-wcci-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/07/24/numenta-anomaly-benchmark-competition-at-ieee-wcci-2016.md",
				"path": "/events/2016/07/24/numenta-anomaly-benchmark-competition-at-ieee-wcci-2016/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2016/07/24",
					"event": {
						"what": "Numenta Anomaly Benchmark Competition for Real-time Anomaly Detection @ IEEE WCCI 2016",
						"when": {
							"begin": "2016/07/24",
							"end": "2016/07/29"
						},
						"where": {
							"desc": "IEEE WCCI 2016",
							"city": "Vancouver",
							"state": "British Columbia",
							"country": "Canada",
							"web": "http://numenta.org/nab/"
						},
						"who": null,
						"why": null
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Event",
					"tags": "numenta anomaly benchmark competition nab ieee wcci world congress computational intelligence 2016",
					"title": "IEEE WCCI 2016 - Numenta Anomaly Benchmark Competition"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/07/26",
					"base": "ieee-wcci-2016.md",
					"ext": "md",
					"name": "ieee-wcci-2016",
					"extname": ".md",
					"basename": "ieee-wcci-2016.md",
					"dirname": "events/2016/07/26",
					"stem": "ieee-wcci-2016",
					"path": "events/2016/07/26/ieee-wcci-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/07/26/ieee-wcci-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/07/26/ieee-wcci-2016.md",
				"path": "/events/2016/07/26/ieee-wcci-2016/",
				"data": {
					"author": "Yuwei Cui",
					"brief": null,
					"date": "2016/07/26",
					"event": {
						"what": "A comparative study of HTM and other neural network models for online sequence learning with streaming data",
						"when": {
							"begin": "2016/07/26 08:00",
							"end": "2016/07/26 10:00"
						},
						"where": {
							"desc": "IEEE WCCI 2016",
							"city": "Vancouver",
							"state": "British Columbia",
							"country": "Canada",
							"web": "http://www.wcci2016.org/"
						},
						"who": "Yuwei Cui",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Engineer",
					"tags": "numenta ieee wcci world congress computational intelligence 2016",
					"title": "IEEE WCCI 2016"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/08/02",
					"base": "sf-data-science-meetup.md",
					"ext": "md",
					"name": "sf-data-science-meetup",
					"extname": ".md",
					"basename": "sf-data-science-meetup.md",
					"dirname": "events/2016/08/02",
					"stem": "sf-data-science-meetup",
					"path": "events/2016/08/02/sf-data-science-meetup.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/08/02/sf-data-science-meetup.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/08/02/sf-data-science-meetup.md",
				"path": "/events/2016/08/02/sf-data-science-meetup/",
				"data": {
					"author": "Alexander Lavin",
					"brief": null,
					"date": "2016/08/02",
					"event": {
						"what": "Predictive Analytics with Numenta Machine Intelligence",
						"when": {
							"begin": "2016/08/02 18:00",
							"end": "2016/08/02 21:00"
						},
						"where": {
							"desc": "Galvanize @ 44 Tehama Street",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "http://www.meetup.com/SF-Data-Science/events/232031072/"
						},
						"who": "Alexander Lavin",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Engineer",
					"tags": "sf san francisco data science meetup predictive analytics numenta machine intelligence",
					"title": "SF Data Science Meetup"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/08/08",
					"base": "htm-bay-area-meetup.md",
					"ext": "md",
					"name": "htm-bay-area-meetup",
					"extname": ".md",
					"basename": "htm-bay-area-meetup.md",
					"dirname": "events/2016/08/08",
					"stem": "htm-bay-area-meetup",
					"path": "events/2016/08/08/htm-bay-area-meetup.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/08/08/htm-bay-area-meetup.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/08/08/htm-bay-area-meetup.md",
				"path": "/events/2016/08/08/htm-bay-area-meetup/",
				"data": {
					"author": "Numenta",
					"brief": "Welcome to the 3rd community hosted HTM [Hierarchical Temporal Memory] Meetup. Meet HTM hackers, AI researchers, Entrepreneurs and enthusiasts working in the field of Artificial Intelligence. Read more for a brief agenda.",
					"date": "2016/08/08",
					"event": {
						"what": "HTM Bay Area Meetup",
						"when": {
							"begin": "2016/08/08 18:00",
							"end": "2016/08/08 21:00"
						},
						"where": {
							"desc": "H2O.ai Headquarters",
							"city": "Mountain View",
							"state": "CA",
							"country": "USA",
							"web": "http://www.meetup.com/numenta/events/232848149/"
						},
						"who": null,
						"why": null
					},
					"featured": false,
					"image": "../images/meetup.png",
					"org": "HTM Community",
					"tags": "numenta hierarchical temporal memory htm community 3rd bay area meetup palo alto machine intelligence neuroscience biological",
					"title": "HTM Bay Area Meetup"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/09/25",
					"base": "ai-with-the-best.md",
					"ext": "md",
					"name": "ai-with-the-best",
					"extname": ".md",
					"basename": "ai-with-the-best.md",
					"dirname": "events/2016/09/25",
					"stem": "ai-with-the-best",
					"path": "events/2016/09/25/ai-with-the-best.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/09/25/ai-with-the-best.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/09/25/ai-with-the-best.md",
				"path": "/events/2016/09/25/ai-with-the-best/",
				"data": {
					"author": "Matthew Taylor",
					"brief": null,
					"date": "2016/09/25",
					"event": {
						"what": "Hierarchical Temporal Memory: Computing Like the Brain",
						"when": {
							"begin": "2016/09/25 12:40",
							"end": "2016/09/25 13:40"
						},
						"where": {
							"desc": "Online",
							"city": null,
							"state": null,
							"country": null,
							"web": "http://ai.withthebest.com/#Agenda"
						},
						"who": "Matthew Taylor",
						"why": "Speaking"
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "HTM Community Leader",
					"tags": "ai with the best artificial intelligence htm hierarchical temporal memory computing like the brain",
					"title": "AI with the Best"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events/2016/11/11",
					"base": "mlconf-machine-learning-conference-san-francisco-2016.md",
					"ext": "md",
					"name": "mlconf-machine-learning-conference-san-francisco-2016",
					"extname": ".md",
					"basename": "mlconf-machine-learning-conference-san-francisco-2016.md",
					"dirname": "events/2016/11/11",
					"stem": "mlconf-machine-learning-conference-san-francisco-2016",
					"path": "events/2016/11/11/mlconf-machine-learning-conference-san-francisco-2016.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/2016/11/11/mlconf-machine-learning-conference-san-francisco-2016.md",
					"isAbsolute": false
				},
				"requirePath": "events/2016/11/11/mlconf-machine-learning-conference-san-francisco-2016.md",
				"path": "/events/2016/11/11/mlconf-machine-learning-conference-san-francisco-2016/",
				"data": {
					"author": "Numenta",
					"brief": null,
					"date": "2016/11/11",
					"event": {
						"what": null,
						"when": {
							"begin": "2016/11/11",
							"end": "2016/11/11"
						},
						"where": {
							"desc": "Hotel Nikko",
							"city": "San Francisco",
							"state": "CA",
							"country": "USA",
							"web": "http://mlconf.com/events/san-francisco-ca/"
						},
						"who": null,
						"why": null
					},
					"featured": false,
					"image": "../images/image.png",
					"org": "Research Team",
					"tags": "numenta machine learning conference san francisco sf 2016",
					"title": "MLconf 2016 Machine Learning Conference San Francisco"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "events",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "events",
					"stem": "index",
					"path": "events/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/events/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "events/index.jsx",
				"path": "/events/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "htm-for-stocks",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "htm-for-stocks",
					"stem": "index",
					"path": "htm-for-stocks/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/htm-for-stocks/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "htm-for-stocks/index.jsx",
				"path": "/htm-for-stocks/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "htm-studio",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "htm-studio",
					"stem": "index",
					"path": "htm-studio/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/htm-studio/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "htm-studio/index.jsx",
				"path": "/htm-studio/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "",
					"stem": "index",
					"path": "index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "index.jsx",
				"path": "/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "legal",
					"base": "privacy.md",
					"ext": "md",
					"name": "privacy",
					"extname": ".md",
					"basename": "privacy.md",
					"dirname": "legal",
					"stem": "privacy",
					"path": "legal/privacy.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/legal/privacy.md",
					"isAbsolute": false
				},
				"requirePath": "legal/privacy.md",
				"path": "/legal/privacy/",
				"data": {
					"title": "Privacy Policy"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "legal",
					"base": "terms.md",
					"ext": "md",
					"name": "terms",
					"extname": ".md",
					"basename": "terms.md",
					"dirname": "legal",
					"stem": "terms",
					"path": "legal/terms.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/legal/terms.md",
					"isAbsolute": false
				},
				"requirePath": "legal/terms.md",
				"path": "/legal/terms/",
				"data": {
					"title": "Terms of Service"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "mission-and-history",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "mission-and-history",
					"stem": "_Section",
					"path": "mission-and-history/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/mission-and-history/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "mission-and-history/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "mission-and-history",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "mission-and-history",
					"stem": "index",
					"path": "mission-and-history/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/mission-and-history/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "mission-and-history/index.jsx",
				"path": "/mission-and-history/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2013/10/11",
					"base": "announcing-grok-for-it.md",
					"ext": "md",
					"name": "announcing-grok-for-it",
					"extname": ".md",
					"basename": "announcing-grok-for-it.md",
					"dirname": "newsletter/2013/10/11",
					"stem": "announcing-grok-for-it",
					"path": "newsletter/2013/10/11/announcing-grok-for-it.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2013/10/11/announcing-grok-for-it.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2013/10/11/announcing-grok-for-it.md",
				"path": "/newsletter/2013/10/11/announcing-grok-for-it/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "Over the past year, we have tested our Grok technology on a variety of enterprise applications. Customers show substantial interest in our technology, with proposed",
					"date": "2013/10/11",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "grok it",
					"title": "Announcing Grok for IT"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2013/11/08",
					"base": "grok-at-aws-reinvent.md",
					"ext": "md",
					"name": "grok-at-aws-reinvent",
					"extname": ".md",
					"basename": "grok-at-aws-reinvent.md",
					"dirname": "newsletter/2013/11/08",
					"stem": "grok-at-aws-reinvent",
					"path": "newsletter/2013/11/08/grok-at-aws-reinvent.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2013/11/08/grok-at-aws-reinvent.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2013/11/08/grok-at-aws-reinvent.md",
				"path": "/newsletter/2013/11/08/grok-at-aws-reinvent/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "Grok is targeted towards Amazon Web Services (AWS) customers. We will be showing it publicly for the first time at the Amazon re:Invent conference next week in Las Vegas.",
					"date": "2013/11/08",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "Founder",
					"tags": "grok at aws reinvent 2013",
					"title": "Grok at AWS re:Invent"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2014/02/04",
					"base": "grok-soft-launch.md",
					"ext": "md",
					"name": "grok-soft-launch",
					"extname": ".md",
					"basename": "grok-soft-launch.md",
					"dirname": "newsletter/2014/02/04",
					"stem": "grok-soft-launch",
					"path": "newsletter/2014/02/04/grok-soft-launch.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2014/02/04/grok-soft-launch.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2014/02/04/grok-soft-launch.md",
				"path": "/newsletter/2014/02/04/grok-soft-launch/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "I am pleased to share with our newsletter subscribers the availability of Grok Amazon Web Services (AWS) Marketplace. Grok monitors complex networks running",
					"date": "2014/02/04",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "grok soft launch",
					"title": "Announcing Grok 1.0 Soft Launch"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2014/03/25",
					"base": "announcing-grok-for-it-analytics-on-aws.md",
					"ext": "md",
					"name": "announcing-grok-for-it-analytics-on-aws",
					"extname": ".md",
					"basename": "announcing-grok-for-it-analytics-on-aws.md",
					"dirname": "newsletter/2014/03/25",
					"stem": "announcing-grok-for-it-analytics-on-aws",
					"path": "newsletter/2014/03/25/announcing-grok-for-it-analytics-on-aws.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2014/03/25/announcing-grok-for-it-analytics-on-aws.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2014/03/25/announcing-grok-for-it-analytics-on-aws.md",
				"path": "/newsletter/2014/03/25/announcing-grok-for-it-analytics-on-aws/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "Today is an important day for Numenta.  We are pleased to announce the general availability of Grok on the Amazon Web Services Marketplace. We will be showcasing Grok at the",
					"date": "2014/03/25",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "Grok",
					"title": "Announcing Grok for IT Analytics on AWS"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2014/06/10",
					"base": "progress-report-june-2014.md",
					"ext": "md",
					"name": "progress-report-june-2014",
					"extname": ".md",
					"basename": "progress-report-june-2014.md",
					"dirname": "newsletter/2014/06/10",
					"stem": "progress-report-june-2014",
					"path": "newsletter/2014/06/10/progress-report-june-2014.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2014/06/10/progress-report-june-2014.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2014/06/10/progress-report-june-2014.md",
				"path": "/newsletter/2014/06/10/progress-report-june-2014/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "I’m writing today to give you a progress report from Numenta.  We have continued to make strides towards our mission of being a catalyst for machine intelligence.",
					"date": "2014/06/10",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "june 2014 numenta nupic grok aws",
					"title": "Progress Report June 2014 Newsletter"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2014/08/19",
					"base": "machine-intelligence-applications-summer-2014.md",
					"ext": "md",
					"name": "machine-intelligence-applications-summer-2014",
					"extname": ".md",
					"basename": "machine-intelligence-applications-summer-2014.md",
					"dirname": "newsletter/2014/08/19",
					"stem": "machine-intelligence-applications-summer-2014",
					"path": "newsletter/2014/08/19/machine-intelligence-applications-summer-2014.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2014/08/19/machine-intelligence-applications-summer-2014.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2014/08/19/machine-intelligence-applications-summer-2014.md",
				"path": "/newsletter/2014/08/19/machine-intelligence-applications-summer-2014/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "We’ve had a busy summer at Numenta. Since the launch of our first product, Grok for IT Analytics on Amazon Web Services (AWS), we’ve created a variety of demonstration applications to showcase",
					"date": "2014/08/19",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "summer 2014 numenta nupic grok aws machine intelligence applications",
					"title": "Machine Intelligence Applications 2014"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2014/09/16",
					"base": "fall-workshop-and-hackathon.md",
					"ext": "md",
					"name": "fall-workshop-and-hackathon",
					"extname": ".md",
					"basename": "fall-workshop-and-hackathon.md",
					"dirname": "newsletter/2014/09/16",
					"stem": "fall-workshop-and-hackathon",
					"path": "newsletter/2014/09/16/fall-workshop-and-hackathon.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2014/09/16/fall-workshop-and-hackathon.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2014/09/16/fall-workshop-and-hackathon.md",
				"path": "/newsletter/2014/09/16/fall-workshop-and-hackathon/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "I’m writing to let you know that we have two upcoming opportunities to learn about and try our technology: Our Numenta Training Workshop and NuPIC Fall Hackathon 2014",
					"date": "2014/09/16",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "numenta training workshop nupic machine intelligence hackathon fall 2014",
					"title": "Opportunities to Learn About and Try Numenta Technology - Fall Workshop and Hackathon"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2014/11/11",
					"base": "grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014.md",
					"ext": "md",
					"name": "grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014",
					"extname": ".md",
					"basename": "grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014.md",
					"dirname": "newsletter/2014/11/11",
					"stem": "grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014",
					"path": "newsletter/2014/11/11/grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2014/11/11/grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2014/11/11/grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014.md",
				"path": "/newsletter/2014/11/11/grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "We are pleased to report that Numenta has released version 1.6 of Grok for IT Analytics, which is available for no license charge on the AWS Marketplace. This version offers several new important features",
					"date": "2014/11/11",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "grok 1.6 release aws amazon web services reinvent las vegas nov 2014 numenta it analytics",
					"title": "Grok 1.6 Released - Showcasing at AWS ReInvent in Las Vegas, Nov 11-14"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/01/26",
					"base": "welcome-to-2015.md",
					"ext": "md",
					"name": "welcome-to-2015",
					"extname": ".md",
					"basename": "welcome-to-2015.md",
					"dirname": "newsletter/2015/01/26",
					"stem": "welcome-to-2015",
					"path": "newsletter/2015/01/26/welcome-to-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/01/26/welcome-to-2015.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/01/26/welcome-to-2015.md",
				"path": "/newsletter/2015/01/26/welcome-to-2015/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "As a fun and educational kick-off to the year, we are offering our second Super Bowl sparse football pool. Entering the pool is free, and prizes are offered for the top five winners (note that because of legal constraints, those",
					"date": "2015/01/26",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": null,
					"title": "Welcome to 2015!"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/03/12",
					"base": "numenta-newsletter-mar-2015.md",
					"ext": "md",
					"name": "numenta-newsletter-mar-2015",
					"extname": ".md",
					"basename": "numenta-newsletter-mar-2015.md",
					"dirname": "newsletter/2015/03/12",
					"stem": "numenta-newsletter-mar-2015",
					"path": "newsletter/2015/03/12/numenta-newsletter-mar-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/03/12/numenta-newsletter-mar-2015.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/03/12/numenta-newsletter-mar-2015.md",
				"path": "/newsletter/2015/03/12/numenta-newsletter-mar-2015/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "As part of the community interested in machine intelligence, you may be following the current public debate about whether artificial intelligence should be feared or encouraged. Jeff Hawkins recently",
					"date": "2015/03/12",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "numenta newsletter march 2015",
					"title": "Numenta Newsletter March 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/04/29",
					"base": "numenta-newsletter-apr-2015.md",
					"ext": "md",
					"name": "numenta-newsletter-apr-2015",
					"extname": ".md",
					"basename": "numenta-newsletter-apr-2015.md",
					"dirname": "newsletter/2015/04/29",
					"stem": "numenta-newsletter-apr-2015",
					"path": "newsletter/2015/04/29/numenta-newsletter-apr-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/04/29/numenta-newsletter-apr-2015.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/04/29/numenta-newsletter-apr-2015.md",
				"path": "/newsletter/2015/04/29/numenta-newsletter-apr-2015/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "I have a lot of exciting news to share. Rather than making the newsletter overly long, I’ve provided links to get more information on any of these topics.",
					"date": "2015/04/29",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "numenta newsletter april 2015",
					"title": "Numenta Newsletter April 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/05/14",
					"base": "announcing-relationship-with-cortical-io.md",
					"ext": "md",
					"name": "announcing-relationship-with-cortical-io",
					"extname": ".md",
					"basename": "announcing-relationship-with-cortical-io.md",
					"dirname": "newsletter/2015/05/14",
					"stem": "announcing-relationship-with-cortical-io",
					"path": "newsletter/2015/05/14/announcing-relationship-with-cortical-io.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/05/14/announcing-relationship-with-cortical-io.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/05/14/announcing-relationship-with-cortical-io.md",
				"path": "/newsletter/2015/05/14/announcing-relationship-with-cortical-io/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "I am excited to let you know that we recently announced a relationship with Cortical.io, an innovative company based in Austria that is working on the next generation of natural language processing: language intelligence. Cortical.io has created a technology that can",
					"date": "2015/05/14",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "numenta newsletter may 2015 announcing relatioship cortical.io",
					"title": "May 2015 Newsletter: Cortical.io Relationship"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/06/09",
					"base": "numenta-open-sourcing-two-htm-products.md",
					"ext": "md",
					"name": "numenta-open-sourcing-two-htm-products",
					"extname": ".md",
					"basename": "numenta-open-sourcing-two-htm-products.md",
					"dirname": "newsletter/2015/06/09",
					"stem": "numenta-open-sourcing-two-htm-products",
					"path": "newsletter/2015/06/09/numenta-open-sourcing-two-htm-products.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/06/09/numenta-open-sourcing-two-htm-products.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/06/09/numenta-open-sourcing-two-htm-products.md",
				"path": "/newsletter/2015/06/09/numenta-open-sourcing-two-htm-products/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "In order to encourage our developers and to facilitate the creation of applications, we have decided to release substantially more of our technology into open source. To that end, we just added to the code base two complete products",
					"date": "2015/06/09",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "numenta open source htm products apps applications nupic june 2015 newsletter donna dubinsky",
					"title": "June 2015 Newsletter: Numenta Releasing Two Complete HTM Products into Open Source"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/07/02",
					"base": "announcing-open-source-htm-app-grok-for-stocks.md",
					"ext": "md",
					"name": "announcing-open-source-htm-app-grok-for-stocks",
					"extname": ".md",
					"basename": "announcing-open-source-htm-app-grok-for-stocks.md",
					"dirname": "newsletter/2015/07/02",
					"stem": "announcing-open-source-htm-app-grok-for-stocks",
					"path": "newsletter/2015/07/02/announcing-open-source-htm-app-grok-for-stocks.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/07/02/announcing-open-source-htm-app-grok-for-stocks.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/07/02/announcing-open-source-htm-app-grok-for-stocks.md",
				"path": "/newsletter/2015/07/02/announcing-open-source-htm-app-grok-for-stocks/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "Over the last two years, we have created a series of example applications that illustrate the capabilities of HTM. Grok for IT Analytics, available for download on the Amazon Web Services Marketplace",
					"date": "2015/07/02",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "htm for stocks monitor stock price volume twitter anomaly outlier detection numenta open source htm app application nupic",
					"title": "July 2015 Newsletter: Announcing HTM for Stocks - Open Source Example HTM App"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/09/01",
					"base": "partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics.md",
					"ext": "md",
					"name": "partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics",
					"extname": ".md",
					"basename": "partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics.md",
					"dirname": "newsletter/2015/09/01",
					"stem": "partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics",
					"path": "newsletter/2015/09/01/partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/09/01/partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/09/01/partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics.md",
				"path": "/newsletter/2015/09/01/partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "I am excited to tell you about a new partnership between Numenta and Avik Partners, an IT services and advanced analytics company. Before I tell you more about Avik, I want to remind you of our strategy for",
					"date": "2015/09/01",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "numenta partnership avik partners grok stream for it analytics",
					"title": "September 2015 Newsletter: Partnership between Numenta and Avik Partners on Grok for IT Analytics"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/10/01",
					"base": "numenta-anomaly-benchmark-and-numenta-htm-challenge.md",
					"ext": "md",
					"name": "numenta-anomaly-benchmark-and-numenta-htm-challenge",
					"extname": ".md",
					"basename": "numenta-anomaly-benchmark-and-numenta-htm-challenge.md",
					"dirname": "newsletter/2015/10/01",
					"stem": "numenta-anomaly-benchmark-and-numenta-htm-challenge",
					"path": "newsletter/2015/10/01/numenta-anomaly-benchmark-and-numenta-htm-challenge.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/10/01/numenta-anomaly-benchmark-and-numenta-htm-challenge.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/10/01/numenta-anomaly-benchmark-and-numenta-htm-challenge.md",
				"path": "/newsletter/2015/10/01/numenta-anomaly-benchmark-and-numenta-htm-challenge/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "To start with, I’m pleased to announce that we have a paper accepted on the Numenta Anomaly Benchmark (NAB).  I’ve written to you about the development of",
					"date": "2015/10/01",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "numenta anomaly benchmark nab numenta htm challenge nupic onsite november 2015",
					"title": "Numenta Anomaly Benchmark (NAB), and Numenta HTM Challenge"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/11/10",
					"base": "numenta-anomaly-benchmark-nab-open-source-with-white-paper.md",
					"ext": "md",
					"name": "numenta-anomaly-benchmark-nab-open-source-with-white-paper",
					"extname": ".md",
					"basename": "numenta-anomaly-benchmark-nab-open-source-with-white-paper.md",
					"dirname": "newsletter/2015/11/10",
					"stem": "numenta-anomaly-benchmark-nab-open-source-with-white-paper",
					"path": "newsletter/2015/11/10/numenta-anomaly-benchmark-nab-open-source-with-white-paper.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/11/10/numenta-anomaly-benchmark-nab-open-source-with-white-paper.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/11/10/numenta-anomaly-benchmark-nab-open-source-with-white-paper.md",
				"path": "/newsletter/2015/11/10/numenta-anomaly-benchmark-nab-open-source-with-white-paper/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "As I wrote you last month, we have been working hard on creating NAB, the Numenta Anomaly Benchmark, to test the HTM learning algorithms and enable comparison with other algorithms. Now, it’s here!",
					"date": "2015/11/10",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "numenta anomaly benchmark nab released open source streaming data",
					"title": "Numenta Anomaly Benchmark (NAB) is Released, Open Source with White Paper"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2015/11/17",
					"base": "why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory.md",
					"ext": "md",
					"name": "why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory",
					"extname": ".md",
					"basename": "why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory.md",
					"dirname": "newsletter/2015/11/17",
					"stem": "why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory",
					"path": "newsletter/2015/11/17/why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2015/11/17/why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2015/11/17/why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory.md",
				"path": "/newsletter/2015/11/17/why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "November is shaping up to be a busy and exciting month for Numenta. I wrote you about the release of our Numenta Anomaly Benchmark (NAB). Today I’m pleased to share more good news. Founders Jeff Hawkins and Subutai Ahmad have written a paper that",
					"date": "2015/11/17",
					"featured": false,
					"image": "../images/image.png",
					"org": "CEO",
					"tags": "numenta machine learning intelligence neurons thousands synapses theory sequence memory neocortex",
					"title": "Why Neurons Have Thousands of Synapses, A Theory of Sequence Memory in Neocortex"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2016/01/07",
					"base": "year-in-review-numenta-2015.md",
					"ext": "md",
					"name": "year-in-review-numenta-2015",
					"extname": ".md",
					"basename": "year-in-review-numenta-2015.md",
					"dirname": "newsletter/2016/01/07",
					"stem": "year-in-review-numenta-2015",
					"path": "newsletter/2016/01/07/year-in-review-numenta-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2016/01/07/year-in-review-numenta-2015.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2016/01/07/year-in-review-numenta-2015.md",
				"path": "/newsletter/2016/01/07/year-in-review-numenta-2015/",
				"data": {
					"author": "Donna Dubinsky",
					"brief": "As we look forward to a bright 2016 here at Numenta, I thought I’d pause and review the highlights of 2015.  From advancing our research to expanding our community, we had many accomplishments that laid the groundwork for significant",
					"date": "2016/01/07",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "CEO",
					"tags": "numenta 2015 review partners cortical.io avik grok nlp semantic folding nab numenta anomaly benchmark",
					"title": "Year in Review for Numenta 2015"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2016/02/10",
					"base": "numenta-anomaly-benchmark-competition.md",
					"ext": "md",
					"name": "numenta-anomaly-benchmark-competition",
					"extname": ".md",
					"basename": "numenta-anomaly-benchmark-competition.md",
					"dirname": "newsletter/2016/02/10",
					"stem": "numenta-anomaly-benchmark-competition",
					"path": "newsletter/2016/02/10/numenta-anomaly-benchmark-competition.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2016/02/10/numenta-anomaly-benchmark-competition.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2016/02/10/numenta-anomaly-benchmark-competition.md",
				"path": "/newsletter/2016/02/10/numenta-anomaly-benchmark-competition/",
				"data": {
					"author": "Christy Maver",
					"brief": "This month, I am pleased to announce the Numenta Anomaly Benchmark competition offered in conjunction with the IEEE WCCI (World Congress on Computational Intelligence). This contest follows the release last fall of our",
					"date": "2016/02/10",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "Director of Marketing",
					"tags": "numenta anomaly benchmark competition research papers strata hadoop world",
					"title": "Announcing the Numenta Anomaly Benchmark Competition"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2016/02/18",
					"base": "htm-for-stocks-available-in-the-app-store.md",
					"ext": "md",
					"name": "htm-for-stocks-available-in-the-app-store",
					"extname": ".md",
					"basename": "htm-for-stocks-available-in-the-app-store.md",
					"dirname": "newsletter/2016/02/18",
					"stem": "htm-for-stocks-available-in-the-app-store",
					"path": "newsletter/2016/02/18/htm-for-stocks-available-in-the-app-store.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2016/02/18/htm-for-stocks-available-in-the-app-store.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2016/02/18/htm-for-stocks-available-in-the-app-store.md",
				"path": "/newsletter/2016/02/18/htm-for-stocks-available-in-the-app-store/",
				"data": {
					"author": "Christy Maver",
					"brief": "I'm pleased to announce that we have released an iOS version of HTM for Stocks, a demonstration application that enables anybody to experience HTM technology firsthand. Previously available for Android only, HTM for Stocks now can be",
					"date": "2016/02/18",
					"featured": false,
					"image": "../images/image.png",
					"org": "Director of Marketing",
					"tags": "htm for stocks apple app store hierarchical temporal memory numenta",
					"title": "HTM for Stocks available in the App Store"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2016/03/28",
					"base": "neuron-paper-published-in-peer-reviewed-neuroscience-journal.md",
					"ext": "md",
					"name": "neuron-paper-published-in-peer-reviewed-neuroscience-journal",
					"extname": ".md",
					"basename": "neuron-paper-published-in-peer-reviewed-neuroscience-journal.md",
					"dirname": "newsletter/2016/03/28",
					"stem": "neuron-paper-published-in-peer-reviewed-neuroscience-journal",
					"path": "newsletter/2016/03/28/neuron-paper-published-in-peer-reviewed-neuroscience-journal.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2016/03/28/neuron-paper-published-in-peer-reviewed-neuroscience-journal.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2016/03/28/neuron-paper-published-in-peer-reviewed-neuroscience-journal.md",
				"path": "/newsletter/2016/03/28/neuron-paper-published-in-peer-reviewed-neuroscience-journal/",
				"data": {
					"author": "Christy Maver",
					"brief": "Numenta has an ambitious mission: reverse-engineer the neocortex to understand how it works and apply those principles to software to create intelligent machines.  Because neuroscience is the foundation of everything we do",
					"date": "2016/03/28",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "Director of Marketing",
					"tags": "numenta neuron paper published peer reviewed neuroscience journal frontiers neural circuits neurons have thousands synapses theory sequence memory",
					"title": "Neuron Paper Published in Peer-reviewed Neuroscience Journal"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2016/05/11",
					"base": "announcing-bami-biological-and-machine-intelligence.md",
					"ext": "md",
					"name": "announcing-bami-biological-and-machine-intelligence",
					"extname": ".md",
					"basename": "announcing-bami-biological-and-machine-intelligence.md",
					"dirname": "newsletter/2016/05/11",
					"stem": "announcing-bami-biological-and-machine-intelligence",
					"path": "newsletter/2016/05/11/announcing-bami-biological-and-machine-intelligence.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2016/05/11/announcing-bami-biological-and-machine-intelligence.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2016/05/11/announcing-bami-biological-and-machine-intelligence.md",
				"path": "/newsletter/2016/05/11/announcing-bami-biological-and-machine-intelligence/",
				"data": {
					"author": "Christy Maver",
					"brief": "We receive many requests for better documentation of our work, and as our research has progressed, we know that some of our most popular papers are now outdated. As a result, we have been working for some time on creating a living",
					"date": "2016/05/11",
					"featured": false,
					"image": "../../../../images/numenta.png",
					"org": "Director of Marketing",
					"tags": "numenta newsletter may 2016 bami biological and machine intelligence living online book machine intelligence htm hierarchical temporal memory",
					"title": "Announcing BAMI: Biological and Machine Intelligence, a Living Online Book"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter/2016/06/28",
					"base": "numenta-releases-htm-studio-desktop-application.md",
					"ext": "md",
					"name": "numenta-releases-htm-studio-desktop-application",
					"extname": ".md",
					"basename": "numenta-releases-htm-studio-desktop-application.md",
					"dirname": "newsletter/2016/06/28",
					"stem": "numenta-releases-htm-studio-desktop-application",
					"path": "newsletter/2016/06/28/numenta-releases-htm-studio-desktop-application.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/2016/06/28/numenta-releases-htm-studio-desktop-application.md",
					"isAbsolute": false
				},
				"requirePath": "newsletter/2016/06/28/numenta-releases-htm-studio-desktop-application.md",
				"path": "/newsletter/2016/06/28/numenta-releases-htm-studio-desktop-application/",
				"data": {
					"author": "Christy Maver",
					"brief": "Since I arrived at Numenta 9 months ago, one of the most common requests I’ve heard is that people want an easy way to experiment with HTM without having to dive deep into our code and algorithms",
					"date": "2016/06/28",
					"featured": false,
					"image": "../images/htm-studio.png",
					"org": "Director of Marketing",
					"tags": "numenta releases htm studio desktop application anomaly detection htm school nupic",
					"title": "Numenta Releases HTM Studio Desktop Application"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "newsletter",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "newsletter",
					"stem": "index",
					"path": "newsletter/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/newsletter/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "newsletter/index.jsx",
				"path": "/newsletter/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "numenta-anomaly-benchmark",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "numenta-anomaly-benchmark",
					"stem": "index",
					"path": "numenta-anomaly-benchmark/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/numenta-anomaly-benchmark/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "numenta-anomaly-benchmark/index.jsx",
				"path": "/numenta-anomaly-benchmark/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "open-source-project",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "open-source-project",
					"stem": "_Section",
					"path": "open-source-project/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/open-source-project/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "open-source-project/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "open-source-project",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "open-source-project",
					"stem": "index",
					"path": "open-source-project/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/open-source-project/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "open-source-project/index.jsx",
				"path": "/open-source-project/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "papers-videos-and-more",
					"stem": "_Section",
					"path": "papers-videos-and-more/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "papers-videos-and-more",
					"stem": "index",
					"path": "papers-videos-and-more/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/index.jsx",
				"path": "/papers-videos-and-more/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "applications-of-hierarchical-temporal-memory.md",
					"ext": "md",
					"name": "applications-of-hierarchical-temporal-memory",
					"extname": ".md",
					"basename": "applications-of-hierarchical-temporal-memory.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "applications-of-hierarchical-temporal-memory",
					"path": "papers-videos-and-more/learn/applications-of-hierarchical-temporal-memory.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/applications-of-hierarchical-temporal-memory.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/applications-of-hierarchical-temporal-memory.md",
				"path": "/papers-videos-and-more/learn/applications-of-hierarchical-temporal-memory/",
				"data": {
					"author": "Chetan Surpur",
					"brief": "This video talk on Applications of Hierarchical Temporal Memory (HTM) was delivered at a Numenta workshop.",
					"date": "2014/10/17",
					"image": null,
					"link": null,
					"org": "Software Engineer",
					"section": "detail",
					"sort": "e",
					"tags": "numenta hierarchical temporal memory htm applications",
					"title": "Applications of Hierarchical Temporal Memory (HTM)",
					"type": "talk"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "getting-started-with-numenta-technology.md",
					"ext": "md",
					"name": "getting-started-with-numenta-technology",
					"extname": ".md",
					"basename": "getting-started-with-numenta-technology.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "getting-started-with-numenta-technology",
					"path": "papers-videos-and-more/learn/getting-started-with-numenta-technology.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/getting-started-with-numenta-technology.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/getting-started-with-numenta-technology.md",
				"path": "/papers-videos-and-more/learn/getting-started-with-numenta-technology/",
				"data": {
					"author": "Numenta",
					"brief": "This video is replaced by the Numenta License Guide",
					"date": "2014/10/17",
					"image": null,
					"link": null,
					"org": "Celeste Baranski & Matt Taylor",
					"section": "archive",
					"sort": "a",
					"tags": "numenta getting started hierarchical temporal memory htm technology nupic",
					"title": "Getting Started With Numenta Technology",
					"type": "talk"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "hierarchical-temporal-memory-basics-tutorial.md",
					"ext": "md",
					"name": "hierarchical-temporal-memory-basics-tutorial",
					"extname": ".md",
					"basename": "hierarchical-temporal-memory-basics-tutorial.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "hierarchical-temporal-memory-basics-tutorial",
					"path": "papers-videos-and-more/learn/hierarchical-temporal-memory-basics-tutorial.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/hierarchical-temporal-memory-basics-tutorial.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/hierarchical-temporal-memory-basics-tutorial.md",
				"path": "/papers-videos-and-more/learn/hierarchical-temporal-memory-basics-tutorial/",
				"data": {
					"author": "Rahul Agarwal",
					"brief": "This video tutorial follows the 2011 HTM whitepaper, and is largely obsolete. The content of this tutorial will be replace by HTM School (over time).",
					"date": "2013/08/03",
					"image": null,
					"link": null,
					"org": "Software Engineer",
					"section": "archive",
					"sort": "c",
					"tags": "htm hierarchical temporal memory tutorial algorithm basics",
					"title": "HTM Learning Algorithm Tutorial - Algorithm Basics",
					"type": "talk"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "hierarchical-temporal-memory-white-paper.md",
					"ext": "md",
					"name": "hierarchical-temporal-memory-white-paper",
					"extname": ".md",
					"basename": "hierarchical-temporal-memory-white-paper.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "hierarchical-temporal-memory-white-paper",
					"path": "papers-videos-and-more/learn/hierarchical-temporal-memory-white-paper.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/hierarchical-temporal-memory-white-paper.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/hierarchical-temporal-memory-white-paper.md",
				"path": "/papers-videos-and-more/learn/hierarchical-temporal-memory-white-paper/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "There have been changes in our thinking, in algorithm implementation, in terminology and in other areas since this paper was written, rendering part of this paper obsolete. Much of this paper has been replaced by BAMI and the current white papers, and we will continue to provide updated material in subsequent releases of BAMI.",
					"date": "2011/09/12",
					"image": null,
					"link": "/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-en.pdf",
					"org": "Co-Founder",
					"section": "archive",
					"sort": "b",
					"tags": "hierarchical temporal memory htm jeff hawkins whitepaper pdf",
					"title": "Hierarchical Temporal Memory (HTM) Whitepaper",
					"type": "paper"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "htm-videos-from-jeff-hawkins.md",
					"ext": "md",
					"name": "htm-videos-from-jeff-hawkins",
					"extname": ".md",
					"basename": "htm-videos-from-jeff-hawkins.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "htm-videos-from-jeff-hawkins",
					"path": "papers-videos-and-more/learn/htm-videos-from-jeff-hawkins.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/htm-videos-from-jeff-hawkins.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/htm-videos-from-jeff-hawkins.md",
				"path": "/papers-videos-and-more/learn/htm-videos-from-jeff-hawkins/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "These two videos are similar, and provide an overview of HTM and associated topics by Numenta’s founder, Jeff Hawkins. The talks have slightly different emphasis. For instance, the first video has more details on SDRs.",
					"date": "2014/11/22",
					"image": null,
					"link": null,
					"org": "Co-Founder",
					"section": "overview",
					"sort": "c",
					"tags": "numenta htm videos heirarchical temporal memory brain machine intelligence jeff hawkins",
					"title": "HTM Videos from Jeff Hawkins",
					"type": "talk"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "machine-intelligence-with-streaming-data-webinar.md",
					"ext": "md",
					"name": "machine-intelligence-with-streaming-data-webinar",
					"extname": ".md",
					"basename": "machine-intelligence-with-streaming-data-webinar.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "machine-intelligence-with-streaming-data-webinar",
					"path": "papers-videos-and-more/learn/machine-intelligence-with-streaming-data-webinar.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/machine-intelligence-with-streaming-data-webinar.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/machine-intelligence-with-streaming-data-webinar.md",
				"path": "/papers-videos-and-more/learn/machine-intelligence-with-streaming-data-webinar/",
				"data": {
					"author": "Numenta",
					"brief": "This webinar provides an overview of the current state of HTM, with an emphasis on the software implementation and example applications. The Q&A session at the end of the webinar answers some popular user questions.",
					"date": "2016/04/26",
					"image": null,
					"link": null,
					"org": "Christy Maver & Scott Purdy",
					"section": "overview",
					"sort": "d",
					"tags": "numenta webinar machine intelligence streaming data real time anomaly detection",
					"title": "Machine Intelligence with Streaming Data Webinar",
					"type": "talk"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "on-intelligence.md",
					"ext": "md",
					"name": "on-intelligence",
					"extname": ".md",
					"basename": "on-intelligence.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "on-intelligence",
					"path": "papers-videos-and-more/learn/on-intelligence.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/on-intelligence.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/on-intelligence.md",
				"path": "/papers-videos-and-more/learn/on-intelligence/",
				"data": {
					"author": "Jeff Hawkins & Sandra Blakeslee",
					"brief": "The core concepts in Hierarchical Temporal Memory (HTM) theory were first described in this book titled On Intelligence, which was written by Jeff Hawkins with the help of Sandra Blakeslee.",
					"date": "2005/07/14",
					"image": null,
					"link": "http://www.amazon.com/On-Intelligence-Jeff-Hawkins/dp/0805078533/ref=sr_1_1?ie=UTF8&qid=1363894040&sr=8-1&keywords=on+intelligence",
					"org": "Co-Founder & Co-Author",
					"section": "overview",
					"sort": "a",
					"tags": "on intelligence jeff hawkins htm hierarchical temporal memory",
					"title": "On Intelligence",
					"type": "book"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "science-of-anomaly-detection.md",
					"ext": "md",
					"name": "science-of-anomaly-detection",
					"extname": ".md",
					"basename": "science-of-anomaly-detection.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "science-of-anomaly-detection",
					"path": "papers-videos-and-more/learn/science-of-anomaly-detection.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/science-of-anomaly-detection.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/science-of-anomaly-detection.md",
				"path": "/papers-videos-and-more/learn/science-of-anomaly-detection/",
				"data": {
					"author": "Scott Purdy",
					"brief": "This video talk on the Science of Anomaly Detection was delivered at a Numenta workshop and covers the application of HTM to anomaly detection in streaming data.",
					"date": "2014/10/17",
					"image": null,
					"link": null,
					"org": "Engineering Manager",
					"section": "detail",
					"sort": "f",
					"tags": "numenta science of anomaly detection",
					"title": "Science of Anomaly Detection",
					"type": "talk"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/learn",
					"base": "sparse-distributed-representations.md",
					"ext": "md",
					"name": "sparse-distributed-representations",
					"extname": ".md",
					"basename": "sparse-distributed-representations.md",
					"dirname": "papers-videos-and-more/learn",
					"stem": "sparse-distributed-representations",
					"path": "papers-videos-and-more/learn/sparse-distributed-representations.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/learn/sparse-distributed-representations.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/learn/sparse-distributed-representations.md",
				"path": "/papers-videos-and-more/learn/sparse-distributed-representations/",
				"data": {
					"author": "Subutai Ahmad",
					"brief": "This video talk on Sparse Distributed Representations (SDR) covers a subset of the topics in the BAMI chapter on SDRs.",
					"date": "2014/10/17",
					"image": null,
					"link": null,
					"org": "VP Research",
					"section": "detail",
					"sort": "g",
					"tags": "numenta sparse distributed representations sdr brain data structure",
					"title": "Sparse Distributed Representations - Our Brain's Data Structure",
					"type": "talk"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/papers",
					"base": "continuous-online-sequence-learning-with-an-unsupervised-neural-network-model.md",
					"ext": "md",
					"name": "continuous-online-sequence-learning-with-an-unsupervised-neural-network-model",
					"extname": ".md",
					"basename": "continuous-online-sequence-learning-with-an-unsupervised-neural-network-model.md",
					"dirname": "papers-videos-and-more/papers",
					"stem": "continuous-online-sequence-learning-with-an-unsupervised-neural-network-model",
					"path": "papers-videos-and-more/papers/continuous-online-sequence-learning-with-an-unsupervised-neural-network-model.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/papers/continuous-online-sequence-learning-with-an-unsupervised-neural-network-model.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/papers/continuous-online-sequence-learning-with-an-unsupervised-neural-network-model.md",
				"path": "/papers-videos-and-more/papers/continuous-online-sequence-learning-with-an-unsupervised-neural-network-model/",
				"data": {
					"author": "Yuwei Cui, Subutai Ahmad, Jeff Hawkins & Chetan Surpur",
					"brief": "Analysis of HTM sequence memory applied to various sequence learning and prediction problems. Written with a machine learning perspective, the paper contains some comparisons to statistical and Deep Learning techniques.",
					"date": "2015/12/17",
					"image": null,
					"link": "http://arxiv.org/abs/1512.05463",
					"org": "Preprint of journal submission",
					"sort": "d",
					"title": "Continuous Online Sequence Learning with an Unsupervised Neural Network Model",
					"type": "machine-learning"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/papers",
					"base": "encoding-data-for-htm-systems.md",
					"ext": "md",
					"name": "encoding-data-for-htm-systems",
					"extname": ".md",
					"basename": "encoding-data-for-htm-systems.md",
					"dirname": "papers-videos-and-more/papers",
					"stem": "encoding-data-for-htm-systems",
					"path": "papers-videos-and-more/papers/encoding-data-for-htm-systems.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/papers/encoding-data-for-htm-systems.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/papers/encoding-data-for-htm-systems.md",
				"path": "/papers-videos-and-more/papers/encoding-data-for-htm-systems/",
				"data": {
					"author": "Scott Purdy",
					"brief": "Hierarchical Temporal Memory (HTM) is a biologically inspired machine intelligence technology that mimics the architecture and processes of the neocortex. In this white paper we describe how to encode data as Sparse Distributed Representations (SDRs) for use in HTM systems. We explain several existing encoders, which are available through the open source project called NuPIC, and we discuss requirements for creating encoders for new types of data.",
					"date": "2016/02/18",
					"link": "http://arxiv.org/abs/1602.05925",
					"org": null,
					"sort": "p",
					"title": "Encoding Data for HTM Systems",
					"type": "machine-learning"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/papers",
					"base": "evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark.md",
					"ext": "md",
					"name": "evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark",
					"extname": ".md",
					"basename": "evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark.md",
					"dirname": "papers-videos-and-more/papers",
					"stem": "evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark",
					"path": "papers-videos-and-more/papers/evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/papers/evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/papers/evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark.md",
				"path": "/papers-videos-and-more/papers/evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark/",
				"data": {
					"author": "Alexander Lavin & Subutai Ahmad",
					"brief": "14th IEEE ICMLA 2015 - This paper discusses how we should think about anomaly detection for streaming applications. It introduces a new open-source benchmark for detecting anomalies in real-time, time-series data.",
					"date": "2015/10/12",
					"image": null,
					"link": "http://arxiv.org/abs/1510.03336",
					"org": "Published conference paper",
					"sort": "g",
					"title": "Evaluating Real-time Anomaly Detection Algorithms - the Numenta Anomaly Benchmark",
					"type": "machine-learning"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/papers",
					"base": "how-do-neurons-operate-on-sparse-distributed-representations.md",
					"ext": "md",
					"name": "how-do-neurons-operate-on-sparse-distributed-representations",
					"extname": ".md",
					"basename": "how-do-neurons-operate-on-sparse-distributed-representations.md",
					"dirname": "papers-videos-and-more/papers",
					"stem": "how-do-neurons-operate-on-sparse-distributed-representations",
					"path": "papers-videos-and-more/papers/how-do-neurons-operate-on-sparse-distributed-representations.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/papers/how-do-neurons-operate-on-sparse-distributed-representations.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/papers/how-do-neurons-operate-on-sparse-distributed-representations.md",
				"path": "/papers-videos-and-more/papers/how-do-neurons-operate-on-sparse-distributed-representations/",
				"data": {
					"author": "Subutai Ahmad & Jeff Hawkins",
					"brief": "This paper describes a mathematical model for quantifying the benefits and limitations of sparse representations in neurons and cortical networks.",
					"date": "2016/01/05",
					"link": "http://arxiv.org/abs/1601.00720",
					"org": "Preprint of journal submission",
					"sort": "j",
					"title": "How Do Neurons Operate on Sparse Distributed Representations? A Mathematical Theory of Sparsity, Neurons and Active Dendrites",
					"type": "neuroscience"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/papers",
					"base": "porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform.md",
					"ext": "md",
					"name": "porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform",
					"extname": ".md",
					"basename": "porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform.md",
					"dirname": "papers-videos-and-more/papers",
					"stem": "porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform",
					"path": "papers-videos-and-more/papers/porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/papers/porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/papers/porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform.md",
				"path": "/papers-videos-and-more/papers/porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform/",
				"data": {
					"author": "Sebastian Billaudelle & Subutai Ahmad",
					"brief": "Recently there has been much interest in building custom hardware implementations of HTM systems. This paper discusses one such scenario, and shows how to port HTM algorithms to analog hardware platforms such as the one developed by the Human Brain Project.",
					"date": "2015/05/08",
					"image": null,
					"link": "http://arxiv.org/abs/1505.02142",
					"org": null,
					"sort": "s",
					"title": "Porting HTM Models to the Heidelberg Neuromorphic Computing Platform",
					"type": "neuroscience"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/papers",
					"base": "properties-of-sparse-distributed-representations.md",
					"ext": "md",
					"name": "properties-of-sparse-distributed-representations",
					"extname": ".md",
					"basename": "properties-of-sparse-distributed-representations.md",
					"dirname": "papers-videos-and-more/papers",
					"stem": "properties-of-sparse-distributed-representations",
					"path": "papers-videos-and-more/papers/properties-of-sparse-distributed-representations.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/papers/properties-of-sparse-distributed-representations.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/papers/properties-of-sparse-distributed-representations.md",
				"path": "/papers-videos-and-more/papers/properties-of-sparse-distributed-representations/",
				"data": {
					"author": "Subutai Ahmad & Jeff Hawkins",
					"brief": "An earlier version of the above submission, this paper applies our mathematical model of sparse representations to practical HTM systems.",
					"date": "2014/10/28",
					"link": "http://arxiv.org/abs/1503.07469",
					"org": null,
					"sort": "m",
					"title": "Properties of Sparse Distributed Representations and their Application To Hierarchical Temporal Memory",
					"type": "neuroscience"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/papers",
					"base": "real-time-anomaly-detection-for-streaming-analytics.md",
					"ext": "md",
					"name": "real-time-anomaly-detection-for-streaming-analytics",
					"extname": ".md",
					"basename": "real-time-anomaly-detection-for-streaming-analytics.md",
					"dirname": "papers-videos-and-more/papers",
					"stem": "real-time-anomaly-detection-for-streaming-analytics",
					"path": "papers-videos-and-more/papers/real-time-anomaly-detection-for-streaming-analytics.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/papers/real-time-anomaly-detection-for-streaming-analytics.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/papers/real-time-anomaly-detection-for-streaming-analytics.md",
				"path": "/papers-videos-and-more/papers/real-time-anomaly-detection-for-streaming-analytics/",
				"data": {
					"author": "Subutai Ahmad & Scott Purdy",
					"brief": "Much of the worlds data is streaming, time-series data, where anomalies give significant information in critical situations. Yet detecting anomalies in streaming data is a difficult task, requiring detectors to process data in real-time, and learn while simultaneously making predictions.",
					"date": "2016/07/08",
					"link": "https://arxiv.org/abs/1607.02480",
					"org": "Preprint of journal submission",
					"sort": "h",
					"title": "Real-Time Anomaly Detection for Streaming Analytics",
					"type": "machine-learning"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "papers-videos-and-more/papers",
					"base": "why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex.md",
					"ext": "md",
					"name": "why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex",
					"extname": ".md",
					"basename": "why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex.md",
					"dirname": "papers-videos-and-more/papers",
					"stem": "why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex",
					"path": "papers-videos-and-more/papers/why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/papers-videos-and-more/papers/why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex.md",
					"isAbsolute": false
				},
				"requirePath": "papers-videos-and-more/papers/why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex.md",
				"path": "/papers-videos-and-more/papers/why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex/",
				"data": {
					"author": "Jeff Hawkins & Subutai Ahmad",
					"brief": "Foundational paper describing core HTM theory for sequence memory and its relationship to the neocortex. Written with a neuroscience perspective, the paper explains why neurons need so many synapses and how networks of neurons can form a powerful sequence learning mechanism.",
					"date": "2015/10/31",
					"image": null,
					"link": "http://journal.frontiersin.org/article/10.3389/fncir.2016.00023/abstract",
					"org": "Published in Frontiers in Neural Circuits Journal",
					"sort": "a",
					"title": "Why Neurons Have Thousands of Synapses, A Theory of Sequence Memory in Neocortex",
					"type": "neuroscience"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "partners",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "partners",
					"stem": "_Section",
					"path": "partners/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/partners/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "partners/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "partners",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "partners",
					"stem": "index",
					"path": "partners/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/partners/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "partners/index.jsx",
				"path": "/partners/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2013/02/14",
					"base": "numenta-gigaom-presentation.md",
					"ext": "md",
					"name": "numenta-gigaom-presentation",
					"extname": ".md",
					"basename": "numenta-gigaom-presentation.md",
					"dirname": "press/2013/02/14",
					"stem": "numenta-gigaom-presentation",
					"path": "press/2013/02/14/numenta-gigaom-presentation.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2013/02/14/numenta-gigaom-presentation.md",
					"isAbsolute": false
				},
				"requirePath": "press/2013/02/14/numenta-gigaom-presentation.md",
				"path": "/press/2013/02/14/numenta-gigaom-presentation/",
				"data": {
					"author": "Numenta",
					"brief": "Numenta, a breakthrough machine intelligence company, today announced it has been selected as one of the four Big Ideas companies to be featured at the",
					"date": "2013/02/14",
					"featured": false,
					"image": "../images/numenta.png",
					"link": null,
					"org": "Press Release",
					"tags": "numenta grok gigaom structure data",
					"title": "Numenta to Present Grok, a Solution for Fast Data, as one of the Big Ideas at the GigaOM Structure:Data Conference on March 20, 2013",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2013/04/18",
					"base": "thingworx-partnership.md",
					"ext": "md",
					"name": "thingworx-partnership",
					"extname": ".md",
					"basename": "thingworx-partnership.md",
					"dirname": "press/2013/04/18",
					"stem": "thingworx-partnership",
					"path": "press/2013/04/18/thingworx-partnership.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2013/04/18/thingworx-partnership.md",
					"isAbsolute": false
				},
				"requirePath": "press/2013/04/18/thingworx-partnership.md",
				"path": "/press/2013/04/18/thingworx-partnership/",
				"data": {
					"author": "Numenta",
					"brief": "The proliferation of devices and sensors creating machine-generated data yield enormous opportunity for automated predictive maintenance solutions. According",
					"date": "2013/04/18",
					"featured": false,
					"image": "../images/numenta.png",
					"link": null,
					"org": "Press Release",
					"tags": "thingworx numenta partner predictive maintenance connected world",
					"title": "ThingWorx and Numenta Partner to offer Next Generation Predictive Maintenance and Operations for the Connected World",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2013/05/17",
					"base": "sybase-esp-integration.md",
					"ext": "md",
					"name": "sybase-esp-integration",
					"extname": ".md",
					"basename": "sybase-esp-integration.md",
					"dirname": "press/2013/05/17",
					"stem": "sybase-esp-integration",
					"path": "press/2013/05/17/sybase-esp-integration.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2013/05/17/sybase-esp-integration.md",
					"isAbsolute": false
				},
				"requirePath": "press/2013/05/17/sybase-esp-integration.md",
				"path": "/press/2013/05/17/sybase-esp-integration/",
				"data": {
					"author": "Numenta",
					"brief": "Numenta, a leading provider of solutions that help companies intelligently act on machine-generated data, today announced its Grok solution has achieved certified integration",
					"date": "2013/05/17",
					"featured": false,
					"image": "../images/numenta.png",
					"link": null,
					"org": "Press Release",
					"tags": "grok sap sybase esp cep complex event processing",
					"title": "Grok’s Action Intelligence Solution Achieves Certified Integration with SAP® Sybase ESP Complex Event Processing Platform",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2013/07/22",
					"base": "nupic-open-source-project.md",
					"ext": "md",
					"name": "nupic-open-source-project",
					"extname": ".md",
					"basename": "nupic-open-source-project.md",
					"dirname": "press/2013/07/22",
					"stem": "nupic-open-source-project",
					"path": "press/2013/07/22/nupic-open-source-project.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2013/07/22/nupic-open-source-project.md",
					"isAbsolute": false
				},
				"requirePath": "press/2013/07/22/nupic-open-source-project.md",
				"path": "/press/2013/07/22/nupic-open-source-project/",
				"data": {
					"author": "Numenta",
					"brief": "Numenta.org has been created as the home for the NuPIC (Numenta Platform for Intelligent Computing) open source project and community.  The project was",
					"date": "2013/07/22",
					"featured": false,
					"image": "../images/nupic.png",
					"link": null,
					"org": "Press Release",
					"tags": "nupic open source numenta",
					"title": "NuPIC Open Source Project and Community Established at Numenta.org",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2013/12/04",
					"base": "computing-like-the-brain.md",
					"ext": "md",
					"name": "computing-like-the-brain",
					"extname": ".md",
					"basename": "computing-like-the-brain.md",
					"dirname": "press/2013/12/04",
					"stem": "computing-like-the-brain",
					"path": "press/2013/12/04/computing-like-the-brain.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2013/12/04/computing-like-the-brain.md",
					"isAbsolute": false
				},
				"requirePath": "press/2013/12/04/computing-like-the-brain.md",
				"path": "/press/2013/12/04/computing-like-the-brain/",
				"data": {
					"author": "Editor",
					"brief": "Computing Like the Brain - The Path to Machine Intelligence, a video off Jeff Hawkins at the YOW 2013 conference",
					"date": "2013/12/04",
					"featured": false,
					"image": "../images/yow.png",
					"link": "http://yow.eventer.com/yow-2013-1080/computing-like-the-brain-the-path-to-machine-intelligence-by-jeff-hawkins-1408",
					"org": "YOW",
					"tags": "computing brain machine intelligence jeff hawkins yow 2013",
					"title": "Computing Like the Brain: The Path to Machine Intelligence",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/01/22",
					"base": "fujitsu-natf-video.md",
					"ext": "md",
					"name": "fujitsu-natf-video",
					"extname": ".md",
					"basename": "fujitsu-natf-video.md",
					"dirname": "press/2014/01/22",
					"stem": "fujitsu-natf-video",
					"path": "press/2014/01/22/fujitsu-natf-video.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/01/22/fujitsu-natf-video.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/01/22/fujitsu-natf-video.md",
				"path": "/press/2014/01/22/fujitsu-natf-video/",
				"data": {
					"author": "Editor",
					"brief": "Fujitsu NATF Video with Jeff Hawkins",
					"date": "2014/01/22",
					"featured": false,
					"image": "../images/fujitsu.png",
					"link": "https://www.youtube.com/watch?v=cz-3WDdqbj0&list=PLX9JDz3uBpNCjNfq20KOCvsP6szY94r2e",
					"org": "Fujitsu",
					"tags": "fujitsu natf video jeff hawkins",
					"title": "Brains, Data, and Machine Intelligence",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/01/29",
					"base": "brains-view-of-economics.md",
					"ext": "md",
					"name": "brains-view-of-economics",
					"extname": ".md",
					"basename": "brains-view-of-economics.md",
					"dirname": "press/2014/01/29",
					"stem": "brains-view-of-economics",
					"path": "press/2014/01/29/brains-view-of-economics.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/01/29/brains-view-of-economics.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/01/29/brains-view-of-economics.md",
				"path": "/press/2014/01/29/brains-view-of-economics/",
				"data": {
					"author": "Ricardo Hausmann",
					"brief": "In his pathbreaking 2005 book On Intelligence, Jeff Hawkins proposed an alternative paradigm of how the human brain works. In his view, the brain is not a Turing machine that manipulates symbols according to a table of rules, which is the model on which computers and artificial intelligence have been based",
					"date": "2014/01/29",
					"featured": false,
					"image": "../images/project-syndicate.png",
					"link": "http://www.project-syndicate.org/commentary/ricardo-hausmann-proposes-an-alternative-approach-to-economic-development-based-on-how-the-human-brain-functions",
					"org": "Project Syndicate",
					"tags": "brain view economics alternative",
					"title": "A Brain's View of Economics",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/03/25",
					"base": "numenta-releases-grok-for-it-analytics-on-aws.md",
					"ext": "md",
					"name": "numenta-releases-grok-for-it-analytics-on-aws",
					"extname": ".md",
					"basename": "numenta-releases-grok-for-it-analytics-on-aws.md",
					"dirname": "press/2014/03/25",
					"stem": "numenta-releases-grok-for-it-analytics-on-aws",
					"path": "press/2014/03/25/numenta-releases-grok-for-it-analytics-on-aws.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/03/25/numenta-releases-grok-for-it-analytics-on-aws.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/03/25/numenta-releases-grok-for-it-analytics-on-aws.md",
				"path": "/press/2014/03/25/numenta-releases-grok-for-it-analytics-on-aws/",
				"data": {
					"author": "Numenta",
					"brief": "Grok anomaly detection leverages sophisticated machine intelligence algorithms to enable new insights into critical IT systems. Grok automatically learns complex patterns and then",
					"date": "2014/03/25",
					"featured": false,
					"image": "../images/numenta.png",
					"link": null,
					"org": "Press Release",
					"tags": "grok it analytics numenta aws",
					"title": "Numenta Releases Grok for IT Analytics on AWS",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/03/29",
					"base": "building-an-ai-that-mimics-our-neocortex.md",
					"ext": "md",
					"name": "building-an-ai-that-mimics-our-neocortex",
					"extname": ".md",
					"basename": "building-an-ai-that-mimics-our-neocortex.md",
					"dirname": "press/2014/03/29",
					"stem": "building-an-ai-that-mimics-our-neocortex",
					"path": "press/2014/03/29/building-an-ai-that-mimics-our-neocortex.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/03/29/building-an-ai-that-mimics-our-neocortex.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/03/29/building-an-ai-that-mimics-our-neocortex.md",
				"path": "/press/2014/03/29/building-an-ai-that-mimics-our-neocortex/",
				"data": {
					"author": "Jack Clark",
					"brief": "Jeff Hawkins has bet his reputation, fortune, and entire intellectual life on one idea: that he understands the brain well enough to create machines with an intelligence we recognize as our own",
					"date": "2014/03/29",
					"featured": false,
					"image": "../images/the-register.png",
					"link": "http://www.theregister.co.uk/2014/03/29/hawkins_ai_feature/",
					"org": "The Register",
					"tags": "building ai mimic neocortex",
					"title": "Meet the Man Building an AI that Mimics Our Neocortex",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/04/07",
					"base": "triangulation-146-with-leo-laporte.md",
					"ext": "md",
					"name": "triangulation-146-with-leo-laporte",
					"extname": ".md",
					"basename": "triangulation-146-with-leo-laporte.md",
					"dirname": "press/2014/04/07",
					"stem": "triangulation-146-with-leo-laporte",
					"path": "press/2014/04/07/triangulation-146-with-leo-laporte.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/04/07/triangulation-146-with-leo-laporte.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/04/07/triangulation-146-with-leo-laporte.md",
				"path": "/press/2014/04/07/triangulation-146-with-leo-laporte/",
				"data": {
					"author": "Leo Laporte",
					"brief": "Jeff Hawkins on Triangulation 146 with Leo Laporte",
					"date": "2014/04/07",
					"featured": false,
					"image": "../images/twit.png",
					"link": "http://twit.tv/show/triangulation/146",
					"org": "Twit.tv",
					"tags": "jeff hawkins on triangulation 146 with leo laporte",
					"title": "Jeff Hawkins on Triangulation 146 with Leo Laporte",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/04/08",
					"base": "path-to-machine-intelligence.md",
					"ext": "md",
					"name": "path-to-machine-intelligence",
					"extname": ".md",
					"basename": "path-to-machine-intelligence.md",
					"dirname": "press/2014/04/08",
					"stem": "path-to-machine-intelligence",
					"path": "press/2014/04/08/path-to-machine-intelligence.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/04/08/path-to-machine-intelligence.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/04/08/path-to-machine-intelligence.md",
				"path": "/press/2014/04/08/path-to-machine-intelligence/",
				"data": {
					"author": "Editor",
					"brief": "Jeff Hawkins, founder of Numenta recently gave a talk highlighting his approach to machine intelligence—an approach that is highly dependent on an understanding of the human neocortex",
					"date": "2014/04/08",
					"featured": false,
					"image": "../images/33rd-square.png",
					"link": "http://www.33rdsquare.com/2014/04/jeff-hawkins-on-path-to-machine.html",
					"org": "33rd Square",
					"tags": "path to machine intelligence",
					"title": "Jeff Hawkins on the Path to Machine Intelligence",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/04/20",
					"base": "what-really-scares-tech-leaders-about-artificial-intelligence.md",
					"ext": "md",
					"name": "what-really-scares-tech-leaders-about-artificial-intelligence",
					"extname": ".md",
					"basename": "what-really-scares-tech-leaders-about-artificial-intelligence.md",
					"dirname": "press/2014/04/20",
					"stem": "what-really-scares-tech-leaders-about-artificial-intelligence",
					"path": "press/2014/04/20/what-really-scares-tech-leaders-about-artificial-intelligence.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/04/20/what-really-scares-tech-leaders-about-artificial-intelligence.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/04/20/what-really-scares-tech-leaders-about-artificial-intelligence.md",
				"path": "/press/2014/04/20/what-really-scares-tech-leaders-about-artificial-intelligence/",
				"data": {
					"author": "Anthony Wing Kosner",
					"brief": "Does artificial intelligence represent an existential threat to humanity? Some very smart people think so. Technologists are supposed to be rationalists, and yet Musk waxed supernatural about the threat of renegade AI.",
					"date": "2015/04/20",
					"featured": false,
					"image": "../images/forbes.png",
					"link": "http://www.forbes.com/sites/anthonykosner/2015/04/20/what-really-scares-tech-leaders-about-artificial-intelligence/",
					"org": "Forbes",
					"tags": "scares tech leaders artificial intelligence ai numenta htm jeff hawkins",
					"title": "What Really Scares Tech Leaders About Artificial Intelligence?",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/04/23",
					"base": "neuromorphic-chips-enhance-artificial-intelligence.md",
					"ext": "md",
					"name": "neuromorphic-chips-enhance-artificial-intelligence",
					"extname": ".md",
					"basename": "neuromorphic-chips-enhance-artificial-intelligence.md",
					"dirname": "press/2014/04/23",
					"stem": "neuromorphic-chips-enhance-artificial-intelligence",
					"path": "press/2014/04/23/neuromorphic-chips-enhance-artificial-intelligence.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/04/23/neuromorphic-chips-enhance-artificial-intelligence.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/04/23/neuromorphic-chips-enhance-artificial-intelligence.md",
				"path": "/press/2014/04/23/neuromorphic-chips-enhance-artificial-intelligence/",
				"data": {
					"author": "Robert D. Hof",
					"brief": "Trying to emulate the brain just by using special software on conventional processors—the way Google did in its cat experiment—is way too inefficient to be the basis of machines with still greater intelligence, says Jeff Hawkins, a leading thinker on AI who created the Palm Pilot before cofounding Numenta, a maker of brain-inspired software",
					"date": "2014/04/23",
					"featured": false,
					"image": "../images/mit-technology-review.png",
					"link": "http://m.technologyreview.com/featuredstory/526506/neuromorphic-chips/",
					"org": "MIT Technology Review",
					"tags": "neuromorphic chips enhance artificial intelligence",
					"title": "Neuromorphic Chips: Microprocessors Configured Like Brains",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/04/30",
					"base": "when-big-data-is-old-news.md",
					"ext": "md",
					"name": "when-big-data-is-old-news",
					"extname": ".md",
					"basename": "when-big-data-is-old-news.md",
					"dirname": "press/2014/04/30",
					"stem": "when-big-data-is-old-news",
					"path": "press/2014/04/30/when-big-data-is-old-news.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/04/30/when-big-data-is-old-news.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/04/30/when-big-data-is-old-news.md",
				"path": "/press/2014/04/30/when-big-data-is-old-news/",
				"data": {
					"author": "Editor",
					"brief": "Big data gives you large amounts of data that can provide interesting insights, but typically static. But we live in reality more and more in the direction of data that is constantly moving and changing. We call it streaming data",
					"date": "2014/04/30",
					"featured": false,
					"image": "../images/nordea-invest.png",
					"link": "http://mag.nordea.dk/invest/2014/04/naar-big-data-bliver-old-news",
					"org": "Nordea Invest",
					"tags": "big data old news",
					"title": "As Big Data Becomes Old News",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/05/29",
					"base": "computer-programming-is-a-dying-art.md",
					"ext": "md",
					"name": "computer-programming-is-a-dying-art",
					"extname": ".md",
					"basename": "computer-programming-is-a-dying-art.md",
					"dirname": "press/2014/05/29",
					"stem": "computer-programming-is-a-dying-art",
					"path": "press/2014/05/29/computer-programming-is-a-dying-art.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/05/29/computer-programming-is-a-dying-art.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/05/29/computer-programming-is-a-dying-art.md",
				"path": "/press/2014/05/29/computer-programming-is-a-dying-art/",
				"data": {
					"author": "Kevin Maney",
					"brief": "Numenta, run by PalmPilot inventor Jeff Hawkins, developed technology called Grok that learns by recognizing patterns over time, the way brains do. It’s being used, for instance, by Amazon to spot unusual activity on its computers.",
					"date": "2014/05/29",
					"featured": false,
					"image": "../images/newsweek.png",
					"link": "http://www.newsweek.com/2014/06/06/computer-programming-dying-art-252618.html",
					"org": "Newsweek",
					"tags": "computer programming dying art",
					"title": "Computer Programming is a Dying Art",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/06/03",
					"base": "big-data-dump-overwhelms-spy-agencies.md",
					"ext": "md",
					"name": "big-data-dump-overwhelms-spy-agencies",
					"extname": ".md",
					"basename": "big-data-dump-overwhelms-spy-agencies.md",
					"dirname": "press/2014/06/03",
					"stem": "big-data-dump-overwhelms-spy-agencies",
					"path": "press/2014/06/03/big-data-dump-overwhelms-spy-agencies.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/06/03/big-data-dump-overwhelms-spy-agencies.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/06/03/big-data-dump-overwhelms-spy-agencies.md",
				"path": "/press/2014/06/03/big-data-dump-overwhelms-spy-agencies/",
				"data": {
					"author": "Jordan Robertson",
					"brief": "Last year, ImportIO began using software made by Numenta, a Redwood City, California-based company founded by Palm's founder Jeff Hawkins and former CEO Donna Dubinsky. Their approach: Instead of focusing on data collection and retrospective looks at information piling up in a warehouse, focus on analyzing data streams in real time to spot anomalies.",
					"date": "2014/06/03",
					"featured": false,
					"image": "../images/bloomberg.png",
					"link": "http://www.bloomberg.com/news/2014-06-03/big-data-s-dumping-grounds-how-hoarding-hinders-startups-to-spy-agencies.html",
					"org": "Bloomberg",
					"tags": "big data overwhelm spy agencies",
					"title": "The Big Data Dump: How Info-Hoarding Can Overwhelm Startups and Spy Agencies",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/07/09",
					"base": "numenta-apps-mimic-way-brain-works.md",
					"ext": "md",
					"name": "numenta-apps-mimic-way-brain-works",
					"extname": ".md",
					"basename": "numenta-apps-mimic-way-brain-works.md",
					"dirname": "press/2014/07/09",
					"stem": "numenta-apps-mimic-way-brain-works",
					"path": "press/2014/07/09/numenta-apps-mimic-way-brain-works.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/07/09/numenta-apps-mimic-way-brain-works.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/07/09/numenta-apps-mimic-way-brain-works.md",
				"path": "/press/2014/07/09/numenta-apps-mimic-way-brain-works/",
				"data": {
					"author": "Dean Takahashi",
					"brief": "Numenta founders Jeff Hawkins and Donna Dubinsky sit down with VentureBeat to talk about Numenta’s breakthrough progress in machine intelligence",
					"date": "2014/07/09",
					"featured": false,
					"image": "../images/venture-beat.png",
					"link": "http://venturebeat.com/2014/07/09/numentas-brain-research-has-taken-a-long-nine-years-but-it-starting-to-pay-off-interview/",
					"org": "Venture Beat",
					"tags": "numenta apps mimic brain",
					"title": "After Nine Years of Research Numenta Finally Has Apps That Mimic the Way the Brain Works",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/08/13",
					"base": "when-cloud-monitoring-falls-short.md",
					"ext": "md",
					"name": "when-cloud-monitoring-falls-short",
					"extname": ".md",
					"basename": "when-cloud-monitoring-falls-short.md",
					"dirname": "press/2014/08/13",
					"stem": "when-cloud-monitoring-falls-short",
					"path": "press/2014/08/13/when-cloud-monitoring-falls-short.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/08/13/when-cloud-monitoring-falls-short.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/08/13/when-cloud-monitoring-falls-short.md",
				"path": "/press/2014/08/13/when-cloud-monitoring-falls-short/",
				"data": {
					"author": "Dan Sullivan",
					"brief": "Cloud monitoring can collect a range of performance data, but a crucial piece of the puzzle, networking, often falls short. A third-party network monitoring tool is essential to keep your cloud running up to par.",
					"date": "2014/08/13",
					"featured": false,
					"image": "../images/search-cloud-computing.png",
					"link": "http://searchcloudcomputing.techtarget.com/tip/Network-monitoring-tools-for-when-cloud-monitoring-falls-short",
					"org": "Search Cloud Computing",
					"tags": "network monitoring tools cloud monitoring numenta grok",
					"title": "Network Monitoring Tools For When Cloud Monitoring Falls Short",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/09/02",
					"base": "mimicking-brain-function-is-revolutionising-nlp.md",
					"ext": "md",
					"name": "mimicking-brain-function-is-revolutionising-nlp",
					"extname": ".md",
					"basename": "mimicking-brain-function-is-revolutionising-nlp.md",
					"dirname": "press/2014/09/02",
					"stem": "mimicking-brain-function-is-revolutionising-nlp",
					"path": "press/2014/09/02/mimicking-brain-function-is-revolutionising-nlp.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/09/02/mimicking-brain-function-is-revolutionising-nlp.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/09/02/mimicking-brain-function-is-revolutionising-nlp.md",
				"path": "/press/2014/09/02/mimicking-brain-function-is-revolutionising-nlp/",
				"data": {
					"author": "Eileen McNulty",
					"brief": "We’ve seen huge improvements in the way algorithms can detect our language and dialogue. IBM have continued to pour money and resources into the development of Watson; Apple have moved",
					"date": "2014/09/02",
					"featured": false,
					"image": "../images/dataconomy.png",
					"link": "http://dataconomy.com/how-an-austrian-startup-is-mimicking-brain-function-to-revolutionise-nlp/",
					"org": "Dataconomy",
					"tags": "mimicking brain function revolutionising nlp natural language processing numenta nupic cortical.io",
					"title": "How Mimicking Brain Function is Revolutionising NLP",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/09/05",
					"base": "cognitive-computing-truly-amazing-apps.md",
					"ext": "md",
					"name": "cognitive-computing-truly-amazing-apps",
					"extname": ".md",
					"basename": "cognitive-computing-truly-amazing-apps.md",
					"dirname": "press/2014/09/05",
					"stem": "cognitive-computing-truly-amazing-apps",
					"path": "press/2014/09/05/cognitive-computing-truly-amazing-apps.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/09/05/cognitive-computing-truly-amazing-apps.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/09/05/cognitive-computing-truly-amazing-apps.md",
				"path": "/press/2014/09/05/cognitive-computing-truly-amazing-apps/",
				"data": {
					"author": "Janet Wagner",
					"brief": "Cognitive computing is a relatively new area of computer science that has been growing fairly rapidly in recent years. While artificial intelligence, a field of study that has been around since",
					"date": "2014/09/05",
					"featured": false,
					"image": "../images/programmableweb.png",
					"link": "http://www.programmableweb.com/news/cognitive-computing-makes-it-possible-to-build-truly-amazing-apps/analysis/2014/09/05",
					"org": "ProgrammableWeb",
					"tags": "cognitive computing numenta grok htm hierarchical temporal memory",
					"title": "Cognitive Computing Makes It Possible To Build Truly Amazing Apps",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/09/16",
					"base": "ten-machine-learning-experts.md",
					"ext": "md",
					"name": "ten-machine-learning-experts",
					"extname": ".md",
					"basename": "ten-machine-learning-experts.md",
					"dirname": "press/2014/09/16",
					"stem": "ten-machine-learning-experts",
					"path": "press/2014/09/16/ten-machine-learning-experts.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/09/16/ten-machine-learning-experts.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/09/16/ten-machine-learning-experts.md",
				"path": "/press/2014/09/16/ten-machine-learning-experts/",
				"data": {
					"author": "Eileen McNulty",
					"brief": "Machine learning, to put it mildly, is an incredibly broad and varied field, with multitudes of applications. Thus, this list of Ten Machine Learning Experts You Need to Know",
					"date": "2014/09/16",
					"featured": false,
					"image": "../images/dataconomy.png",
					"link": "http://dataconomy.com/10-machine-learning-experts-you-need-to-know/",
					"org": "Dataconomy",
					"tags": "machine learning experts jeff hawkins numenta grok",
					"title": "Ten Machine Learning Experts You Need to Know",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/09/24",
					"base": "jeff-hawkins-on-his-approach-to-ai.md",
					"ext": "md",
					"name": "jeff-hawkins-on-his-approach-to-ai",
					"extname": ".md",
					"basename": "jeff-hawkins-on-his-approach-to-ai.md",
					"dirname": "press/2014/09/24",
					"stem": "jeff-hawkins-on-his-approach-to-ai",
					"path": "press/2014/09/24/jeff-hawkins-on-his-approach-to-ai.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/09/24/jeff-hawkins-on-his-approach-to-ai.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/09/24/jeff-hawkins-on-his-approach-to-ai.md",
				"path": "/press/2014/09/24/jeff-hawkins-on-his-approach-to-ai/",
				"data": {
					"author": "Derrick Harris",
					"brief": "Jeff Hawkins is best known for bringing us the Palm Pilot, but he’s working on something that could be much, much bigger. For the past several years, Hawkins has been studying how the human brain functions with the hope of replicating it in software.",
					"date": "2014/09/24",
					"featured": false,
					"image": "../images/gigaom.png",
					"link": "https://gigaom.com/2014/09/24/the-gigaom-interview-jeff-hawkins-on-why-his-approach-to-ai-will-become-the-approach-to-ai/",
					"org": "Gigaom",
					"tags": "jeff hawkins numenta gigaom ai artificial intelligence machine nupic htm",
					"title": "Jeff Hawkins on why his approach to AI will become the approach to AI",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/10/22",
					"base": "jeff-hawkins-limitations-of-artificial-neural-networks.md",
					"ext": "md",
					"name": "jeff-hawkins-limitations-of-artificial-neural-networks",
					"extname": ".md",
					"basename": "jeff-hawkins-limitations-of-artificial-neural-networks.md",
					"dirname": "press/2014/10/22",
					"stem": "jeff-hawkins-limitations-of-artificial-neural-networks",
					"path": "press/2014/10/22/jeff-hawkins-limitations-of-artificial-neural-networks.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/10/22/jeff-hawkins-limitations-of-artificial-neural-networks.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/10/22/jeff-hawkins-limitations-of-artificial-neural-networks.md",
				"path": "/press/2014/10/22/jeff-hawkins-limitations-of-artificial-neural-networks/",
				"data": {
					"author": "Augustus Van Dusen",
					"brief": "The media hype surrounding artificial neural networks (ANN) is becoming absurd. These articles tend to be uncritical summaries of company press releases. The most over the top articles",
					"date": "2014/10/22",
					"featured": false,
					"image": "../images/thinkingmachine.png",
					"link": "http://thinkingmachineblog.net/jeff-hawkins-on-the-limitations-of-artificial-neural-networks/",
					"org": "Thinking Machine",
					"tags": "jeff hawkins numenta limitations of artificial nerual networks",
					"title": "Jeff Hawkins on the Limitations of Artificial Neural Networks",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/11/05",
					"base": "numenta-showcases-new-version-grok-aws-reinvent-2014.md",
					"ext": "md",
					"name": "numenta-showcases-new-version-grok-aws-reinvent-2014",
					"extname": ".md",
					"basename": "numenta-showcases-new-version-grok-aws-reinvent-2014.md",
					"dirname": "press/2014/11/05",
					"stem": "numenta-showcases-new-version-grok-aws-reinvent-2014",
					"path": "press/2014/11/05/numenta-showcases-new-version-grok-aws-reinvent-2014.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/11/05/numenta-showcases-new-version-grok-aws-reinvent-2014.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/11/05/numenta-showcases-new-version-grok-aws-reinvent-2014.md",
				"path": "/press/2014/11/05/numenta-showcases-new-version-grok-aws-reinvent-2014/",
				"data": {
					"author": "Numenta",
					"brief": "Grok enables IT professionals to easily spot unusual activity and to gain immediate insights into the health of their critical IT systems. Now, with annotations, they can more easily share",
					"date": "2014/11/05",
					"featured": false,
					"image": "../images/numenta.png",
					"link": null,
					"org": "Press Release",
					"tags": "numenta grok it analytics aws reinvent amazon web services",
					"title": "Numenta to Showcase New Version of Grok at AWS reInvent 2014",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/11/10",
					"base": "innovation-lite-modern-day-technology-is-stuck.md",
					"ext": "md",
					"name": "innovation-lite-modern-day-technology-is-stuck",
					"extname": ".md",
					"basename": "innovation-lite-modern-day-technology-is-stuck.md",
					"dirname": "press/2014/11/10",
					"stem": "innovation-lite-modern-day-technology-is-stuck",
					"path": "press/2014/11/10/innovation-lite-modern-day-technology-is-stuck.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/11/10/innovation-lite-modern-day-technology-is-stuck.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/11/10/innovation-lite-modern-day-technology-is-stuck.md",
				"path": "/press/2014/11/10/innovation-lite-modern-day-technology-is-stuck/",
				"data": {
					"author": "Kevin Maney",
					"brief": "Technology is stuck. It’s stuck while an overcrowding, polluting, beheading, virus-spreading planet needs the kind of breakthroughs that reorganize life and create a clear before and after.",
					"date": "2014/11/10",
					"featured": false,
					"image": "../images/newsweek.png",
					"link": "http://www.newsweek.com/innovation-lite-modern-day-technology-stuck-283338",
					"org": "Newsweek",
					"tags": "modern day technology stuck newsweek numenta hierarchical temporal memory htm jeff hawkins",
					"title": "Innovation Lite - Modern-Day Technology is Stuck",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/11/12",
					"base": "cortical-io-gain-over-1-million-in-new-venture-capital.md",
					"ext": "md",
					"name": "cortical-io-gain-over-1-million-in-new-venture-capital",
					"extname": ".md",
					"basename": "cortical-io-gain-over-1-million-in-new-venture-capital.md",
					"dirname": "press/2014/11/12",
					"stem": "cortical-io-gain-over-1-million-in-new-venture-capital",
					"path": "press/2014/11/12/cortical-io-gain-over-1-million-in-new-venture-capital.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/11/12/cortical-io-gain-over-1-million-in-new-venture-capital.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/11/12/cortical-io-gain-over-1-million-in-new-venture-capital.md",
				"path": "/press/2014/11/12/cortical-io-gain-over-1-million-in-new-venture-capital/",
				"data": {
					"author": "Eileen McNulty",
					"brief": "Cortical.io, an Austrian startup whose tech mimics brain function to process language more accurately and natively, have just announced an impressive new funding round. Reventon (NL) is a venture capital firm responsible",
					"date": "2014/11/12",
					"featured": false,
					"image": "../images/dataconomy.png",
					"link": "http://dataconomy.com/cortical-io-gain-1-25-million-in-new-venture-capital-share-grand-plans-for-the-future/",
					"org": "Dataconomy",
					"tags": "cortical.io million venture capital grand plans for future numenta semantic machine intelligence",
					"title": "Cortical.io Gain $1.25 Million in New Venture Capital, Share Grand Plans for The Future",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/11/21",
					"base": "cognitive-computing-what-it-means-to-you.md",
					"ext": "md",
					"name": "cognitive-computing-what-it-means-to-you",
					"extname": ".md",
					"basename": "cognitive-computing-what-it-means-to-you.md",
					"dirname": "press/2014/11/21",
					"stem": "cognitive-computing-what-it-means-to-you",
					"path": "press/2014/11/21/cognitive-computing-what-it-means-to-you.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/11/21/cognitive-computing-what-it-means-to-you.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/11/21/cognitive-computing-what-it-means-to-you.md",
				"path": "/press/2014/11/21/cognitive-computing-what-it-means-to-you/",
				"data": {
					"author": "Dan Hartveld",
					"brief": "Ever since IBM Watson won the hugely popular US quiz show ‘Jeopardy’ back in 2011, cognitive computing has been a hot topic for discussion. Those who have had a glimpse of this new technology recognise its importance",
					"date": "2014/11/21",
					"featured": false,
					"image": "../images/techworld.png",
					"link": "http://www.techworld.com/blogs/talking-shop/cognitive-computing-explained-3588242/",
					"org": "Techworld",
					"tags": "cognitive computing numenta grok nupic techworld nlp natural language processing",
					"title": "Cognitive Computing - What It Means To You",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/12/09",
					"base": "smart-panel-ponders-ais-future.md",
					"ext": "md",
					"name": "smart-panel-ponders-ais-future",
					"extname": ".md",
					"basename": "smart-panel-ponders-ais-future.md",
					"dirname": "press/2014/12/09",
					"stem": "smart-panel-ponders-ais-future",
					"path": "press/2014/12/09/smart-panel-ponders-ais-future.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/12/09/smart-panel-ponders-ais-future.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/12/09/smart-panel-ponders-ais-future.md",
				"path": "/press/2014/12/09/smart-panel-ponders-ais-future/",
				"data": {
					"author": "Jessica Lipsky",
					"brief": "At a conference hosted by Silicon Valley Forum last week, industry experts projected the future of AI, machine learning, and deep learning. Jeff Hawkins, CEO and co-founder of Numenta, a firm that has developed a computational framework for AI,",
					"date": "2014/12/09",
					"featured": false,
					"image": "../images/eetimes.png",
					"link": "http://www.eetimes.com/document.asp?doc_id=1324910&_mc=sm_eet_editor_rickmerritt",
					"org": "EE Times",
					"tags": "artificial intelligence future smart panel silicon valley forum jeff hawkins numenta",
					"title": "Smart Panel Ponders AI's Future",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2014/12/29",
					"base": "deep-learning-and-machine-intelligence-eat-the-world-2015.md",
					"ext": "md",
					"name": "deep-learning-and-machine-intelligence-eat-the-world-2015",
					"extname": ".md",
					"basename": "deep-learning-and-machine-intelligence-eat-the-world-2015.md",
					"dirname": "press/2014/12/29",
					"stem": "deep-learning-and-machine-intelligence-eat-the-world-2015",
					"path": "press/2014/12/29/deep-learning-and-machine-intelligence-eat-the-world-2015.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2014/12/29/deep-learning-and-machine-intelligence-eat-the-world-2015.md",
					"isAbsolute": false
				},
				"requirePath": "press/2014/12/29/deep-learning-and-machine-intelligence-eat-the-world-2015.md",
				"path": "/press/2014/12/29/deep-learning-and-machine-intelligence-eat-the-world-2015/",
				"data": {
					"author": "Anthony Wing Kosner",
					"brief": "Despite what Stephen Hawking or Elon Musk say, hostile Artificial Intelligence is not going to destroy the world anytime soon. What is certain to happen, however, is the continued ascent of the practical applications of AI",
					"date": "2014/12/29",
					"featured": false,
					"image": "../images/forbes.png",
					"link": "http://www.forbes.com/sites/anthonykosner/2014/12/29/tech-2015-deep-learning-and-machine-intelligence-will-eat-the-world/",
					"org": "Forbes",
					"tags": "2015 deep learning machine intelligence numenta grok forbes",
					"title": "Tech 2015 Deep Learning And Machine Intelligence Will Eat The World",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/01/09",
					"base": "artificial-intelligence-is-real-now.md",
					"ext": "md",
					"name": "artificial-intelligence-is-real-now",
					"extname": ".md",
					"basename": "artificial-intelligence-is-real-now.md",
					"dirname": "press/2015/01/09",
					"stem": "artificial-intelligence-is-real-now",
					"path": "press/2015/01/09/artificial-intelligence-is-real-now.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/01/09/artificial-intelligence-is-real-now.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/01/09/artificial-intelligence-is-real-now.md",
				"path": "/press/2015/01/09/artificial-intelligence-is-real-now/",
				"data": {
					"author": "Derrick Harris",
					"brief": "Artificial intelligence is already very real. Not conscious machines, omnipotent machines or even reasoning machines (yet), but statistical machines that automate and increasingly can outperform humans at certain",
					"date": "2015/01/09",
					"featured": false,
					"image": "../images/gigaom.png",
					"link": "https://gigaom.com/2015/01/09/artificial-intelligence-is-real-now-and-its-just-getting-started/?utm_medium=content&utm_campaign=syndication&utm_source=googlemustreads&utm_content=artificial-intelligence-is-real-now-and-its-just-getting-started_905416&google_editors_picks=true",
					"org": "GigaOm",
					"tags": "artificial intelligence real just getting started numenta machine intelligence",
					"title": "Artificial Intelligence Is Real Now and It’s Just Getting Started",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/02/19",
					"base": "life-happens-ai-will-happen-probably-at-ibm-numenta.md",
					"ext": "md",
					"name": "life-happens-ai-will-happen-probably-at-ibm-numenta",
					"extname": ".md",
					"basename": "life-happens-ai-will-happen-probably-at-ibm-numenta.md",
					"dirname": "press/2015/02/19",
					"stem": "life-happens-ai-will-happen-probably-at-ibm-numenta",
					"path": "press/2015/02/19/life-happens-ai-will-happen-probably-at-ibm-numenta.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/02/19/life-happens-ai-will-happen-probably-at-ibm-numenta.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/02/19/life-happens-ai-will-happen-probably-at-ibm-numenta.md",
				"path": "/press/2015/02/19/life-happens-ai-will-happen-probably-at-ibm-numenta/",
				"data": {
					"author": "Alex Alaniz",
					"brief": "Before pressing to Numenta’s remarkable (and likely correct) approach to general AI an IBM talk, let’s consider the question of how much you and I are already uploaded and super intelligent",
					"date": "2015/02/19",
					"featured": false,
					"image": "../images/science20.png",
					"link": "http://www.science20.com/physics_foundations/blog/life_happens_ai_will_happen_probably_at_ibmnumenta-153354",
					"org": "Science2.0",
					"tags": "general ai artificial intelligence ibm numenta hierarchical temporal memory science 2.0",
					"title": "Life happens, AI will happen, probably at IBM/Numenta",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/03/02",
					"base": "terminator-not-coming-future-will-thank-us.md",
					"ext": "md",
					"name": "terminator-not-coming-future-will-thank-us",
					"extname": ".md",
					"basename": "terminator-not-coming-future-will-thank-us.md",
					"dirname": "press/2015/03/02",
					"stem": "terminator-not-coming-future-will-thank-us",
					"path": "press/2015/03/02/terminator-not-coming-future-will-thank-us.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/03/02/terminator-not-coming-future-will-thank-us.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/03/02/terminator-not-coming-future-will-thank-us.md",
				"path": "/press/2015/03/02/terminator-not-coming-future-will-thank-us/",
				"data": {
					"author": "Jeff Hawkins",
					"brief": "Stephen Hawking and Elon Musk are worried. Could machine intelligence really lead to the extinction of humans?",
					"date": "2015/03/02",
					"featured": false,
					"image": "../images/recode.png",
					"link": "http://recode.net/2015/03/02/the-terminator-is-not-coming-the-future-will-thank-us/",
					"org": "Re/Code",
					"tags": "general ai artificial intelligence machine recode terminator",
					"title": "The Terminator Is Not Coming. The Future Will Thank Us.",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/03/05",
					"base": "many-scientists-dismiss-the-fear-of-robots-heres-why.md",
					"ext": "md",
					"name": "many-scientists-dismiss-the-fear-of-robots-heres-why",
					"extname": ".md",
					"basename": "many-scientists-dismiss-the-fear-of-robots-heres-why.md",
					"dirname": "press/2015/03/05",
					"stem": "many-scientists-dismiss-the-fear-of-robots-heres-why",
					"path": "press/2015/03/05/many-scientists-dismiss-the-fear-of-robots-heres-why.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/03/05/many-scientists-dismiss-the-fear-of-robots-heres-why.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/03/05/many-scientists-dismiss-the-fear-of-robots-heres-why.md",
				"path": "/press/2015/03/05/many-scientists-dismiss-the-fear-of-robots-heres-why/",
				"data": {
					"author": "Erik Sherman",
					"brief": "These leading scientists dismiss the doomsday predictions and say artificial intelligence, automation and robotics will bring a better world. Here’s why.",
					"date": "2015/03/05",
					"featured": false,
					"image": "../images/fortune.png",
					"link": "http://fortune.com/2015/03/05/forget-the-naysayers-robots-pose-no-threat-to-humanity-these-experts-say/",
					"org": "Fortune",
					"tags": "fortune scientists dismiss fear of robots ai artificial machine intelligence jeff hawkins numenta",
					"title": "Many Scientists Dismiss the Fear of Robots — Here's Why",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/03/26",
					"base": "artificial-intelligence-could-have-prevented-the-germanwings-crash.md",
					"ext": "md",
					"name": "artificial-intelligence-could-have-prevented-the-germanwings-crash",
					"extname": ".md",
					"basename": "artificial-intelligence-could-have-prevented-the-germanwings-crash.md",
					"dirname": "press/2015/03/26",
					"stem": "artificial-intelligence-could-have-prevented-the-germanwings-crash",
					"path": "press/2015/03/26/artificial-intelligence-could-have-prevented-the-germanwings-crash.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/03/26/artificial-intelligence-could-have-prevented-the-germanwings-crash.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/03/26/artificial-intelligence-could-have-prevented-the-germanwings-crash.md",
				"path": "/press/2015/03/26/artificial-intelligence-could-have-prevented-the-germanwings-crash/",
				"data": {
					"author": "Anthony Wing Kosner",
					"brief": "I thought of this story as the news unfolded from the Alps. We are so concerned, it seems, about giving machines too much power that we appear to miss the fact that the largest existential threat to humans is other humans.",
					"date": "2015/03/26",
					"featured": false,
					"image": "../images/forbes.png",
					"link": "http://www.forbes.com/sites/anthonykosner/2015/03/26/artificial-intelligence-could-have-prevented-the-germanwings-crash/",
					"org": "Forbes",
					"tags": "artificial machine general intelligence ai could have prevented germanwings crash jeff hawkins numenta nupic",
					"title": "Artificial Intelligence Could Have Prevented The Germanwings Crash",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/04/02",
					"base": "how-we-learn-to-stop-worrying-and-love-the-bots.md",
					"ext": "md",
					"name": "how-we-learn-to-stop-worrying-and-love-the-bots",
					"extname": ".md",
					"basename": "how-we-learn-to-stop-worrying-and-love-the-bots.md",
					"dirname": "press/2015/04/02",
					"stem": "how-we-learn-to-stop-worrying-and-love-the-bots",
					"path": "press/2015/04/02/how-we-learn-to-stop-worrying-and-love-the-bots.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/04/02/how-we-learn-to-stop-worrying-and-love-the-bots.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/04/02/how-we-learn-to-stop-worrying-and-love-the-bots.md",
				"path": "/press/2015/04/02/how-we-learn-to-stop-worrying-and-love-the-bots/",
				"data": {
					"author": "Wired",
					"brief": "A sharp dichotomy has emerged in the big debate about where technology is taking us (or vice versa). In one high-profile camp are technologists and scientists sounding the alarm about the perils of artificial intelligence.",
					"date": "2015/04/02",
					"featured": false,
					"image": "../images/wired.png",
					"link": "http://www.wired.com/2015/04/learn-stop-worrying-love-bots/",
					"org": "Wired",
					"tags": "artificial general machine intelligence ai stop worrying love the bots numenta nupic jeff hawkins",
					"title": "How We Learn to Stop Worrying and Love the Bots",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/04/08",
					"base": "ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms.md",
					"ext": "md",
					"name": "ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms",
					"extname": ".md",
					"basename": "ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms.md",
					"dirname": "press/2015/04/08",
					"stem": "ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms",
					"path": "press/2015/04/08/ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/04/08/ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/04/08/ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms.md",
				"path": "/press/2015/04/08/ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms/",
				"data": {
					"author": "Tom Simonite",
					"brief": "For more than a decade Jeff Hawkins, founder of mobile computing company Palm, has dedicated his time and fortune to a theory meant to explain the workings of the human brain, and provide a blueprint for a powerful new kind of artificial intelligence software.",
					"date": "2015/04/08",
					"featured": false,
					"image": "../images/mit-technology-review.png",
					"link": "http://www.technologyreview.com/news/536326/ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms/",
					"org": "MIT Technology Review",
					"tags": "ibm mobile pioneer brain algorithms jeff hawkins numenta htm hierarchical temporal memory",
					"title": "IBM Tests Mobile Computing Pioneer’s Controversial Brain Algorithms",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/04/14",
					"base": "numenta-the-bruce-lee-of-ai-and-deep-learning.md",
					"ext": "md",
					"name": "numenta-the-bruce-lee-of-ai-and-deep-learning",
					"extname": ".md",
					"basename": "numenta-the-bruce-lee-of-ai-and-deep-learning.md",
					"dirname": "press/2015/04/14",
					"stem": "numenta-the-bruce-lee-of-ai-and-deep-learning",
					"path": "press/2015/04/14/numenta-the-bruce-lee-of-ai-and-deep-learning.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/04/14/numenta-the-bruce-lee-of-ai-and-deep-learning.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/04/14/numenta-the-bruce-lee-of-ai-and-deep-learning.md",
				"path": "/press/2015/04/14/numenta-the-bruce-lee-of-ai-and-deep-learning/",
				"data": {
					"author": "Alex Alaniz",
					"brief": "Growing new connections in your brain is more essential to learning than strengthening established connections. You may know how to be a tax lawyer because you've spent years strengthening your old tax law connections, but these are utterly useless when you take up ballroom dancing to find yourself a mate.",
					"date": "2015/04/14",
					"featured": false,
					"image": "../images/science20.png",
					"link": "http://www.science20.com/physics_foundations/blog/numenta_the_bruce_lee_of_ai_and_deep_learning-154801",
					"tags": "numenta ai artificial intelligence deep learning jeff hawkins htm hierarchical temporal memory",
					"title": "Numenta, The Bruce Lee of AI and Deep Learning",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/05/07",
					"base": "jeff-hawkins-of-firing-up-the-silicon-brain.md",
					"ext": "md",
					"name": "jeff-hawkins-of-firing-up-the-silicon-brain",
					"extname": ".md",
					"basename": "jeff-hawkins-of-firing-up-the-silicon-brain.md",
					"dirname": "press/2015/05/07",
					"stem": "jeff-hawkins-of-firing-up-the-silicon-brain",
					"path": "press/2015/05/07/jeff-hawkins-of-firing-up-the-silicon-brain.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/05/07/jeff-hawkins-of-firing-up-the-silicon-brain.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/05/07/jeff-hawkins-of-firing-up-the-silicon-brain.md",
				"path": "/press/2015/05/07/jeff-hawkins-of-firing-up-the-silicon-brain/",
				"data": {
					"author": "Caleb Garling",
					"brief": "Along with other researchers, Hawkins believes that the brain’s structure holds the keys for the next generation of computers that will interpret our world with far more insight than our eyes and ears ever could.",
					"date": "2015/05/07",
					"featured": false,
					"image": "../images/wired.png",
					"link": "http://www.wired.com/2015/05/jeff-hawkins-firing-silicon-brain/",
					"org": "Wired",
					"tags": "jeff hawkins firing up silicion brain wired neocortex htm hierarchical temporal memory nupic numenta",
					"title": "Jeff Hawkins on Firing Up the Silicon Brain",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/05/14",
					"base": "numenta-and-cortical-io-form-strategic-partnership.md",
					"ext": "md",
					"name": "numenta-and-cortical-io-form-strategic-partnership",
					"extname": ".md",
					"basename": "numenta-and-cortical-io-form-strategic-partnership.md",
					"dirname": "press/2015/05/14",
					"stem": "numenta-and-cortical-io-form-strategic-partnership",
					"path": "press/2015/05/14/numenta-and-cortical-io-form-strategic-partnership.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/05/14/numenta-and-cortical-io-form-strategic-partnership.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/05/14/numenta-and-cortical-io-form-strategic-partnership.md",
				"path": "/press/2015/05/14/numenta-and-cortical-io-form-strategic-partnership/",
				"data": {
					"author": "Numenta",
					"brief": "Numenta, Inc., a leader in machine intelligence, and Cortical.io, an innovator in natural language processing (NLP), are pleased to announce a strategic partnership to create a new computing approach to understanding text. As part of the strategic relationship,",
					"date": "2015/05/14",
					"featured": false,
					"image": "../images/numenta.png",
					"link": null,
					"org": "Press Release",
					"tags": "numenta cortical.io form strategic partnership htm hierarchical temporal memory sdr sparse distributed memory retina wikipedia natural lanuage learning",
					"title": "Numenta and Cortical.io Form Strategic Partnership",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/05/22",
					"base": "numenta-and-ibm-to-build-biologically-inspired-intelligent-machines.md",
					"ext": "md",
					"name": "numenta-and-ibm-to-build-biologically-inspired-intelligent-machines",
					"extname": ".md",
					"basename": "numenta-and-ibm-to-build-biologically-inspired-intelligent-machines.md",
					"dirname": "press/2015/05/22",
					"stem": "numenta-and-ibm-to-build-biologically-inspired-intelligent-machines",
					"path": "press/2015/05/22/numenta-and-ibm-to-build-biologically-inspired-intelligent-machines.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/05/22/numenta-and-ibm-to-build-biologically-inspired-intelligent-machines.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/05/22/numenta-and-ibm-to-build-biologically-inspired-intelligent-machines.md",
				"path": "/press/2015/05/22/numenta-and-ibm-to-build-biologically-inspired-intelligent-machines/",
				"data": {
					"author": "Alex Alaniz",
					"brief": "When we catch balls, Jeff Hawkins, cofounder of Numenta and author of “On Intelligence,” tells us we aren’t solving differential equations. A robot, on the other hand, does solve differential equations, requiring roughly 3-trillion calculations for a 1s toss",
					"date": "2015/05/22",
					"featured": false,
					"image": "../images/science20.png",
					"link": "http://www.science20.com/physics_foundations/blog/numenta_and_ibm_to_build_biologically_inspired_intelligent_machines-155769",
					"org": "Science 2.0",
					"tags": "numenta ibm build biologically inspired intelligent machines neocortex",
					"title": "Numenta And IBM To Build Biologically Inspired Intelligent Machines",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/05/22",
					"base": "on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines.md",
					"ext": "md",
					"name": "on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines",
					"extname": ".md",
					"basename": "on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines.md",
					"dirname": "press/2015/05/22",
					"stem": "on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines",
					"path": "press/2015/05/22/on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/05/22/on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/05/22/on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines.md",
				"path": "/press/2015/05/22/on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines/",
				"data": {
					"author": "Fareed Zakaria, GPS",
					"brief": "Fareed asks Jeff Hawkins about artificial intelligence -- could robots one day rise up against humans?",
					"date": "2015/05/22",
					"featured": false,
					"image": "../images/cnn.png",
					"link": "http://www.cnn.com/videos/tv/2015/05/22/exp-gps-0524-hawkins-artificial-intelligence.cnn",
					"org": "CNN",
					"tags": "cnn on gps fareed zakaria jeff hawkins threat intelligent machines numenta nupic brain neocortex",
					"title": "On GPS: The Threat of Intelligent Machines",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/07/08",
					"base": "numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns.md",
					"ext": "md",
					"name": "numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns",
					"extname": ".md",
					"basename": "numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns.md",
					"dirname": "press/2015/07/08",
					"stem": "numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns",
					"path": "press/2015/07/08/numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/07/08/numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/07/08/numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns.md",
				"path": "/press/2015/07/08/numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns/",
				"data": {
					"author": "Dean Takahashi",
					"brief": "Numenta today released HTM for Stocks, a new mobile application that tracks the trading patterns of companies in the stock market. The new Google Play app can monitor stock price, stock volume, and Twitter activity for hundreds of publicly traded companies",
					"date": "2015/07/08",
					"featured": false,
					"image": "../images/venture-beat.png",
					"link": "http://venturebeat.com/2015/07/08/numentas-grok-for-stocks-app-uses-a-i-to-decipher-stock-market-patterns/",
					"org": "VentureBeat",
					"tags": "numenta htm for stocks app ai htm stock market patterns venturebeat",
					"title": "Numenta’s HTM for Stocks app uses A.I. to decipher stock market patterns",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/07/08",
					"base": "numenta-ships-new-htm-example-app-htm-for-stocks.md",
					"ext": "md",
					"name": "numenta-ships-new-htm-example-app-htm-for-stocks",
					"extname": ".md",
					"basename": "numenta-ships-new-htm-example-app-htm-for-stocks.md",
					"dirname": "press/2015/07/08",
					"stem": "numenta-ships-new-htm-example-app-htm-for-stocks",
					"path": "press/2015/07/08/numenta-ships-new-htm-example-app-htm-for-stocks.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/07/08/numenta-ships-new-htm-example-app-htm-for-stocks.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/07/08/numenta-ships-new-htm-example-app-htm-for-stocks.md",
				"path": "/press/2015/07/08/numenta-ships-new-htm-example-app-htm-for-stocks/",
				"data": {
					"author": "Numenta",
					"brief": "Redwood City, CA –July 8, 2015— Numenta, Inc., today announced the availability of HTM for Stocks, the newest example application showing how Hierarchical Temporal Memory (HTM) technology can be applied to streaming data",
					"date": "2015/07/08",
					"featured": false,
					"image": "../images/image.png",
					"link": null,
					"org": "Press Release",
					"tags": "numenta new htm example application htm for stocks monitor stock price volume twitter activity public companies anomaly detection unusual notifications",
					"title": "Numenta Ships New HTM Example App: HTM for Stocks",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/08/19",
					"base": "numenta-announces-licensing-of-grok-for-it-to-avik-partners.md",
					"ext": "md",
					"name": "numenta-announces-licensing-of-grok-for-it-to-avik-partners",
					"extname": ".md",
					"basename": "numenta-announces-licensing-of-grok-for-it-to-avik-partners.md",
					"dirname": "press/2015/08/19",
					"stem": "numenta-announces-licensing-of-grok-for-it-to-avik-partners",
					"path": "press/2015/08/19/numenta-announces-licensing-of-grok-for-it-to-avik-partners.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/08/19/numenta-announces-licensing-of-grok-for-it-to-avik-partners.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/08/19/numenta-announces-licensing-of-grok-for-it-to-avik-partners.md",
				"path": "/press/2015/08/19/numenta-announces-licensing-of-grok-for-it-to-avik-partners/",
				"data": {
					"author": "Numenta",
					"brief": "REDWOOD CITY, CA –August 19, 2015— Numenta, Inc., a leader in machine intelligence, today announced a strategic partnership with Avik Partners, a new IT services and advanced analytics company, for its Grok for IT Analytics on AWS technology.",
					"date": "2015/08/19",
					"featured": false,
					"image": "../images/numenta.png",
					"link": null,
					"org": "Press Release",
					"tags": "numenta license grok for it analytics to avik partners smart data conference 2015 dataversity",
					"title": "Numenta Announces Licensing of Grok for IT Analytics to Avik Partners",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/09/05",
					"base": "numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis.md",
					"ext": "md",
					"name": "numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis",
					"extname": ".md",
					"basename": "numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis.md",
					"dirname": "press/2015/09/05",
					"stem": "numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis",
					"path": "press/2015/09/05/numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/09/05/numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/09/05/numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis.md",
				"path": "/press/2015/09/05/numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis/",
				"data": {
					"author": "Mark Gibbs",
					"brief": "Anomalies in data are everywhere. They appear in the performance of just about anything you can measure. Sometimes, if you’re lucky, they’re rare. Other times they aren’t. The problem in both cases, however, is figuring out what is truly an anomaly",
					"date": "2015/09/05",
					"featured": false,
					"image": "../images/network-world.png",
					"link": "http://www.networkworld.com/article/2980746/infrastructure-management/numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis.html",
					"org": "Network World",
					"tags": "numenta grok for it artifical intelligence network performance analysis htm hierarchical temporal memory",
					"title": "Numenta's Grok for IT: Artificial Intelligence Meets Network Performance Analysis",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/10/06",
					"base": "avik-partners-unfurls-machine-learning-service-to-optimize-it-operations.md",
					"ext": "md",
					"name": "avik-partners-unfurls-machine-learning-service-to-optimize-it-operations",
					"extname": ".md",
					"basename": "avik-partners-unfurls-machine-learning-service-to-optimize-it-operations.md",
					"dirname": "press/2015/10/06",
					"stem": "avik-partners-unfurls-machine-learning-service-to-optimize-it-operations",
					"path": "press/2015/10/06/avik-partners-unfurls-machine-learning-service-to-optimize-it-operations.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/10/06/avik-partners-unfurls-machine-learning-service-to-optimize-it-operations.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/10/06/avik-partners-unfurls-machine-learning-service-to-optimize-it-operations.md",
				"path": "/press/2015/10/06/avik-partners-unfurls-machine-learning-service-to-optimize-it-operations/",
				"data": {
					"author": "Mike Vizard",
					"brief": "Machine learning has the potential to transform the way IT is managed by applying automation at an unprecedented level of scale, so it was only a matter of time before an IT management",
					"date": "2015/10/06",
					"featured": false,
					"image": "../images/it-business-edge.png",
					"link": "http://www.itbusinessedge.com/blogs/it-unmasked/avik-partners-unfurls-machine-learning-service-to-optimize-it-operations.html",
					"org": "IT Business Edge",
					"tags": "numenta avik partners grok stream machine learning service optimize it operations htm hierarchical temporal memory",
					"title": "Avik Partners Unfurls Machine Learning Service to Optimize IT Operations",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/10/29",
					"base": "usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io.md",
					"ext": "md",
					"name": "usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io",
					"extname": ".md",
					"basename": "usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io.md",
					"dirname": "press/2015/10/29",
					"stem": "usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io",
					"path": "press/2015/10/29/usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/10/29/usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/10/29/usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io.md",
				"path": "/press/2015/10/29/usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io/",
				"data": {
					"author": "Cortical.io",
					"brief": "Cortical.io, an innovator in Natural Language Processing (NLP), announces its next venture capital round. In this third round, Cortical.io opens its capital to a new investor from the US, a fund affiliated with Open Field Capital",
					"date": "2015/10/29",
					"featured": false,
					"image": "../images/prweb.png",
					"link": "http://www.prweb.com/releases/corticalio/3rdcapitalround/prweb13038027.htm",
					"org": "PRWeb",
					"tags": "cortical.io numenta nupic htm hierarchical temporal memory nlp natural language processing machine intelligence",
					"title": "USD 1.8 Million for Cortical.io Brain-Inspired Algorithm Made in Austria",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/11/10",
					"base": "numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques.md",
					"ext": "md",
					"name": "numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques",
					"extname": ".md",
					"basename": "numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques.md",
					"dirname": "press/2015/11/10",
					"stem": "numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques",
					"path": "press/2015/11/10/numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/11/10/numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/11/10/numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques.md",
				"path": "/press/2015/11/10/numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques/",
				"data": {
					"author": "Numenta",
					"brief": "REDWOOD CITY, CA –November 10, 2015— Numenta, Inc., a leader in machine intelligence, today launched the Numenta Anomaly Benchmark (NAB), an open-source benchmark and tool designed to help data",
					"date": "2015/11/10",
					"featured": false,
					"image": "../images/image.png",
					"link": null,
					"org": "Press Release",
					"tags": "numenta anomaly benchmark nab evaluate anomaly detection techniques on real-time streaming data",
					"title": "Numenta Anomaly Benchmark Evaluates Anomaly Detection Techniques for Real-time, Streaming Data",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2015/11/12",
					"base": "single-artificial-neuron-taught-to-recognize-hundreds-of-patterns.md",
					"ext": "md",
					"name": "single-artificial-neuron-taught-to-recognize-hundreds-of-patterns",
					"extname": ".md",
					"basename": "single-artificial-neuron-taught-to-recognize-hundreds-of-patterns.md",
					"dirname": "press/2015/11/12",
					"stem": "single-artificial-neuron-taught-to-recognize-hundreds-of-patterns",
					"path": "press/2015/11/12/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2015/11/12/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns.md",
					"isAbsolute": false
				},
				"requirePath": "press/2015/11/12/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns.md",
				"path": "/press/2015/11/12/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns/",
				"data": {
					"author": "Emerging Technology",
					"brief": "Biologists have long puzzled over why neurons have thousands of synapses. Now neuroscientists have shown they are crucial not just for recognizing patterns but for learning the sequence in which they appear.",
					"date": "2015/11/12",
					"featured": false,
					"image": "../images/mit-technology-review.png",
					"link": "http://www.technologyreview.com/view/543486/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns/",
					"org": "MIT Technology Review",
					"tags": "numenta artificial neuron taught to recognize patterns htm neuron synapse dendrite axon proximal distal",
					"title": "Single Artificial Neuron Taught to Recognize Hundreds of Patterns",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/03/07",
					"base": "the-terminator-and-the-washing-machine.md",
					"ext": "md",
					"name": "the-terminator-and-the-washing-machine",
					"extname": ".md",
					"basename": "the-terminator-and-the-washing-machine.md",
					"dirname": "press/2016/03/07",
					"stem": "the-terminator-and-the-washing-machine",
					"path": "press/2016/03/07/the-terminator-and-the-washing-machine.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/03/07/the-terminator-and-the-washing-machine.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/03/07/the-terminator-and-the-washing-machine.md",
				"path": "/press/2016/03/07/the-terminator-and-the-washing-machine/",
				"data": {
					"author": "U.S. & Politics Retro Report",
					"brief": "(VIDEO) What the legendary matches between supercomputer Deep Blue and chess grandmaster Garry Kasparov reveal about today’s artificial intelligence and machine learning fears.",
					"date": "2016/03/07",
					"featured": false,
					"image": "../images/the-new-york-times.png",
					"link": "http://www.nytimes.com/video/us/100000004255656/the-terminator-and-the-washing-machine.html?action=click&gtype=vhs&version=vhs-heading&module=vhs&region=title-area",
					"org": "The New York Times",
					"tags": "numenta jeff hawkins terminator and the washing machine the new york times us politics retro report video supercomputer",
					"title": "The Terminator and the Washing Machine",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/04/12",
					"base": "numenta-researchers-discover-how-the-brain-learns-sequences.md",
					"ext": "md",
					"name": "numenta-researchers-discover-how-the-brain-learns-sequences",
					"extname": ".md",
					"basename": "numenta-researchers-discover-how-the-brain-learns-sequences.md",
					"dirname": "press/2016/04/12",
					"stem": "numenta-researchers-discover-how-the-brain-learns-sequences",
					"path": "press/2016/04/12/numenta-researchers-discover-how-the-brain-learns-sequences.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/04/12/numenta-researchers-discover-how-the-brain-learns-sequences.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/04/12/numenta-researchers-discover-how-the-brain-learns-sequences.md",
				"path": "/press/2016/04/12/numenta-researchers-discover-how-the-brain-learns-sequences/",
				"data": {
					"author": "Numenta",
					"brief": "REDWOOD CITY, CA –April 12, 2016— How do our brains learn and understand the world? That question is of paramount importance to both neuroscientists and technologists who want to build intelligent machines.",
					"date": "2016/04/12",
					"featured": false,
					"hideImage": true,
					"image": "../images/image.jpg",
					"link": null,
					"org": "Press Release",
					"tags": "numenta neuron research paper published discover brain learns sequences key machine intelligence systems pattern theory",
					"title": "Numenta Researchers Discover How The Brain Learns Sequences, A Key to Intelligent Systems",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/05/01",
					"base": "brain-like-computing.md",
					"ext": "md",
					"name": "brain-like-computing",
					"extname": ".md",
					"basename": "brain-like-computing.md",
					"dirname": "press/2016/05/01",
					"stem": "brain-like-computing",
					"path": "press/2016/05/01/brain-like-computing.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/05/01/brain-like-computing.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/05/01/brain-like-computing.md",
				"path": "/press/2016/05/01/brain-like-computing/",
				"data": {
					"author": "Tiejun Huang",
					"brief": "The IEEE Computer Society’s 2022 Report, which was released through the Computing Now site in 2014, presents insights from tech leaders to explore what our world might look like in 2022. Among its findings, the report predicts an integrated network of smart devices, which it calls “seamless intelligence,” that will be able to directly interface with our brain waves.",
					"date": "2016/05/01",
					"featured": false,
					"image": "../images/computing-now.png",
					"link": "https://www.computer.org/web/computingnow/archive/brain-like-computing-may-2016",
					"org": "Computing Now",
					"tags": "numenta brain-like computing ieee computer society 2022 report computing now smart devices seamless intelligence brain waves",
					"title": "Brian-Like Computing",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/05/22",
					"base": "new-chips-propel-machine-learning.md",
					"ext": "md",
					"name": "new-chips-propel-machine-learning",
					"extname": ".md",
					"basename": "new-chips-propel-machine-learning.md",
					"dirname": "press/2016/05/22",
					"stem": "new-chips-propel-machine-learning",
					"path": "press/2016/05/22/new-chips-propel-machine-learning.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/05/22/new-chips-propel-machine-learning.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/05/22/new-chips-propel-machine-learning.md",
				"path": "/press/2016/05/22/new-chips-propel-machine-learning/",
				"data": {
					"author": "Don Clark",
					"brief": "Massachusetts General Hospital recently established a center in Boston that plans to use Nvidia chips to help an artificial-intelligence system spot anomalies on CT scans and other medical images, jobs now carried out by human radiologists. The project, drawing on a database of 10 billion existing images",
					"date": "2016/05/22",
					"featured": false,
					"image": "../images/wall-street-journal.png",
					"link": "http://www.wsj.com/articles/new-chips-propel-machine-learning-1463957238",
					"org": "Wall Street Journal",
					"tags": "nvidia microchip ct scan numenta machine learning",
					"title": "New Chips Propel Machine Learning",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/05/29",
					"base": "donna-dubinsky-standing-up-to-steve-jobs-and-being-right.md",
					"ext": "md",
					"name": "donna-dubinsky-standing-up-to-steve-jobs-and-being-right",
					"extname": ".md",
					"basename": "donna-dubinsky-standing-up-to-steve-jobs-and-being-right.md",
					"dirname": "press/2016/05/29",
					"stem": "donna-dubinsky-standing-up-to-steve-jobs-and-being-right",
					"path": "press/2016/05/29/donna-dubinsky-standing-up-to-steve-jobs-and-being-right.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/05/29/donna-dubinsky-standing-up-to-steve-jobs-and-being-right.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/05/29/donna-dubinsky-standing-up-to-steve-jobs-and-being-right.md",
				"path": "/press/2016/05/29/donna-dubinsky-standing-up-to-steve-jobs-and-being-right/",
				"data": {
					"author": "Ryan Hawk",
					"brief": "Donna Dubinsky was made famous by the Harvard Business School study about the time when she disagreed with Steve Jobs (when he decided that Apple should eliminate their distribution warehouses).  She ultimately prevailed and we discussed what happened next in her incredible career.  We had a fascinating conversation on this episode of The Learning Leader Show.",
					"date": "2016/05/29",
					"featured": false,
					"image": "../images/learning-leader.png",
					"link": "http://learningleader.com/episode-128-donna-dubinsky-standing-up-to-steve-jobs-and-being-right/",
					"org": "Learning Leader",
					"tags": "learning leader donna dubinsky standing up to steve jobs being right ryan hawk numenta",
					"title": "Donna Dubinsky – Standing Up To Steve Jobs And Being Right",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/06/16",
					"base": "here-is-what-uk-developers-need-to-know-about-machine-learning.md",
					"ext": "md",
					"name": "here-is-what-uk-developers-need-to-know-about-machine-learning",
					"extname": ".md",
					"basename": "here-is-what-uk-developers-need-to-know-about-machine-learning.md",
					"dirname": "press/2016/06/16",
					"stem": "here-is-what-uk-developers-need-to-know-about-machine-learning",
					"path": "press/2016/06/16/here-is-what-uk-developers-need-to-know-about-machine-learning.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/06/16/here-is-what-uk-developers-need-to-know-about-machine-learning.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/06/16/here-is-what-uk-developers-need-to-know-about-machine-learning.md",
				"path": "/press/2016/06/16/here-is-what-uk-developers-need-to-know-about-machine-learning/",
				"data": {
					"author": "Charlotte Jee",
					"brief": "Thanks to its role underpinning many of the recent advances in artificial intelligence, machine learning has become of mainstream interest to many technologists and developers. Here we’ll explain what it is, how you can get started plus the best tools and languages you need to develop machine learning technology.",
					"date": "2016/06/16",
					"featured": false,
					"image": "../images/techworld.png",
					"link": "http://www.techworld.com/tutorial/apps/everything-uk-developers-need-know-about-machine-learning-3641971/",
					"org": "Techworld",
					"tags": "developers machine learning numenta htm hierarchical temporal memory machine intelligence",
					"title": "Here's what UK Developers Need to Know about Machine Learning",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/06/25",
					"base": "from-not-working-to-neural-networking.md",
					"ext": "md",
					"name": "from-not-working-to-neural-networking",
					"extname": ".md",
					"basename": "from-not-working-to-neural-networking.md",
					"dirname": "press/2016/06/25",
					"stem": "from-not-working-to-neural-networking",
					"path": "press/2016/06/25/from-not-working-to-neural-networking.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/06/25/from-not-working-to-neural-networking.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/06/25/from-not-working-to-neural-networking.md",
				"path": "/press/2016/06/25/from-not-working-to-neural-networking/",
				"data": {
					"author": "Tom Standage",
					"brief": "How has artificial intelligence, associated with hubris and disappointment since its earliest days, suddenly become the hottest field in technology? The term was coined in a research proposal written in 1956 which suggested that significant progress could be made in getting machines to “solve the kinds of problems now reserved for humans",
					"date": "2016/06/25",
					"featured": false,
					"image": "../images/economist.png",
					"link": "http://www.economist.com/news/special-report/21700756-artificial-intelligence-boom-based-old-idea-modern-twist-not",
					"org": "Economist",
					"tags": "from not working neural networking economist numenta artificial machine intelligence",
					"title": "From Not Working to Neural Networking",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/06/26",
					"base": "numenta-releases-htm-studio.md",
					"ext": "md",
					"name": "numenta-releases-htm-studio",
					"extname": ".md",
					"basename": "numenta-releases-htm-studio.md",
					"dirname": "press/2016/06/26",
					"stem": "numenta-releases-htm-studio",
					"path": "press/2016/06/26/numenta-releases-htm-studio.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/06/26/numenta-releases-htm-studio.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/06/26/numenta-releases-htm-studio.md",
				"path": "/press/2016/06/26/numenta-releases-htm-studio/",
				"data": {
					"author": "Numenta",
					"brief": "REDWOOD CITY, Calif. --(BUSINESS WIRE)-- Numenta, Inc., a leader in machine intelligence, today announced the release of HTM Studio for anomaly detection, a desktop tool that makes it easy for businesses to experiment with advanced machine intelligence algorithms to uncover anomalies in their streaming data.",
					"date": "2016/06/26",
					"featured": false,
					"image": "../images/htm-studio.png",
					"link": null,
					"org": "Press Release",
					"tags": "numenta releases htm studio business wire machine intelligence find anomalies streaming data",
					"title": "Numenta Releases HTM Studio",
					"type": "release"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/06/27",
					"base": "this-is-why-your-fears-about-artificial-intelligence-are-wrong.md",
					"ext": "md",
					"name": "this-is-why-your-fears-about-artificial-intelligence-are-wrong",
					"extname": ".md",
					"basename": "this-is-why-your-fears-about-artificial-intelligence-are-wrong.md",
					"dirname": "press/2016/06/27",
					"stem": "this-is-why-your-fears-about-artificial-intelligence-are-wrong",
					"path": "press/2016/06/27/this-is-why-your-fears-about-artificial-intelligence-are-wrong.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/06/27/this-is-why-your-fears-about-artificial-intelligence-are-wrong.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/06/27/this-is-why-your-fears-about-artificial-intelligence-are-wrong.md",
				"path": "/press/2016/06/27/this-is-why-your-fears-about-artificial-intelligence-are-wrong/",
				"data": {
					"author": "Kara Swisher",
					"brief": "On the latest episode of Recode Decode, hosted by Kara Swisher, the co-founders of Numenta (who previously co-founded Palm and Handspring) predicted AI will indeed drive technological advances for the rest of the century",
					"date": "2016/06/27",
					"featured": false,
					"image": "../images/recode.png",
					"link": "http://www.recode.net/2016/6/27/12037248/artificial-intelligence-machine-learning-numenta-jeff-hawkins-donna-dubinsky-podcast",
					"org": "Re/Code",
					"tags": "your fears about artificial intelligence are wrong recode podcast kara swisher jeff hawkins donna dubinsky numenta machine intelligence",
					"title": "This Is Why Your Fears About Artificial Intelligence Are Wrong",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press/2016/07/26",
					"base": "machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning.md",
					"ext": "md",
					"name": "machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning",
					"extname": ".md",
					"basename": "machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning.md",
					"dirname": "press/2016/07/26",
					"stem": "machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning",
					"path": "press/2016/07/26/machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning.md",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/2016/07/26/machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning.md",
					"isAbsolute": false
				},
				"requirePath": "press/2016/07/26/machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning.md",
				"path": "/press/2016/07/26/machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning/",
				"data": {
					"author": "Kypriani Sinaris",
					"brief": "Note: original article published in German. Machine Learning is the new formula for what we once called Artificial Intelligence. In our Thematic Dossier we feel the new trend and introduce current ML solutions, including the Numenta platform for intelligent computing, ...and, the Natural Language Processing Project Cortical.io.",
					"date": "2016/07/26",
					"featured": false,
					"image": "../images/jaxenter.png",
					"link": "https://jaxenter.de/machine-learning-experten-check-43830",
					"org": "Jaxenter",
					"tags": "machine learning expore check six tips getting started machine learning numenta htm hierarchical temporal memory cortical",
					"title": "Machine Learning Expert Check: 6 Tips for Getting Started in the Machine Learning",
					"type": "item"
				}
			},
			{
				"file": {
					"root": "",
					"dir": "press",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "press",
					"stem": "index",
					"path": "press/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/press/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "press/index.jsx",
				"path": "/press/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "sitemap",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "sitemap",
					"stem": "index",
					"path": "sitemap/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/sitemap/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "sitemap/index.jsx",
				"path": "/sitemap/",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "technology-overview",
					"base": "_Section.jsx",
					"ext": "jsx",
					"name": "_Section",
					"extname": ".jsx",
					"basename": "_Section.jsx",
					"dirname": "technology-overview",
					"stem": "_Section",
					"path": "technology-overview/_Section.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/technology-overview/_Section.jsx",
					"isAbsolute": false
				},
				"requirePath": "technology-overview/_Section.jsx",
				"data": {}
			},
			{
				"file": {
					"root": "",
					"dir": "technology-overview",
					"base": "index.jsx",
					"ext": "jsx",
					"name": "index",
					"extname": ".jsx",
					"basename": "index.jsx",
					"dirname": "technology-overview",
					"stem": "index",
					"path": "technology-overview/index.jsx",
					"absolute": "/Users/brev/src/numenta-web/numenta.com/technology-overview/index.jsx",
					"isAbsolute": false
				},
				"requirePath": "technology-overview/index.jsx",
				"path": "/technology-overview/",
				"data": {}
			}
		]
	}

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactHelmet = __webpack_require__(366);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _reactTapEventPlugin = __webpack_require__(370);
	
	var _reactTapEventPlugin2 = _interopRequireDefault(_reactTapEventPlugin);
	
	var _gatsbyHelpers = __webpack_require__(363);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Layout = __webpack_require__(374);
	
	var _Layout2 = _interopRequireDefault(_Layout);
	
	var _universal = __webpack_require__(376);
	
	__webpack_require__(431);
	
	__webpack_require__(458);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const config = (0, _universal.getConfig)();
	
	/**
	 *
	 */
	// eslint-disable-line import/no-unresolved, max-len
	class Template extends _react2.default.Component {
	
	  getChildContext() {
	    const { route } = this.props;
	    return { config, route };
	  }
	
	  componentDidMount() {
	    if (window) (0, _reactTapEventPlugin2.default)(); // remove @ React 1.0
	  }
	
	  render() {
	    const { children } = this.props;
	    const { description, siteHost, siteTitle } = config;
	    const lang = 'en'; // @TODO i18n l10n
	    const now = (0, _universal.getDateNow)().toString();
	    const title = `${ siteTitle } — ${ description }`;
	    const titleForm = `%s | ${ siteHost }`;
	    const ver = (0, _universal.getVersion)();
	
	    const attrs = { lang, amp: undefined };
	    const links = [{
	      rel: 'shortcut icon',
	      href: (0, _gatsbyHelpers.prefixLink)((0, _universal.stamp)('/assets/icons/favicon.ico'))
	    }];
	    const meta = [{ charset: 'utf-8' }, { name: 'viewport', content: 'width=device-width, initial-scale=1.0' }, { 'http-equiv': 'X-UA-Compatible', content: 'IE=edge' }, { name: 'author', content: `${ siteTitle }` }, { name: 'description', content: title }, { name: 'generator', content: `© ${ siteHost } v${ ver } ${ now } Gatsby.js` }, { name: 'keywords', content: '@TODO,TODO,TODO' }];
	
	    if (true) {
	      links.push({ rel: 'stylesheet', href: (0, _gatsbyHelpers.prefixLink)((0, _universal.stamp)('/styles.css')) });
	    }
	
	    return _react2.default.createElement(
	      _Layout2.default,
	      null,
	      _react2.default.createElement(_reactHelmet2.default, {
	        defaultTitle: title,
	        htmlAttributes: attrs,
	        link: links,
	        meta: meta,
	        titleTemplate: titleForm
	      }),
	      children
	    );
	  }
	
	}
	
	Template.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  location: _react2.default.PropTypes.object.isRequired,
	  route: _react2.default.PropTypes.object.isRequired
	};
	Template.childContextTypes = {
	  config: _react2.default.PropTypes.object,
	  route: _react2.default.PropTypes.object
	};
	exports.default = Template;
	module.exports = exports['default'];

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSideEffect = __webpack_require__(367);
	
	var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);
	
	var _deepEqual = __webpack_require__(180);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _objectAssign = __webpack_require__(4);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _HelmetConstantsJs = __webpack_require__(368);
	
	var _PlainComponent = __webpack_require__(369);
	
	var _PlainComponent2 = _interopRequireDefault(_PlainComponent);
	
	var HELMET_ATTRIBUTE = "data-react-helmet";
	
	var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
	    return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
	};
	
	var getInnermostProperty = function getInnermostProperty(propsList, property) {
	    var reversedPropsList = [].concat(propsList).reverse();
	
	    for (var i = 0; i < reversedPropsList.length; i++) {
	        var props = reversedPropsList[i];
	
	        if (props[property]) {
	            return props[property];
	        }
	    }
	
	    return null;
	};
	
	var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
	    var innermostTitle = getInnermostProperty(propsList, "title");
	    var innermostTemplate = getInnermostProperty(propsList, "titleTemplate");
	
	    if (innermostTemplate && innermostTitle) {
	        return innermostTemplate.replace(/\%s/g, innermostTitle);
	    }
	
	    var innermostDefaultTitle = getInnermostProperty(propsList, "defaultTitle");
	
	    return innermostTitle || innermostDefaultTitle || "";
	};
	
	var getOnChangeClientState = function getOnChangeClientState(propsList) {
	    return getInnermostProperty(propsList, "onChangeClientState") || function () {};
	};
	
	var getHtmlAttributesFromPropsList = function getHtmlAttributesFromPropsList(propsList) {
	    return propsList.filter(function (props) {
	        return typeof props[_HelmetConstantsJs.TAG_NAMES.HTML] !== "undefined";
	    }).map(function (props) {
	        return props[_HelmetConstantsJs.TAG_NAMES.HTML];
	    }).reduce(function (html, current) {
	        return _extends({}, html, current);
	    }, {});
	};
	
	var getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {
	    return propsList.filter(function (props) {
	        return typeof props[_HelmetConstantsJs.TAG_NAMES.BASE] !== "undefined";
	    }).map(function (props) {
	        return props[_HelmetConstantsJs.TAG_NAMES.BASE];
	    }).reverse().reduce(function (innermostBaseTag, tag) {
	        if (!innermostBaseTag.length) {
	            var keys = Object.keys(tag);
	
	            for (var i = 0; i < keys.length; i++) {
	                var attributeKey = keys[i];
	                var lowerCaseAttributeKey = attributeKey.toLowerCase();
	
	                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1) {
	                    return innermostBaseTag.concat(tag);
	                }
	            }
	        }
	
	        return innermostBaseTag;
	    }, []);
	};
	
	var getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {
	    // Calculate list of tags, giving priority innermost component (end of the propslist)
	    var approvedSeenTags = {};
	
	    var tagList = propsList.filter(function (props) {
	        return typeof props[tagName] !== "undefined";
	    }).map(function (props) {
	        return props[tagName];
	    }).reverse().reduce(function (approvedTags, instanceTags) {
	        var instanceSeenTags = {};
	
	        instanceTags.filter(function (tag) {
	            var primaryAttributeKey = undefined;
	            var keys = Object.keys(tag);
	            for (var i = 0; i < keys.length; i++) {
	                var attributeKey = keys[i];
	                var lowerCaseAttributeKey = attributeKey.toLowerCase();
	
	                // Special rule with link tags, since rel and href are both primary tags, rel takes priority
	                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstantsJs.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === _HelmetConstantsJs.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {
	                    primaryAttributeKey = lowerCaseAttributeKey;
	                }
	                // Special case for innerHTML which doesn't work lowercased
	                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstantsJs.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstantsJs.TAG_PROPERTIES.CSS_TEXT)) {
	                    primaryAttributeKey = attributeKey;
	                }
	            }
	
	            if (!primaryAttributeKey) {
	                return false;
	            }
	
	            var value = tag[primaryAttributeKey].toLowerCase();
	
	            if (!approvedSeenTags[primaryAttributeKey]) {
	                approvedSeenTags[primaryAttributeKey] = {};
	            }
	
	            if (!instanceSeenTags[primaryAttributeKey]) {
	                instanceSeenTags[primaryAttributeKey] = {};
	            }
	
	            if (!approvedSeenTags[primaryAttributeKey][value]) {
	                instanceSeenTags[primaryAttributeKey][value] = true;
	                return true;
	            }
	
	            return false;
	        }).reverse().forEach(function (tag) {
	            return approvedTags.push(tag);
	        });
	
	        // Update seen tags with tags from this instance
	        var keys = Object.keys(instanceSeenTags);
	        for (var i = 0; i < keys.length; i++) {
	            var attributeKey = keys[i];
	            var tagUnion = (0, _objectAssign2["default"])({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);
	
	            approvedSeenTags[attributeKey] = tagUnion;
	        }
	
	        return approvedTags;
	    }, []).reverse();
	
	    return tagList;
	};
	
	var updateTitle = function updateTitle(title) {
	    document.title = title || document.title;
	};
	
	var updateHtmlAttributes = function updateHtmlAttributes(attributes) {
	    var htmlTag = document.getElementsByTagName("html")[0];
	    var helmetAttributeString = htmlTag.getAttribute(HELMET_ATTRIBUTE);
	    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];
	    var attributesToRemove = [].concat(helmetAttributes);
	    var attributeKeys = Object.keys(attributes);
	
	    for (var i = 0; i < attributeKeys.length; i++) {
	        var attribute = attributeKeys[i];
	        var value = attributes[attribute] || "";
	        htmlTag.setAttribute(attribute, value);
	
	        if (helmetAttributes.indexOf(attribute) === -1) {
	            helmetAttributes.push(attribute);
	        }
	
	        var indexToSave = attributesToRemove.indexOf(attribute);
	        if (indexToSave !== -1) {
	            attributesToRemove.splice(indexToSave, 1);
	        }
	    }
	
	    for (var i = attributesToRemove.length - 1; i >= 0; i--) {
	        htmlTag.removeAttribute(attributesToRemove[i]);
	    }
	
	    if (helmetAttributes.length === attributesToRemove.length) {
	        htmlTag.removeAttribute(HELMET_ATTRIBUTE);
	    } else {
	        htmlTag.setAttribute(HELMET_ATTRIBUTE, helmetAttributes.join(","));
	    }
	};
	
	var updateTags = function updateTags(type, tags) {
	    var headElement = document.head || document.querySelector("head");
	    var tagNodes = headElement.querySelectorAll(type + "[" + HELMET_ATTRIBUTE + "]");
	    var oldTags = Array.prototype.slice.call(tagNodes);
	    var newTags = [];
	    var indexToDelete = undefined;
	
	    if (tags && tags.length) {
	        tags.forEach(function (tag) {
	            var newElement = document.createElement(type);
	
	            for (var attribute in tag) {
	                if (tag.hasOwnProperty(attribute)) {
	                    if (attribute === "innerHTML") {
	                        newElement.innerHTML = tag.innerHTML;
	                    } else if (attribute === "cssText") {
	                        if (newElement.styleSheet) {
	                            newElement.styleSheet.cssText = tag.cssText;
	                        } else {
	                            newElement.appendChild(document.createTextNode(tag.cssText));
	                        }
	                    } else {
	                        var value = typeof tag[attribute] === "undefined" ? "" : tag[attribute];
	                        newElement.setAttribute(attribute, value);
	                    }
	                }
	            }
	
	            newElement.setAttribute(HELMET_ATTRIBUTE, "true");
	
	            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.
	            if (oldTags.some(function (existingTag, index) {
	                indexToDelete = index;
	                return newElement.isEqualNode(existingTag);
	            })) {
	                oldTags.splice(indexToDelete, 1);
	            } else {
	                newTags.push(newElement);
	            }
	        });
	    }
	
	    oldTags.forEach(function (tag) {
	        return tag.parentNode.removeChild(tag);
	    });
	    newTags.forEach(function (tag) {
	        return headElement.appendChild(tag);
	    });
	
	    return {
	        oldTags: oldTags,
	        newTags: newTags
	    };
	};
	
	var generateHtmlAttributesAsString = function generateHtmlAttributesAsString(attributes) {
	    var keys = Object.keys(attributes);
	    var attributeString = "";
	
	    for (var i = 0; i < keys.length; i++) {
	        var attribute = keys[i];
	        var attr = typeof attributes[attribute] !== "undefined" ? attribute + "=\"" + attributes[attribute] + "\"" : "" + attribute;
	        attributeString += attr + " ";
	    }
	
	    return attributeString.trim();
	};
	
	var generateTitleAsString = function generateTitleAsString(type, title) {
	    var stringifiedMarkup = "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\">" + encodeSpecialCharacters(title) + "</" + type + ">";
	
	    return stringifiedMarkup;
	};
	
	var generateTagsAsString = function generateTagsAsString(type, tags) {
	    var stringifiedMarkup = tags.map(function (tag) {
	        var attributeHtml = Object.keys(tag).filter(function (attribute) {
	            return !(attribute === "innerHTML" || attribute === "cssText");
	        }).map(function (attribute) {
	            if (typeof tag[attribute] === "undefined") {
	                return attribute;
	            }
	
	            var encodedValue = encodeSpecialCharacters(tag[attribute]);
	            return attribute + "=\"" + encodedValue + "\"";
	        }).join(" ").trim();
	
	        var tagContent = tag.innerHTML || tag.cssText || "";
	
	        return "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\" " + attributeHtml + (type === _HelmetConstantsJs.TAG_NAMES.SCRIPT || type === _HelmetConstantsJs.TAG_NAMES.STYLE ? ">" + tagContent + "</" + type + ">" : "/>");
	    }).join("");
	
	    return stringifiedMarkup;
	};
	
	var generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title) {
	    // assigning into an array to define toString function on it
	    var component = [_react2["default"].createElement(_HelmetConstantsJs.TAG_NAMES.TITLE, _defineProperty({
	        key: title
	    }, HELMET_ATTRIBUTE, true), title)];
	
	    return component;
	};
	
	var generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {
	    /* eslint-disable react/display-name */
	    var component = tags.map(function (tag, i) {
	        var mappedTag = _defineProperty({
	            key: i
	        }, HELMET_ATTRIBUTE, true);
	
	        Object.keys(tag).forEach(function (attribute) {
	            var mappedAttribute = _HelmetConstantsJs.REACT_TAG_MAP[attribute] || attribute;
	
	            if (mappedAttribute === "innerHTML" || mappedAttribute === "cssText") {
	                var content = tag.innerHTML || tag.cssText;
	                mappedTag.dangerouslySetInnerHTML = { __html: content };
	            } else {
	                mappedTag[mappedAttribute] = tag[attribute];
	            }
	        });
	
	        return _react2["default"].createElement(type, mappedTag);
	    });
	
	    return component;
	    /* eslint-enable react/display-name */
	};
	
	var getMethodsForTag = function getMethodsForTag(type, tags) {
	    switch (type) {
	        case _HelmetConstantsJs.TAG_NAMES.TITLE:
	            return {
	                toComponent: function toComponent() {
	                    return generateTitleAsReactComponent(type, tags);
	                },
	                toString: function toString() {
	                    return generateTitleAsString(type, tags);
	                }
	            };
	        case _HelmetConstantsJs.TAG_NAMES.HTML:
	            return {
	                toComponent: function toComponent() {
	                    return tags;
	                },
	                toString: function toString() {
	                    return generateHtmlAttributesAsString(tags);
	                }
	            };
	        default:
	            return {
	                toComponent: function toComponent() {
	                    return generateTagsAsReactComponent(type, tags);
	                },
	                toString: function toString() {
	                    return generateTagsAsString(type, tags);
	                }
	            };
	    }
	};
	
	var mapStateOnServer = function mapStateOnServer(_ref) {
	    var htmlAttributes = _ref.htmlAttributes;
	    var title = _ref.title;
	    var baseTag = _ref.baseTag;
	    var metaTags = _ref.metaTags;
	    var linkTags = _ref.linkTags;
	    var scriptTags = _ref.scriptTags;
	    var styleTags = _ref.styleTags;
	    return {
	        htmlAttributes: getMethodsForTag(_HelmetConstantsJs.TAG_NAMES.HTML, htmlAttributes),
	        title: getMethodsForTag(_HelmetConstantsJs.TAG_NAMES.TITLE, title),
	        base: getMethodsForTag(_HelmetConstantsJs.TAG_NAMES.BASE, baseTag),
	        meta: getMethodsForTag(_HelmetConstantsJs.TAG_NAMES.META, metaTags),
	        link: getMethodsForTag(_HelmetConstantsJs.TAG_NAMES.LINK, linkTags),
	        script: getMethodsForTag(_HelmetConstantsJs.TAG_NAMES.SCRIPT, scriptTags),
	        style: getMethodsForTag(_HelmetConstantsJs.TAG_NAMES.STYLE, styleTags)
	    };
	};
	
	var Helmet = function Helmet(Component) {
	    /* eslint-disable react/no-multi-comp */
	
	    var HelmetWrapper = (function (_React$Component) {
	        _inherits(HelmetWrapper, _React$Component);
	
	        function HelmetWrapper() {
	            _classCallCheck(this, HelmetWrapper);
	
	            _get(Object.getPrototypeOf(HelmetWrapper.prototype), "constructor", this).apply(this, arguments);
	        }
	
	        /* eslint-enable react/no-multi-comp */
	
	        _createClass(HelmetWrapper, [{
	            key: "shouldComponentUpdate",
	            value: function shouldComponentUpdate(nextProps) {
	                return !(0, _deepEqual2["default"])(this.props, nextProps);
	            }
	
	            // Component.peek comes from react-side-effect:
	            // For testing, you may use a static peek() method available on the returned component.
	            // It lets you get the current state without resetting the mounted instance stack.
	            // Don’t use it for anything other than testing.
	        }, {
	            key: "render",
	            value: function render() {
	                return _react2["default"].createElement(Component, this.props);
	            }
	        }], [{
	            key: "propTypes",
	
	            /**
	             * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
	             * @param {String} title: "Title"
	             * @param {String} defaultTitle: "Default Title"
	             * @param {String} titleTemplate: "MySite.com - %s"
	             * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
	             * @param {Array} meta: [{"name": "description", "content": "Test description"}]
	             * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
	             * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
	             * @param {Array} style: [{"type": "text/css", "cssText": "div{ display: block; color: blue; }"}]
	             * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
	             */
	            value: {
	                htmlAttributes: _react2["default"].PropTypes.object,
	                title: _react2["default"].PropTypes.string,
	                defaultTitle: _react2["default"].PropTypes.string,
	                titleTemplate: _react2["default"].PropTypes.string,
	                base: _react2["default"].PropTypes.object,
	                meta: _react2["default"].PropTypes.arrayOf(_react2["default"].PropTypes.object),
	                link: _react2["default"].PropTypes.arrayOf(_react2["default"].PropTypes.object),
	                script: _react2["default"].PropTypes.arrayOf(_react2["default"].PropTypes.object),
	                style: _react2["default"].PropTypes.arrayOf(_react2["default"].PropTypes.object),
	                onChangeClientState: _react2["default"].PropTypes.func
	            },
	            enumerable: true
	        }, {
	            key: "peek",
	            value: Component.peek,
	            enumerable: true
	        }, {
	            key: "rewind",
	            value: function value() {
	                var mappedState = Component.rewind();
	                if (!mappedState) {
	                    // provide fallback if mappedState is undefined
	                    mappedState = mapStateOnServer({
	                        htmlAttributes: [],
	                        title: "",
	                        baseTag: [],
	                        metaTags: [],
	                        linkTags: [],
	                        scriptTags: [],
	                        styleTags: []
	                    });
	                }
	
	                return mappedState;
	            },
	            enumerable: true
	        }, {
	            key: "canUseDOM",
	            set: function set(canUseDOM) {
	                Component.canUseDOM = canUseDOM;
	            }
	        }]);
	
	        return HelmetWrapper;
	    })(_react2["default"].Component);
	
	    return HelmetWrapper;
	};
	
	var reducePropsToState = function reducePropsToState(propsList) {
	    return {
	        htmlAttributes: getHtmlAttributesFromPropsList(propsList),
	        title: getTitleFromPropsList(propsList),
	        baseTag: getBaseTagFromPropsList([_HelmetConstantsJs.TAG_PROPERTIES.HREF], propsList),
	        metaTags: getTagsFromPropsList(_HelmetConstantsJs.TAG_NAMES.META, [_HelmetConstantsJs.TAG_PROPERTIES.NAME, _HelmetConstantsJs.TAG_PROPERTIES.CHARSET, _HelmetConstantsJs.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstantsJs.TAG_PROPERTIES.PROPERTY], propsList),
	        linkTags: getTagsFromPropsList(_HelmetConstantsJs.TAG_NAMES.LINK, [_HelmetConstantsJs.TAG_PROPERTIES.REL, _HelmetConstantsJs.TAG_PROPERTIES.HREF], propsList),
	        scriptTags: getTagsFromPropsList(_HelmetConstantsJs.TAG_NAMES.SCRIPT, [_HelmetConstantsJs.TAG_PROPERTIES.SRC, _HelmetConstantsJs.TAG_PROPERTIES.INNER_HTML], propsList),
	        styleTags: getTagsFromPropsList(_HelmetConstantsJs.TAG_NAMES.STYLE, [_HelmetConstantsJs.TAG_PROPERTIES.CSS_TEXT], propsList),
	        onChangeClientState: getOnChangeClientState(propsList)
	    };
	};
	
	var handleClientStateChange = function handleClientStateChange(newState) {
	    var htmlAttributes = newState.htmlAttributes;
	    var title = newState.title;
	    var baseTag = newState.baseTag;
	    var metaTags = newState.metaTags;
	    var linkTags = newState.linkTags;
	    var scriptTags = newState.scriptTags;
	    var styleTags = newState.styleTags;
	    var onChangeClientState = newState.onChangeClientState;
	
	    updateHtmlAttributes(htmlAttributes);
	
	    updateTitle(title);
	
	    var tagUpdates = {
	        baseTag: updateTags(_HelmetConstantsJs.TAG_NAMES.BASE, baseTag),
	        metaTags: updateTags(_HelmetConstantsJs.TAG_NAMES.META, metaTags),
	        linkTags: updateTags(_HelmetConstantsJs.TAG_NAMES.LINK, linkTags),
	        scriptTags: updateTags(_HelmetConstantsJs.TAG_NAMES.SCRIPT, scriptTags),
	        styleTags: updateTags(_HelmetConstantsJs.TAG_NAMES.STYLE, styleTags)
	    };
	
	    var addedTags = {};
	    var removedTags = {};
	
	    Object.keys(tagUpdates).forEach(function (tagType) {
	        var _tagUpdates$tagType = tagUpdates[tagType];
	        var newTags = _tagUpdates$tagType.newTags;
	        var oldTags = _tagUpdates$tagType.oldTags;
	
	        if (newTags.length) {
	            addedTags[tagType] = newTags;
	        }
	        if (oldTags.length) {
	            removedTags[tagType] = tagUpdates[tagType].oldTags;
	        }
	    });
	
	    onChangeClientState(newState, addedTags, removedTags);
	};
	
	var SideEffect = (0, _reactSideEffect2["default"])(reducePropsToState, handleClientStateChange, mapStateOnServer);
	
	// PlainComponent is used to be a blank component decorated by react-side-effect
	exports["default"] = Helmet(SideEffect(_PlainComponent2["default"]));
	module.exports = exports["default"];

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _fbjsLibExecutionEnvironment = __webpack_require__(45);
	
	var _fbjsLibExecutionEnvironment2 = _interopRequireDefault(_fbjsLibExecutionEnvironment);
	
	var _fbjsLibShallowEqual = __webpack_require__(123);
	
	var _fbjsLibShallowEqual2 = _interopRequireDefault(_fbjsLibShallowEqual);
	
	module.exports = function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {
	  if (typeof reducePropsToState !== 'function') {
	    throw new Error('Expected reducePropsToState to be a function.');
	  }
	  if (typeof handleStateChangeOnClient !== 'function') {
	    throw new Error('Expected handleStateChangeOnClient to be a function.');
	  }
	  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {
	    throw new Error('Expected mapStateOnServer to either be undefined or a function.');
	  }
	
	  function getDisplayName(WrappedComponent) {
	    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	  }
	
	  return function wrap(WrappedComponent) {
	    if (typeof WrappedComponent !== 'function') {
	      throw new Error('Expected WrappedComponent to be a React component.');
	    }
	
	    var mountedInstances = [];
	    var state = undefined;
	
	    function emitChange() {
	      state = reducePropsToState(mountedInstances.map(function (instance) {
	        return instance.props;
	      }));
	
	      if (SideEffect.canUseDOM) {
	        handleStateChangeOnClient(state);
	      } else if (mapStateOnServer) {
	        state = mapStateOnServer(state);
	      }
	    }
	
	    var SideEffect = (function (_Component) {
	      _inherits(SideEffect, _Component);
	
	      function SideEffect() {
	        _classCallCheck(this, SideEffect);
	
	        _Component.apply(this, arguments);
	      }
	
	      SideEffect.peek = function peek() {
	        return state;
	      };
	
	      SideEffect.rewind = function rewind() {
	        if (SideEffect.canUseDOM) {
	          throw new Error('You may ony call rewind() on the server. Call peek() to read the current state.');
	        }
	
	        var recordedState = state;
	        state = undefined;
	        mountedInstances = [];
	        return recordedState;
	      };
	
	      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	        return !_fbjsLibShallowEqual2['default'](nextProps, this.props);
	      };
	
	      SideEffect.prototype.componentWillMount = function componentWillMount() {
	        mountedInstances.push(this);
	        emitChange();
	      };
	
	      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {
	        emitChange();
	      };
	
	      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {
	        var index = mountedInstances.indexOf(this);
	        mountedInstances.splice(index, 1);
	        emitChange();
	      };
	
	      SideEffect.prototype.render = function render() {
	        return _react2['default'].createElement(WrappedComponent, this.props);
	      };
	
	      _createClass(SideEffect, null, [{
	        key: 'displayName',
	
	        // Try to use displayName of wrapped component
	        value: 'SideEffect(' + getDisplayName(WrappedComponent) + ')',
	
	        // Expose canUseDOM so tests can monkeypatch it
	        enumerable: true
	      }, {
	        key: 'canUseDOM',
	        value: _fbjsLibExecutionEnvironment2['default'].canUseDOM,
	        enumerable: true
	      }]);
	
	      return SideEffect;
	    })(_react.Component);
	
	    return SideEffect;
	  };
	};

/***/ },
/* 368 */
/***/ function(module, exports) {

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var TAG_NAMES = {
	    HTML: "htmlAttributes",
	    TITLE: "title",
	    BASE: "base",
	    META: "meta",
	    LINK: "link",
	    SCRIPT: "script",
	    STYLE: "style"
	};
	
	exports.TAG_NAMES = TAG_NAMES;
	var TAG_PROPERTIES = {
	    NAME: "name",
	    CHARSET: "charset",
	    HTTPEQUIV: "http-equiv",
	    REL: "rel",
	    HREF: "href",
	    PROPERTY: "property",
	    SRC: "src",
	    INNER_HTML: "innerHTML",
	    CSS_TEXT: "cssText"
	};
	
	exports.TAG_PROPERTIES = TAG_PROPERTIES;
	var REACT_TAG_MAP = {
	    "charset": "charSet",
	    "http-equiv": "httpEquiv"
	};
	exports.REACT_TAG_MAP = REACT_TAG_MAP;

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var PlainComponent = (function (_React$Component) {
	    _inherits(PlainComponent, _React$Component);
	
	    function PlainComponent() {
	        _classCallCheck(this, PlainComponent);
	
	        _get(Object.getPrototypeOf(PlainComponent.prototype), "constructor", this).apply(this, arguments);
	    }
	
	    _createClass(PlainComponent, [{
	        key: "render",
	        value: function render() {
	            return null;
	        }
	    }]);
	
	    return PlainComponent;
	})(_react2["default"].Component);
	
	exports["default"] = PlainComponent;
	module.exports = exports["default"];

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	var invariant = __webpack_require__(8);
	var defaultClickRejectionStrategy = __webpack_require__(371);
	
	var alreadyInjected = false;
	
	module.exports = function injectTapEventPlugin (strategyOverrides) {
	  strategyOverrides = strategyOverrides || {}
	  var shouldRejectClick = strategyOverrides.shouldRejectClick || defaultClickRejectionStrategy;
	
	  if (false) {
	    invariant(
	      !alreadyInjected,
	      'injectTapEventPlugin(): Can only be called once per application lifecycle.\n\n\
	It is recommended to call injectTapEventPlugin() just before you call \
	ReactDOM.render(). If you are using an external library which calls injectTapEventPlugin() \
	itself, please contact the maintainer as it shouldn\'t be called in library code and \
	should be injected by the application.'
	    )
	  }
	
	  alreadyInjected = true;
	
	  __webpack_require__(39).injection.injectEventPluginsByName({
	    'TapEventPlugin':       __webpack_require__(372)(shouldRejectClick)
	  });
	};


/***/ },
/* 371 */
/***/ function(module, exports) {

	module.exports = function(lastTouchEvent, clickTimestamp) {
	  if (lastTouchEvent && (clickTimestamp - lastTouchEvent) < 750) {
	    return true;
	  }
	};


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule TapEventPlugin
	 * @typechecks static-only
	 */
	
	"use strict";
	
	var EventConstants = __webpack_require__(37);
	var EventPluginUtils = __webpack_require__(41);
	var EventPropagators = __webpack_require__(38);
	var SyntheticUIEvent = __webpack_require__(66);
	var TouchEventUtils = __webpack_require__(373);
	var ViewportMetrics = __webpack_require__(67);
	
	var keyOf = __webpack_require__(24);
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var isStartish = EventPluginUtils.isStartish;
	var isEndish = EventPluginUtils.isEndish;
	
	var isTouch = function(topLevelType) {
	  var touchTypes = [
	    topLevelTypes.topTouchCancel,
	    topLevelTypes.topTouchEnd,
	    topLevelTypes.topTouchStart,
	    topLevelTypes.topTouchMove
	  ];
	  return touchTypes.indexOf(topLevelType) >= 0;
	}
	
	/**
	 * Number of pixels that are tolerated in between a `touchStart` and `touchEnd`
	 * in order to still be considered a 'tap' event.
	 */
	var tapMoveThreshold = 10;
	var ignoreMouseThreshold = 750;
	var startCoords = {x: null, y: null};
	var lastTouchEvent = null;
	
	var Axis = {
	  x: {page: 'pageX', client: 'clientX', envScroll: 'currentPageScrollLeft'},
	  y: {page: 'pageY', client: 'clientY', envScroll: 'currentPageScrollTop'}
	};
	
	function getAxisCoordOfEvent(axis, nativeEvent) {
	  var singleTouch = TouchEventUtils.extractSingleTouch(nativeEvent);
	  if (singleTouch) {
	    return singleTouch[axis.page];
	  }
	  return axis.page in nativeEvent ?
	    nativeEvent[axis.page] :
	    nativeEvent[axis.client] + ViewportMetrics[axis.envScroll];
	}
	
	function getDistance(coords, nativeEvent) {
	  var pageX = getAxisCoordOfEvent(Axis.x, nativeEvent);
	  var pageY = getAxisCoordOfEvent(Axis.y, nativeEvent);
	  return Math.pow(
	    Math.pow(pageX - coords.x, 2) + Math.pow(pageY - coords.y, 2),
	    0.5
	  );
	}
	
	var touchEvents = [
	  topLevelTypes.topTouchStart,
	  topLevelTypes.topTouchCancel,
	  topLevelTypes.topTouchEnd,
	  topLevelTypes.topTouchMove,
	];
	
	var dependencies = [
	  topLevelTypes.topMouseDown,
	  topLevelTypes.topMouseMove,
	  topLevelTypes.topMouseUp,
	].concat(touchEvents);
	
	var eventTypes = {
	  touchTap: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchTap: null}),
	      captured: keyOf({onTouchTapCapture: null})
	    },
	    dependencies: dependencies
	  }
	};
	
	var now = (function() {
	  if (Date.now) {
	    return Date.now;
	  } else {
	    // IE8 support: http://stackoverflow.com/questions/9430357/please-explain-why-and-how-new-date-works-as-workaround-for-date-now-in
	    return function () {
	      return +new Date;
	    }
	  }
	})();
	
	function createTapEventPlugin(shouldRejectClick) {
	  return {
	
	    tapMoveThreshold: tapMoveThreshold,
	
	    ignoreMouseThreshold: ignoreMouseThreshold,
	
	    eventTypes: eventTypes,
	
	    /**
	     * @param {string} topLevelType Record from `EventConstants`.
	     * @param {DOMEventTarget} targetInst The listening component root node.
	     * @param {object} nativeEvent Native browser event.
	     * @return {*} An accumulation of synthetic events.
	     * @see {EventPluginHub.extractEvents}
	     */
	    extractEvents: function(
	      topLevelType,
	      targetInst,
	      nativeEvent,
	      nativeEventTarget
	    ) {
	
	      if (isTouch(topLevelType)) {
	        lastTouchEvent = now();
	      } else {
	        if (shouldRejectClick(lastTouchEvent, now())) {
	          return null;
	        }
	      }
	
	      if (!isStartish(topLevelType) && !isEndish(topLevelType)) {
	        return null;
	      }
	      var event = null;
	      var distance = getDistance(startCoords, nativeEvent);
	      if (isEndish(topLevelType) && distance < tapMoveThreshold) {
	        event = SyntheticUIEvent.getPooled(
	          eventTypes.touchTap,
	          targetInst,
	          nativeEvent,
	          nativeEventTarget
	        );
	      }
	      if (isStartish(topLevelType)) {
	        startCoords.x = getAxisCoordOfEvent(Axis.x, nativeEvent);
	        startCoords.y = getAxisCoordOfEvent(Axis.y, nativeEvent);
	      } else if (isEndish(topLevelType)) {
	        startCoords.x = 0;
	        startCoords.y = 0;
	      }
	      EventPropagators.accumulateTwoPhaseDispatches(event);
	      return event;
	    }
	
	  };
	}
	
	module.exports = createTapEventPlugin;


/***/ },
/* 373 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule TouchEventUtils
	 */
	
	var TouchEventUtils = {
	  /**
	   * Utility function for common case of extracting out the primary touch from a
	   * touch event.
	   * - `touchEnd` events usually do not have the `touches` property.
	   *   http://stackoverflow.com/questions/3666929/
	   *   mobile-sarai-touchend-event-not-firing-when-last-touch-is-removed
	   *
	   * @param {Event} nativeEvent Native event that may or may not be a touch.
	   * @return {TouchesObject?} an object with pageX and pageY or null.
	   */
	  extractSingleTouch: function(nativeEvent) {
	    var touches = nativeEvent.touches;
	    var changedTouches = nativeEvent.changedTouches;
	    var hasTouches = touches && touches.length > 0;
	    var hasChangedTouches = changedTouches && changedTouches.length > 0;
	
	    return !hasTouches && hasChangedTouches ? changedTouches[0] :
	           hasTouches ? touches[0] :
	           nativeEvent;
	  }
	};
	
	module.exports = TouchEventUtils;


/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Footer = __webpack_require__(375);
	
	var _Footer2 = _interopRequireDefault(_Footer);
	
	var _Header = __webpack_require__(399);
	
	var _Header2 = _interopRequireDefault(_Header);
	
	var _Main = __webpack_require__(426);
	
	var _Main2 = _interopRequireDefault(_Main);
	
	var _index = __webpack_require__(429);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Layout = ({ children }) => _react2.default.createElement(
	  'div',
	  { className: _index2.default.layout },
	  _react2.default.createElement(_Header2.default, null),
	  _react2.default.createElement(
	    _Main2.default,
	    null,
	    children
	  ),
	  _react2.default.createElement(_Footer2.default, null)
	);
	
	Layout.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = Layout;
	module.exports = exports['default'];

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _universal = __webpack_require__(376);
	
	var _LogoMark = __webpack_require__(378);
	
	var _LogoMark2 = _interopRequireDefault(_LogoMark);
	
	var _Spacer = __webpack_require__(390);
	
	var _Spacer2 = _interopRequireDefault(_Spacer);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _index = __webpack_require__(397);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Footer = (props, { config }) => {
	  const { links } = config;
	  const repo = (0, _universal.getRepo)();
	  const year = (0, _universal.getDateYear)();
	
	  return _react2.default.createElement(
	    'div',
	    { className: _index2.default.footbar },
	    _react2.default.createElement(
	      'footer',
	      { className: _index2.default.footer },
	      _react2.default.createElement(
	        'span',
	        null,
	        '© ',
	        year,
	        ' ',
	        ' ',
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.in.home },
	          'Numenta'
	        )
	      ),
	      _react2.default.createElement(
	        'span',
	        { className: _index2.default.mark },
	        _react2.default.createElement(_LogoMark2.default, null)
	      ),
	      _react2.default.createElement(
	        'span',
	        null,
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.in.privacy },
	          'Privacy'
	        ),
	        _react2.default.createElement(_Spacer2.default, null),
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.in.terms },
	          'Terms'
	        ),
	        _react2.default.createElement(_Spacer2.default, null),
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: repo },
	          'Source'
	        ),
	        _react2.default.createElement(_Spacer2.default, null),
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.in.sitemap },
	          'Sitemap'
	        )
	      )
	    )
	  );
	};
	
	Footer.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = Footer;
	module.exports = exports['default'];

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getConfig = getConfig;
	exports.getDateNow = getDateNow;
	exports.getDateYear = getDateYear;
	exports.getModalAspect = getModalAspect;
	exports.getRepo = getRepo;
	exports.getVersion = getVersion;
	exports.sortDateAscend = sortDateAscend;
	exports.sortDateDescend = sortDateDescend;
	exports.stamp = stamp;
	exports.trims = trims;
	
	var _config = __webpack_require__(364);
	
	var _package = __webpack_require__(377);
	
	/**
	 *
	 */
	function getConfig() {
	  return _config.config;
	}
	
	/**
	 *
	 */
	// eslint-disable-line import/no-unresolved
	
	function getDateNow() {
	  return new Date();
	}
	
	/**
	 *
	 */
	function getDateYear() {
	  return getDateNow().getFullYear();
	}
	
	/**
	 *
	 */
	function getModalAspect(width) {
	  const pad = 15;
	  let long;
	
	  if (width >= 1280 - pad) long = 1024;else if (width >= 1024 - pad) long = 720;else if (width >= 720 - pad) long = 640;else long = 480 - pad;
	
	  return long;
	}
	
	/**
	 *
	 */
	function getRepo() {
	  return _package.repository.url;
	}
	
	/**
	 *
	 */
	function getVersion() {
	  return _package.version;
	}
	
	/**
	 *
	 */
	function sortDateAscend(a, b) {
	  const aDate = new Date(a.data.date);
	  const bDate = new Date(b.data.date);
	
	  if (aDate > bDate) return 1;
	  if (aDate < bDate) return -1;
	  return 0;
	}
	
	/**
	 *
	 */
	function sortDateDescend(a, b) {
	  const aDate = new Date(a.data.date);
	  const bDate = new Date(b.data.date);
	
	  if (aDate > bDate) return -1;
	  if (aDate < bDate) return 1;
	  return 0;
	}
	
	/**
	 *
	 */
	function stamp(text) {
	  return `${ text }?v=${ getVersion() }`;
	}
	
	/**
	 * Template String to trim extra spaces from multiline es6 strings.
	 * @param {Array} strings - Input string literals for es6 template string.
	 * @param {...Array} [values] - Template string filler values.
	 * @returns {String} - Completed and filled string.
	 */
	function trims(strings, ...values) {
	  let result = '';
	  let i = 0;
	  let tmp;
	
	  while (i < strings.length) {
	    tmp = strings[i];
	    tmp = tmp.replace(/\n/g, ' ');
	    tmp = tmp.replace(/\s+/g, ' ');
	    result += tmp;
	
	    if (i < values.length) result += values[i];
	    i++;
	  }
	
	  return result;
	}

/***/ },
/* 377 */
/***/ function(module, exports) {

	module.exports = {
		"name": "Numenta.com",
		"version": "0.2.28",
		"description": "Numenta.com company website content, source code, and static generator tooling.",
		"license": "SEE LICENSE IN LICENSE.TXT",
		"main": false,
		"private": false,
		"author": {
			"name": "Numenta",
			"email": "info@numenta.com",
			"url": "https://numenta.com"
		},
		"bugs": {
			"url": "https://github.com/numenta/numenta-web/issues",
			"email": "info@numenta.com"
		},
		"cpu": [
			"x64"
		],
		"engines": {
			"node": ">=6.3.1",
			"npm": ">=3.10.3"
		},
		"repository": {
			"type": "git",
			"url": "https://github.com/numenta/numenta-web"
		},
		"keywords": [
			"Numenta",
			"Company",
			"Website",
			"Biological",
			"Neuroscience",
			"Machine",
			"Intelligence"
		],
		"os": [
			"darwin"
		],
		"dependencies": {
			"babel-core": "6.11.4",
			"babel-loader": "6.2.4",
			"babel-plugin-add-module-exports": "0.2.1",
			"babel-plugin-transform-class-properties": "6.11.5",
			"babel-preset-es2015-node6": "0.2.0",
			"babel-preset-react": "6.11.1",
			"babel-preset-stage-0": "6.5.0",
			"browser-size": "0.1.0",
			"classnames": "2.2.5",
			"extract-text-webpack-plugin": "github:michelebertoli/extract-text-webpack-plugin#614c3bb1ed72587218aa644df12bbf514fb77a06",
			"front-matter": "2.1.0",
			"gatsby": "0.11.7",
			"history": "2.1.1",
			"js-yaml": "3.6.1",
			"ncp": "2.0.0",
			"react": "15.2.1",
			"react-addons-pure-render-mixin": "15.2.1",
			"react-dom": "15.2.1",
			"react-headroom": "2.1.2",
			"react-helmet": "3.1.0",
			"react-icons": "2.2.1",
			"react-modal": "1.4.0",
			"react-router": "2.6.0",
			"react-tap-event-plugin": "1.0.0",
			"react-youtube": "7.0.1",
			"sitemap": "1.8.0",
			"tachyons": "github:numenta/tachyons#d8e73dec47cb1c868bde3e4e4d5fd60fa5483fe2",
			"tachyons-base": "1.2.3"
		},
		"devDependencies": {
			"babel-eslint": "6.1.2",
			"babel-preset-react-hmre": "1.1.1",
			"eslint": "3.1.1",
			"eslint-config-airbnb": "9.0.1",
			"eslint-plugin-import": "1.12.0",
			"eslint-plugin-jsx-a11y": "2.0.1",
			"eslint-plugin-react": "5.2.2",
			"gh-pages": "0.11.0",
			"html5-lint": "0.2.5",
			"htmllint-cli": "0.0.5",
			"stylelint": "7.0.3",
			"stylelint-config-standard": "11.0.0"
		},
		"scripts": {
			"prebuild": "npm run clean && npm run lint && npm run test",
			"build": "gatsby build --prefix-links",
			"clean": "npm run clean:build",
			"clean:build": "rm -Rf public/",
			"clean:npm": "rm -Rf node_modules/ && npm cache clean",
			"deploy:gh-pages": "gh-pages --dist public/",
			"predev": "npm run lint",
			"dev": "gatsby develop",
			"lint": "npm run lint:css && npm run lint:html && npm run lint:js",
			"lint:css": "stylelint \"**/*.css\"",
			"lint:html": "echo",
			"lint:js": "eslint --ext=js --ext=jsx --ignore-pattern public .",
			"preserve": "npm run build",
			"serve": "gatsby serve-build",
			"test": "echo \"@TODO add tests!\"",
			"validate": "npm run validate:html",
			"validate:html": "echo"
		}
	};

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _numentaMarkDark = __webpack_require__(386);
	
	var _numentaMarkDark2 = _interopRequireDefault(_numentaMarkDark);
	
	var _numentaMarkLite = __webpack_require__(387);
	
	var _numentaMarkLite2 = _interopRequireDefault(_numentaMarkLite);
	
	var _index = __webpack_require__(388);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const LogoMark = ({ color }) => {
	  const Marks = {
	    dark: _numentaMarkDark2.default,
	    lite: _numentaMarkLite2.default
	  };
	  const Logo = Marks[color];
	
	  return _react2.default.createElement(_Image2.default, {
	    alt: 'Numenta Logo Mark',
	    className: _index2.default.mark,
	    shadow: false,
	    src: Logo,
	    title: 'Numenta'
	  });
	};
	
	LogoMark.propTypes = {
	  color: _react2.default.PropTypes.oneOf(['dark', 'lite']).isRequired
	};
	
	LogoMark.defaultProps = {
	  color: 'dark'
	};
	
	exports.default = LogoMark;
	module.exports = exports['default'];

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _gatsbyHelpers = __webpack_require__(363);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(381);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// eslint-disable-line import/no-unresolved, max-len
	const Image = ({ alt, border, onClick, respond, shadow, src, title }) => {
	  const classes = [_index2.default.image];
	
	  if (border) classes.push(_index2.default.border);
	  if (respond) classes.push(_index2.default[respond]);
	  if (shadow) classes.push(_index2.default.shadow);
	
	  return _react2.default.createElement('img', {
	    alt: alt,
	    className: (0, _classnames2.default)(...classes),
	    onClick: onClick,
	    src: (0, _gatsbyHelpers.prefixLink)(src),
	    title: title
	  });
	};
	
	Image.propTypes = {
	  alt: _react2.default.PropTypes.string.isRequired,
	  border: _react2.default.PropTypes.bool,
	  onClick: _react2.default.PropTypes.func,
	  respond: _react2.default.PropTypes.oneOf(['mw', 'w']),
	  shadow: _react2.default.PropTypes.bool,
	  src: _react2.default.PropTypes.string.isRequired,
	  title: _react2.default.PropTypes.string
	};
	
	Image.defaultProps = {
	  border: false,
	  shadow: true
	};
	
	exports.default = Image;
	module.exports = exports['default'];

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 381 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"mw":"index_mw_3jc tachyons_mw-100_ge3","w":"index_w_3m6 tachyons_w-100_1xC","border":"index_border_3eG tachyons_b--black-10_14L tachyons_ba_1NL","shadow":"index_shadow_14n tachyons_shadow-4_3--","image":"index_image_29g tachyons_br2_rOa"};

/***/ },
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "87b23beb8a4b7dea7d88099bfb28d182.svg";

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a18ae0268a487dda11b6669746662fa7.svg";

/***/ },
/* 388 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"mark":"index_mark_3JI"};

/***/ },
/* 389 */,
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(391);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Spacer = () => _react2.default.createElement(
	  'span',
	  { className: _index2.default.spacer },
	  '•'
	);
	
	exports.default = Spacer;
	module.exports = exports['default'];

/***/ },
/* 391 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"spacer":"index_spacer_2lH tachyons_mh1_-Z3 tachyons_silver_3lN"};

/***/ },
/* 392 */,
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRouter = __webpack_require__(162);
	
	var _gatsbyHelpers = __webpack_require__(363);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(394);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// eslint-disable-line import/no-unresolved, max-len
	const TextLink = ({ children, to }) => {
	  const attrs = {
	    // default internal non-index link
	    className: _index2.default.textlink,
	    to: (0, _gatsbyHelpers.prefixLink)(to)
	  };
	  let Node = _reactRouter.Link;
	
	  if (to.match(/^.+:/)) {
	    // external link (browser location)
	    Node = 'a';
	    attrs.href = to;
	    delete attrs.to;
	  } else if (to === '/') {
	    // internal index main/home link
	    Node = _reactRouter.IndexLink;
	  }
	
	  return _react2.default.createElement(
	    Node,
	    attrs,
	    children
	  );
	};
	
	TextLink.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  to: _react2.default.PropTypes.string.isRequired
	};
	
	exports.default = TextLink;
	module.exports = exports['default'];

/***/ },
/* 394 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_visited":"index__visited_1Kr","textlink":"index_textlink_PFK tachyons_dim_1n1 tachyons_link_2zV tachyons_underline-hover_1xv theme_color-blue-dark_2u0 index__visited_1Kr"};

/***/ },
/* 395 */,
/* 396 */,
/* 397 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"footbar":"index_footbar_1sx tachyons_w-100_1xC","footer":"index_footer_1R8 tachyons_br--bottom_1e0 tachyons_bg-white_WF0 tachyons_br2_rOa tachyons_center_iwf tachyons_f6_14U tachyons_mw-100_ge3 tachyons_mw7-m_FjT tachyons_mw8-l_KcP tachyons_pv3_1Zi tachyons_silver_3lN tachyons_tc_3ab","mark":"index_mark_33a tachyons_dib_1gH tachyons_h1_Kza tachyons_mh3_2gH tachyons_relative_1fO tachyons_w1_1jO"};

/***/ },
/* 398 */,
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ImageLink = __webpack_require__(400);
	
	var _ImageLink2 = _interopRequireDefault(_ImageLink);
	
	var _Logo = __webpack_require__(403);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	var _Search = __webpack_require__(407);
	
	var _Search2 = _interopRequireDefault(_Search);
	
	var _index = __webpack_require__(424);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const Header = (props, { config }) => {
	  const { links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    { className: _index2.default.appbar },
	    _react2.default.createElement(
	      'header',
	      { className: _index2.default.header },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.logo },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.in.home },
	          _react2.default.createElement(_Logo2.default, null)
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.search },
	        _react2.default.createElement(_Search2.default, null)
	      )
	    )
	  );
	};
	
	Header.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = Header;
	module.exports = exports['default'];

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactRouter = __webpack_require__(162);
	
	var _gatsbyHelpers = __webpack_require__(363);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(401);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	// eslint-disable-line import/no-unresolved, max-len
	const ImageLink = ({ children, title, to }) => {
	  const attrs = {
	    // default internal non-index link
	    className: _index2.default.imagelink,
	    title,
	    to: (0, _gatsbyHelpers.prefixLink)(to)
	  };
	  let Node = _reactRouter.Link;
	
	  if (to.match(/^.+:/)) {
	    // external link (browser location)
	    Node = 'a';
	    attrs.href = to;
	    delete attrs.to;
	  } else if (to === '/') {
	    // internal index main/home link
	    Node = _reactRouter.IndexLink;
	  }
	
	  return _react2.default.createElement(
	    Node,
	    attrs,
	    children
	  );
	};
	
	ImageLink.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  title: _react2.default.PropTypes.string,
	  to: _react2.default.PropTypes.string.isRequired
	};
	
	exports.default = ImageLink;
	module.exports = exports['default'];

/***/ },
/* 401 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_visited":"index__visited_2Z4","imagelink":"index_imagelink_21G tachyons_dim_1n1 tachyons_link_2zV theme_color-blue_2lo index__visited_2Z4"};

/***/ },
/* 402 */,
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _numenta = __webpack_require__(404);
	
	var _numenta2 = _interopRequireDefault(_numenta);
	
	var _index = __webpack_require__(405);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Logo = () => _react2.default.createElement(_Image2.default, {
	  alt: 'Numenta Logo',
	  className: _index2.default.logo,
	  shadow: false,
	  src: _numenta2.default,
	  title: 'Numenta'
	});
	
	exports.default = Logo;
	module.exports = exports['default'];

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "78d7c43a01aa37f432db4cb375ee2b7f.svg";

/***/ },
/* 405 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"logo":"index_logo_19w tachyons_ma0_2xh tachyons_pa0_RbR"};

/***/ },
/* 406 */,
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _search = __webpack_require__(408);
	
	var _search2 = _interopRequireDefault(_search);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Button = __webpack_require__(410);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Form = __webpack_require__(413);
	
	var _Form2 = _interopRequireDefault(_Form);
	
	var _FormInput = __webpack_require__(416);
	
	var _FormInput2 = _interopRequireDefault(_FormInput);
	
	var _FormLabel = __webpack_require__(419);
	
	var _FormLabel2 = _interopRequireDefault(_FormLabel);
	
	var _index = __webpack_require__(422);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Search = () => _react2.default.createElement(
	  _Form2.default,
	  null,
	  _react2.default.createElement(
	    'span',
	    { className: _index2.default.label },
	    _react2.default.createElement(
	      _FormLabel2.default,
	      { htmlFor: 'q' },
	      'Search'
	    )
	  ),
	  _react2.default.createElement(
	    'span',
	    { className: _index2.default.query },
	    _react2.default.createElement(_FormInput2.default, {
	      name: 'q',
	      placeholder: 'Search...',
	      type: 'search'
	    })
	  ),
	  _react2.default.createElement(
	    _Button2.default,
	    { theme: 'light', type: 'submit' },
	    _react2.default.createElement(_search2.default, { color: 'inherit' })
	  )
	);
	
	exports.default = Search;
	module.exports = exports['default'];

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaSearch = function (_React$Component) {
	    _inherits(FaSearch, _React$Component);
	
	    function FaSearch() {
	        _classCallCheck(this, FaSearch);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaSearch).apply(this, arguments));
	    }
	
	    _createClass(FaSearch, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm27.2 18.6q0-4.2-2.9-7.1t-7.1-2.9-7 2.9-3 7.1 2.9 7 7.1 3 7.1-3 2.9-7z m11.4 18.5q0 1.2-0.8 2.1t-2 0.8q-1.2 0-2-0.8l-7.7-7.7q-4 2.8-8.9 2.8-3.2 0-6.1-1.3t-5-3.3-3.4-5-1.2-6.1 1.2-6.1 3.4-5.1 5-3.3 6.1-1.2 6.1 1.2 5 3.3 3.4 5.1 1.2 6.1q0 4.9-2.7 8.9l7.6 7.6q0.8 0.9 0.8 2z' })
	                )
	            );
	        }
	    }]);
	
	    return FaSearch;
	}(React.Component);
	
	exports.default = FaSearch;
	module.exports = exports['default'];

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var IconBase = function IconBase(_ref, _ref2) {
	  var children = _ref.children;
	  var color = _ref.color;
	  var size = _ref.size;
	  var style = _ref.style;
	
	  var props = _objectWithoutProperties(_ref, ['children', 'color', 'size', 'style']);
	
	  var _ref2$reactIconBase = _ref2.reactIconBase;
	  var reactIconBase = _ref2$reactIconBase === undefined ? {} : _ref2$reactIconBase;
	
	  var computedSize = size || reactIconBase.size || '1em';
	  return _react2.default.createElement('svg', _extends({
	    children: children,
	    fill: 'currentColor',
	    preserveAspectRatio: 'xMidYMid meet',
	    height: computedSize,
	    width: computedSize
	  }, reactIconBase, props, {
	    style: _extends({
	      verticalAlign: 'middle',
	      color: color || reactIconBase.color
	    }, reactIconBase.style || {}, style)
	  }));
	};
	
	IconBase.propTypes = {
	  color: _react.PropTypes.string,
	  size: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
	  style: _react.PropTypes.object
	};
	
	IconBase.contextTypes = {
	  reactIconBase: _react.PropTypes.shape(IconBase.propTypes)
	};
	
	exports.default = IconBase;
	module.exports = exports['default'];

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(411);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Button = ({ children, theme, type }) => {
	  const classes = [_index2.default.button, _index2.default[theme]];
	
	  return _react2.default.createElement(
	    'button',
	    { className: (0, _classnames2.default)(...classes), type: type },
	    children
	  );
	};
	
	Button.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  theme: _react2.default.PropTypes.oneOf(['default', 'light', 'primary']),
	  type: _react2.default.PropTypes.oneOf(['button', 'menu', 'reset', 'submit'])
	};
	
	Button.defaultProps = {
	  theme: 'default',
	  type: 'button'
	};
	
	exports.default = Button;
	module.exports = exports['default'];

/***/ },
/* 411 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"default":"index_default_Div tachyons_bg-white_WF0 tachyons_ba_1NL tachyons_f5_2mB tachyons_pa3_2l2 theme_color-blue_2lo","light":"index_light_4I5 tachyons_bg-white_WF0 tachyons_bn_3W7 tachyons_f4_1Zt tachyons_pa1_3f3 theme_color-blue_2lo","primary":"index_primary_Bxm tachyons_bn_3W7 tachyons_f5_2mB tachyons_pa3_2l2 tachyons_white_3f5 theme_bg-color-blue_6KT","button":"index_button_2lC tachyons_br2_rOa tachyons_dim_1n1 tachyons_flex-auto_1Fv tachyons_ma0_2xh tachyons_pointer_25K"};

/***/ },
/* 412 */,
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(414);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Form = ({ action, children, name }) => _react2.default.createElement(
	  'form',
	  {
	    acceptCharset: 'UTF-8',
	    action: action,
	    autoComplete: 'off',
	    className: _index2.default.form,
	    encType: 'multipart/form-data',
	    id: name,
	    method: 'post',
	    name: name
	  },
	  children
	);
	
	Form.propTypes = {
	  action: _react2.default.PropTypes.string,
	  children: _react2.default.PropTypes.any.isRequired,
	  name: _react2.default.PropTypes.string
	};
	
	exports.default = Form;
	module.exports = exports['default'];

/***/ },
/* 414 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"form":"index_form_G7v tachyons_pa0_RbR tachyons_mb3_1mV tachyons_mh0_2XV tachyons_mt0_12u"};

/***/ },
/* 415 */,
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(417);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const FormInput = ({ name, placeholder, stretch, type, value }) => {
	  const classes = [_index2.default.formInput];
	
	  if (stretch) classes.push(_index2.default[stretch]);
	
	  return _react2.default.createElement('input', {
	    className: (0, _classnames2.default)(...classes),
	    id: name,
	    name: name,
	    placeholder: placeholder,
	    type: type,
	    value: value
	  });
	};
	
	FormInput.propTypes = {
	  name: _react2.default.PropTypes.string.isRequired,
	  placeholder: _react2.default.PropTypes.string,
	  stretch: _react2.default.PropTypes.oneOf(['small', 'medium', 'large']),
	  type: _react2.default.PropTypes.string.isRequired,
	  value: _react2.default.PropTypes.string
	};
	
	FormInput.defaultProps = {
	  stretch: 'large'
	};
	
	exports.default = FormInput;
	module.exports = exports['default'];

/***/ },
/* 417 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_focus":"index__focus_Yiy","large":"index_large_2Vg","medium":"index_medium_1Wd","small":"index_small_3f0","formInput":"index_formInput_11I tachyons_ba_1NL tachyons_b--black-20_1zc tachyons_br2_rOa tachyons_f5_2mB tachyons_flex-auto_1Fv tachyons_fw3_3xI tachyons_input-reset_3Az tachyons_pb1_2R8 tachyons_ph2_2up tachyons_pt2_3ym tachyons_silver_3lN index__focus_Yiy"};

/***/ },
/* 418 */,
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(420);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const FormLabel = ({ children, htmlFor }) => _react2.default.createElement(
	  'label',
	  { className: _index2.default.formLabel, htmlFor: htmlFor },
	  children
	);
	
	FormLabel.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  htmlFor: _react2.default.PropTypes.string
	};
	
	exports.default = FormLabel;
	module.exports = exports['default'];

/***/ },
/* 420 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"formLabel":"index_formLabel_3xq tachyons_f5_2mB tachyons_fl_wJK tachyons_fw6_1NV tachyons_mr3_1Ez tachyons_relative_1fO tachyons_v-top_1JD tachyons_w4_3jJ"};

/***/ },
/* 421 */,
/* 422 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"search":"index_search_2I5 tachyons_cf_g7R","label":"index_label_SMm tachyons_clip_2YG","query":"index_query_2PZ tachyons_fl_wJK tachyons_flex_22H tachyons_mb2_1U4 tachyons_relative_1fO tachyons_w4_3jJ tachyons_w5-ns_1tF"};

/***/ },
/* 423 */,
/* 424 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"appbar":"index_appbar_2mn tachyons_bg-white_WF0 tachyons_fixed_I-c tachyons_h3_bmk tachyons_ph3_Qxl tachyons_shadow-1_8y5 tachyons_top-0_2pS tachyons_w-100_1xC","header":"index_header_Rq- tachyons_center_iwf tachyons_cf_g7R tachyons_mw-100_ge3 tachyons_mw7-m_FjT tachyons_mw8-l_KcP","logo":"index_logo_36F tachyons_fl_wJK tachyons_relative_1fO tachyons_top-1_UVW","search":"index_search__jD tachyons_fr_2Nn tachyons_mt3_11A"};

/***/ },
/* 425 */,
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(427);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Main = ({ children }) => _react2.default.createElement(
	  'main',
	  { className: _index2.default.main },
	  children
	);
	
	Main.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = Main;
	module.exports = exports['default'];

/***/ },
/* 427 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"main":"index_main_3-E tachyons_bg-white_WF0 tachyons_center_iwf tachyons_mt5_2gs tachyons_mw-100_ge3 tachyons_mw7-m_FjT tachyons_mw8-l_KcP tachyons_ph3_Qxl tachyons_ph4-l_pNz tachyons_pb4_38s tachyons_pt3_1QC"};

/***/ },
/* 428 */,
/* 429 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"layout":"index_layout_2AP tachyons_f4_1Zt tachyons_f5-ns_QvA tachyons_fw4_3tj"};

/***/ },
/* 430 */,
/* 431 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */
431,
/* 459 */,
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./html": 461,
		"./html.jsx": 461,
		"./json": 462,
		"./json.jsx": 462,
		"./md": 463,
		"./md.jsx": 463,
		"./yaml": 464,
		"./yaml.jsx": 464
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 460;


/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const HtmlWrapper = ({ route }) => {
	  const post = route.page.data;
	
	  return _react2.default.createElement(
	    "div",
	    { className: "html" },
	    _react2.default.createElement("h1", { dangerouslySetInnerHTML: { __html: post.title } }),
	    _react2.default.createElement("div", { dangerouslySetInnerHTML: { __html: post.body } })
	  );
	};
	
	HtmlWrapper.propTypes = {
	  route: _react2.default.PropTypes.object.isRequired
	};
	
	exports.default = HtmlWrapper;
	module.exports = exports["default"];

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const JsonWrapper = ({ route }) => {
	  const data = route.page.data;
	
	  return _react2.default.createElement(
	    "div",
	    { className: "json" },
	    _react2.default.createElement(
	      "h1",
	      null,
	      data.title
	    ),
	    _react2.default.createElement(
	      "p",
	      null,
	      "Raw view of json file"
	    ),
	    _react2.default.createElement("pre", { dangerouslySetInnerHTML: { __html: JSON.stringify(data, null, 4) } })
	  );
	};
	
	JsonWrapper.propTypes = {
	  route: _react2.default.PropTypes.object.isRequired
	};
	
	exports.default = JsonWrapper;
	module.exports = exports["default"];

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reactHelmet = __webpack_require__(366);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const MarkdownWrapper = ({ route }) => {
	  const post = route.page.data;
	  const { body, title } = post;
	
	  return _react2.default.createElement(
	    'div',
	    { className: 'markdown' },
	    _react2.default.createElement(_reactHelmet2.default, { title: title }),
	    _react2.default.createElement(
	      'h1',
	      null,
	      title
	    ),
	    _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: body } })
	  );
	};
	
	MarkdownWrapper.propTypes = {
	  route: _react2.default.PropTypes.object
	};
	
	exports.default = MarkdownWrapper;
	module.exports = exports['default'];

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _jsYaml = __webpack_require__(465);
	
	var _jsYaml2 = _interopRequireDefault(_jsYaml);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const YamlWrapper = ({ route }) => {
	  const data = route.page.data;
	
	  return _react2.default.createElement(
	    'div',
	    { className: 'yaml' },
	    _react2.default.createElement(
	      'h1',
	      null,
	      data.title
	    ),
	    _react2.default.createElement(
	      'p',
	      null,
	      'Raw view of yaml file'
	    ),
	    _react2.default.createElement('pre', { dangerouslySetInnerHTML: { __html: _jsYaml2.default.safeDump(data) } })
	  );
	};
	
	YamlWrapper.propTypes = {
	  route: _react2.default.PropTypes.object
	};
	
	exports.default = YamlWrapper;
	module.exports = exports['default'];

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var yaml = __webpack_require__(466);
	
	
	module.exports = yaml;


/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var loader = __webpack_require__(467);
	var dumper = __webpack_require__(499);
	
	
	function deprecated(name) {
	  return function () {
	    throw new Error('Function ' + name + ' is deprecated and cannot be used.');
	  };
	}
	
	
	module.exports.Type                = __webpack_require__(473);
	module.exports.Schema              = __webpack_require__(472);
	module.exports.FAILSAFE_SCHEMA     = __webpack_require__(476);
	module.exports.JSON_SCHEMA         = __webpack_require__(475);
	module.exports.CORE_SCHEMA         = __webpack_require__(474);
	module.exports.DEFAULT_SAFE_SCHEMA = __webpack_require__(471);
	module.exports.DEFAULT_FULL_SCHEMA = __webpack_require__(494);
	module.exports.load                = loader.load;
	module.exports.loadAll             = loader.loadAll;
	module.exports.safeLoad            = loader.safeLoad;
	module.exports.safeLoadAll         = loader.safeLoadAll;
	module.exports.dump                = dumper.dump;
	module.exports.safeDump            = dumper.safeDump;
	module.exports.YAMLException       = __webpack_require__(469);
	
	// Deprecated schema names from JS-YAML 2.0.x
	module.exports.MINIMAL_SCHEMA = __webpack_require__(476);
	module.exports.SAFE_SCHEMA    = __webpack_require__(471);
	module.exports.DEFAULT_SCHEMA = __webpack_require__(494);
	
	// Deprecated functions from JS-YAML 1.x.x
	module.exports.scan           = deprecated('scan');
	module.exports.parse          = deprecated('parse');
	module.exports.compose        = deprecated('compose');
	module.exports.addConstructor = deprecated('addConstructor');


/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/*eslint-disable max-len,no-use-before-define*/
	
	var common              = __webpack_require__(468);
	var YAMLException       = __webpack_require__(469);
	var Mark                = __webpack_require__(470);
	var DEFAULT_SAFE_SCHEMA = __webpack_require__(471);
	var DEFAULT_FULL_SCHEMA = __webpack_require__(494);
	
	
	var _hasOwnProperty = Object.prototype.hasOwnProperty;
	
	
	var CONTEXT_FLOW_IN   = 1;
	var CONTEXT_FLOW_OUT  = 2;
	var CONTEXT_BLOCK_IN  = 3;
	var CONTEXT_BLOCK_OUT = 4;
	
	
	var CHOMPING_CLIP  = 1;
	var CHOMPING_STRIP = 2;
	var CHOMPING_KEEP  = 3;
	
	
	var PATTERN_NON_PRINTABLE         = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
	var PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
	var PATTERN_FLOW_INDICATORS       = /[,\[\]\{\}]/;
	var PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\-]+!)$/i;
	var PATTERN_TAG_URI               = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
	
	
	function is_EOL(c) {
	  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);
	}
	
	function is_WHITE_SPACE(c) {
	  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);
	}
	
	function is_WS_OR_EOL(c) {
	  return (c === 0x09/* Tab */) ||
	         (c === 0x20/* Space */) ||
	         (c === 0x0A/* LF */) ||
	         (c === 0x0D/* CR */);
	}
	
	function is_FLOW_INDICATOR(c) {
	  return c === 0x2C/* , */ ||
	         c === 0x5B/* [ */ ||
	         c === 0x5D/* ] */ ||
	         c === 0x7B/* { */ ||
	         c === 0x7D/* } */;
	}
	
	function fromHexCode(c) {
	  var lc;
	
	  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
	    return c - 0x30;
	  }
	
	  /*eslint-disable no-bitwise*/
	  lc = c | 0x20;
	
	  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {
	    return lc - 0x61 + 10;
	  }
	
	  return -1;
	}
	
	function escapedHexLen(c) {
	  if (c === 0x78/* x */) { return 2; }
	  if (c === 0x75/* u */) { return 4; }
	  if (c === 0x55/* U */) { return 8; }
	  return 0;
	}
	
	function fromDecimalCode(c) {
	  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
	    return c - 0x30;
	  }
	
	  return -1;
	}
	
	function simpleEscapeSequence(c) {
	  return (c === 0x30/* 0 */) ? '\x00' :
	        (c === 0x61/* a */) ? '\x07' :
	        (c === 0x62/* b */) ? '\x08' :
	        (c === 0x74/* t */) ? '\x09' :
	        (c === 0x09/* Tab */) ? '\x09' :
	        (c === 0x6E/* n */) ? '\x0A' :
	        (c === 0x76/* v */) ? '\x0B' :
	        (c === 0x66/* f */) ? '\x0C' :
	        (c === 0x72/* r */) ? '\x0D' :
	        (c === 0x65/* e */) ? '\x1B' :
	        (c === 0x20/* Space */) ? ' ' :
	        (c === 0x22/* " */) ? '\x22' :
	        (c === 0x2F/* / */) ? '/' :
	        (c === 0x5C/* \ */) ? '\x5C' :
	        (c === 0x4E/* N */) ? '\x85' :
	        (c === 0x5F/* _ */) ? '\xA0' :
	        (c === 0x4C/* L */) ? '\u2028' :
	        (c === 0x50/* P */) ? '\u2029' : '';
	}
	
	function charFromCodepoint(c) {
	  if (c <= 0xFFFF) {
	    return String.fromCharCode(c);
	  }
	  // Encode UTF-16 surrogate pair
	  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
	  return String.fromCharCode(((c - 0x010000) >> 10) + 0xD800,
	                             ((c - 0x010000) & 0x03FF) + 0xDC00);
	}
	
	var simpleEscapeCheck = new Array(256); // integer, for fast access
	var simpleEscapeMap = new Array(256);
	for (var i = 0; i < 256; i++) {
	  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
	  simpleEscapeMap[i] = simpleEscapeSequence(i);
	}
	
	
	function State(input, options) {
	  this.input = input;
	
	  this.filename  = options['filename']  || null;
	  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;
	  this.onWarning = options['onWarning'] || null;
	  this.legacy    = options['legacy']    || false;
	  this.json      = options['json']      || false;
	  this.listener  = options['listener']  || null;
	
	  this.implicitTypes = this.schema.compiledImplicit;
	  this.typeMap       = this.schema.compiledTypeMap;
	
	  this.length     = input.length;
	  this.position   = 0;
	  this.line       = 0;
	  this.lineStart  = 0;
	  this.lineIndent = 0;
	
	  this.documents = [];
	
	  /*
	  this.version;
	  this.checkLineBreaks;
	  this.tagMap;
	  this.anchorMap;
	  this.tag;
	  this.anchor;
	  this.kind;
	  this.result;*/
	
	}
	
	
	function generateError(state, message) {
	  return new YAMLException(
	    message,
	    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));
	}
	
	function throwError(state, message) {
	  throw generateError(state, message);
	}
	
	function throwWarning(state, message) {
	  if (state.onWarning) {
	    state.onWarning.call(null, generateError(state, message));
	  }
	}
	
	
	var directiveHandlers = {
	
	  YAML: function handleYamlDirective(state, name, args) {
	
	    var match, major, minor;
	
	    if (state.version !== null) {
	      throwError(state, 'duplication of %YAML directive');
	    }
	
	    if (args.length !== 1) {
	      throwError(state, 'YAML directive accepts exactly one argument');
	    }
	
	    match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);
	
	    if (match === null) {
	      throwError(state, 'ill-formed argument of the YAML directive');
	    }
	
	    major = parseInt(match[1], 10);
	    minor = parseInt(match[2], 10);
	
	    if (major !== 1) {
	      throwError(state, 'unacceptable YAML version of the document');
	    }
	
	    state.version = args[0];
	    state.checkLineBreaks = (minor < 2);
	
	    if (minor !== 1 && minor !== 2) {
	      throwWarning(state, 'unsupported YAML version of the document');
	    }
	  },
	
	  TAG: function handleTagDirective(state, name, args) {
	
	    var handle, prefix;
	
	    if (args.length !== 2) {
	      throwError(state, 'TAG directive accepts exactly two arguments');
	    }
	
	    handle = args[0];
	    prefix = args[1];
	
	    if (!PATTERN_TAG_HANDLE.test(handle)) {
	      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');
	    }
	
	    if (_hasOwnProperty.call(state.tagMap, handle)) {
	      throwError(state, 'there is a previously declared suffix for "' + handle + '" tag handle');
	    }
	
	    if (!PATTERN_TAG_URI.test(prefix)) {
	      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');
	    }
	
	    state.tagMap[handle] = prefix;
	  }
	};
	
	
	function captureSegment(state, start, end, checkJson) {
	  var _position, _length, _character, _result;
	
	  if (start < end) {
	    _result = state.input.slice(start, end);
	
	    if (checkJson) {
	      for (_position = 0, _length = _result.length;
	           _position < _length;
	           _position += 1) {
	        _character = _result.charCodeAt(_position);
	        if (!(_character === 0x09 ||
	              (0x20 <= _character && _character <= 0x10FFFF))) {
	          throwError(state, 'expected valid JSON character');
	        }
	      }
	    } else if (PATTERN_NON_PRINTABLE.test(_result)) {
	      throwError(state, 'the stream contains non-printable characters');
	    }
	
	    state.result += _result;
	  }
	}
	
	function mergeMappings(state, destination, source, overridableKeys) {
	  var sourceKeys, key, index, quantity;
	
	  if (!common.isObject(source)) {
	    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');
	  }
	
	  sourceKeys = Object.keys(source);
	
	  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {
	    key = sourceKeys[index];
	
	    if (!_hasOwnProperty.call(destination, key)) {
	      destination[key] = source[key];
	      overridableKeys[key] = true;
	    }
	  }
	}
	
	function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode) {
	  var index, quantity;
	
	  keyNode = String(keyNode);
	
	  if (_result === null) {
	    _result = {};
	  }
	
	  if (keyTag === 'tag:yaml.org,2002:merge') {
	    if (Array.isArray(valueNode)) {
	      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {
	        mergeMappings(state, _result, valueNode[index], overridableKeys);
	      }
	    } else {
	      mergeMappings(state, _result, valueNode, overridableKeys);
	    }
	  } else {
	    if (!state.json &&
	        !_hasOwnProperty.call(overridableKeys, keyNode) &&
	        _hasOwnProperty.call(_result, keyNode)) {
	      throwError(state, 'duplicated mapping key');
	    }
	    _result[keyNode] = valueNode;
	    delete overridableKeys[keyNode];
	  }
	
	  return _result;
	}
	
	function readLineBreak(state) {
	  var ch;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (ch === 0x0A/* LF */) {
	    state.position++;
	  } else if (ch === 0x0D/* CR */) {
	    state.position++;
	    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {
	      state.position++;
	    }
	  } else {
	    throwError(state, 'a line break is expected');
	  }
	
	  state.line += 1;
	  state.lineStart = state.position;
	}
	
	function skipSeparationSpace(state, allowComments, checkIndent) {
	  var lineBreaks = 0,
	      ch = state.input.charCodeAt(state.position);
	
	  while (ch !== 0) {
	    while (is_WHITE_SPACE(ch)) {
	      ch = state.input.charCodeAt(++state.position);
	    }
	
	    if (allowComments && ch === 0x23/* # */) {
	      do {
	        ch = state.input.charCodeAt(++state.position);
	      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);
	    }
	
	    if (is_EOL(ch)) {
	      readLineBreak(state);
	
	      ch = state.input.charCodeAt(state.position);
	      lineBreaks++;
	      state.lineIndent = 0;
	
	      while (ch === 0x20/* Space */) {
	        state.lineIndent++;
	        ch = state.input.charCodeAt(++state.position);
	      }
	    } else {
	      break;
	    }
	  }
	
	  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {
	    throwWarning(state, 'deficient indentation');
	  }
	
	  return lineBreaks;
	}
	
	function testDocumentSeparator(state) {
	  var _position = state.position,
	      ch;
	
	  ch = state.input.charCodeAt(_position);
	
	  // Condition state.position === state.lineStart is tested
	  // in parent on each call, for efficiency. No needs to test here again.
	  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&
	      ch === state.input.charCodeAt(_position + 1) &&
	      ch === state.input.charCodeAt(_position + 2)) {
	
	    _position += 3;
	
	    ch = state.input.charCodeAt(_position);
	
	    if (ch === 0 || is_WS_OR_EOL(ch)) {
	      return true;
	    }
	  }
	
	  return false;
	}
	
	function writeFoldedLines(state, count) {
	  if (count === 1) {
	    state.result += ' ';
	  } else if (count > 1) {
	    state.result += common.repeat('\n', count - 1);
	  }
	}
	
	
	function readPlainScalar(state, nodeIndent, withinFlowCollection) {
	  var preceding,
	      following,
	      captureStart,
	      captureEnd,
	      hasPendingContent,
	      _line,
	      _lineStart,
	      _lineIndent,
	      _kind = state.kind,
	      _result = state.result,
	      ch;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (is_WS_OR_EOL(ch)      ||
	      is_FLOW_INDICATOR(ch) ||
	      ch === 0x23/* # */    ||
	      ch === 0x26/* & */    ||
	      ch === 0x2A/* * */    ||
	      ch === 0x21/* ! */    ||
	      ch === 0x7C/* | */    ||
	      ch === 0x3E/* > */    ||
	      ch === 0x27/* ' */    ||
	      ch === 0x22/* " */    ||
	      ch === 0x25/* % */    ||
	      ch === 0x40/* @ */    ||
	      ch === 0x60/* ` */) {
	    return false;
	  }
	
	  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {
	    following = state.input.charCodeAt(state.position + 1);
	
	    if (is_WS_OR_EOL(following) ||
	        withinFlowCollection && is_FLOW_INDICATOR(following)) {
	      return false;
	    }
	  }
	
	  state.kind = 'scalar';
	  state.result = '';
	  captureStart = captureEnd = state.position;
	  hasPendingContent = false;
	
	  while (ch !== 0) {
	    if (ch === 0x3A/* : */) {
	      following = state.input.charCodeAt(state.position + 1);
	
	      if (is_WS_OR_EOL(following) ||
	          withinFlowCollection && is_FLOW_INDICATOR(following)) {
	        break;
	      }
	
	    } else if (ch === 0x23/* # */) {
	      preceding = state.input.charCodeAt(state.position - 1);
	
	      if (is_WS_OR_EOL(preceding)) {
	        break;
	      }
	
	    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||
	               withinFlowCollection && is_FLOW_INDICATOR(ch)) {
	      break;
	
	    } else if (is_EOL(ch)) {
	      _line = state.line;
	      _lineStart = state.lineStart;
	      _lineIndent = state.lineIndent;
	      skipSeparationSpace(state, false, -1);
	
	      if (state.lineIndent >= nodeIndent) {
	        hasPendingContent = true;
	        ch = state.input.charCodeAt(state.position);
	        continue;
	      } else {
	        state.position = captureEnd;
	        state.line = _line;
	        state.lineStart = _lineStart;
	        state.lineIndent = _lineIndent;
	        break;
	      }
	    }
	
	    if (hasPendingContent) {
	      captureSegment(state, captureStart, captureEnd, false);
	      writeFoldedLines(state, state.line - _line);
	      captureStart = captureEnd = state.position;
	      hasPendingContent = false;
	    }
	
	    if (!is_WHITE_SPACE(ch)) {
	      captureEnd = state.position + 1;
	    }
	
	    ch = state.input.charCodeAt(++state.position);
	  }
	
	  captureSegment(state, captureStart, captureEnd, false);
	
	  if (state.result) {
	    return true;
	  }
	
	  state.kind = _kind;
	  state.result = _result;
	  return false;
	}
	
	function readSingleQuotedScalar(state, nodeIndent) {
	  var ch,
	      captureStart, captureEnd;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (ch !== 0x27/* ' */) {
	    return false;
	  }
	
	  state.kind = 'scalar';
	  state.result = '';
	  state.position++;
	  captureStart = captureEnd = state.position;
	
	  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
	    if (ch === 0x27/* ' */) {
	      captureSegment(state, captureStart, state.position, true);
	      ch = state.input.charCodeAt(++state.position);
	
	      if (ch === 0x27/* ' */) {
	        captureStart = captureEnd = state.position;
	        state.position++;
	      } else {
	        return true;
	      }
	
	    } else if (is_EOL(ch)) {
	      captureSegment(state, captureStart, captureEnd, true);
	      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
	      captureStart = captureEnd = state.position;
	
	    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
	      throwError(state, 'unexpected end of the document within a single quoted scalar');
	
	    } else {
	      state.position++;
	      captureEnd = state.position;
	    }
	  }
	
	  throwError(state, 'unexpected end of the stream within a single quoted scalar');
	}
	
	function readDoubleQuotedScalar(state, nodeIndent) {
	  var captureStart,
	      captureEnd,
	      hexLength,
	      hexResult,
	      tmp,
	      ch;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (ch !== 0x22/* " */) {
	    return false;
	  }
	
	  state.kind = 'scalar';
	  state.result = '';
	  state.position++;
	  captureStart = captureEnd = state.position;
	
	  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
	    if (ch === 0x22/* " */) {
	      captureSegment(state, captureStart, state.position, true);
	      state.position++;
	      return true;
	
	    } else if (ch === 0x5C/* \ */) {
	      captureSegment(state, captureStart, state.position, true);
	      ch = state.input.charCodeAt(++state.position);
	
	      if (is_EOL(ch)) {
	        skipSeparationSpace(state, false, nodeIndent);
	
	        // TODO: rework to inline fn with no type cast?
	      } else if (ch < 256 && simpleEscapeCheck[ch]) {
	        state.result += simpleEscapeMap[ch];
	        state.position++;
	
	      } else if ((tmp = escapedHexLen(ch)) > 0) {
	        hexLength = tmp;
	        hexResult = 0;
	
	        for (; hexLength > 0; hexLength--) {
	          ch = state.input.charCodeAt(++state.position);
	
	          if ((tmp = fromHexCode(ch)) >= 0) {
	            hexResult = (hexResult << 4) + tmp;
	
	          } else {
	            throwError(state, 'expected hexadecimal character');
	          }
	        }
	
	        state.result += charFromCodepoint(hexResult);
	
	        state.position++;
	
	      } else {
	        throwError(state, 'unknown escape sequence');
	      }
	
	      captureStart = captureEnd = state.position;
	
	    } else if (is_EOL(ch)) {
	      captureSegment(state, captureStart, captureEnd, true);
	      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
	      captureStart = captureEnd = state.position;
	
	    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
	      throwError(state, 'unexpected end of the document within a double quoted scalar');
	
	    } else {
	      state.position++;
	      captureEnd = state.position;
	    }
	  }
	
	  throwError(state, 'unexpected end of the stream within a double quoted scalar');
	}
	
	function readFlowCollection(state, nodeIndent) {
	  var readNext = true,
	      _line,
	      _tag     = state.tag,
	      _result,
	      _anchor  = state.anchor,
	      following,
	      terminator,
	      isPair,
	      isExplicitPair,
	      isMapping,
	      overridableKeys = {},
	      keyNode,
	      keyTag,
	      valueNode,
	      ch;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (ch === 0x5B/* [ */) {
	    terminator = 0x5D;/* ] */
	    isMapping = false;
	    _result = [];
	  } else if (ch === 0x7B/* { */) {
	    terminator = 0x7D;/* } */
	    isMapping = true;
	    _result = {};
	  } else {
	    return false;
	  }
	
	  if (state.anchor !== null) {
	    state.anchorMap[state.anchor] = _result;
	  }
	
	  ch = state.input.charCodeAt(++state.position);
	
	  while (ch !== 0) {
	    skipSeparationSpace(state, true, nodeIndent);
	
	    ch = state.input.charCodeAt(state.position);
	
	    if (ch === terminator) {
	      state.position++;
	      state.tag = _tag;
	      state.anchor = _anchor;
	      state.kind = isMapping ? 'mapping' : 'sequence';
	      state.result = _result;
	      return true;
	    } else if (!readNext) {
	      throwError(state, 'missed comma between flow collection entries');
	    }
	
	    keyTag = keyNode = valueNode = null;
	    isPair = isExplicitPair = false;
	
	    if (ch === 0x3F/* ? */) {
	      following = state.input.charCodeAt(state.position + 1);
	
	      if (is_WS_OR_EOL(following)) {
	        isPair = isExplicitPair = true;
	        state.position++;
	        skipSeparationSpace(state, true, nodeIndent);
	      }
	    }
	
	    _line = state.line;
	    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
	    keyTag = state.tag;
	    keyNode = state.result;
	    skipSeparationSpace(state, true, nodeIndent);
	
	    ch = state.input.charCodeAt(state.position);
	
	    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {
	      isPair = true;
	      ch = state.input.charCodeAt(++state.position);
	      skipSeparationSpace(state, true, nodeIndent);
	      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
	      valueNode = state.result;
	    }
	
	    if (isMapping) {
	      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);
	    } else if (isPair) {
	      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));
	    } else {
	      _result.push(keyNode);
	    }
	
	    skipSeparationSpace(state, true, nodeIndent);
	
	    ch = state.input.charCodeAt(state.position);
	
	    if (ch === 0x2C/* , */) {
	      readNext = true;
	      ch = state.input.charCodeAt(++state.position);
	    } else {
	      readNext = false;
	    }
	  }
	
	  throwError(state, 'unexpected end of the stream within a flow collection');
	}
	
	function readBlockScalar(state, nodeIndent) {
	  var captureStart,
	      folding,
	      chomping       = CHOMPING_CLIP,
	      didReadContent = false,
	      detectedIndent = false,
	      textIndent     = nodeIndent,
	      emptyLines     = 0,
	      atMoreIndented = false,
	      tmp,
	      ch;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (ch === 0x7C/* | */) {
	    folding = false;
	  } else if (ch === 0x3E/* > */) {
	    folding = true;
	  } else {
	    return false;
	  }
	
	  state.kind = 'scalar';
	  state.result = '';
	
	  while (ch !== 0) {
	    ch = state.input.charCodeAt(++state.position);
	
	    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {
	      if (CHOMPING_CLIP === chomping) {
	        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;
	      } else {
	        throwError(state, 'repeat of a chomping mode identifier');
	      }
	
	    } else if ((tmp = fromDecimalCode(ch)) >= 0) {
	      if (tmp === 0) {
	        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');
	      } else if (!detectedIndent) {
	        textIndent = nodeIndent + tmp - 1;
	        detectedIndent = true;
	      } else {
	        throwError(state, 'repeat of an indentation width identifier');
	      }
	
	    } else {
	      break;
	    }
	  }
	
	  if (is_WHITE_SPACE(ch)) {
	    do { ch = state.input.charCodeAt(++state.position); }
	    while (is_WHITE_SPACE(ch));
	
	    if (ch === 0x23/* # */) {
	      do { ch = state.input.charCodeAt(++state.position); }
	      while (!is_EOL(ch) && (ch !== 0));
	    }
	  }
	
	  while (ch !== 0) {
	    readLineBreak(state);
	    state.lineIndent = 0;
	
	    ch = state.input.charCodeAt(state.position);
	
	    while ((!detectedIndent || state.lineIndent < textIndent) &&
	           (ch === 0x20/* Space */)) {
	      state.lineIndent++;
	      ch = state.input.charCodeAt(++state.position);
	    }
	
	    if (!detectedIndent && state.lineIndent > textIndent) {
	      textIndent = state.lineIndent;
	    }
	
	    if (is_EOL(ch)) {
	      emptyLines++;
	      continue;
	    }
	
	    // End of the scalar.
	    if (state.lineIndent < textIndent) {
	
	      // Perform the chomping.
	      if (chomping === CHOMPING_KEEP) {
	        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
	      } else if (chomping === CHOMPING_CLIP) {
	        if (didReadContent) { // i.e. only if the scalar is not empty.
	          state.result += '\n';
	        }
	      }
	
	      // Break this `while` cycle and go to the funciton's epilogue.
	      break;
	    }
	
	    // Folded style: use fancy rules to handle line breaks.
	    if (folding) {
	
	      // Lines starting with white space characters (more-indented lines) are not folded.
	      if (is_WHITE_SPACE(ch)) {
	        atMoreIndented = true;
	        // except for the first content line (cf. Example 8.1)
	        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
	
	      // End of more-indented block.
	      } else if (atMoreIndented) {
	        atMoreIndented = false;
	        state.result += common.repeat('\n', emptyLines + 1);
	
	      // Just one line break - perceive as the same line.
	      } else if (emptyLines === 0) {
	        if (didReadContent) { // i.e. only if we have already read some scalar content.
	          state.result += ' ';
	        }
	
	      // Several line breaks - perceive as different lines.
	      } else {
	        state.result += common.repeat('\n', emptyLines);
	      }
	
	    // Literal style: just add exact number of line breaks between content lines.
	    } else {
	      // Keep all line breaks except the header line break.
	      state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
	    }
	
	    didReadContent = true;
	    detectedIndent = true;
	    emptyLines = 0;
	    captureStart = state.position;
	
	    while (!is_EOL(ch) && (ch !== 0)) {
	      ch = state.input.charCodeAt(++state.position);
	    }
	
	    captureSegment(state, captureStart, state.position, false);
	  }
	
	  return true;
	}
	
	function readBlockSequence(state, nodeIndent) {
	  var _line,
	      _tag      = state.tag,
	      _anchor   = state.anchor,
	      _result   = [],
	      following,
	      detected  = false,
	      ch;
	
	  if (state.anchor !== null) {
	    state.anchorMap[state.anchor] = _result;
	  }
	
	  ch = state.input.charCodeAt(state.position);
	
	  while (ch !== 0) {
	
	    if (ch !== 0x2D/* - */) {
	      break;
	    }
	
	    following = state.input.charCodeAt(state.position + 1);
	
	    if (!is_WS_OR_EOL(following)) {
	      break;
	    }
	
	    detected = true;
	    state.position++;
	
	    if (skipSeparationSpace(state, true, -1)) {
	      if (state.lineIndent <= nodeIndent) {
	        _result.push(null);
	        ch = state.input.charCodeAt(state.position);
	        continue;
	      }
	    }
	
	    _line = state.line;
	    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
	    _result.push(state.result);
	    skipSeparationSpace(state, true, -1);
	
	    ch = state.input.charCodeAt(state.position);
	
	    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {
	      throwError(state, 'bad indentation of a sequence entry');
	    } else if (state.lineIndent < nodeIndent) {
	      break;
	    }
	  }
	
	  if (detected) {
	    state.tag = _tag;
	    state.anchor = _anchor;
	    state.kind = 'sequence';
	    state.result = _result;
	    return true;
	  }
	  return false;
	}
	
	function readBlockMapping(state, nodeIndent, flowIndent) {
	  var following,
	      allowCompact,
	      _line,
	      _tag          = state.tag,
	      _anchor       = state.anchor,
	      _result       = {},
	      overridableKeys = {},
	      keyTag        = null,
	      keyNode       = null,
	      valueNode     = null,
	      atExplicitKey = false,
	      detected      = false,
	      ch;
	
	  if (state.anchor !== null) {
	    state.anchorMap[state.anchor] = _result;
	  }
	
	  ch = state.input.charCodeAt(state.position);
	
	  while (ch !== 0) {
	    following = state.input.charCodeAt(state.position + 1);
	    _line = state.line; // Save the current line.
	
	    //
	    // Explicit notation case. There are two separate blocks:
	    // first for the key (denoted by "?") and second for the value (denoted by ":")
	    //
	    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {
	
	      if (ch === 0x3F/* ? */) {
	        if (atExplicitKey) {
	          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
	          keyTag = keyNode = valueNode = null;
	        }
	
	        detected = true;
	        atExplicitKey = true;
	        allowCompact = true;
	
	      } else if (atExplicitKey) {
	        // i.e. 0x3A/* : */ === character after the explicit key.
	        atExplicitKey = false;
	        allowCompact = true;
	
	      } else {
	        throwError(state, 'incomplete explicit mapping pair; a key node is missed');
	      }
	
	      state.position += 1;
	      ch = following;
	
	    //
	    // Implicit notation case. Flow-style node as the key first, then ":", and the value.
	    //
	    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {
	
	      if (state.line === _line) {
	        ch = state.input.charCodeAt(state.position);
	
	        while (is_WHITE_SPACE(ch)) {
	          ch = state.input.charCodeAt(++state.position);
	        }
	
	        if (ch === 0x3A/* : */) {
	          ch = state.input.charCodeAt(++state.position);
	
	          if (!is_WS_OR_EOL(ch)) {
	            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');
	          }
	
	          if (atExplicitKey) {
	            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
	            keyTag = keyNode = valueNode = null;
	          }
	
	          detected = true;
	          atExplicitKey = false;
	          allowCompact = false;
	          keyTag = state.tag;
	          keyNode = state.result;
	
	        } else if (detected) {
	          throwError(state, 'can not read an implicit mapping pair; a colon is missed');
	
	        } else {
	          state.tag = _tag;
	          state.anchor = _anchor;
	          return true; // Keep the result of `composeNode`.
	        }
	
	      } else if (detected) {
	        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');
	
	      } else {
	        state.tag = _tag;
	        state.anchor = _anchor;
	        return true; // Keep the result of `composeNode`.
	      }
	
	    } else {
	      break; // Reading is done. Go to the epilogue.
	    }
	
	    //
	    // Common reading code for both explicit and implicit notations.
	    //
	    if (state.line === _line || state.lineIndent > nodeIndent) {
	      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
	        if (atExplicitKey) {
	          keyNode = state.result;
	        } else {
	          valueNode = state.result;
	        }
	      }
	
	      if (!atExplicitKey) {
	        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);
	        keyTag = keyNode = valueNode = null;
	      }
	
	      skipSeparationSpace(state, true, -1);
	      ch = state.input.charCodeAt(state.position);
	    }
	
	    if (state.lineIndent > nodeIndent && (ch !== 0)) {
	      throwError(state, 'bad indentation of a mapping entry');
	    } else if (state.lineIndent < nodeIndent) {
	      break;
	    }
	  }
	
	  //
	  // Epilogue.
	  //
	
	  // Special case: last mapping's node contains only the key in explicit notation.
	  if (atExplicitKey) {
	    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
	  }
	
	  // Expose the resulting mapping.
	  if (detected) {
	    state.tag = _tag;
	    state.anchor = _anchor;
	    state.kind = 'mapping';
	    state.result = _result;
	  }
	
	  return detected;
	}
	
	function readTagProperty(state) {
	  var _position,
	      isVerbatim = false,
	      isNamed    = false,
	      tagHandle,
	      tagName,
	      ch;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (ch !== 0x21/* ! */) return false;
	
	  if (state.tag !== null) {
	    throwError(state, 'duplication of a tag property');
	  }
	
	  ch = state.input.charCodeAt(++state.position);
	
	  if (ch === 0x3C/* < */) {
	    isVerbatim = true;
	    ch = state.input.charCodeAt(++state.position);
	
	  } else if (ch === 0x21/* ! */) {
	    isNamed = true;
	    tagHandle = '!!';
	    ch = state.input.charCodeAt(++state.position);
	
	  } else {
	    tagHandle = '!';
	  }
	
	  _position = state.position;
	
	  if (isVerbatim) {
	    do { ch = state.input.charCodeAt(++state.position); }
	    while (ch !== 0 && ch !== 0x3E/* > */);
	
	    if (state.position < state.length) {
	      tagName = state.input.slice(_position, state.position);
	      ch = state.input.charCodeAt(++state.position);
	    } else {
	      throwError(state, 'unexpected end of the stream within a verbatim tag');
	    }
	  } else {
	    while (ch !== 0 && !is_WS_OR_EOL(ch)) {
	
	      if (ch === 0x21/* ! */) {
	        if (!isNamed) {
	          tagHandle = state.input.slice(_position - 1, state.position + 1);
	
	          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
	            throwError(state, 'named tag handle cannot contain such characters');
	          }
	
	          isNamed = true;
	          _position = state.position + 1;
	        } else {
	          throwError(state, 'tag suffix cannot contain exclamation marks');
	        }
	      }
	
	      ch = state.input.charCodeAt(++state.position);
	    }
	
	    tagName = state.input.slice(_position, state.position);
	
	    if (PATTERN_FLOW_INDICATORS.test(tagName)) {
	      throwError(state, 'tag suffix cannot contain flow indicator characters');
	    }
	  }
	
	  if (tagName && !PATTERN_TAG_URI.test(tagName)) {
	    throwError(state, 'tag name cannot contain such characters: ' + tagName);
	  }
	
	  if (isVerbatim) {
	    state.tag = tagName;
	
	  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {
	    state.tag = state.tagMap[tagHandle] + tagName;
	
	  } else if (tagHandle === '!') {
	    state.tag = '!' + tagName;
	
	  } else if (tagHandle === '!!') {
	    state.tag = 'tag:yaml.org,2002:' + tagName;
	
	  } else {
	    throwError(state, 'undeclared tag handle "' + tagHandle + '"');
	  }
	
	  return true;
	}
	
	function readAnchorProperty(state) {
	  var _position,
	      ch;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (ch !== 0x26/* & */) return false;
	
	  if (state.anchor !== null) {
	    throwError(state, 'duplication of an anchor property');
	  }
	
	  ch = state.input.charCodeAt(++state.position);
	  _position = state.position;
	
	  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
	    ch = state.input.charCodeAt(++state.position);
	  }
	
	  if (state.position === _position) {
	    throwError(state, 'name of an anchor node must contain at least one character');
	  }
	
	  state.anchor = state.input.slice(_position, state.position);
	  return true;
	}
	
	function readAlias(state) {
	  var _position, alias,
	      ch;
	
	  ch = state.input.charCodeAt(state.position);
	
	  if (ch !== 0x2A/* * */) return false;
	
	  ch = state.input.charCodeAt(++state.position);
	  _position = state.position;
	
	  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
	    ch = state.input.charCodeAt(++state.position);
	  }
	
	  if (state.position === _position) {
	    throwError(state, 'name of an alias node must contain at least one character');
	  }
	
	  alias = state.input.slice(_position, state.position);
	
	  if (!state.anchorMap.hasOwnProperty(alias)) {
	    throwError(state, 'unidentified alias "' + alias + '"');
	  }
	
	  state.result = state.anchorMap[alias];
	  skipSeparationSpace(state, true, -1);
	  return true;
	}
	
	function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
	  var allowBlockStyles,
	      allowBlockScalars,
	      allowBlockCollections,
	      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent
	      atNewLine  = false,
	      hasContent = false,
	      typeIndex,
	      typeQuantity,
	      type,
	      flowIndent,
	      blockIndent;
	
	  if (state.listener !== null) {
	    state.listener('open', state);
	  }
	
	  state.tag    = null;
	  state.anchor = null;
	  state.kind   = null;
	  state.result = null;
	
	  allowBlockStyles = allowBlockScalars = allowBlockCollections =
	    CONTEXT_BLOCK_OUT === nodeContext ||
	    CONTEXT_BLOCK_IN  === nodeContext;
	
	  if (allowToSeek) {
	    if (skipSeparationSpace(state, true, -1)) {
	      atNewLine = true;
	
	      if (state.lineIndent > parentIndent) {
	        indentStatus = 1;
	      } else if (state.lineIndent === parentIndent) {
	        indentStatus = 0;
	      } else if (state.lineIndent < parentIndent) {
	        indentStatus = -1;
	      }
	    }
	  }
	
	  if (indentStatus === 1) {
	    while (readTagProperty(state) || readAnchorProperty(state)) {
	      if (skipSeparationSpace(state, true, -1)) {
	        atNewLine = true;
	        allowBlockCollections = allowBlockStyles;
	
	        if (state.lineIndent > parentIndent) {
	          indentStatus = 1;
	        } else if (state.lineIndent === parentIndent) {
	          indentStatus = 0;
	        } else if (state.lineIndent < parentIndent) {
	          indentStatus = -1;
	        }
	      } else {
	        allowBlockCollections = false;
	      }
	    }
	  }
	
	  if (allowBlockCollections) {
	    allowBlockCollections = atNewLine || allowCompact;
	  }
	
	  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
	    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {
	      flowIndent = parentIndent;
	    } else {
	      flowIndent = parentIndent + 1;
	    }
	
	    blockIndent = state.position - state.lineStart;
	
	    if (indentStatus === 1) {
	      if (allowBlockCollections &&
	          (readBlockSequence(state, blockIndent) ||
	           readBlockMapping(state, blockIndent, flowIndent)) ||
	          readFlowCollection(state, flowIndent)) {
	        hasContent = true;
	      } else {
	        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||
	            readSingleQuotedScalar(state, flowIndent) ||
	            readDoubleQuotedScalar(state, flowIndent)) {
	          hasContent = true;
	
	        } else if (readAlias(state)) {
	          hasContent = true;
	
	          if (state.tag !== null || state.anchor !== null) {
	            throwError(state, 'alias node should not have any properties');
	          }
	
	        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
	          hasContent = true;
	
	          if (state.tag === null) {
	            state.tag = '?';
	          }
	        }
	
	        if (state.anchor !== null) {
	          state.anchorMap[state.anchor] = state.result;
	        }
	      }
	    } else if (indentStatus === 0) {
	      // Special case: block sequences are allowed to have same indentation level as the parent.
	      // http://www.yaml.org/spec/1.2/spec.html#id2799784
	      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);
	    }
	  }
	
	  if (state.tag !== null && state.tag !== '!') {
	    if (state.tag === '?') {
	      for (typeIndex = 0, typeQuantity = state.implicitTypes.length;
	           typeIndex < typeQuantity;
	           typeIndex += 1) {
	        type = state.implicitTypes[typeIndex];
	
	        // Implicit resolving is not allowed for non-scalar types, and '?'
	        // non-specific tag is only assigned to plain scalars. So, it isn't
	        // needed to check for 'kind' conformity.
	
	        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched
	          state.result = type.construct(state.result);
	          state.tag = type.tag;
	          if (state.anchor !== null) {
	            state.anchorMap[state.anchor] = state.result;
	          }
	          break;
	        }
	      }
	    } else if (_hasOwnProperty.call(state.typeMap, state.tag)) {
	      type = state.typeMap[state.tag];
	
	      if (state.result !== null && type.kind !== state.kind) {
	        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be "' + type.kind + '", not "' + state.kind + '"');
	      }
	
	      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched
	        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');
	      } else {
	        state.result = type.construct(state.result);
	        if (state.anchor !== null) {
	          state.anchorMap[state.anchor] = state.result;
	        }
	      }
	    } else {
	      throwError(state, 'unknown tag !<' + state.tag + '>');
	    }
	  }
	
	  if (state.listener !== null) {
	    state.listener('close', state);
	  }
	  return state.tag !== null ||  state.anchor !== null || hasContent;
	}
	
	function readDocument(state) {
	  var documentStart = state.position,
	      _position,
	      directiveName,
	      directiveArgs,
	      hasDirectives = false,
	      ch;
	
	  state.version = null;
	  state.checkLineBreaks = state.legacy;
	  state.tagMap = {};
	  state.anchorMap = {};
	
	  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
	    skipSeparationSpace(state, true, -1);
	
	    ch = state.input.charCodeAt(state.position);
	
	    if (state.lineIndent > 0 || ch !== 0x25/* % */) {
	      break;
	    }
	
	    hasDirectives = true;
	    ch = state.input.charCodeAt(++state.position);
	    _position = state.position;
	
	    while (ch !== 0 && !is_WS_OR_EOL(ch)) {
	      ch = state.input.charCodeAt(++state.position);
	    }
	
	    directiveName = state.input.slice(_position, state.position);
	    directiveArgs = [];
	
	    if (directiveName.length < 1) {
	      throwError(state, 'directive name must not be less than one character in length');
	    }
	
	    while (ch !== 0) {
	      while (is_WHITE_SPACE(ch)) {
	        ch = state.input.charCodeAt(++state.position);
	      }
	
	      if (ch === 0x23/* # */) {
	        do { ch = state.input.charCodeAt(++state.position); }
	        while (ch !== 0 && !is_EOL(ch));
	        break;
	      }
	
	      if (is_EOL(ch)) break;
	
	      _position = state.position;
	
	      while (ch !== 0 && !is_WS_OR_EOL(ch)) {
	        ch = state.input.charCodeAt(++state.position);
	      }
	
	      directiveArgs.push(state.input.slice(_position, state.position));
	    }
	
	    if (ch !== 0) readLineBreak(state);
	
	    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {
	      directiveHandlers[directiveName](state, directiveName, directiveArgs);
	    } else {
	      throwWarning(state, 'unknown document directive "' + directiveName + '"');
	    }
	  }
	
	  skipSeparationSpace(state, true, -1);
	
	  if (state.lineIndent === 0 &&
	      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&
	      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&
	      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {
	    state.position += 3;
	    skipSeparationSpace(state, true, -1);
	
	  } else if (hasDirectives) {
	    throwError(state, 'directives end mark is expected');
	  }
	
	  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
	  skipSeparationSpace(state, true, -1);
	
	  if (state.checkLineBreaks &&
	      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
	    throwWarning(state, 'non-ASCII line breaks are interpreted as content');
	  }
	
	  state.documents.push(state.result);
	
	  if (state.position === state.lineStart && testDocumentSeparator(state)) {
	
	    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {
	      state.position += 3;
	      skipSeparationSpace(state, true, -1);
	    }
	    return;
	  }
	
	  if (state.position < (state.length - 1)) {
	    throwError(state, 'end of the stream or a document separator is expected');
	  } else {
	    return;
	  }
	}
	
	
	function loadDocuments(input, options) {
	  input = String(input);
	  options = options || {};
	
	  if (input.length !== 0) {
	
	    // Add tailing `\n` if not exists
	    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&
	        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {
	      input += '\n';
	    }
	
	    // Strip BOM
	    if (input.charCodeAt(0) === 0xFEFF) {
	      input = input.slice(1);
	    }
	  }
	
	  var state = new State(input, options);
	
	  // Use 0 as string terminator. That significantly simplifies bounds check.
	  state.input += '\0';
	
	  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {
	    state.lineIndent += 1;
	    state.position += 1;
	  }
	
	  while (state.position < (state.length - 1)) {
	    readDocument(state);
	  }
	
	  return state.documents;
	}
	
	
	function loadAll(input, iterator, options) {
	  var documents = loadDocuments(input, options), index, length;
	
	  for (index = 0, length = documents.length; index < length; index += 1) {
	    iterator(documents[index]);
	  }
	}
	
	
	function load(input, options) {
	  var documents = loadDocuments(input, options);
	
	  if (documents.length === 0) {
	    /*eslint-disable no-undefined*/
	    return undefined;
	  } else if (documents.length === 1) {
	    return documents[0];
	  }
	  throw new YAMLException('expected a single document in the stream, but found more');
	}
	
	
	function safeLoadAll(input, output, options) {
	  loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
	}
	
	
	function safeLoad(input, options) {
	  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
	}
	
	
	module.exports.loadAll     = loadAll;
	module.exports.load        = load;
	module.exports.safeLoadAll = safeLoadAll;
	module.exports.safeLoad    = safeLoad;


/***/ },
/* 468 */
/***/ function(module, exports) {

	'use strict';
	
	
	function isNothing(subject) {
	  return (typeof subject === 'undefined') || (subject === null);
	}
	
	
	function isObject(subject) {
	  return (typeof subject === 'object') && (subject !== null);
	}
	
	
	function toArray(sequence) {
	  if (Array.isArray(sequence)) return sequence;
	  else if (isNothing(sequence)) return [];
	
	  return [ sequence ];
	}
	
	
	function extend(target, source) {
	  var index, length, key, sourceKeys;
	
	  if (source) {
	    sourceKeys = Object.keys(source);
	
	    for (index = 0, length = sourceKeys.length; index < length; index += 1) {
	      key = sourceKeys[index];
	      target[key] = source[key];
	    }
	  }
	
	  return target;
	}
	
	
	function repeat(string, count) {
	  var result = '', cycle;
	
	  for (cycle = 0; cycle < count; cycle += 1) {
	    result += string;
	  }
	
	  return result;
	}
	
	
	function isNegativeZero(number) {
	  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);
	}
	
	
	module.exports.isNothing      = isNothing;
	module.exports.isObject       = isObject;
	module.exports.toArray        = toArray;
	module.exports.repeat         = repeat;
	module.exports.isNegativeZero = isNegativeZero;
	module.exports.extend         = extend;


/***/ },
/* 469 */
/***/ function(module, exports) {

	// YAML error class. http://stackoverflow.com/questions/8458984
	//
	'use strict';
	
	function YAMLException(reason, mark) {
	  // Super constructor
	  Error.call(this);
	
	  // Include stack trace in error object
	  if (Error.captureStackTrace) {
	    // Chrome and NodeJS
	    Error.captureStackTrace(this, this.constructor);
	  } else {
	    // FF, IE 10+ and Safari 6+. Fallback for others
	    this.stack = (new Error()).stack || '';
	  }
	
	  this.name = 'YAMLException';
	  this.reason = reason;
	  this.mark = mark;
	  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');
	}
	
	
	// Inherit from Error
	YAMLException.prototype = Object.create(Error.prototype);
	YAMLException.prototype.constructor = YAMLException;
	
	
	YAMLException.prototype.toString = function toString(compact) {
	  var result = this.name + ': ';
	
	  result += this.reason || '(unknown reason)';
	
	  if (!compact && this.mark) {
	    result += ' ' + this.mark.toString();
	  }
	
	  return result;
	};
	
	
	module.exports = YAMLException;


/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var common = __webpack_require__(468);
	
	
	function Mark(name, buffer, position, line, column) {
	  this.name     = name;
	  this.buffer   = buffer;
	  this.position = position;
	  this.line     = line;
	  this.column   = column;
	}
	
	
	Mark.prototype.getSnippet = function getSnippet(indent, maxLength) {
	  var head, start, tail, end, snippet;
	
	  if (!this.buffer) return null;
	
	  indent = indent || 4;
	  maxLength = maxLength || 75;
	
	  head = '';
	  start = this.position;
	
	  while (start > 0 && '\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {
	    start -= 1;
	    if (this.position - start > (maxLength / 2 - 1)) {
	      head = ' ... ';
	      start += 5;
	      break;
	    }
	  }
	
	  tail = '';
	  end = this.position;
	
	  while (end < this.buffer.length && '\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(end)) === -1) {
	    end += 1;
	    if (end - this.position > (maxLength / 2 - 1)) {
	      tail = ' ... ';
	      end -= 5;
	      break;
	    }
	  }
	
	  snippet = this.buffer.slice(start, end);
	
	  return common.repeat(' ', indent) + head + snippet + tail + '\n' +
	         common.repeat(' ', indent + this.position - start + head.length) + '^';
	};
	
	
	Mark.prototype.toString = function toString(compact) {
	  var snippet, where = '';
	
	  if (this.name) {
	    where += 'in "' + this.name + '" ';
	  }
	
	  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);
	
	  if (!compact) {
	    snippet = this.getSnippet();
	
	    if (snippet) {
	      where += ':\n' + snippet;
	    }
	  }
	
	  return where;
	};
	
	
	module.exports = Mark;


/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	// JS-YAML's default schema for `safeLoad` function.
	// It is not described in the YAML specification.
	//
	// This schema is based on standard YAML's Core schema and includes most of
	// extra types described at YAML tag repository. (http://yaml.org/type/)
	
	
	'use strict';
	
	
	var Schema = __webpack_require__(472);
	
	
	module.exports = new Schema({
	  include: [
	    __webpack_require__(474)
	  ],
	  implicit: [
	    __webpack_require__(484),
	    __webpack_require__(485)
	  ],
	  explicit: [
	    __webpack_require__(486),
	    __webpack_require__(491),
	    __webpack_require__(492),
	    __webpack_require__(493)
	  ]
	});


/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/*eslint-disable max-len*/
	
	var common        = __webpack_require__(468);
	var YAMLException = __webpack_require__(469);
	var Type          = __webpack_require__(473);
	
	
	function compileList(schema, name, result) {
	  var exclude = [];
	
	  schema.include.forEach(function (includedSchema) {
	    result = compileList(includedSchema, name, result);
	  });
	
	  schema[name].forEach(function (currentType) {
	    result.forEach(function (previousType, previousIndex) {
	      if (previousType.tag === currentType.tag) {
	        exclude.push(previousIndex);
	      }
	    });
	
	    result.push(currentType);
	  });
	
	  return result.filter(function (type, index) {
	    return exclude.indexOf(index) === -1;
	  });
	}
	
	
	function compileMap(/* lists... */) {
	  var result = {}, index, length;
	
	  function collectType(type) {
	    result[type.tag] = type;
	  }
	
	  for (index = 0, length = arguments.length; index < length; index += 1) {
	    arguments[index].forEach(collectType);
	  }
	
	  return result;
	}
	
	
	function Schema(definition) {
	  this.include  = definition.include  || [];
	  this.implicit = definition.implicit || [];
	  this.explicit = definition.explicit || [];
	
	  this.implicit.forEach(function (type) {
	    if (type.loadKind && type.loadKind !== 'scalar') {
	      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');
	    }
	  });
	
	  this.compiledImplicit = compileList(this, 'implicit', []);
	  this.compiledExplicit = compileList(this, 'explicit', []);
	  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);
	}
	
	
	Schema.DEFAULT = null;
	
	
	Schema.create = function createSchema() {
	  var schemas, types;
	
	  switch (arguments.length) {
	    case 1:
	      schemas = Schema.DEFAULT;
	      types = arguments[0];
	      break;
	
	    case 2:
	      schemas = arguments[0];
	      types = arguments[1];
	      break;
	
	    default:
	      throw new YAMLException('Wrong number of arguments for Schema.create function');
	  }
	
	  schemas = common.toArray(schemas);
	  types = common.toArray(types);
	
	  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {
	    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');
	  }
	
	  if (!types.every(function (type) { return type instanceof Type; })) {
	    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');
	  }
	
	  return new Schema({
	    include: schemas,
	    explicit: types
	  });
	};
	
	
	module.exports = Schema;


/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var YAMLException = __webpack_require__(469);
	
	var TYPE_CONSTRUCTOR_OPTIONS = [
	  'kind',
	  'resolve',
	  'construct',
	  'instanceOf',
	  'predicate',
	  'represent',
	  'defaultStyle',
	  'styleAliases'
	];
	
	var YAML_NODE_KINDS = [
	  'scalar',
	  'sequence',
	  'mapping'
	];
	
	function compileStyleAliases(map) {
	  var result = {};
	
	  if (map !== null) {
	    Object.keys(map).forEach(function (style) {
	      map[style].forEach(function (alias) {
	        result[String(alias)] = style;
	      });
	    });
	  }
	
	  return result;
	}
	
	function Type(tag, options) {
	  options = options || {};
	
	  Object.keys(options).forEach(function (name) {
	    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {
	      throw new YAMLException('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
	    }
	  });
	
	  // TODO: Add tag format check.
	  this.tag          = tag;
	  this.kind         = options['kind']         || null;
	  this.resolve      = options['resolve']      || function () { return true; };
	  this.construct    = options['construct']    || function (data) { return data; };
	  this.instanceOf   = options['instanceOf']   || null;
	  this.predicate    = options['predicate']    || null;
	  this.represent    = options['represent']    || null;
	  this.defaultStyle = options['defaultStyle'] || null;
	  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);
	
	  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {
	    throw new YAMLException('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
	  }
	}
	
	module.exports = Type;


/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	// Standard YAML's Core schema.
	// http://www.yaml.org/spec/1.2/spec.html#id2804923
	//
	// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
	// So, Core schema has no distinctions from JSON schema is JS-YAML.
	
	
	'use strict';
	
	
	var Schema = __webpack_require__(472);
	
	
	module.exports = new Schema({
	  include: [
	    __webpack_require__(475)
	  ]
	});


/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	// Standard YAML's JSON schema.
	// http://www.yaml.org/spec/1.2/spec.html#id2803231
	//
	// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
	// So, this schema is not such strict as defined in the YAML specification.
	// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.
	
	
	'use strict';
	
	
	var Schema = __webpack_require__(472);
	
	
	module.exports = new Schema({
	  include: [
	    __webpack_require__(476)
	  ],
	  implicit: [
	    __webpack_require__(480),
	    __webpack_require__(481),
	    __webpack_require__(482),
	    __webpack_require__(483)
	  ]
	});


/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	// Standard YAML's Failsafe schema.
	// http://www.yaml.org/spec/1.2/spec.html#id2802346
	
	
	'use strict';
	
	
	var Schema = __webpack_require__(472);
	
	
	module.exports = new Schema({
	  explicit: [
	    __webpack_require__(477),
	    __webpack_require__(478),
	    __webpack_require__(479)
	  ]
	});


/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	module.exports = new Type('tag:yaml.org,2002:str', {
	  kind: 'scalar',
	  construct: function (data) { return data !== null ? data : ''; }
	});


/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	module.exports = new Type('tag:yaml.org,2002:seq', {
	  kind: 'sequence',
	  construct: function (data) { return data !== null ? data : []; }
	});


/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	module.exports = new Type('tag:yaml.org,2002:map', {
	  kind: 'mapping',
	  construct: function (data) { return data !== null ? data : {}; }
	});


/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	function resolveYamlNull(data) {
	  if (data === null) return true;
	
	  var max = data.length;
	
	  return (max === 1 && data === '~') ||
	         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));
	}
	
	function constructYamlNull() {
	  return null;
	}
	
	function isNull(object) {
	  return object === null;
	}
	
	module.exports = new Type('tag:yaml.org,2002:null', {
	  kind: 'scalar',
	  resolve: resolveYamlNull,
	  construct: constructYamlNull,
	  predicate: isNull,
	  represent: {
	    canonical: function () { return '~';    },
	    lowercase: function () { return 'null'; },
	    uppercase: function () { return 'NULL'; },
	    camelcase: function () { return 'Null'; }
	  },
	  defaultStyle: 'lowercase'
	});


/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	function resolveYamlBoolean(data) {
	  if (data === null) return false;
	
	  var max = data.length;
	
	  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||
	         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));
	}
	
	function constructYamlBoolean(data) {
	  return data === 'true' ||
	         data === 'True' ||
	         data === 'TRUE';
	}
	
	function isBoolean(object) {
	  return Object.prototype.toString.call(object) === '[object Boolean]';
	}
	
	module.exports = new Type('tag:yaml.org,2002:bool', {
	  kind: 'scalar',
	  resolve: resolveYamlBoolean,
	  construct: constructYamlBoolean,
	  predicate: isBoolean,
	  represent: {
	    lowercase: function (object) { return object ? 'true' : 'false'; },
	    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },
	    camelcase: function (object) { return object ? 'True' : 'False'; }
	  },
	  defaultStyle: 'lowercase'
	});


/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var common = __webpack_require__(468);
	var Type   = __webpack_require__(473);
	
	function isHexCode(c) {
	  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||
	         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||
	         ((0x61/* a */ <= c) && (c <= 0x66/* f */));
	}
	
	function isOctCode(c) {
	  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));
	}
	
	function isDecCode(c) {
	  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));
	}
	
	function resolveYamlInteger(data) {
	  if (data === null) return false;
	
	  var max = data.length,
	      index = 0,
	      hasDigits = false,
	      ch;
	
	  if (!max) return false;
	
	  ch = data[index];
	
	  // sign
	  if (ch === '-' || ch === '+') {
	    ch = data[++index];
	  }
	
	  if (ch === '0') {
	    // 0
	    if (index + 1 === max) return true;
	    ch = data[++index];
	
	    // base 2, base 8, base 16
	
	    if (ch === 'b') {
	      // base 2
	      index++;
	
	      for (; index < max; index++) {
	        ch = data[index];
	        if (ch === '_') continue;
	        if (ch !== '0' && ch !== '1') return false;
	        hasDigits = true;
	      }
	      return hasDigits;
	    }
	
	
	    if (ch === 'x') {
	      // base 16
	      index++;
	
	      for (; index < max; index++) {
	        ch = data[index];
	        if (ch === '_') continue;
	        if (!isHexCode(data.charCodeAt(index))) return false;
	        hasDigits = true;
	      }
	      return hasDigits;
	    }
	
	    // base 8
	    for (; index < max; index++) {
	      ch = data[index];
	      if (ch === '_') continue;
	      if (!isOctCode(data.charCodeAt(index))) return false;
	      hasDigits = true;
	    }
	    return hasDigits;
	  }
	
	  // base 10 (except 0) or base 60
	
	  for (; index < max; index++) {
	    ch = data[index];
	    if (ch === '_') continue;
	    if (ch === ':') break;
	    if (!isDecCode(data.charCodeAt(index))) {
	      return false;
	    }
	    hasDigits = true;
	  }
	
	  if (!hasDigits) return false;
	
	  // if !base60 - done;
	  if (ch !== ':') return true;
	
	  // base60 almost not used, no needs to optimize
	  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));
	}
	
	function constructYamlInteger(data) {
	  var value = data, sign = 1, ch, base, digits = [];
	
	  if (value.indexOf('_') !== -1) {
	    value = value.replace(/_/g, '');
	  }
	
	  ch = value[0];
	
	  if (ch === '-' || ch === '+') {
	    if (ch === '-') sign = -1;
	    value = value.slice(1);
	    ch = value[0];
	  }
	
	  if (value === '0') return 0;
	
	  if (ch === '0') {
	    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);
	    if (value[1] === 'x') return sign * parseInt(value, 16);
	    return sign * parseInt(value, 8);
	  }
	
	  if (value.indexOf(':') !== -1) {
	    value.split(':').forEach(function (v) {
	      digits.unshift(parseInt(v, 10));
	    });
	
	    value = 0;
	    base = 1;
	
	    digits.forEach(function (d) {
	      value += (d * base);
	      base *= 60;
	    });
	
	    return sign * value;
	
	  }
	
	  return sign * parseInt(value, 10);
	}
	
	function isInteger(object) {
	  return (Object.prototype.toString.call(object)) === '[object Number]' &&
	         (object % 1 === 0 && !common.isNegativeZero(object));
	}
	
	module.exports = new Type('tag:yaml.org,2002:int', {
	  kind: 'scalar',
	  resolve: resolveYamlInteger,
	  construct: constructYamlInteger,
	  predicate: isInteger,
	  represent: {
	    binary:      function (object) { return '0b' + object.toString(2); },
	    octal:       function (object) { return '0'  + object.toString(8); },
	    decimal:     function (object) { return        object.toString(10); },
	    hexadecimal: function (object) { return '0x' + object.toString(16).toUpperCase(); }
	  },
	  defaultStyle: 'decimal',
	  styleAliases: {
	    binary:      [ 2,  'bin' ],
	    octal:       [ 8,  'oct' ],
	    decimal:     [ 10, 'dec' ],
	    hexadecimal: [ 16, 'hex' ]
	  }
	});


/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var common = __webpack_require__(468);
	var Type   = __webpack_require__(473);
	
	var YAML_FLOAT_PATTERN = new RegExp(
	  '^(?:[-+]?(?:[0-9][0-9_]*)\\.[0-9_]*(?:[eE][-+][0-9]+)?' +
	  '|\\.[0-9_]+(?:[eE][-+][0-9]+)?' +
	  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*' +
	  '|[-+]?\\.(?:inf|Inf|INF)' +
	  '|\\.(?:nan|NaN|NAN))$');
	
	function resolveYamlFloat(data) {
	  if (data === null) return false;
	
	  if (!YAML_FLOAT_PATTERN.test(data)) return false;
	
	  return true;
	}
	
	function constructYamlFloat(data) {
	  var value, sign, base, digits;
	
	  value  = data.replace(/_/g, '').toLowerCase();
	  sign   = value[0] === '-' ? -1 : 1;
	  digits = [];
	
	  if ('+-'.indexOf(value[0]) >= 0) {
	    value = value.slice(1);
	  }
	
	  if (value === '.inf') {
	    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;
	
	  } else if (value === '.nan') {
	    return NaN;
	
	  } else if (value.indexOf(':') >= 0) {
	    value.split(':').forEach(function (v) {
	      digits.unshift(parseFloat(v, 10));
	    });
	
	    value = 0.0;
	    base = 1;
	
	    digits.forEach(function (d) {
	      value += d * base;
	      base *= 60;
	    });
	
	    return sign * value;
	
	  }
	  return sign * parseFloat(value, 10);
	}
	
	
	var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;
	
	function representYamlFloat(object, style) {
	  var res;
	
	  if (isNaN(object)) {
	    switch (style) {
	      case 'lowercase': return '.nan';
	      case 'uppercase': return '.NAN';
	      case 'camelcase': return '.NaN';
	    }
	  } else if (Number.POSITIVE_INFINITY === object) {
	    switch (style) {
	      case 'lowercase': return '.inf';
	      case 'uppercase': return '.INF';
	      case 'camelcase': return '.Inf';
	    }
	  } else if (Number.NEGATIVE_INFINITY === object) {
	    switch (style) {
	      case 'lowercase': return '-.inf';
	      case 'uppercase': return '-.INF';
	      case 'camelcase': return '-.Inf';
	    }
	  } else if (common.isNegativeZero(object)) {
	    return '-0.0';
	  }
	
	  res = object.toString(10);
	
	  // JS stringifier can build scientific format without dots: 5e-100,
	  // while YAML requres dot: 5.e-100. Fix it with simple hack
	
	  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;
	}
	
	function isFloat(object) {
	  return (Object.prototype.toString.call(object) === '[object Number]') &&
	         (object % 1 !== 0 || common.isNegativeZero(object));
	}
	
	module.exports = new Type('tag:yaml.org,2002:float', {
	  kind: 'scalar',
	  resolve: resolveYamlFloat,
	  construct: constructYamlFloat,
	  predicate: isFloat,
	  represent: representYamlFloat,
	  defaultStyle: 'lowercase'
	});


/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	var YAML_DATE_REGEXP = new RegExp(
	  '^([0-9][0-9][0-9][0-9])'          + // [1] year
	  '-([0-9][0-9])'                    + // [2] month
	  '-([0-9][0-9])$');                   // [3] day
	
	var YAML_TIMESTAMP_REGEXP = new RegExp(
	  '^([0-9][0-9][0-9][0-9])'          + // [1] year
	  '-([0-9][0-9]?)'                   + // [2] month
	  '-([0-9][0-9]?)'                   + // [3] day
	  '(?:[Tt]|[ \\t]+)'                 + // ...
	  '([0-9][0-9]?)'                    + // [4] hour
	  ':([0-9][0-9])'                    + // [5] minute
	  ':([0-9][0-9])'                    + // [6] second
	  '(?:\\.([0-9]*))?'                 + // [7] fraction
	  '(?:[ \\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour
	  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute
	
	function resolveYamlTimestamp(data) {
	  if (data === null) return false;
	  if (YAML_DATE_REGEXP.exec(data) !== null) return true;
	  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;
	  return false;
	}
	
	function constructYamlTimestamp(data) {
	  var match, year, month, day, hour, minute, second, fraction = 0,
	      delta = null, tz_hour, tz_minute, date;
	
	  match = YAML_DATE_REGEXP.exec(data);
	  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);
	
	  if (match === null) throw new Error('Date resolve error');
	
	  // match: [1] year [2] month [3] day
	
	  year = +(match[1]);
	  month = +(match[2]) - 1; // JS month starts with 0
	  day = +(match[3]);
	
	  if (!match[4]) { // no hour
	    return new Date(Date.UTC(year, month, day));
	  }
	
	  // match: [4] hour [5] minute [6] second [7] fraction
	
	  hour = +(match[4]);
	  minute = +(match[5]);
	  second = +(match[6]);
	
	  if (match[7]) {
	    fraction = match[7].slice(0, 3);
	    while (fraction.length < 3) { // milli-seconds
	      fraction += '0';
	    }
	    fraction = +fraction;
	  }
	
	  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute
	
	  if (match[9]) {
	    tz_hour = +(match[10]);
	    tz_minute = +(match[11] || 0);
	    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds
	    if (match[9] === '-') delta = -delta;
	  }
	
	  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));
	
	  if (delta) date.setTime(date.getTime() - delta);
	
	  return date;
	}
	
	function representYamlTimestamp(object /*, style*/) {
	  return object.toISOString();
	}
	
	module.exports = new Type('tag:yaml.org,2002:timestamp', {
	  kind: 'scalar',
	  resolve: resolveYamlTimestamp,
	  construct: constructYamlTimestamp,
	  instanceOf: Date,
	  represent: representYamlTimestamp
	});


/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	function resolveYamlMerge(data) {
	  return data === '<<' || data === null;
	}
	
	module.exports = new Type('tag:yaml.org,2002:merge', {
	  kind: 'scalar',
	  resolve: resolveYamlMerge
	});


/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	var require;'use strict';
	
	/*eslint-disable no-bitwise*/
	
	var NodeBuffer;
	
	try {
	  // A trick for browserified version, to not include `Buffer` shim
	  var _require = require;
	  NodeBuffer = __webpack_require__(487).Buffer;
	} catch (__) {}
	
	var Type       = __webpack_require__(473);
	
	
	// [ 64, 65, 66 ] -> [ padding, CR, LF ]
	var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';
	
	
	function resolveYamlBinary(data) {
	  if (data === null) return false;
	
	  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;
	
	  // Convert one by one.
	  for (idx = 0; idx < max; idx++) {
	    code = map.indexOf(data.charAt(idx));
	
	    // Skip CR/LF
	    if (code > 64) continue;
	
	    // Fail on illegal characters
	    if (code < 0) return false;
	
	    bitlen += 6;
	  }
	
	  // If there are any bits left, source was corrupted
	  return (bitlen % 8) === 0;
	}
	
	function constructYamlBinary(data) {
	  var idx, tailbits,
	      input = data.replace(/[\r\n=]/g, ''), // remove CR/LF & padding to simplify scan
	      max = input.length,
	      map = BASE64_MAP,
	      bits = 0,
	      result = [];
	
	  // Collect by 6*4 bits (3 bytes)
	
	  for (idx = 0; idx < max; idx++) {
	    if ((idx % 4 === 0) && idx) {
	      result.push((bits >> 16) & 0xFF);
	      result.push((bits >> 8) & 0xFF);
	      result.push(bits & 0xFF);
	    }
	
	    bits = (bits << 6) | map.indexOf(input.charAt(idx));
	  }
	
	  // Dump tail
	
	  tailbits = (max % 4) * 6;
	
	  if (tailbits === 0) {
	    result.push((bits >> 16) & 0xFF);
	    result.push((bits >> 8) & 0xFF);
	    result.push(bits & 0xFF);
	  } else if (tailbits === 18) {
	    result.push((bits >> 10) & 0xFF);
	    result.push((bits >> 2) & 0xFF);
	  } else if (tailbits === 12) {
	    result.push((bits >> 4) & 0xFF);
	  }
	
	  // Wrap into Buffer for NodeJS and leave Array for browser
	  if (NodeBuffer) return new NodeBuffer(result);
	
	  return result;
	}
	
	function representYamlBinary(object /*, style*/) {
	  var result = '', bits = 0, idx, tail,
	      max = object.length,
	      map = BASE64_MAP;
	
	  // Convert every three bytes to 4 ASCII characters.
	
	  for (idx = 0; idx < max; idx++) {
	    if ((idx % 3 === 0) && idx) {
	      result += map[(bits >> 18) & 0x3F];
	      result += map[(bits >> 12) & 0x3F];
	      result += map[(bits >> 6) & 0x3F];
	      result += map[bits & 0x3F];
	    }
	
	    bits = (bits << 8) + object[idx];
	  }
	
	  // Dump tail
	
	  tail = max % 3;
	
	  if (tail === 0) {
	    result += map[(bits >> 18) & 0x3F];
	    result += map[(bits >> 12) & 0x3F];
	    result += map[(bits >> 6) & 0x3F];
	    result += map[bits & 0x3F];
	  } else if (tail === 2) {
	    result += map[(bits >> 10) & 0x3F];
	    result += map[(bits >> 4) & 0x3F];
	    result += map[(bits << 2) & 0x3F];
	    result += map[64];
	  } else if (tail === 1) {
	    result += map[(bits >> 2) & 0x3F];
	    result += map[(bits << 4) & 0x3F];
	    result += map[64];
	    result += map[64];
	  }
	
	  return result;
	}
	
	function isBinary(object) {
	  return NodeBuffer && NodeBuffer.isBuffer(object);
	}
	
	module.exports = new Type('tag:yaml.org,2002:binary', {
	  kind: 'scalar',
	  resolve: resolveYamlBinary,
	  construct: constructYamlBinary,
	  predicate: isBinary,
	  represent: representYamlBinary
	});


/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(488)
	var ieee754 = __webpack_require__(489)
	var isArray = __webpack_require__(490)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	Buffer.poolSize = 8192 // not used by this implementation
	
	var rootParent = {}
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
	 *     on objects.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.
	
	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()
	
	function typedArraySupport () {
	  function Bar () {}
	  try {
	    var arr = new Uint8Array(1)
	    arr.foo = function () { return 42 }
	    arr.constructor = Bar
	    return arr.foo() === 42 && // typed array instances can be augmented
	        arr.constructor === Bar && // constructor can be set
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}
	
	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}
	
	/**
	 * Class: Buffer
	 * =============
	 *
	 * The Buffer constructor returns instances of `Uint8Array` that are augmented
	 * with function properties for all the node `Buffer` API functions. We use
	 * `Uint8Array` so that square bracket notation works as expected -- it returns
	 * a single octet.
	 *
	 * By augmenting the instances, we can avoid modifying the `Uint8Array`
	 * prototype.
	 */
	function Buffer (arg) {
	  if (!(this instanceof Buffer)) {
	    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
	    if (arguments.length > 1) return new Buffer(arg, arguments[1])
	    return new Buffer(arg)
	  }
	
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    this.length = 0
	    this.parent = undefined
	  }
	
	  // Common case.
	  if (typeof arg === 'number') {
	    return fromNumber(this, arg)
	  }
	
	  // Slightly less common case.
	  if (typeof arg === 'string') {
	    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
	  }
	
	  // Unusual.
	  return fromObject(this, arg)
	}
	
	function fromNumber (that, length) {
	  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < length; i++) {
	      that[i] = 0
	    }
	  }
	  return that
	}
	
	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'
	
	  // Assumption: byteLength() return value is always < kMaxLength.
	  var length = byteLength(string, encoding) | 0
	  that = allocate(that, length)
	
	  that.write(string, encoding)
	  return that
	}
	
	function fromObject (that, object) {
	  if (Buffer.isBuffer(object)) return fromBuffer(that, object)
	
	  if (isArray(object)) return fromArray(that, object)
	
	  if (object == null) {
	    throw new TypeError('must start with number, buffer, array or string')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined') {
	    if (object.buffer instanceof ArrayBuffer) {
	      return fromTypedArray(that, object)
	    }
	    if (object instanceof ArrayBuffer) {
	      return fromArrayBuffer(that, object)
	    }
	  }
	
	  if (object.length) return fromArrayLike(that, object)
	
	  return fromJsonObject(that, object)
	}
	
	function fromBuffer (that, buffer) {
	  var length = checked(buffer.length) | 0
	  that = allocate(that, length)
	  buffer.copy(that, 0, 0, length)
	  return that
	}
	
	function fromArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	// Duplicate of fromArray() to keep fromArray() monomorphic.
	function fromTypedArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  // Truncating the elements is probably not what people expect from typed
	  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
	  // of the old Buffer constructor.
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	function fromArrayBuffer (that, array) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    array.byteLength
	    that = Buffer._augment(new Uint8Array(array))
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromTypedArray(that, new Uint8Array(array))
	  }
	  return that
	}
	
	function fromArrayLike (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
	// Returns a zero-length buffer for inputs that don't conform to the spec.
	function fromJsonObject (that, object) {
	  var array
	  var length = 0
	
	  if (object.type === 'Buffer' && isArray(object.data)) {
	    array = object.data
	    length = checked(array.length) | 0
	  }
	  that = allocate(that, length)
	
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	} else {
	  // pre-set for values that may exist in the future
	  Buffer.prototype.length = undefined
	  Buffer.prototype.parent = undefined
	}
	
	function allocate (that, length) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = Buffer._augment(new Uint8Array(length))
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that.length = length
	    that._isBuffer = true
	  }
	
	  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
	  if (fromPool) that.parent = rootParent
	
	  return that
	}
	
	function checked (length) {
	  // Note: cannot use `length < kMaxLength` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (subject, encoding) {
	  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)
	
	  var buf = new Buffer(subject, encoding)
	  delete buf.parent
	  return buf
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  var i = 0
	  var len = Math.min(x, y)
	  while (i < len) {
	    if (a[i] !== b[i]) break
	
	    ++i
	  }
	
	  if (i !== len) {
	    x = a[i]
	    y = b[i]
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'binary':
	    case 'base64':
	    case 'raw':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')
	
	  if (list.length === 0) {
	    return new Buffer(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; i++) {
	      length += list[i].length
	    }
	  }
	
	  var buf = new Buffer(length)
	  var pos = 0
	  for (i = 0; i < list.length; i++) {
	    var item = list[i]
	    item.copy(buf, pos)
	    pos += item.length
	  }
	  return buf
	}
	
	function byteLength (string, encoding) {
	  if (typeof string !== 'string') string = '' + string
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'binary':
	      // Deprecated
	      case 'raw':
	      case 'raws':
	        return len
	      case 'utf8':
	      case 'utf-8':
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  start = start | 0
	  end = end === undefined || end === Infinity ? this.length : end | 0
	
	  if (!encoding) encoding = 'utf8'
	  if (start < 0) start = 0
	  if (end > this.length) end = this.length
	  if (end <= start) return ''
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'binary':
	        return binarySlice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return 0
	  return Buffer.compare(this, b)
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
	  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
	  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
	  byteOffset >>= 0
	
	  if (this.length === 0) return -1
	  if (byteOffset >= this.length) return -1
	
	  // Negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)
	
	  if (typeof val === 'string') {
	    if (val.length === 0) return -1 // special case: looking for empty string always fails
	    return String.prototype.indexOf.call(this, val, byteOffset)
	  }
	  if (Buffer.isBuffer(val)) {
	    return arrayIndexOf(this, val, byteOffset)
	  }
	  if (typeof val === 'number') {
	    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
	      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
	    }
	    return arrayIndexOf(this, [ val ], byteOffset)
	  }
	
	  function arrayIndexOf (arr, val, byteOffset) {
	    var foundIndex = -1
	    for (var i = 0; byteOffset + i < arr.length; i++) {
	      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
	      } else {
	        foundIndex = -1
	      }
	    }
	    return -1
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	// `get` is deprecated
	Buffer.prototype.get = function get (offset) {
	  console.log('.get() is deprecated. Access using array indexes instead.')
	  return this.readUInt8(offset)
	}
	
	// `set` is deprecated
	Buffer.prototype.set = function set (v, offset) {
	  console.log('.set() is deprecated. Access using array indexes instead.')
	  return this.writeUInt8(v, offset)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new Error('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; i++) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) throw new Error('Invalid hex string')
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function binaryWrite (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    var swap = encoding
	    encoding = offset
	    offset = length | 0
	    length = swap
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'binary':
	        return binaryWrite(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function binarySlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; i++) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = Buffer._augment(this.subarray(start, end))
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; i++) {
	      newBuf[i] = this[i + start]
	    }
	  }
	
	  if (newBuf.length) newBuf.parent = this.parent || this
	
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	  if (offset < 0) throw new RangeError('index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; i--) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; i++) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    target._set(this.subarray(start, start + len), targetStart)
	  }
	
	  return len
	}
	
	// fill(value, start=0, end=buffer.length)
	Buffer.prototype.fill = function fill (value, start, end) {
	  if (!value) value = 0
	  if (!start) start = 0
	  if (!end) end = this.length
	
	  if (end < start) throw new RangeError('end < start')
	
	  // Fill 0 bytes; we're done
	  if (end === start) return
	  if (this.length === 0) return
	
	  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
	  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')
	
	  var i
	  if (typeof value === 'number') {
	    for (i = start; i < end; i++) {
	      this[i] = value
	    }
	  } else {
	    var bytes = utf8ToBytes(value.toString())
	    var len = bytes.length
	    for (i = start; i < end; i++) {
	      this[i] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	/**
	 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
	 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
	 */
	Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
	  if (typeof Uint8Array !== 'undefined') {
	    if (Buffer.TYPED_ARRAY_SUPPORT) {
	      return (new Buffer(this)).buffer
	    } else {
	      var buf = new Uint8Array(this.length)
	      for (var i = 0, len = buf.length; i < len; i += 1) {
	        buf[i] = this[i]
	      }
	      return buf.buffer
	    }
	  } else {
	    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
	  }
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var BP = Buffer.prototype
	
	/**
	 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
	 */
	Buffer._augment = function _augment (arr) {
	  arr.constructor = Buffer
	  arr._isBuffer = true
	
	  // save reference to original Uint8Array set method before overwriting
	  arr._set = arr.set
	
	  // deprecated
	  arr.get = BP.get
	  arr.set = BP.set
	
	  arr.write = BP.write
	  arr.toString = BP.toString
	  arr.toLocaleString = BP.toString
	  arr.toJSON = BP.toJSON
	  arr.equals = BP.equals
	  arr.compare = BP.compare
	  arr.indexOf = BP.indexOf
	  arr.copy = BP.copy
	  arr.slice = BP.slice
	  arr.readUIntLE = BP.readUIntLE
	  arr.readUIntBE = BP.readUIntBE
	  arr.readUInt8 = BP.readUInt8
	  arr.readUInt16LE = BP.readUInt16LE
	  arr.readUInt16BE = BP.readUInt16BE
	  arr.readUInt32LE = BP.readUInt32LE
	  arr.readUInt32BE = BP.readUInt32BE
	  arr.readIntLE = BP.readIntLE
	  arr.readIntBE = BP.readIntBE
	  arr.readInt8 = BP.readInt8
	  arr.readInt16LE = BP.readInt16LE
	  arr.readInt16BE = BP.readInt16BE
	  arr.readInt32LE = BP.readInt32LE
	  arr.readInt32BE = BP.readInt32BE
	  arr.readFloatLE = BP.readFloatLE
	  arr.readFloatBE = BP.readFloatBE
	  arr.readDoubleLE = BP.readDoubleLE
	  arr.readDoubleBE = BP.readDoubleBE
	  arr.writeUInt8 = BP.writeUInt8
	  arr.writeUIntLE = BP.writeUIntLE
	  arr.writeUIntBE = BP.writeUIntBE
	  arr.writeUInt16LE = BP.writeUInt16LE
	  arr.writeUInt16BE = BP.writeUInt16BE
	  arr.writeUInt32LE = BP.writeUInt32LE
	  arr.writeUInt32BE = BP.writeUInt32BE
	  arr.writeIntLE = BP.writeIntLE
	  arr.writeIntBE = BP.writeIntBE
	  arr.writeInt8 = BP.writeInt8
	  arr.writeInt16LE = BP.writeInt16LE
	  arr.writeInt16BE = BP.writeInt16BE
	  arr.writeInt32LE = BP.writeInt32LE
	  arr.writeInt32BE = BP.writeInt32BE
	  arr.writeFloatLE = BP.writeFloatLE
	  arr.writeFloatBE = BP.writeFloatBE
	  arr.writeDoubleLE = BP.writeDoubleLE
	  arr.writeDoubleBE = BP.writeDoubleBE
	  arr.fill = BP.fill
	  arr.inspect = BP.inspect
	  arr.toArrayBuffer = BP.toArrayBuffer
	
	  return arr
	}
	
	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; i++) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; i++) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(487).Buffer, (function() { return this; }())))

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
	
	;(function (exports) {
		'use strict';
	
	  var Arr = (typeof Uint8Array !== 'undefined')
	    ? Uint8Array
	    : Array
	
		var PLUS   = '+'.charCodeAt(0)
		var SLASH  = '/'.charCodeAt(0)
		var NUMBER = '0'.charCodeAt(0)
		var LOWER  = 'a'.charCodeAt(0)
		var UPPER  = 'A'.charCodeAt(0)
		var PLUS_URL_SAFE = '-'.charCodeAt(0)
		var SLASH_URL_SAFE = '_'.charCodeAt(0)
	
		function decode (elt) {
			var code = elt.charCodeAt(0)
			if (code === PLUS ||
			    code === PLUS_URL_SAFE)
				return 62 // '+'
			if (code === SLASH ||
			    code === SLASH_URL_SAFE)
				return 63 // '/'
			if (code < NUMBER)
				return -1 //no match
			if (code < NUMBER + 10)
				return code - NUMBER + 26 + 26
			if (code < UPPER + 26)
				return code - UPPER
			if (code < LOWER + 26)
				return code - LOWER + 26
		}
	
		function b64ToByteArray (b64) {
			var i, j, l, tmp, placeHolders, arr
	
			if (b64.length % 4 > 0) {
				throw new Error('Invalid string. Length must be a multiple of 4')
			}
	
			// the number of equal signs (place holders)
			// if there are two placeholders, than the two characters before it
			// represent one byte
			// if there is only one, then the three characters before it represent 2 bytes
			// this is just a cheap hack to not do indexOf twice
			var len = b64.length
			placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0
	
			// base64 is 4/3 + up to two characters of the original data
			arr = new Arr(b64.length * 3 / 4 - placeHolders)
	
			// if there are placeholders, only get up to the last complete 4 chars
			l = placeHolders > 0 ? b64.length - 4 : b64.length
	
			var L = 0
	
			function push (v) {
				arr[L++] = v
			}
	
			for (i = 0, j = 0; i < l; i += 4, j += 3) {
				tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
				push((tmp & 0xFF0000) >> 16)
				push((tmp & 0xFF00) >> 8)
				push(tmp & 0xFF)
			}
	
			if (placeHolders === 2) {
				tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
				push(tmp & 0xFF)
			} else if (placeHolders === 1) {
				tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
				push((tmp >> 8) & 0xFF)
				push(tmp & 0xFF)
			}
	
			return arr
		}
	
		function uint8ToBase64 (uint8) {
			var i,
				extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
				output = "",
				temp, length
	
			function encode (num) {
				return lookup.charAt(num)
			}
	
			function tripletToBase64 (num) {
				return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
			}
	
			// go through the array every three bytes, we'll deal with trailing stuff later
			for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
				temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
				output += tripletToBase64(temp)
			}
	
			// pad the end with zeros, but make sure to not forget the extra bytes
			switch (extraBytes) {
				case 1:
					temp = uint8[uint8.length - 1]
					output += encode(temp >> 2)
					output += encode((temp << 4) & 0x3F)
					output += '=='
					break
				case 2:
					temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
					output += encode(temp >> 10)
					output += encode((temp >> 4) & 0x3F)
					output += encode((temp << 2) & 0x3F)
					output += '='
					break
			}
	
			return output
		}
	
		exports.toByteArray = b64ToByteArray
		exports.fromByteArray = uint8ToBase64
	}( false ? (this.base64js = {}) : exports))


/***/ },
/* 489 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 490 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	var _hasOwnProperty = Object.prototype.hasOwnProperty;
	var _toString       = Object.prototype.toString;
	
	function resolveYamlOmap(data) {
	  if (data === null) return true;
	
	  var objectKeys = [], index, length, pair, pairKey, pairHasKey,
	      object = data;
	
	  for (index = 0, length = object.length; index < length; index += 1) {
	    pair = object[index];
	    pairHasKey = false;
	
	    if (_toString.call(pair) !== '[object Object]') return false;
	
	    for (pairKey in pair) {
	      if (_hasOwnProperty.call(pair, pairKey)) {
	        if (!pairHasKey) pairHasKey = true;
	        else return false;
	      }
	    }
	
	    if (!pairHasKey) return false;
	
	    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);
	    else return false;
	  }
	
	  return true;
	}
	
	function constructYamlOmap(data) {
	  return data !== null ? data : [];
	}
	
	module.exports = new Type('tag:yaml.org,2002:omap', {
	  kind: 'sequence',
	  resolve: resolveYamlOmap,
	  construct: constructYamlOmap
	});


/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	var _toString = Object.prototype.toString;
	
	function resolveYamlPairs(data) {
	  if (data === null) return true;
	
	  var index, length, pair, keys, result,
	      object = data;
	
	  result = new Array(object.length);
	
	  for (index = 0, length = object.length; index < length; index += 1) {
	    pair = object[index];
	
	    if (_toString.call(pair) !== '[object Object]') return false;
	
	    keys = Object.keys(pair);
	
	    if (keys.length !== 1) return false;
	
	    result[index] = [ keys[0], pair[keys[0]] ];
	  }
	
	  return true;
	}
	
	function constructYamlPairs(data) {
	  if (data === null) return [];
	
	  var index, length, pair, keys, result,
	      object = data;
	
	  result = new Array(object.length);
	
	  for (index = 0, length = object.length; index < length; index += 1) {
	    pair = object[index];
	
	    keys = Object.keys(pair);
	
	    result[index] = [ keys[0], pair[keys[0]] ];
	  }
	
	  return result;
	}
	
	module.exports = new Type('tag:yaml.org,2002:pairs', {
	  kind: 'sequence',
	  resolve: resolveYamlPairs,
	  construct: constructYamlPairs
	});


/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	var _hasOwnProperty = Object.prototype.hasOwnProperty;
	
	function resolveYamlSet(data) {
	  if (data === null) return true;
	
	  var key, object = data;
	
	  for (key in object) {
	    if (_hasOwnProperty.call(object, key)) {
	      if (object[key] !== null) return false;
	    }
	  }
	
	  return true;
	}
	
	function constructYamlSet(data) {
	  return data !== null ? data : {};
	}
	
	module.exports = new Type('tag:yaml.org,2002:set', {
	  kind: 'mapping',
	  resolve: resolveYamlSet,
	  construct: constructYamlSet
	});


/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	// JS-YAML's default schema for `load` function.
	// It is not described in the YAML specification.
	//
	// This schema is based on JS-YAML's default safe schema and includes
	// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.
	//
	// Also this schema is used as default base schema at `Schema.create` function.
	
	
	'use strict';
	
	
	var Schema = __webpack_require__(472);
	
	
	module.exports = Schema.DEFAULT = new Schema({
	  include: [
	    __webpack_require__(471)
	  ],
	  explicit: [
	    __webpack_require__(495),
	    __webpack_require__(496),
	    __webpack_require__(497)
	  ]
	});


/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	function resolveJavascriptUndefined() {
	  return true;
	}
	
	function constructJavascriptUndefined() {
	  /*eslint-disable no-undefined*/
	  return undefined;
	}
	
	function representJavascriptUndefined() {
	  return '';
	}
	
	function isUndefined(object) {
	  return typeof object === 'undefined';
	}
	
	module.exports = new Type('tag:yaml.org,2002:js/undefined', {
	  kind: 'scalar',
	  resolve: resolveJavascriptUndefined,
	  construct: constructJavascriptUndefined,
	  predicate: isUndefined,
	  represent: representJavascriptUndefined
	});


/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Type = __webpack_require__(473);
	
	function resolveJavascriptRegExp(data) {
	  if (data === null) return false;
	  if (data.length === 0) return false;
	
	  var regexp = data,
	      tail   = /\/([gim]*)$/.exec(data),
	      modifiers = '';
	
	  // if regexp starts with '/' it can have modifiers and must be properly closed
	  // `/foo/gim` - modifiers tail can be maximum 3 chars
	  if (regexp[0] === '/') {
	    if (tail) modifiers = tail[1];
	
	    if (modifiers.length > 3) return false;
	    // if expression starts with /, is should be properly terminated
	    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;
	  }
	
	  return true;
	}
	
	function constructJavascriptRegExp(data) {
	  var regexp = data,
	      tail   = /\/([gim]*)$/.exec(data),
	      modifiers = '';
	
	  // `/foo/gim` - tail can be maximum 4 chars
	  if (regexp[0] === '/') {
	    if (tail) modifiers = tail[1];
	    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);
	  }
	
	  return new RegExp(regexp, modifiers);
	}
	
	function representJavascriptRegExp(object /*, style*/) {
	  var result = '/' + object.source + '/';
	
	  if (object.global) result += 'g';
	  if (object.multiline) result += 'm';
	  if (object.ignoreCase) result += 'i';
	
	  return result;
	}
	
	function isRegExp(object) {
	  return Object.prototype.toString.call(object) === '[object RegExp]';
	}
	
	module.exports = new Type('tag:yaml.org,2002:js/regexp', {
	  kind: 'scalar',
	  resolve: resolveJavascriptRegExp,
	  construct: constructJavascriptRegExp,
	  predicate: isRegExp,
	  represent: representJavascriptRegExp
	});


/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	var require;'use strict';
	
	var esprima;
	
	// Browserified version does not have esprima
	//
	// 1. For node.js just require module as deps
	// 2. For browser try to require mudule via external AMD system.
	//    If not found - try to fallback to window.esprima. If not
	//    found too - then fail to parse.
	//
	try {
	  // workaround to exclude package from browserify list.
	  var _require = require;
	  esprima = __webpack_require__(498);
	} catch (_) {
	  /*global window */
	  if (typeof window !== 'undefined') esprima = window.esprima;
	}
	
	var Type = __webpack_require__(473);
	
	function resolveJavascriptFunction(data) {
	  if (data === null) return false;
	
	  try {
	    var source = '(' + data + ')',
	        ast    = esprima.parse(source, { range: true });
	
	    if (ast.type                    !== 'Program'             ||
	        ast.body.length             !== 1                     ||
	        ast.body[0].type            !== 'ExpressionStatement' ||
	        ast.body[0].expression.type !== 'FunctionExpression') {
	      return false;
	    }
	
	    return true;
	  } catch (err) {
	    return false;
	  }
	}
	
	function constructJavascriptFunction(data) {
	  /*jslint evil:true*/
	
	  var source = '(' + data + ')',
	      ast    = esprima.parse(source, { range: true }),
	      params = [],
	      body;
	
	  if (ast.type                    !== 'Program'             ||
	      ast.body.length             !== 1                     ||
	      ast.body[0].type            !== 'ExpressionStatement' ||
	      ast.body[0].expression.type !== 'FunctionExpression') {
	    throw new Error('Failed to resolve function');
	  }
	
	  ast.body[0].expression.params.forEach(function (param) {
	    params.push(param.name);
	  });
	
	  body = ast.body[0].expression.body.range;
	
	  // Esprima's ranges include the first '{' and the last '}' characters on
	  // function expressions. So cut them out.
	  /*eslint-disable no-new-func*/
	  return new Function(params, source.slice(body[0] + 1, body[1] - 1));
	}
	
	function representJavascriptFunction(object /*, style*/) {
	  return object.toString();
	}
	
	function isFunction(object) {
	  return Object.prototype.toString.call(object) === '[object Function]';
	}
	
	module.exports = new Type('tag:yaml.org,2002:js/function', {
	  kind: 'scalar',
	  resolve: resolveJavascriptFunction,
	  construct: constructJavascriptFunction,
	  predicate: isFunction,
	  represent: representJavascriptFunction
	});


/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
	  Copyright (c) jQuery Foundation, Inc. and Contributors, All Rights Reserved.
	
	  Redistribution and use in source and binary forms, with or without
	  modification, are permitted provided that the following conditions are met:
	
	    * Redistributions of source code must retain the above copyright
	      notice, this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright
	      notice, this list of conditions and the following disclaimer in the
	      documentation and/or other materials provided with the distribution.
	
	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
	  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
	  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	
	(function (root, factory) {
	    'use strict';
	
	    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,
	    // Rhino, and plain browser loading.
	
	    /* istanbul ignore next */
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports !== 'undefined') {
	        factory(exports);
	    } else {
	        factory((root.esprima = {}));
	    }
	}(this, function (exports) {
	    'use strict';
	
	    var Token,
	        TokenName,
	        FnExprTokens,
	        Syntax,
	        PlaceHolders,
	        Messages,
	        Regex,
	        source,
	        strict,
	        index,
	        lineNumber,
	        lineStart,
	        hasLineTerminator,
	        lastIndex,
	        lastLineNumber,
	        lastLineStart,
	        startIndex,
	        startLineNumber,
	        startLineStart,
	        scanning,
	        length,
	        lookahead,
	        state,
	        extra,
	        isBindingElement,
	        isAssignmentTarget,
	        firstCoverInitializedNameError;
	
	    Token = {
	        BooleanLiteral: 1,
	        EOF: 2,
	        Identifier: 3,
	        Keyword: 4,
	        NullLiteral: 5,
	        NumericLiteral: 6,
	        Punctuator: 7,
	        StringLiteral: 8,
	        RegularExpression: 9,
	        Template: 10
	    };
	
	    TokenName = {};
	    TokenName[Token.BooleanLiteral] = 'Boolean';
	    TokenName[Token.EOF] = '<end>';
	    TokenName[Token.Identifier] = 'Identifier';
	    TokenName[Token.Keyword] = 'Keyword';
	    TokenName[Token.NullLiteral] = 'Null';
	    TokenName[Token.NumericLiteral] = 'Numeric';
	    TokenName[Token.Punctuator] = 'Punctuator';
	    TokenName[Token.StringLiteral] = 'String';
	    TokenName[Token.RegularExpression] = 'RegularExpression';
	    TokenName[Token.Template] = 'Template';
	
	    // A function following one of those tokens is an expression.
	    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',
	                    'return', 'case', 'delete', 'throw', 'void',
	                    // assignment operators
	                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',
	                    '&=', '|=', '^=', ',',
	                    // binary/unary operators
	                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',
	                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',
	                    '<=', '<', '>', '!=', '!=='];
	
	    Syntax = {
	        AssignmentExpression: 'AssignmentExpression',
	        AssignmentPattern: 'AssignmentPattern',
	        ArrayExpression: 'ArrayExpression',
	        ArrayPattern: 'ArrayPattern',
	        ArrowFunctionExpression: 'ArrowFunctionExpression',
	        BlockStatement: 'BlockStatement',
	        BinaryExpression: 'BinaryExpression',
	        BreakStatement: 'BreakStatement',
	        CallExpression: 'CallExpression',
	        CatchClause: 'CatchClause',
	        ClassBody: 'ClassBody',
	        ClassDeclaration: 'ClassDeclaration',
	        ClassExpression: 'ClassExpression',
	        ConditionalExpression: 'ConditionalExpression',
	        ContinueStatement: 'ContinueStatement',
	        DoWhileStatement: 'DoWhileStatement',
	        DebuggerStatement: 'DebuggerStatement',
	        EmptyStatement: 'EmptyStatement',
	        ExportAllDeclaration: 'ExportAllDeclaration',
	        ExportDefaultDeclaration: 'ExportDefaultDeclaration',
	        ExportNamedDeclaration: 'ExportNamedDeclaration',
	        ExportSpecifier: 'ExportSpecifier',
	        ExpressionStatement: 'ExpressionStatement',
	        ForStatement: 'ForStatement',
	        ForOfStatement: 'ForOfStatement',
	        ForInStatement: 'ForInStatement',
	        FunctionDeclaration: 'FunctionDeclaration',
	        FunctionExpression: 'FunctionExpression',
	        Identifier: 'Identifier',
	        IfStatement: 'IfStatement',
	        ImportDeclaration: 'ImportDeclaration',
	        ImportDefaultSpecifier: 'ImportDefaultSpecifier',
	        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
	        ImportSpecifier: 'ImportSpecifier',
	        Literal: 'Literal',
	        LabeledStatement: 'LabeledStatement',
	        LogicalExpression: 'LogicalExpression',
	        MemberExpression: 'MemberExpression',
	        MetaProperty: 'MetaProperty',
	        MethodDefinition: 'MethodDefinition',
	        NewExpression: 'NewExpression',
	        ObjectExpression: 'ObjectExpression',
	        ObjectPattern: 'ObjectPattern',
	        Program: 'Program',
	        Property: 'Property',
	        RestElement: 'RestElement',
	        ReturnStatement: 'ReturnStatement',
	        SequenceExpression: 'SequenceExpression',
	        SpreadElement: 'SpreadElement',
	        Super: 'Super',
	        SwitchCase: 'SwitchCase',
	        SwitchStatement: 'SwitchStatement',
	        TaggedTemplateExpression: 'TaggedTemplateExpression',
	        TemplateElement: 'TemplateElement',
	        TemplateLiteral: 'TemplateLiteral',
	        ThisExpression: 'ThisExpression',
	        ThrowStatement: 'ThrowStatement',
	        TryStatement: 'TryStatement',
	        UnaryExpression: 'UnaryExpression',
	        UpdateExpression: 'UpdateExpression',
	        VariableDeclaration: 'VariableDeclaration',
	        VariableDeclarator: 'VariableDeclarator',
	        WhileStatement: 'WhileStatement',
	        WithStatement: 'WithStatement',
	        YieldExpression: 'YieldExpression'
	    };
	
	    PlaceHolders = {
	        ArrowParameterPlaceHolder: 'ArrowParameterPlaceHolder'
	    };
	
	    // Error messages should be identical to V8.
	    Messages = {
	        UnexpectedToken: 'Unexpected token %0',
	        UnexpectedNumber: 'Unexpected number',
	        UnexpectedString: 'Unexpected string',
	        UnexpectedIdentifier: 'Unexpected identifier',
	        UnexpectedReserved: 'Unexpected reserved word',
	        UnexpectedTemplate: 'Unexpected quasi %0',
	        UnexpectedEOS: 'Unexpected end of input',
	        NewlineAfterThrow: 'Illegal newline after throw',
	        InvalidRegExp: 'Invalid regular expression',
	        UnterminatedRegExp: 'Invalid regular expression: missing /',
	        InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
	        InvalidLHSInForIn: 'Invalid left-hand side in for-in',
	        InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
	        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
	        NoCatchOrFinally: 'Missing catch or finally after try',
	        UnknownLabel: 'Undefined label \'%0\'',
	        Redeclaration: '%0 \'%1\' has already been declared',
	        IllegalContinue: 'Illegal continue statement',
	        IllegalBreak: 'Illegal break statement',
	        IllegalReturn: 'Illegal return statement',
	        StrictModeWith: 'Strict mode code may not include a with statement',
	        StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',
	        StrictVarName: 'Variable name may not be eval or arguments in strict mode',
	        StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',
	        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
	        StrictFunctionName: 'Function name may not be eval or arguments in strict mode',
	        StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',
	        StrictDelete: 'Delete of an unqualified identifier in strict mode.',
	        StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',
	        StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',
	        StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',
	        StrictReservedWord: 'Use of future reserved word in strict mode',
	        TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',
	        ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',
	        DefaultRestParameter: 'Unexpected token =',
	        ObjectPatternAsRestParameter: 'Unexpected token {',
	        DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',
	        ConstructorSpecialMethod: 'Class constructor may not be an accessor',
	        DuplicateConstructor: 'A class may only have one constructor',
	        StaticPrototype: 'Classes may not have static property named prototype',
	        MissingFromClause: 'Unexpected token',
	        NoAsAfterImportNamespace: 'Unexpected token',
	        InvalidModuleSpecifier: 'Unexpected token',
	        IllegalImportDeclaration: 'Unexpected token',
	        IllegalExportDeclaration: 'Unexpected token',
	        DuplicateBinding: 'Duplicate binding %0'
	    };
	
	    // See also tools/generate-unicode-regex.js.
	    Regex = {
	        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:
	        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
	
	        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:
	        NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
	    };
	
	    // Ensure the condition is true, otherwise throw an error.
	    // This is only to have a better contract semantic, i.e. another safety net
	    // to catch a logic error. The condition shall be fulfilled in normal case.
	    // Do NOT use this to enforce a certain condition on any user input.
	
	    function assert(condition, message) {
	        /* istanbul ignore if */
	        if (!condition) {
	            throw new Error('ASSERT: ' + message);
	        }
	    }
	
	    function isDecimalDigit(ch) {
	        return (ch >= 0x30 && ch <= 0x39);   // 0..9
	    }
	
	    function isHexDigit(ch) {
	        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;
	    }
	
	    function isOctalDigit(ch) {
	        return '01234567'.indexOf(ch) >= 0;
	    }
	
	    function octalToDecimal(ch) {
	        // \0 is not octal escape sequence
	        var octal = (ch !== '0'), code = '01234567'.indexOf(ch);
	
	        if (index < length && isOctalDigit(source[index])) {
	            octal = true;
	            code = code * 8 + '01234567'.indexOf(source[index++]);
	
	            // 3 digits are only allowed when string starts
	            // with 0, 1, 2, 3
	            if ('0123'.indexOf(ch) >= 0 &&
	                    index < length &&
	                    isOctalDigit(source[index])) {
	                code = code * 8 + '01234567'.indexOf(source[index++]);
	            }
	        }
	
	        return {
	            code: code,
	            octal: octal
	        };
	    }
	
	    // ECMA-262 11.2 White Space
	
	    function isWhiteSpace(ch) {
	        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||
	            (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);
	    }
	
	    // ECMA-262 11.3 Line Terminators
	
	    function isLineTerminator(ch) {
	        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);
	    }
	
	    // ECMA-262 11.6 Identifier Names and Identifiers
	
	    function fromCodePoint(cp) {
	        return (cp < 0x10000) ? String.fromCharCode(cp) :
	            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +
	            String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));
	    }
	
	    function isIdentifierStart(ch) {
	        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)
	            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z
	            (ch >= 0x61 && ch <= 0x7A) ||         // a..z
	            (ch === 0x5C) ||                      // \ (backslash)
	            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch)));
	    }
	
	    function isIdentifierPart(ch) {
	        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)
	            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z
	            (ch >= 0x61 && ch <= 0x7A) ||         // a..z
	            (ch >= 0x30 && ch <= 0x39) ||         // 0..9
	            (ch === 0x5C) ||                      // \ (backslash)
	            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch)));
	    }
	
	    // ECMA-262 11.6.2.2 Future Reserved Words
	
	    function isFutureReservedWord(id) {
	        switch (id) {
	        case 'enum':
	        case 'export':
	        case 'import':
	        case 'super':
	            return true;
	        default:
	            return false;
	        }
	    }
	
	    function isStrictModeReservedWord(id) {
	        switch (id) {
	        case 'implements':
	        case 'interface':
	        case 'package':
	        case 'private':
	        case 'protected':
	        case 'public':
	        case 'static':
	        case 'yield':
	        case 'let':
	            return true;
	        default:
	            return false;
	        }
	    }
	
	    function isRestrictedWord(id) {
	        return id === 'eval' || id === 'arguments';
	    }
	
	    // ECMA-262 11.6.2.1 Keywords
	
	    function isKeyword(id) {
	        switch (id.length) {
	        case 2:
	            return (id === 'if') || (id === 'in') || (id === 'do');
	        case 3:
	            return (id === 'var') || (id === 'for') || (id === 'new') ||
	                (id === 'try') || (id === 'let');
	        case 4:
	            return (id === 'this') || (id === 'else') || (id === 'case') ||
	                (id === 'void') || (id === 'with') || (id === 'enum');
	        case 5:
	            return (id === 'while') || (id === 'break') || (id === 'catch') ||
	                (id === 'throw') || (id === 'const') || (id === 'yield') ||
	                (id === 'class') || (id === 'super');
	        case 6:
	            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
	                (id === 'switch') || (id === 'export') || (id === 'import');
	        case 7:
	            return (id === 'default') || (id === 'finally') || (id === 'extends');
	        case 8:
	            return (id === 'function') || (id === 'continue') || (id === 'debugger');
	        case 10:
	            return (id === 'instanceof');
	        default:
	            return false;
	        }
	    }
	
	    // ECMA-262 11.4 Comments
	
	    function addComment(type, value, start, end, loc) {
	        var comment;
	
	        assert(typeof start === 'number', 'Comment must have valid position');
	
	        state.lastCommentStart = start;
	
	        comment = {
	            type: type,
	            value: value
	        };
	        if (extra.range) {
	            comment.range = [start, end];
	        }
	        if (extra.loc) {
	            comment.loc = loc;
	        }
	        extra.comments.push(comment);
	        if (extra.attachComment) {
	            extra.leadingComments.push(comment);
	            extra.trailingComments.push(comment);
	        }
	        if (extra.tokenize) {
	            comment.type = comment.type + 'Comment';
	            if (extra.delegate) {
	                comment = extra.delegate(comment);
	            }
	            extra.tokens.push(comment);
	        }
	    }
	
	    function skipSingleLineComment(offset) {
	        var start, loc, ch, comment;
	
	        start = index - offset;
	        loc = {
	            start: {
	                line: lineNumber,
	                column: index - lineStart - offset
	            }
	        };
	
	        while (index < length) {
	            ch = source.charCodeAt(index);
	            ++index;
	            if (isLineTerminator(ch)) {
	                hasLineTerminator = true;
	                if (extra.comments) {
	                    comment = source.slice(start + offset, index - 1);
	                    loc.end = {
	                        line: lineNumber,
	                        column: index - lineStart - 1
	                    };
	                    addComment('Line', comment, start, index - 1, loc);
	                }
	                if (ch === 13 && source.charCodeAt(index) === 10) {
	                    ++index;
	                }
	                ++lineNumber;
	                lineStart = index;
	                return;
	            }
	        }
	
	        if (extra.comments) {
	            comment = source.slice(start + offset, index);
	            loc.end = {
	                line: lineNumber,
	                column: index - lineStart
	            };
	            addComment('Line', comment, start, index, loc);
	        }
	    }
	
	    function skipMultiLineComment() {
	        var start, loc, ch, comment;
	
	        if (extra.comments) {
	            start = index - 2;
	            loc = {
	                start: {
	                    line: lineNumber,
	                    column: index - lineStart - 2
	                }
	            };
	        }
	
	        while (index < length) {
	            ch = source.charCodeAt(index);
	            if (isLineTerminator(ch)) {
	                if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {
	                    ++index;
	                }
	                hasLineTerminator = true;
	                ++lineNumber;
	                ++index;
	                lineStart = index;
	            } else if (ch === 0x2A) {
	                // Block comment ends with '*/'.
	                if (source.charCodeAt(index + 1) === 0x2F) {
	                    ++index;
	                    ++index;
	                    if (extra.comments) {
	                        comment = source.slice(start + 2, index - 2);
	                        loc.end = {
	                            line: lineNumber,
	                            column: index - lineStart
	                        };
	                        addComment('Block', comment, start, index, loc);
	                    }
	                    return;
	                }
	                ++index;
	            } else {
	                ++index;
	            }
	        }
	
	        // Ran off the end of the file - the whole thing is a comment
	        if (extra.comments) {
	            loc.end = {
	                line: lineNumber,
	                column: index - lineStart
	            };
	            comment = source.slice(start + 2, index);
	            addComment('Block', comment, start, index, loc);
	        }
	        tolerateUnexpectedToken();
	    }
	
	    function skipComment() {
	        var ch, start;
	        hasLineTerminator = false;
	
	        start = (index === 0);
	        while (index < length) {
	            ch = source.charCodeAt(index);
	
	            if (isWhiteSpace(ch)) {
	                ++index;
	            } else if (isLineTerminator(ch)) {
	                hasLineTerminator = true;
	                ++index;
	                if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {
	                    ++index;
	                }
	                ++lineNumber;
	                lineStart = index;
	                start = true;
	            } else if (ch === 0x2F) { // U+002F is '/'
	                ch = source.charCodeAt(index + 1);
	                if (ch === 0x2F) {
	                    ++index;
	                    ++index;
	                    skipSingleLineComment(2);
	                    start = true;
	                } else if (ch === 0x2A) {  // U+002A is '*'
	                    ++index;
	                    ++index;
	                    skipMultiLineComment();
	                } else {
	                    break;
	                }
	            } else if (start && ch === 0x2D) { // U+002D is '-'
	                // U+003E is '>'
	                if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {
	                    // '-->' is a single-line comment
	                    index += 3;
	                    skipSingleLineComment(3);
	                } else {
	                    break;
	                }
	            } else if (ch === 0x3C) { // U+003C is '<'
	                if (source.slice(index + 1, index + 4) === '!--') {
	                    ++index; // `<`
	                    ++index; // `!`
	                    ++index; // `-`
	                    ++index; // `-`
	                    skipSingleLineComment(4);
	                } else {
	                    break;
	                }
	            } else {
	                break;
	            }
	        }
	    }
	
	    function scanHexEscape(prefix) {
	        var i, len, ch, code = 0;
	
	        len = (prefix === 'u') ? 4 : 2;
	        for (i = 0; i < len; ++i) {
	            if (index < length && isHexDigit(source[index])) {
	                ch = source[index++];
	                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
	            } else {
	                return '';
	            }
	        }
	        return String.fromCharCode(code);
	    }
	
	    function scanUnicodeCodePointEscape() {
	        var ch, code;
	
	        ch = source[index];
	        code = 0;
	
	        // At least, one hex digit is required.
	        if (ch === '}') {
	            throwUnexpectedToken();
	        }
	
	        while (index < length) {
	            ch = source[index++];
	            if (!isHexDigit(ch)) {
	                break;
	            }
	            code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
	        }
	
	        if (code > 0x10FFFF || ch !== '}') {
	            throwUnexpectedToken();
	        }
	
	        return fromCodePoint(code);
	    }
	
	    function codePointAt(i) {
	        var cp, first, second;
	
	        cp = source.charCodeAt(i);
	        if (cp >= 0xD800 && cp <= 0xDBFF) {
	            second = source.charCodeAt(i + 1);
	            if (second >= 0xDC00 && second <= 0xDFFF) {
	                first = cp;
	                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	            }
	        }
	
	        return cp;
	    }
	
	    function getComplexIdentifier() {
	        var cp, ch, id;
	
	        cp = codePointAt(index);
	        id = fromCodePoint(cp);
	        index += id.length;
	
	        // '\u' (U+005C, U+0075) denotes an escaped character.
	        if (cp === 0x5C) {
	            if (source.charCodeAt(index) !== 0x75) {
	                throwUnexpectedToken();
	            }
	            ++index;
	            if (source[index] === '{') {
	                ++index;
	                ch = scanUnicodeCodePointEscape();
	            } else {
	                ch = scanHexEscape('u');
	                cp = ch.charCodeAt(0);
	                if (!ch || ch === '\\' || !isIdentifierStart(cp)) {
	                    throwUnexpectedToken();
	                }
	            }
	            id = ch;
	        }
	
	        while (index < length) {
	            cp = codePointAt(index);
	            if (!isIdentifierPart(cp)) {
	                break;
	            }
	            ch = fromCodePoint(cp);
	            id += ch;
	            index += ch.length;
	
	            // '\u' (U+005C, U+0075) denotes an escaped character.
	            if (cp === 0x5C) {
	                id = id.substr(0, id.length - 1);
	                if (source.charCodeAt(index) !== 0x75) {
	                    throwUnexpectedToken();
	                }
	                ++index;
	                if (source[index] === '{') {
	                    ++index;
	                    ch = scanUnicodeCodePointEscape();
	                } else {
	                    ch = scanHexEscape('u');
	                    cp = ch.charCodeAt(0);
	                    if (!ch || ch === '\\' || !isIdentifierPart(cp)) {
	                        throwUnexpectedToken();
	                    }
	                }
	                id += ch;
	            }
	        }
	
	        return id;
	    }
	
	    function getIdentifier() {
	        var start, ch;
	
	        start = index++;
	        while (index < length) {
	            ch = source.charCodeAt(index);
	            if (ch === 0x5C) {
	                // Blackslash (U+005C) marks Unicode escape sequence.
	                index = start;
	                return getComplexIdentifier();
	            } else if (ch >= 0xD800 && ch < 0xDFFF) {
	                // Need to handle surrogate pairs.
	                index = start;
	                return getComplexIdentifier();
	            }
	            if (isIdentifierPart(ch)) {
	                ++index;
	            } else {
	                break;
	            }
	        }
	
	        return source.slice(start, index);
	    }
	
	    function scanIdentifier() {
	        var start, id, type;
	
	        start = index;
	
	        // Backslash (U+005C) starts an escaped character.
	        id = (source.charCodeAt(index) === 0x5C) ? getComplexIdentifier() : getIdentifier();
	
	        // There is no keyword or literal with only one character.
	        // Thus, it must be an identifier.
	        if (id.length === 1) {
	            type = Token.Identifier;
	        } else if (isKeyword(id)) {
	            type = Token.Keyword;
	        } else if (id === 'null') {
	            type = Token.NullLiteral;
	        } else if (id === 'true' || id === 'false') {
	            type = Token.BooleanLiteral;
	        } else {
	            type = Token.Identifier;
	        }
	
	        return {
	            type: type,
	            value: id,
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }
	
	
	    // ECMA-262 11.7 Punctuators
	
	    function scanPunctuator() {
	        var token, str;
	
	        token = {
	            type: Token.Punctuator,
	            value: '',
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: index,
	            end: index
	        };
	
	        // Check for most common single-character punctuators.
	        str = source[index];
	        switch (str) {
	
	        case '(':
	            if (extra.tokenize) {
	                extra.openParenToken = extra.tokenValues.length;
	            }
	            ++index;
	            break;
	
	        case '{':
	            if (extra.tokenize) {
	                extra.openCurlyToken = extra.tokenValues.length;
	            }
	            state.curlyStack.push('{');
	            ++index;
	            break;
	
	        case '.':
	            ++index;
	            if (source[index] === '.' && source[index + 1] === '.') {
	                // Spread operator: ...
	                index += 2;
	                str = '...';
	            }
	            break;
	
	        case '}':
	            ++index;
	            state.curlyStack.pop();
	            break;
	        case ')':
	        case ';':
	        case ',':
	        case '[':
	        case ']':
	        case ':':
	        case '?':
	        case '~':
	            ++index;
	            break;
	
	        default:
	            // 4-character punctuator.
	            str = source.substr(index, 4);
	            if (str === '>>>=') {
	                index += 4;
	            } else {
	
	                // 3-character punctuators.
	                str = str.substr(0, 3);
	                if (str === '===' || str === '!==' || str === '>>>' ||
	                    str === '<<=' || str === '>>=') {
	                    index += 3;
	                } else {
	
	                    // 2-character punctuators.
	                    str = str.substr(0, 2);
	                    if (str === '&&' || str === '||' || str === '==' || str === '!=' ||
	                        str === '+=' || str === '-=' || str === '*=' || str === '/=' ||
	                        str === '++' || str === '--' || str === '<<' || str === '>>' ||
	                        str === '&=' || str === '|=' || str === '^=' || str === '%=' ||
	                        str === '<=' || str === '>=' || str === '=>') {
	                        index += 2;
	                    } else {
	
	                        // 1-character punctuators.
	                        str = source[index];
	                        if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {
	                            ++index;
	                        }
	                    }
	                }
	            }
	        }
	
	        if (index === token.start) {
	            throwUnexpectedToken();
	        }
	
	        token.end = index;
	        token.value = str;
	        return token;
	    }
	
	    // ECMA-262 11.8.3 Numeric Literals
	
	    function scanHexLiteral(start) {
	        var number = '';
	
	        while (index < length) {
	            if (!isHexDigit(source[index])) {
	                break;
	            }
	            number += source[index++];
	        }
	
	        if (number.length === 0) {
	            throwUnexpectedToken();
	        }
	
	        if (isIdentifierStart(source.charCodeAt(index))) {
	            throwUnexpectedToken();
	        }
	
	        return {
	            type: Token.NumericLiteral,
	            value: parseInt('0x' + number, 16),
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }
	
	    function scanBinaryLiteral(start) {
	        var ch, number;
	
	        number = '';
	
	        while (index < length) {
	            ch = source[index];
	            if (ch !== '0' && ch !== '1') {
	                break;
	            }
	            number += source[index++];
	        }
	
	        if (number.length === 0) {
	            // only 0b or 0B
	            throwUnexpectedToken();
	        }
	
	        if (index < length) {
	            ch = source.charCodeAt(index);
	            /* istanbul ignore else */
	            if (isIdentifierStart(ch) || isDecimalDigit(ch)) {
	                throwUnexpectedToken();
	            }
	        }
	
	        return {
	            type: Token.NumericLiteral,
	            value: parseInt(number, 2),
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }
	
	    function scanOctalLiteral(prefix, start) {
	        var number, octal;
	
	        if (isOctalDigit(prefix)) {
	            octal = true;
	            number = '0' + source[index++];
	        } else {
	            octal = false;
	            ++index;
	            number = '';
	        }
	
	        while (index < length) {
	            if (!isOctalDigit(source[index])) {
	                break;
	            }
	            number += source[index++];
	        }
	
	        if (!octal && number.length === 0) {
	            // only 0o or 0O
	            throwUnexpectedToken();
	        }
	
	        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {
	            throwUnexpectedToken();
	        }
	
	        return {
	            type: Token.NumericLiteral,
	            value: parseInt(number, 8),
	            octal: octal,
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }
	
	    function isImplicitOctalLiteral() {
	        var i, ch;
	
	        // Implicit octal, unless there is a non-octal digit.
	        // (Annex B.1.1 on Numeric Literals)
	        for (i = index + 1; i < length; ++i) {
	            ch = source[i];
	            if (ch === '8' || ch === '9') {
	                return false;
	            }
	            if (!isOctalDigit(ch)) {
	                return true;
	            }
	        }
	
	        return true;
	    }
	
	    function scanNumericLiteral() {
	        var number, start, ch;
	
	        ch = source[index];
	        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),
	            'Numeric literal must start with a decimal digit or a decimal point');
	
	        start = index;
	        number = '';
	        if (ch !== '.') {
	            number = source[index++];
	            ch = source[index];
	
	            // Hex number starts with '0x'.
	            // Octal number starts with '0'.
	            // Octal number in ES6 starts with '0o'.
	            // Binary number in ES6 starts with '0b'.
	            if (number === '0') {
	                if (ch === 'x' || ch === 'X') {
	                    ++index;
	                    return scanHexLiteral(start);
	                }
	                if (ch === 'b' || ch === 'B') {
	                    ++index;
	                    return scanBinaryLiteral(start);
	                }
	                if (ch === 'o' || ch === 'O') {
	                    return scanOctalLiteral(ch, start);
	                }
	
	                if (isOctalDigit(ch)) {
	                    if (isImplicitOctalLiteral()) {
	                        return scanOctalLiteral(ch, start);
	                    }
	                }
	            }
	
	            while (isDecimalDigit(source.charCodeAt(index))) {
	                number += source[index++];
	            }
	            ch = source[index];
	        }
	
	        if (ch === '.') {
	            number += source[index++];
	            while (isDecimalDigit(source.charCodeAt(index))) {
	                number += source[index++];
	            }
	            ch = source[index];
	        }
	
	        if (ch === 'e' || ch === 'E') {
	            number += source[index++];
	
	            ch = source[index];
	            if (ch === '+' || ch === '-') {
	                number += source[index++];
	            }
	            if (isDecimalDigit(source.charCodeAt(index))) {
	                while (isDecimalDigit(source.charCodeAt(index))) {
	                    number += source[index++];
	                }
	            } else {
	                throwUnexpectedToken();
	            }
	        }
	
	        if (isIdentifierStart(source.charCodeAt(index))) {
	            throwUnexpectedToken();
	        }
	
	        return {
	            type: Token.NumericLiteral,
	            value: parseFloat(number),
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }
	
	    // ECMA-262 11.8.4 String Literals
	
	    function scanStringLiteral() {
	        var str = '', quote, start, ch, unescaped, octToDec, octal = false;
	
	        quote = source[index];
	        assert((quote === '\'' || quote === '"'),
	            'String literal must starts with a quote');
	
	        start = index;
	        ++index;
	
	        while (index < length) {
	            ch = source[index++];
	
	            if (ch === quote) {
	                quote = '';
	                break;
	            } else if (ch === '\\') {
	                ch = source[index++];
	                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                    case 'u':
	                    case 'x':
	                        if (source[index] === '{') {
	                            ++index;
	                            str += scanUnicodeCodePointEscape();
	                        } else {
	                            unescaped = scanHexEscape(ch);
	                            if (!unescaped) {
	                                throw throwUnexpectedToken();
	                            }
	                            str += unescaped;
	                        }
	                        break;
	                    case 'n':
	                        str += '\n';
	                        break;
	                    case 'r':
	                        str += '\r';
	                        break;
	                    case 't':
	                        str += '\t';
	                        break;
	                    case 'b':
	                        str += '\b';
	                        break;
	                    case 'f':
	                        str += '\f';
	                        break;
	                    case 'v':
	                        str += '\x0B';
	                        break;
	                    case '8':
	                    case '9':
	                        str += ch;
	                        tolerateUnexpectedToken();
	                        break;
	
	                    default:
	                        if (isOctalDigit(ch)) {
	                            octToDec = octalToDecimal(ch);
	
	                            octal = octToDec.octal || octal;
	                            str += String.fromCharCode(octToDec.code);
	                        } else {
	                            str += ch;
	                        }
	                        break;
	                    }
	                } else {
	                    ++lineNumber;
	                    if (ch === '\r' && source[index] === '\n') {
	                        ++index;
	                    }
	                    lineStart = index;
	                }
	            } else if (isLineTerminator(ch.charCodeAt(0))) {
	                break;
	            } else {
	                str += ch;
	            }
	        }
	
	        if (quote !== '') {
	            index = start;
	            throwUnexpectedToken();
	        }
	
	        return {
	            type: Token.StringLiteral,
	            value: str,
	            octal: octal,
	            lineNumber: startLineNumber,
	            lineStart: startLineStart,
	            start: start,
	            end: index
	        };
	    }
	
	    // ECMA-262 11.8.6 Template Literal Lexical Components
	
	    function scanTemplate() {
	        var cooked = '', ch, start, rawOffset, terminated, head, tail, restore, unescaped;
	
	        terminated = false;
	        tail = false;
	        start = index;
	        head = (source[index] === '`');
	        rawOffset = 2;
	
	        ++index;
	
	        while (index < length) {
	            ch = source[index++];
	            if (ch === '`') {
	                rawOffset = 1;
	                tail = true;
	                terminated = true;
	                break;
	            } else if (ch === '$') {
	                if (source[index] === '{') {
	                    state.curlyStack.push('${');
	                    ++index;
	                    terminated = true;
	                    break;
	                }
	                cooked += ch;
	            } else if (ch === '\\') {
	                ch = source[index++];
	                if (!isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                    case 'n':
	                        cooked += '\n';
	                        break;
	                    case 'r':
	                        cooked += '\r';
	                        break;
	                    case 't':
	                        cooked += '\t';
	                        break;
	                    case 'u':
	                    case 'x':
	                        if (source[index] === '{') {
	                            ++index;
	                            cooked += scanUnicodeCodePointEscape();
	                        } else {
	                            restore = index;
	                            unescaped = scanHexEscape(ch);
	                            if (unescaped) {
	                                cooked += unescaped;
	                            } else {
	                                index = restore;
	                                cooked += ch;
	                            }
	                        }
	                        break;
	                    case 'b':
	                        cooked += '\b';
	                        break;
	                    case 'f':
	                        cooked += '\f';
	                        break;
	                    case 'v':
	                        cooked += '\v';
	                        break;
	
	                    default:
	                        if (ch === '0') {
	                            if (isDecimalDigit(source.charCodeAt(index))) {
	                                // Illegal: \01 \02 and so on
	                                throwError(Messages.TemplateOctalLiteral);
	                            }
	                            cooked += '\0';
	                        } else if (isOctalDigit(ch)) {
	                            // Illegal: \1 \2
	                            throwError(Messages.TemplateOctalLiteral);
	                        } else {
	                            cooked += ch;
	                        }
	                        break;
	                    }
	                } else {
	                    ++lineNumber;
	                    if (ch === '\r' && source[index] === '\n') {
	                        ++index;
	                    }
	                    lineStart = index;
	                }
	            } else if (isLineTerminator(ch.charCodeAt(0))) {
	                ++lineNumber;
	                if (ch === '\r' && source[index] === '\n') {
	                    ++index;
	                }
	                lineStart = index;
	                cooked += '\n';
	            } else {
	                cooked += ch;
	            }
	        }
	
	        if (!terminated) {
	            throwUnexpectedToken();
	        }
	
	        if (!head) {
	            state.curlyStack.pop();
	        }
	
	        return {
	            type: Token.Template,
	            value: {
	                cooked: cooked,
	                raw: source.slice(start + 1, index - rawOffset)
	            },
	            head: head,
	            tail: tail,
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }
	
	    // ECMA-262 11.8.5 Regular Expression Literals
	
	    function testRegExp(pattern, flags) {
	        // The BMP character to use as a replacement for astral symbols when
	        // translating an ES6 "u"-flagged pattern to an ES5-compatible
	        // approximation.
	        // Note: replacing with '\uFFFF' enables false positives in unlikely
	        // scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid
	        // pattern that would not be detected by this substitution.
	        var astralSubstitute = '\uFFFF',
	            tmp = pattern;
	
	        if (flags.indexOf('u') >= 0) {
	            tmp = tmp
	                // Replace every Unicode escape sequence with the equivalent
	                // BMP character or a constant ASCII code point in the case of
	                // astral symbols. (See the above note on `astralSubstitute`
	                // for more information.)
	                .replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {
	                    var codePoint = parseInt($1 || $2, 16);
	                    if (codePoint > 0x10FFFF) {
	                        throwUnexpectedToken(null, Messages.InvalidRegExp);
	                    }
	                    if (codePoint <= 0xFFFF) {
	                        return String.fromCharCode(codePoint);
	                    }
	                    return astralSubstitute;
	                })
	                // Replace each paired surrogate with a single ASCII symbol to
	                // avoid throwing on regular expressions that are only valid in
	                // combination with the "u" flag.
	                .replace(
	                    /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
	                    astralSubstitute
	                );
	        }
	
	        // First, detect invalid regular expressions.
	        try {
	            RegExp(tmp);
	        } catch (e) {
	            throwUnexpectedToken(null, Messages.InvalidRegExp);
	        }
	
	        // Return a regular expression object for this pattern-flag pair, or
	        // `null` in case the current environment doesn't support the flags it
	        // uses.
	        try {
	            return new RegExp(pattern, flags);
	        } catch (exception) {
	            return null;
	        }
	    }
	
	    function scanRegExpBody() {
	        var ch, str, classMarker, terminated, body;
	
	        ch = source[index];
	        assert(ch === '/', 'Regular expression literal must start with a slash');
	        str = source[index++];
	
	        classMarker = false;
	        terminated = false;
	        while (index < length) {
	            ch = source[index++];
	            str += ch;
	            if (ch === '\\') {
	                ch = source[index++];
	                // ECMA-262 7.8.5
	                if (isLineTerminator(ch.charCodeAt(0))) {
	                    throwUnexpectedToken(null, Messages.UnterminatedRegExp);
	                }
	                str += ch;
	            } else if (isLineTerminator(ch.charCodeAt(0))) {
	                throwUnexpectedToken(null, Messages.UnterminatedRegExp);
	            } else if (classMarker) {
	                if (ch === ']') {
	                    classMarker = false;
	                }
	            } else {
	                if (ch === '/') {
	                    terminated = true;
	                    break;
	                } else if (ch === '[') {
	                    classMarker = true;
	                }
	            }
	        }
	
	        if (!terminated) {
	            throwUnexpectedToken(null, Messages.UnterminatedRegExp);
	        }
	
	        // Exclude leading and trailing slash.
	        body = str.substr(1, str.length - 2);
	        return {
	            value: body,
	            literal: str
	        };
	    }
	
	    function scanRegExpFlags() {
	        var ch, str, flags, restore;
	
	        str = '';
	        flags = '';
	        while (index < length) {
	            ch = source[index];
	            if (!isIdentifierPart(ch.charCodeAt(0))) {
	                break;
	            }
	
	            ++index;
	            if (ch === '\\' && index < length) {
	                ch = source[index];
	                if (ch === 'u') {
	                    ++index;
	                    restore = index;
	                    ch = scanHexEscape('u');
	                    if (ch) {
	                        flags += ch;
	                        for (str += '\\u'; restore < index; ++restore) {
	                            str += source[restore];
	                        }
	                    } else {
	                        index = restore;
	                        flags += 'u';
	                        str += '\\u';
	                    }
	                    tolerateUnexpectedToken();
	                } else {
	                    str += '\\';
	                    tolerateUnexpectedToken();
	                }
	            } else {
	                flags += ch;
	                str += ch;
	            }
	        }
	
	        return {
	            value: flags,
	            literal: str
	        };
	    }
	
	    function scanRegExp() {
	        var start, body, flags, value;
	        scanning = true;
	
	        lookahead = null;
	        skipComment();
	        start = index;
	
	        body = scanRegExpBody();
	        flags = scanRegExpFlags();
	        value = testRegExp(body.value, flags.value);
	        scanning = false;
	        if (extra.tokenize) {
	            return {
	                type: Token.RegularExpression,
	                value: value,
	                regex: {
	                    pattern: body.value,
	                    flags: flags.value
	                },
	                lineNumber: lineNumber,
	                lineStart: lineStart,
	                start: start,
	                end: index
	            };
	        }
	
	        return {
	            literal: body.literal + flags.literal,
	            value: value,
	            regex: {
	                pattern: body.value,
	                flags: flags.value
	            },
	            start: start,
	            end: index
	        };
	    }
	
	    function collectRegex() {
	        var pos, loc, regex, token;
	
	        skipComment();
	
	        pos = index;
	        loc = {
	            start: {
	                line: lineNumber,
	                column: index - lineStart
	            }
	        };
	
	        regex = scanRegExp();
	
	        loc.end = {
	            line: lineNumber,
	            column: index - lineStart
	        };
	
	        /* istanbul ignore next */
	        if (!extra.tokenize) {
	            // Pop the previous token, which is likely '/' or '/='
	            if (extra.tokens.length > 0) {
	                token = extra.tokens[extra.tokens.length - 1];
	                if (token.range[0] === pos && token.type === 'Punctuator') {
	                    if (token.value === '/' || token.value === '/=') {
	                        extra.tokens.pop();
	                    }
	                }
	            }
	
	            extra.tokens.push({
	                type: 'RegularExpression',
	                value: regex.literal,
	                regex: regex.regex,
	                range: [pos, index],
	                loc: loc
	            });
	        }
	
	        return regex;
	    }
	
	    function isIdentifierName(token) {
	        return token.type === Token.Identifier ||
	            token.type === Token.Keyword ||
	            token.type === Token.BooleanLiteral ||
	            token.type === Token.NullLiteral;
	    }
	
	    // Using the following algorithm:
	    // https://github.com/mozilla/sweet.js/wiki/design
	
	    function advanceSlash() {
	        var regex, previous, check;
	
	        function testKeyword(value) {
	            return value && (value.length > 1) && (value[0] >= 'a') && (value[0] <= 'z');
	        }
	
	        previous = extra.tokenValues[extra.tokens.length - 1];
	        regex = (previous !== null);
	
	        switch (previous) {
	        case 'this':
	        case ']':
	            regex = false;
	            break;
	
	        case ')':
	            check = extra.tokenValues[extra.openParenToken - 1];
	            regex = (check === 'if' || check === 'while' || check === 'for' || check === 'with');
	            break;
	
	        case '}':
	            // Dividing a function by anything makes little sense,
	            // but we have to check for that.
	            regex = false;
	            if (testKeyword(extra.tokenValues[extra.openCurlyToken - 3])) {
	                // Anonymous function, e.g. function(){} /42
	                check = extra.tokenValues[extra.openCurlyToken - 4];
	                regex = check ? (FnExprTokens.indexOf(check) < 0) : false;
	            } else if (testKeyword(extra.tokenValues[extra.openCurlyToken - 4])) {
	                // Named function, e.g. function f(){} /42/
	                check = extra.tokenValues[extra.openCurlyToken - 5];
	                regex = check ? (FnExprTokens.indexOf(check) < 0) : true;
	            }
	        }
	
	        return regex ? collectRegex() : scanPunctuator();
	    }
	
	    function advance() {
	        var cp, token;
	
	        if (index >= length) {
	            return {
	                type: Token.EOF,
	                lineNumber: lineNumber,
	                lineStart: lineStart,
	                start: index,
	                end: index
	            };
	        }
	
	        cp = source.charCodeAt(index);
	
	        if (isIdentifierStart(cp)) {
	            token = scanIdentifier();
	            if (strict && isStrictModeReservedWord(token.value)) {
	                token.type = Token.Keyword;
	            }
	            return token;
	        }
	
	        // Very common: ( and ) and ;
	        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {
	            return scanPunctuator();
	        }
	
	        // String literal starts with single quote (U+0027) or double quote (U+0022).
	        if (cp === 0x27 || cp === 0x22) {
	            return scanStringLiteral();
	        }
	
	        // Dot (.) U+002E can also start a floating-point number, hence the need
	        // to check the next character.
	        if (cp === 0x2E) {
	            if (isDecimalDigit(source.charCodeAt(index + 1))) {
	                return scanNumericLiteral();
	            }
	            return scanPunctuator();
	        }
	
	        if (isDecimalDigit(cp)) {
	            return scanNumericLiteral();
	        }
	
	        // Slash (/) U+002F can also start a regex.
	        if (extra.tokenize && cp === 0x2F) {
	            return advanceSlash();
	        }
	
	        // Template literals start with ` (U+0060) for template head
	        // or } (U+007D) for template middle or template tail.
	        if (cp === 0x60 || (cp === 0x7D && state.curlyStack[state.curlyStack.length - 1] === '${')) {
	            return scanTemplate();
	        }
	
	        // Possible identifier start in a surrogate pair.
	        if (cp >= 0xD800 && cp < 0xDFFF) {
	            cp = codePointAt(index);
	            if (isIdentifierStart(cp)) {
	                return scanIdentifier();
	            }
	        }
	
	        return scanPunctuator();
	    }
	
	    function collectToken() {
	        var loc, token, value, entry;
	
	        loc = {
	            start: {
	                line: lineNumber,
	                column: index - lineStart
	            }
	        };
	
	        token = advance();
	        loc.end = {
	            line: lineNumber,
	            column: index - lineStart
	        };
	
	        if (token.type !== Token.EOF) {
	            value = source.slice(token.start, token.end);
	            entry = {
	                type: TokenName[token.type],
	                value: value,
	                range: [token.start, token.end],
	                loc: loc
	            };
	            if (token.regex) {
	                entry.regex = {
	                    pattern: token.regex.pattern,
	                    flags: token.regex.flags
	                };
	            }
	            if (extra.tokenValues) {
	                extra.tokenValues.push((entry.type === 'Punctuator' || entry.type === 'Keyword') ? entry.value : null);
	            }
	            if (extra.tokenize) {
	                if (!extra.range) {
	                    delete entry.range;
	                }
	                if (!extra.loc) {
	                    delete entry.loc;
	                }
	                if (extra.delegate) {
	                    entry = extra.delegate(entry);
	                }
	            }
	            extra.tokens.push(entry);
	        }
	
	        return token;
	    }
	
	    function lex() {
	        var token;
	        scanning = true;
	
	        lastIndex = index;
	        lastLineNumber = lineNumber;
	        lastLineStart = lineStart;
	
	        skipComment();
	
	        token = lookahead;
	
	        startIndex = index;
	        startLineNumber = lineNumber;
	        startLineStart = lineStart;
	
	        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();
	        scanning = false;
	        return token;
	    }
	
	    function peek() {
	        scanning = true;
	
	        skipComment();
	
	        lastIndex = index;
	        lastLineNumber = lineNumber;
	        lastLineStart = lineStart;
	
	        startIndex = index;
	        startLineNumber = lineNumber;
	        startLineStart = lineStart;
	
	        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();
	        scanning = false;
	    }
	
	    function Position() {
	        this.line = startLineNumber;
	        this.column = startIndex - startLineStart;
	    }
	
	    function SourceLocation() {
	        this.start = new Position();
	        this.end = null;
	    }
	
	    function WrappingSourceLocation(startToken) {
	        this.start = {
	            line: startToken.lineNumber,
	            column: startToken.start - startToken.lineStart
	        };
	        this.end = null;
	    }
	
	    function Node() {
	        if (extra.range) {
	            this.range = [startIndex, 0];
	        }
	        if (extra.loc) {
	            this.loc = new SourceLocation();
	        }
	    }
	
	    function WrappingNode(startToken) {
	        if (extra.range) {
	            this.range = [startToken.start, 0];
	        }
	        if (extra.loc) {
	            this.loc = new WrappingSourceLocation(startToken);
	        }
	    }
	
	    WrappingNode.prototype = Node.prototype = {
	
	        processComment: function () {
	            var lastChild,
	                innerComments,
	                leadingComments,
	                trailingComments,
	                bottomRight = extra.bottomRightStack,
	                i,
	                comment,
	                last = bottomRight[bottomRight.length - 1];
	
	            if (this.type === Syntax.Program) {
	                if (this.body.length > 0) {
	                    return;
	                }
	            }
	            /**
	             * patch innnerComments for properties empty block
	             * `function a() {/** comments **\/}`
	             */
	
	            if (this.type === Syntax.BlockStatement && this.body.length === 0) {
	                innerComments = [];
	                for (i = extra.leadingComments.length - 1; i >= 0; --i) {
	                    comment = extra.leadingComments[i];
	                    if (this.range[1] >= comment.range[1]) {
	                        innerComments.unshift(comment);
	                        extra.leadingComments.splice(i, 1);
	                        extra.trailingComments.splice(i, 1);
	                    }
	                }
	                if (innerComments.length) {
	                    this.innerComments = innerComments;
	                    //bottomRight.push(this);
	                    return;
	                }
	            }
	
	            if (extra.trailingComments.length > 0) {
	                trailingComments = [];
	                for (i = extra.trailingComments.length - 1; i >= 0; --i) {
	                    comment = extra.trailingComments[i];
	                    if (comment.range[0] >= this.range[1]) {
	                        trailingComments.unshift(comment);
	                        extra.trailingComments.splice(i, 1);
	                    }
	                }
	                extra.trailingComments = [];
	            } else {
	                if (last && last.trailingComments && last.trailingComments[0].range[0] >= this.range[1]) {
	                    trailingComments = last.trailingComments;
	                    delete last.trailingComments;
	                }
	            }
	
	            // Eating the stack.
	            while (last && last.range[0] >= this.range[0]) {
	                lastChild = bottomRight.pop();
	                last = bottomRight[bottomRight.length - 1];
	            }
	
	            if (lastChild) {
	                if (lastChild.leadingComments) {
	                    leadingComments = [];
	                    for (i = lastChild.leadingComments.length - 1; i >= 0; --i) {
	                        comment = lastChild.leadingComments[i];
	                        if (comment.range[1] <= this.range[0]) {
	                            leadingComments.unshift(comment);
	                            lastChild.leadingComments.splice(i, 1);
	                        }
	                    }
	
	                    if (!lastChild.leadingComments.length) {
	                        lastChild.leadingComments = undefined;
	                    }
	                }
	            } else if (extra.leadingComments.length > 0) {
	                leadingComments = [];
	                for (i = extra.leadingComments.length - 1; i >= 0; --i) {
	                    comment = extra.leadingComments[i];
	                    if (comment.range[1] <= this.range[0]) {
	                        leadingComments.unshift(comment);
	                        extra.leadingComments.splice(i, 1);
	                    }
	                }
	            }
	
	
	            if (leadingComments && leadingComments.length > 0) {
	                this.leadingComments = leadingComments;
	            }
	            if (trailingComments && trailingComments.length > 0) {
	                this.trailingComments = trailingComments;
	            }
	
	            bottomRight.push(this);
	        },
	
	        finish: function () {
	            if (extra.range) {
	                this.range[1] = lastIndex;
	            }
	            if (extra.loc) {
	                this.loc.end = {
	                    line: lastLineNumber,
	                    column: lastIndex - lastLineStart
	                };
	                if (extra.source) {
	                    this.loc.source = extra.source;
	                }
	            }
	
	            if (extra.attachComment) {
	                this.processComment();
	            }
	        },
	
	        finishArrayExpression: function (elements) {
	            this.type = Syntax.ArrayExpression;
	            this.elements = elements;
	            this.finish();
	            return this;
	        },
	
	        finishArrayPattern: function (elements) {
	            this.type = Syntax.ArrayPattern;
	            this.elements = elements;
	            this.finish();
	            return this;
	        },
	
	        finishArrowFunctionExpression: function (params, defaults, body, expression) {
	            this.type = Syntax.ArrowFunctionExpression;
	            this.id = null;
	            this.params = params;
	            this.defaults = defaults;
	            this.body = body;
	            this.generator = false;
	            this.expression = expression;
	            this.finish();
	            return this;
	        },
	
	        finishAssignmentExpression: function (operator, left, right) {
	            this.type = Syntax.AssignmentExpression;
	            this.operator = operator;
	            this.left = left;
	            this.right = right;
	            this.finish();
	            return this;
	        },
	
	        finishAssignmentPattern: function (left, right) {
	            this.type = Syntax.AssignmentPattern;
	            this.left = left;
	            this.right = right;
	            this.finish();
	            return this;
	        },
	
	        finishBinaryExpression: function (operator, left, right) {
	            this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;
	            this.operator = operator;
	            this.left = left;
	            this.right = right;
	            this.finish();
	            return this;
	        },
	
	        finishBlockStatement: function (body) {
	            this.type = Syntax.BlockStatement;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishBreakStatement: function (label) {
	            this.type = Syntax.BreakStatement;
	            this.label = label;
	            this.finish();
	            return this;
	        },
	
	        finishCallExpression: function (callee, args) {
	            this.type = Syntax.CallExpression;
	            this.callee = callee;
	            this.arguments = args;
	            this.finish();
	            return this;
	        },
	
	        finishCatchClause: function (param, body) {
	            this.type = Syntax.CatchClause;
	            this.param = param;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishClassBody: function (body) {
	            this.type = Syntax.ClassBody;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishClassDeclaration: function (id, superClass, body) {
	            this.type = Syntax.ClassDeclaration;
	            this.id = id;
	            this.superClass = superClass;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishClassExpression: function (id, superClass, body) {
	            this.type = Syntax.ClassExpression;
	            this.id = id;
	            this.superClass = superClass;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishConditionalExpression: function (test, consequent, alternate) {
	            this.type = Syntax.ConditionalExpression;
	            this.test = test;
	            this.consequent = consequent;
	            this.alternate = alternate;
	            this.finish();
	            return this;
	        },
	
	        finishContinueStatement: function (label) {
	            this.type = Syntax.ContinueStatement;
	            this.label = label;
	            this.finish();
	            return this;
	        },
	
	        finishDebuggerStatement: function () {
	            this.type = Syntax.DebuggerStatement;
	            this.finish();
	            return this;
	        },
	
	        finishDoWhileStatement: function (body, test) {
	            this.type = Syntax.DoWhileStatement;
	            this.body = body;
	            this.test = test;
	            this.finish();
	            return this;
	        },
	
	        finishEmptyStatement: function () {
	            this.type = Syntax.EmptyStatement;
	            this.finish();
	            return this;
	        },
	
	        finishExpressionStatement: function (expression) {
	            this.type = Syntax.ExpressionStatement;
	            this.expression = expression;
	            this.finish();
	            return this;
	        },
	
	        finishForStatement: function (init, test, update, body) {
	            this.type = Syntax.ForStatement;
	            this.init = init;
	            this.test = test;
	            this.update = update;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishForOfStatement: function (left, right, body) {
	            this.type = Syntax.ForOfStatement;
	            this.left = left;
	            this.right = right;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishForInStatement: function (left, right, body) {
	            this.type = Syntax.ForInStatement;
	            this.left = left;
	            this.right = right;
	            this.body = body;
	            this.each = false;
	            this.finish();
	            return this;
	        },
	
	        finishFunctionDeclaration: function (id, params, defaults, body, generator) {
	            this.type = Syntax.FunctionDeclaration;
	            this.id = id;
	            this.params = params;
	            this.defaults = defaults;
	            this.body = body;
	            this.generator = generator;
	            this.expression = false;
	            this.finish();
	            return this;
	        },
	
	        finishFunctionExpression: function (id, params, defaults, body, generator) {
	            this.type = Syntax.FunctionExpression;
	            this.id = id;
	            this.params = params;
	            this.defaults = defaults;
	            this.body = body;
	            this.generator = generator;
	            this.expression = false;
	            this.finish();
	            return this;
	        },
	
	        finishIdentifier: function (name) {
	            this.type = Syntax.Identifier;
	            this.name = name;
	            this.finish();
	            return this;
	        },
	
	        finishIfStatement: function (test, consequent, alternate) {
	            this.type = Syntax.IfStatement;
	            this.test = test;
	            this.consequent = consequent;
	            this.alternate = alternate;
	            this.finish();
	            return this;
	        },
	
	        finishLabeledStatement: function (label, body) {
	            this.type = Syntax.LabeledStatement;
	            this.label = label;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishLiteral: function (token) {
	            this.type = Syntax.Literal;
	            this.value = token.value;
	            this.raw = source.slice(token.start, token.end);
	            if (token.regex) {
	                this.regex = token.regex;
	            }
	            this.finish();
	            return this;
	        },
	
	        finishMemberExpression: function (accessor, object, property) {
	            this.type = Syntax.MemberExpression;
	            this.computed = accessor === '[';
	            this.object = object;
	            this.property = property;
	            this.finish();
	            return this;
	        },
	
	        finishMetaProperty: function (meta, property) {
	            this.type = Syntax.MetaProperty;
	            this.meta = meta;
	            this.property = property;
	            this.finish();
	            return this;
	        },
	
	        finishNewExpression: function (callee, args) {
	            this.type = Syntax.NewExpression;
	            this.callee = callee;
	            this.arguments = args;
	            this.finish();
	            return this;
	        },
	
	        finishObjectExpression: function (properties) {
	            this.type = Syntax.ObjectExpression;
	            this.properties = properties;
	            this.finish();
	            return this;
	        },
	
	        finishObjectPattern: function (properties) {
	            this.type = Syntax.ObjectPattern;
	            this.properties = properties;
	            this.finish();
	            return this;
	        },
	
	        finishPostfixExpression: function (operator, argument) {
	            this.type = Syntax.UpdateExpression;
	            this.operator = operator;
	            this.argument = argument;
	            this.prefix = false;
	            this.finish();
	            return this;
	        },
	
	        finishProgram: function (body, sourceType) {
	            this.type = Syntax.Program;
	            this.body = body;
	            this.sourceType = sourceType;
	            this.finish();
	            return this;
	        },
	
	        finishProperty: function (kind, key, computed, value, method, shorthand) {
	            this.type = Syntax.Property;
	            this.key = key;
	            this.computed = computed;
	            this.value = value;
	            this.kind = kind;
	            this.method = method;
	            this.shorthand = shorthand;
	            this.finish();
	            return this;
	        },
	
	        finishRestElement: function (argument) {
	            this.type = Syntax.RestElement;
	            this.argument = argument;
	            this.finish();
	            return this;
	        },
	
	        finishReturnStatement: function (argument) {
	            this.type = Syntax.ReturnStatement;
	            this.argument = argument;
	            this.finish();
	            return this;
	        },
	
	        finishSequenceExpression: function (expressions) {
	            this.type = Syntax.SequenceExpression;
	            this.expressions = expressions;
	            this.finish();
	            return this;
	        },
	
	        finishSpreadElement: function (argument) {
	            this.type = Syntax.SpreadElement;
	            this.argument = argument;
	            this.finish();
	            return this;
	        },
	
	        finishSwitchCase: function (test, consequent) {
	            this.type = Syntax.SwitchCase;
	            this.test = test;
	            this.consequent = consequent;
	            this.finish();
	            return this;
	        },
	
	        finishSuper: function () {
	            this.type = Syntax.Super;
	            this.finish();
	            return this;
	        },
	
	        finishSwitchStatement: function (discriminant, cases) {
	            this.type = Syntax.SwitchStatement;
	            this.discriminant = discriminant;
	            this.cases = cases;
	            this.finish();
	            return this;
	        },
	
	        finishTaggedTemplateExpression: function (tag, quasi) {
	            this.type = Syntax.TaggedTemplateExpression;
	            this.tag = tag;
	            this.quasi = quasi;
	            this.finish();
	            return this;
	        },
	
	        finishTemplateElement: function (value, tail) {
	            this.type = Syntax.TemplateElement;
	            this.value = value;
	            this.tail = tail;
	            this.finish();
	            return this;
	        },
	
	        finishTemplateLiteral: function (quasis, expressions) {
	            this.type = Syntax.TemplateLiteral;
	            this.quasis = quasis;
	            this.expressions = expressions;
	            this.finish();
	            return this;
	        },
	
	        finishThisExpression: function () {
	            this.type = Syntax.ThisExpression;
	            this.finish();
	            return this;
	        },
	
	        finishThrowStatement: function (argument) {
	            this.type = Syntax.ThrowStatement;
	            this.argument = argument;
	            this.finish();
	            return this;
	        },
	
	        finishTryStatement: function (block, handler, finalizer) {
	            this.type = Syntax.TryStatement;
	            this.block = block;
	            this.guardedHandlers = [];
	            this.handlers = handler ? [handler] : [];
	            this.handler = handler;
	            this.finalizer = finalizer;
	            this.finish();
	            return this;
	        },
	
	        finishUnaryExpression: function (operator, argument) {
	            this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;
	            this.operator = operator;
	            this.argument = argument;
	            this.prefix = true;
	            this.finish();
	            return this;
	        },
	
	        finishVariableDeclaration: function (declarations) {
	            this.type = Syntax.VariableDeclaration;
	            this.declarations = declarations;
	            this.kind = 'var';
	            this.finish();
	            return this;
	        },
	
	        finishLexicalDeclaration: function (declarations, kind) {
	            this.type = Syntax.VariableDeclaration;
	            this.declarations = declarations;
	            this.kind = kind;
	            this.finish();
	            return this;
	        },
	
	        finishVariableDeclarator: function (id, init) {
	            this.type = Syntax.VariableDeclarator;
	            this.id = id;
	            this.init = init;
	            this.finish();
	            return this;
	        },
	
	        finishWhileStatement: function (test, body) {
	            this.type = Syntax.WhileStatement;
	            this.test = test;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishWithStatement: function (object, body) {
	            this.type = Syntax.WithStatement;
	            this.object = object;
	            this.body = body;
	            this.finish();
	            return this;
	        },
	
	        finishExportSpecifier: function (local, exported) {
	            this.type = Syntax.ExportSpecifier;
	            this.exported = exported || local;
	            this.local = local;
	            this.finish();
	            return this;
	        },
	
	        finishImportDefaultSpecifier: function (local) {
	            this.type = Syntax.ImportDefaultSpecifier;
	            this.local = local;
	            this.finish();
	            return this;
	        },
	
	        finishImportNamespaceSpecifier: function (local) {
	            this.type = Syntax.ImportNamespaceSpecifier;
	            this.local = local;
	            this.finish();
	            return this;
	        },
	
	        finishExportNamedDeclaration: function (declaration, specifiers, src) {
	            this.type = Syntax.ExportNamedDeclaration;
	            this.declaration = declaration;
	            this.specifiers = specifiers;
	            this.source = src;
	            this.finish();
	            return this;
	        },
	
	        finishExportDefaultDeclaration: function (declaration) {
	            this.type = Syntax.ExportDefaultDeclaration;
	            this.declaration = declaration;
	            this.finish();
	            return this;
	        },
	
	        finishExportAllDeclaration: function (src) {
	            this.type = Syntax.ExportAllDeclaration;
	            this.source = src;
	            this.finish();
	            return this;
	        },
	
	        finishImportSpecifier: function (local, imported) {
	            this.type = Syntax.ImportSpecifier;
	            this.local = local || imported;
	            this.imported = imported;
	            this.finish();
	            return this;
	        },
	
	        finishImportDeclaration: function (specifiers, src) {
	            this.type = Syntax.ImportDeclaration;
	            this.specifiers = specifiers;
	            this.source = src;
	            this.finish();
	            return this;
	        },
	
	        finishYieldExpression: function (argument, delegate) {
	            this.type = Syntax.YieldExpression;
	            this.argument = argument;
	            this.delegate = delegate;
	            this.finish();
	            return this;
	        }
	    };
	
	
	    function recordError(error) {
	        var e, existing;
	
	        for (e = 0; e < extra.errors.length; e++) {
	            existing = extra.errors[e];
	            // Prevent duplicated error.
	            /* istanbul ignore next */
	            if (existing.index === error.index && existing.message === error.message) {
	                return;
	            }
	        }
	
	        extra.errors.push(error);
	    }
	
	    function constructError(msg, column) {
	        var error = new Error(msg);
	        try {
	            throw error;
	        } catch (base) {
	            /* istanbul ignore else */
	            if (Object.create && Object.defineProperty) {
	                error = Object.create(base);
	                Object.defineProperty(error, 'column', { value: column });
	            }
	        } finally {
	            return error;
	        }
	    }
	
	    function createError(line, pos, description) {
	        var msg, column, error;
	
	        msg = 'Line ' + line + ': ' + description;
	        column = pos - (scanning ? lineStart : lastLineStart) + 1;
	        error = constructError(msg, column);
	        error.lineNumber = line;
	        error.description = description;
	        error.index = pos;
	        return error;
	    }
	
	    // Throw an exception
	
	    function throwError(messageFormat) {
	        var args, msg;
	
	        args = Array.prototype.slice.call(arguments, 1);
	        msg = messageFormat.replace(/%(\d)/g,
	            function (whole, idx) {
	                assert(idx < args.length, 'Message reference must be in range');
	                return args[idx];
	            }
	        );
	
	        throw createError(lastLineNumber, lastIndex, msg);
	    }
	
	    function tolerateError(messageFormat) {
	        var args, msg, error;
	
	        args = Array.prototype.slice.call(arguments, 1);
	        /* istanbul ignore next */
	        msg = messageFormat.replace(/%(\d)/g,
	            function (whole, idx) {
	                assert(idx < args.length, 'Message reference must be in range');
	                return args[idx];
	            }
	        );
	
	        error = createError(lineNumber, lastIndex, msg);
	        if (extra.errors) {
	            recordError(error);
	        } else {
	            throw error;
	        }
	    }
	
	    // Throw an exception because of the token.
	
	    function unexpectedTokenError(token, message) {
	        var value, msg = message || Messages.UnexpectedToken;
	
	        if (token) {
	            if (!message) {
	                msg = (token.type === Token.EOF) ? Messages.UnexpectedEOS :
	                    (token.type === Token.Identifier) ? Messages.UnexpectedIdentifier :
	                    (token.type === Token.NumericLiteral) ? Messages.UnexpectedNumber :
	                    (token.type === Token.StringLiteral) ? Messages.UnexpectedString :
	                    (token.type === Token.Template) ? Messages.UnexpectedTemplate :
	                    Messages.UnexpectedToken;
	
	                if (token.type === Token.Keyword) {
	                    if (isFutureReservedWord(token.value)) {
	                        msg = Messages.UnexpectedReserved;
	                    } else if (strict && isStrictModeReservedWord(token.value)) {
	                        msg = Messages.StrictReservedWord;
	                    }
	                }
	            }
	
	            value = (token.type === Token.Template) ? token.value.raw : token.value;
	        } else {
	            value = 'ILLEGAL';
	        }
	
	        msg = msg.replace('%0', value);
	
	        return (token && typeof token.lineNumber === 'number') ?
	            createError(token.lineNumber, token.start, msg) :
	            createError(scanning ? lineNumber : lastLineNumber, scanning ? index : lastIndex, msg);
	    }
	
	    function throwUnexpectedToken(token, message) {
	        throw unexpectedTokenError(token, message);
	    }
	
	    function tolerateUnexpectedToken(token, message) {
	        var error = unexpectedTokenError(token, message);
	        if (extra.errors) {
	            recordError(error);
	        } else {
	            throw error;
	        }
	    }
	
	    // Expect the next token to match the specified punctuator.
	    // If not, an exception will be thrown.
	
	    function expect(value) {
	        var token = lex();
	        if (token.type !== Token.Punctuator || token.value !== value) {
	            throwUnexpectedToken(token);
	        }
	    }
	
	    /**
	     * @name expectCommaSeparator
	     * @description Quietly expect a comma when in tolerant mode, otherwise delegates
	     * to <code>expect(value)</code>
	     * @since 2.0
	     */
	    function expectCommaSeparator() {
	        var token;
	
	        if (extra.errors) {
	            token = lookahead;
	            if (token.type === Token.Punctuator && token.value === ',') {
	                lex();
	            } else if (token.type === Token.Punctuator && token.value === ';') {
	                lex();
	                tolerateUnexpectedToken(token);
	            } else {
	                tolerateUnexpectedToken(token, Messages.UnexpectedToken);
	            }
	        } else {
	            expect(',');
	        }
	    }
	
	    // Expect the next token to match the specified keyword.
	    // If not, an exception will be thrown.
	
	    function expectKeyword(keyword) {
	        var token = lex();
	        if (token.type !== Token.Keyword || token.value !== keyword) {
	            throwUnexpectedToken(token);
	        }
	    }
	
	    // Return true if the next token matches the specified punctuator.
	
	    function match(value) {
	        return lookahead.type === Token.Punctuator && lookahead.value === value;
	    }
	
	    // Return true if the next token matches the specified keyword
	
	    function matchKeyword(keyword) {
	        return lookahead.type === Token.Keyword && lookahead.value === keyword;
	    }
	
	    // Return true if the next token matches the specified contextual keyword
	    // (where an identifier is sometimes a keyword depending on the context)
	
	    function matchContextualKeyword(keyword) {
	        return lookahead.type === Token.Identifier && lookahead.value === keyword;
	    }
	
	    // Return true if the next token is an assignment operator
	
	    function matchAssign() {
	        var op;
	
	        if (lookahead.type !== Token.Punctuator) {
	            return false;
	        }
	        op = lookahead.value;
	        return op === '=' ||
	            op === '*=' ||
	            op === '/=' ||
	            op === '%=' ||
	            op === '+=' ||
	            op === '-=' ||
	            op === '<<=' ||
	            op === '>>=' ||
	            op === '>>>=' ||
	            op === '&=' ||
	            op === '^=' ||
	            op === '|=';
	    }
	
	    function consumeSemicolon() {
	        // Catch the very common case first: immediately a semicolon (U+003B).
	        if (source.charCodeAt(startIndex) === 0x3B || match(';')) {
	            lex();
	            return;
	        }
	
	        if (hasLineTerminator) {
	            return;
	        }
	
	        // FIXME(ikarienator): this is seemingly an issue in the previous location info convention.
	        lastIndex = startIndex;
	        lastLineNumber = startLineNumber;
	        lastLineStart = startLineStart;
	
	        if (lookahead.type !== Token.EOF && !match('}')) {
	            throwUnexpectedToken(lookahead);
	        }
	    }
	
	    // Cover grammar support.
	    //
	    // When an assignment expression position starts with an left parenthesis, the determination of the type
	    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
	    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.
	    //
	    // There are three productions that can be parsed in a parentheses pair that needs to be determined
	    // after the outermost pair is closed. They are:
	    //
	    //   1. AssignmentExpression
	    //   2. BindingElements
	    //   3. AssignmentTargets
	    //
	    // In order to avoid exponential backtracking, we use two flags to denote if the production can be
	    // binding element or assignment target.
	    //
	    // The three productions have the relationship:
	    //
	    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression
	    //
	    // with a single exception that CoverInitializedName when used directly in an Expression, generates
	    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the
	    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
	    //
	    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not
	    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore
	    // the CoverInitializedName check is conducted.
	    //
	    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates
	    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential
	    // pattern. The CoverInitializedName check is deferred.
	    function isolateCoverGrammar(parser) {
	        var oldIsBindingElement = isBindingElement,
	            oldIsAssignmentTarget = isAssignmentTarget,
	            oldFirstCoverInitializedNameError = firstCoverInitializedNameError,
	            result;
	        isBindingElement = true;
	        isAssignmentTarget = true;
	        firstCoverInitializedNameError = null;
	        result = parser();
	        if (firstCoverInitializedNameError !== null) {
	            throwUnexpectedToken(firstCoverInitializedNameError);
	        }
	        isBindingElement = oldIsBindingElement;
	        isAssignmentTarget = oldIsAssignmentTarget;
	        firstCoverInitializedNameError = oldFirstCoverInitializedNameError;
	        return result;
	    }
	
	    function inheritCoverGrammar(parser) {
	        var oldIsBindingElement = isBindingElement,
	            oldIsAssignmentTarget = isAssignmentTarget,
	            oldFirstCoverInitializedNameError = firstCoverInitializedNameError,
	            result;
	        isBindingElement = true;
	        isAssignmentTarget = true;
	        firstCoverInitializedNameError = null;
	        result = parser();
	        isBindingElement = isBindingElement && oldIsBindingElement;
	        isAssignmentTarget = isAssignmentTarget && oldIsAssignmentTarget;
	        firstCoverInitializedNameError = oldFirstCoverInitializedNameError || firstCoverInitializedNameError;
	        return result;
	    }
	
	    // ECMA-262 13.3.3 Destructuring Binding Patterns
	
	    function parseArrayPattern(params, kind) {
	        var node = new Node(), elements = [], rest, restNode;
	        expect('[');
	
	        while (!match(']')) {
	            if (match(',')) {
	                lex();
	                elements.push(null);
	            } else {
	                if (match('...')) {
	                    restNode = new Node();
	                    lex();
	                    params.push(lookahead);
	                    rest = parseVariableIdentifier(kind);
	                    elements.push(restNode.finishRestElement(rest));
	                    break;
	                } else {
	                    elements.push(parsePatternWithDefault(params, kind));
	                }
	                if (!match(']')) {
	                    expect(',');
	                }
	            }
	
	        }
	
	        expect(']');
	
	        return node.finishArrayPattern(elements);
	    }
	
	    function parsePropertyPattern(params, kind) {
	        var node = new Node(), key, keyToken, computed = match('['), init;
	        if (lookahead.type === Token.Identifier) {
	            keyToken = lookahead;
	            key = parseVariableIdentifier();
	            if (match('=')) {
	                params.push(keyToken);
	                lex();
	                init = parseAssignmentExpression();
	
	                return node.finishProperty(
	                    'init', key, false,
	                    new WrappingNode(keyToken).finishAssignmentPattern(key, init), false, true);
	            } else if (!match(':')) {
	                params.push(keyToken);
	                return node.finishProperty('init', key, false, key, false, true);
	            }
	        } else {
	            key = parseObjectPropertyKey();
	        }
	        expect(':');
	        init = parsePatternWithDefault(params, kind);
	        return node.finishProperty('init', key, computed, init, false, false);
	    }
	
	    function parseObjectPattern(params, kind) {
	        var node = new Node(), properties = [];
	
	        expect('{');
	
	        while (!match('}')) {
	            properties.push(parsePropertyPattern(params, kind));
	            if (!match('}')) {
	                expect(',');
	            }
	        }
	
	        lex();
	
	        return node.finishObjectPattern(properties);
	    }
	
	    function parsePattern(params, kind) {
	        if (match('[')) {
	            return parseArrayPattern(params, kind);
	        } else if (match('{')) {
	            return parseObjectPattern(params, kind);
	        } else if (matchKeyword('let')) {
	            if (kind === 'const' || kind === 'let') {
	                tolerateUnexpectedToken(lookahead, Messages.UnexpectedToken);
	            }
	        }
	
	        params.push(lookahead);
	        return parseVariableIdentifier(kind);
	    }
	
	    function parsePatternWithDefault(params, kind) {
	        var startToken = lookahead, pattern, previousAllowYield, right;
	        pattern = parsePattern(params, kind);
	        if (match('=')) {
	            lex();
	            previousAllowYield = state.allowYield;
	            state.allowYield = true;
	            right = isolateCoverGrammar(parseAssignmentExpression);
	            state.allowYield = previousAllowYield;
	            pattern = new WrappingNode(startToken).finishAssignmentPattern(pattern, right);
	        }
	        return pattern;
	    }
	
	    // ECMA-262 12.2.5 Array Initializer
	
	    function parseArrayInitializer() {
	        var elements = [], node = new Node(), restSpread;
	
	        expect('[');
	
	        while (!match(']')) {
	            if (match(',')) {
	                lex();
	                elements.push(null);
	            } else if (match('...')) {
	                restSpread = new Node();
	                lex();
	                restSpread.finishSpreadElement(inheritCoverGrammar(parseAssignmentExpression));
	
	                if (!match(']')) {
	                    isAssignmentTarget = isBindingElement = false;
	                    expect(',');
	                }
	                elements.push(restSpread);
	            } else {
	                elements.push(inheritCoverGrammar(parseAssignmentExpression));
	
	                if (!match(']')) {
	                    expect(',');
	                }
	            }
	        }
	
	        lex();
	
	        return node.finishArrayExpression(elements);
	    }
	
	    // ECMA-262 12.2.6 Object Initializer
	
	    function parsePropertyFunction(node, paramInfo, isGenerator) {
	        var previousStrict, body;
	
	        isAssignmentTarget = isBindingElement = false;
	
	        previousStrict = strict;
	        body = isolateCoverGrammar(parseFunctionSourceElements);
	
	        if (strict && paramInfo.firstRestricted) {
	            tolerateUnexpectedToken(paramInfo.firstRestricted, paramInfo.message);
	        }
	        if (strict && paramInfo.stricted) {
	            tolerateUnexpectedToken(paramInfo.stricted, paramInfo.message);
	        }
	
	        strict = previousStrict;
	        return node.finishFunctionExpression(null, paramInfo.params, paramInfo.defaults, body, isGenerator);
	    }
	
	    function parsePropertyMethodFunction() {
	        var params, method, node = new Node(),
	            previousAllowYield = state.allowYield;
	
	        state.allowYield = false;
	        params = parseParams();
	        state.allowYield = previousAllowYield;
	
	        state.allowYield = false;
	        method = parsePropertyFunction(node, params, false);
	        state.allowYield = previousAllowYield;
	
	        return method;
	    }
	
	    function parseObjectPropertyKey() {
	        var token, node = new Node(), expr;
	
	        token = lex();
	
	        // Note: This function is called only from parseObjectProperty(), where
	        // EOF and Punctuator tokens are already filtered out.
	
	        switch (token.type) {
	        case Token.StringLiteral:
	        case Token.NumericLiteral:
	            if (strict && token.octal) {
	                tolerateUnexpectedToken(token, Messages.StrictOctalLiteral);
	            }
	            return node.finishLiteral(token);
	        case Token.Identifier:
	        case Token.BooleanLiteral:
	        case Token.NullLiteral:
	        case Token.Keyword:
	            return node.finishIdentifier(token.value);
	        case Token.Punctuator:
	            if (token.value === '[') {
	                expr = isolateCoverGrammar(parseAssignmentExpression);
	                expect(']');
	                return expr;
	            }
	            break;
	        }
	        throwUnexpectedToken(token);
	    }
	
	    function lookaheadPropertyName() {
	        switch (lookahead.type) {
	        case Token.Identifier:
	        case Token.StringLiteral:
	        case Token.BooleanLiteral:
	        case Token.NullLiteral:
	        case Token.NumericLiteral:
	        case Token.Keyword:
	            return true;
	        case Token.Punctuator:
	            return lookahead.value === '[';
	        }
	        return false;
	    }
	
	    // This function is to try to parse a MethodDefinition as defined in 14.3. But in the case of object literals,
	    // it might be called at a position where there is in fact a short hand identifier pattern or a data property.
	    // This can only be determined after we consumed up to the left parentheses.
	    //
	    // In order to avoid back tracking, it returns `null` if the position is not a MethodDefinition and the caller
	    // is responsible to visit other options.
	    function tryParseMethodDefinition(token, key, computed, node) {
	        var value, options, methodNode, params,
	            previousAllowYield = state.allowYield;
	
	        if (token.type === Token.Identifier) {
	            // check for `get` and `set`;
	
	            if (token.value === 'get' && lookaheadPropertyName()) {
	                computed = match('[');
	                key = parseObjectPropertyKey();
	                methodNode = new Node();
	                expect('(');
	                expect(')');
	
	                state.allowYield = false;
	                value = parsePropertyFunction(methodNode, {
	                    params: [],
	                    defaults: [],
	                    stricted: null,
	                    firstRestricted: null,
	                    message: null
	                }, false);
	                state.allowYield = previousAllowYield;
	
	                return node.finishProperty('get', key, computed, value, false, false);
	            } else if (token.value === 'set' && lookaheadPropertyName()) {
	                computed = match('[');
	                key = parseObjectPropertyKey();
	                methodNode = new Node();
	                expect('(');
	
	                options = {
	                    params: [],
	                    defaultCount: 0,
	                    defaults: [],
	                    firstRestricted: null,
	                    paramSet: {}
	                };
	                if (match(')')) {
	                    tolerateUnexpectedToken(lookahead);
	                } else {
	                    state.allowYield = false;
	                    parseParam(options);
	                    state.allowYield = previousAllowYield;
	                    if (options.defaultCount === 0) {
	                        options.defaults = [];
	                    }
	                }
	                expect(')');
	
	                state.allowYield = false;
	                value = parsePropertyFunction(methodNode, options, false);
	                state.allowYield = previousAllowYield;
	
	                return node.finishProperty('set', key, computed, value, false, false);
	            }
	        } else if (token.type === Token.Punctuator && token.value === '*' && lookaheadPropertyName()) {
	            computed = match('[');
	            key = parseObjectPropertyKey();
	            methodNode = new Node();
	
	            state.allowYield = true;
	            params = parseParams();
	            state.allowYield = previousAllowYield;
	
	            state.allowYield = false;
	            value = parsePropertyFunction(methodNode, params, true);
	            state.allowYield = previousAllowYield;
	
	            return node.finishProperty('init', key, computed, value, true, false);
	        }
	
	        if (key && match('(')) {
	            value = parsePropertyMethodFunction();
	            return node.finishProperty('init', key, computed, value, true, false);
	        }
	
	        // Not a MethodDefinition.
	        return null;
	    }
	
	    function parseObjectProperty(hasProto) {
	        var token = lookahead, node = new Node(), computed, key, maybeMethod, proto, value;
	
	        computed = match('[');
	        if (match('*')) {
	            lex();
	        } else {
	            key = parseObjectPropertyKey();
	        }
	        maybeMethod = tryParseMethodDefinition(token, key, computed, node);
	        if (maybeMethod) {
	            return maybeMethod;
	        }
	
	        if (!key) {
	            throwUnexpectedToken(lookahead);
	        }
	
	        // Check for duplicated __proto__
	        if (!computed) {
	            proto = (key.type === Syntax.Identifier && key.name === '__proto__') ||
	                (key.type === Syntax.Literal && key.value === '__proto__');
	            if (hasProto.value && proto) {
	                tolerateError(Messages.DuplicateProtoProperty);
	            }
	            hasProto.value |= proto;
	        }
	
	        if (match(':')) {
	            lex();
	            value = inheritCoverGrammar(parseAssignmentExpression);
	            return node.finishProperty('init', key, computed, value, false, false);
	        }
	
	        if (token.type === Token.Identifier) {
	            if (match('=')) {
	                firstCoverInitializedNameError = lookahead;
	                lex();
	                value = isolateCoverGrammar(parseAssignmentExpression);
	                return node.finishProperty('init', key, computed,
	                    new WrappingNode(token).finishAssignmentPattern(key, value), false, true);
	            }
	            return node.finishProperty('init', key, computed, key, false, true);
	        }
	
	        throwUnexpectedToken(lookahead);
	    }
	
	    function parseObjectInitializer() {
	        var properties = [], hasProto = {value: false}, node = new Node();
	
	        expect('{');
	
	        while (!match('}')) {
	            properties.push(parseObjectProperty(hasProto));
	
	            if (!match('}')) {
	                expectCommaSeparator();
	            }
	        }
	
	        expect('}');
	
	        return node.finishObjectExpression(properties);
	    }
	
	    function reinterpretExpressionAsPattern(expr) {
	        var i;
	        switch (expr.type) {
	        case Syntax.Identifier:
	        case Syntax.MemberExpression:
	        case Syntax.RestElement:
	        case Syntax.AssignmentPattern:
	            break;
	        case Syntax.SpreadElement:
	            expr.type = Syntax.RestElement;
	            reinterpretExpressionAsPattern(expr.argument);
	            break;
	        case Syntax.ArrayExpression:
	            expr.type = Syntax.ArrayPattern;
	            for (i = 0; i < expr.elements.length; i++) {
	                if (expr.elements[i] !== null) {
	                    reinterpretExpressionAsPattern(expr.elements[i]);
	                }
	            }
	            break;
	        case Syntax.ObjectExpression:
	            expr.type = Syntax.ObjectPattern;
	            for (i = 0; i < expr.properties.length; i++) {
	                reinterpretExpressionAsPattern(expr.properties[i].value);
	            }
	            break;
	        case Syntax.AssignmentExpression:
	            expr.type = Syntax.AssignmentPattern;
	            reinterpretExpressionAsPattern(expr.left);
	            break;
	        default:
	            // Allow other node type for tolerant parsing.
	            break;
	        }
	    }
	
	    // ECMA-262 12.2.9 Template Literals
	
	    function parseTemplateElement(option) {
	        var node, token;
	
	        if (lookahead.type !== Token.Template || (option.head && !lookahead.head)) {
	            throwUnexpectedToken();
	        }
	
	        node = new Node();
	        token = lex();
	
	        return node.finishTemplateElement({ raw: token.value.raw, cooked: token.value.cooked }, token.tail);
	    }
	
	    function parseTemplateLiteral() {
	        var quasi, quasis, expressions, node = new Node();
	
	        quasi = parseTemplateElement({ head: true });
	        quasis = [quasi];
	        expressions = [];
	
	        while (!quasi.tail) {
	            expressions.push(parseExpression());
	            quasi = parseTemplateElement({ head: false });
	            quasis.push(quasi);
	        }
	
	        return node.finishTemplateLiteral(quasis, expressions);
	    }
	
	    // ECMA-262 12.2.10 The Grouping Operator
	
	    function parseGroupExpression() {
	        var expr, expressions, startToken, i, params = [];
	
	        expect('(');
	
	        if (match(')')) {
	            lex();
	            if (!match('=>')) {
	                expect('=>');
	            }
	            return {
	                type: PlaceHolders.ArrowParameterPlaceHolder,
	                params: [],
	                rawParams: []
	            };
	        }
	
	        startToken = lookahead;
	        if (match('...')) {
	            expr = parseRestElement(params);
	            expect(')');
	            if (!match('=>')) {
	                expect('=>');
	            }
	            return {
	                type: PlaceHolders.ArrowParameterPlaceHolder,
	                params: [expr]
	            };
	        }
	
	        isBindingElement = true;
	        expr = inheritCoverGrammar(parseAssignmentExpression);
	
	        if (match(',')) {
	            isAssignmentTarget = false;
	            expressions = [expr];
	
	            while (startIndex < length) {
	                if (!match(',')) {
	                    break;
	                }
	                lex();
	
	                if (match('...')) {
	                    if (!isBindingElement) {
	                        throwUnexpectedToken(lookahead);
	                    }
	                    expressions.push(parseRestElement(params));
	                    expect(')');
	                    if (!match('=>')) {
	                        expect('=>');
	                    }
	                    isBindingElement = false;
	                    for (i = 0; i < expressions.length; i++) {
	                        reinterpretExpressionAsPattern(expressions[i]);
	                    }
	                    return {
	                        type: PlaceHolders.ArrowParameterPlaceHolder,
	                        params: expressions
	                    };
	                }
	
	                expressions.push(inheritCoverGrammar(parseAssignmentExpression));
	            }
	
	            expr = new WrappingNode(startToken).finishSequenceExpression(expressions);
	        }
	
	
	        expect(')');
	
	        if (match('=>')) {
	            if (expr.type === Syntax.Identifier && expr.name === 'yield') {
	                return {
	                    type: PlaceHolders.ArrowParameterPlaceHolder,
	                    params: [expr]
	                };
	            }
	
	            if (!isBindingElement) {
	                throwUnexpectedToken(lookahead);
	            }
	
	            if (expr.type === Syntax.SequenceExpression) {
	                for (i = 0; i < expr.expressions.length; i++) {
	                    reinterpretExpressionAsPattern(expr.expressions[i]);
	                }
	            } else {
	                reinterpretExpressionAsPattern(expr);
	            }
	
	            expr = {
	                type: PlaceHolders.ArrowParameterPlaceHolder,
	                params: expr.type === Syntax.SequenceExpression ? expr.expressions : [expr]
	            };
	        }
	        isBindingElement = false;
	        return expr;
	    }
	
	
	    // ECMA-262 12.2 Primary Expressions
	
	    function parsePrimaryExpression() {
	        var type, token, expr, node;
	
	        if (match('(')) {
	            isBindingElement = false;
	            return inheritCoverGrammar(parseGroupExpression);
	        }
	
	        if (match('[')) {
	            return inheritCoverGrammar(parseArrayInitializer);
	        }
	
	        if (match('{')) {
	            return inheritCoverGrammar(parseObjectInitializer);
	        }
	
	        type = lookahead.type;
	        node = new Node();
	
	        if (type === Token.Identifier) {
	            if (state.sourceType === 'module' && lookahead.value === 'await') {
	                tolerateUnexpectedToken(lookahead);
	            }
	            expr = node.finishIdentifier(lex().value);
	        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {
	            isAssignmentTarget = isBindingElement = false;
	            if (strict && lookahead.octal) {
	                tolerateUnexpectedToken(lookahead, Messages.StrictOctalLiteral);
	            }
	            expr = node.finishLiteral(lex());
	        } else if (type === Token.Keyword) {
	            if (!strict && state.allowYield && matchKeyword('yield')) {
	                return parseNonComputedProperty();
	            }
	            if (!strict && matchKeyword('let')) {
	                return node.finishIdentifier(lex().value);
	            }
	            isAssignmentTarget = isBindingElement = false;
	            if (matchKeyword('function')) {
	                return parseFunctionExpression();
	            }
	            if (matchKeyword('this')) {
	                lex();
	                return node.finishThisExpression();
	            }
	            if (matchKeyword('class')) {
	                return parseClassExpression();
	            }
	            throwUnexpectedToken(lex());
	        } else if (type === Token.BooleanLiteral) {
	            isAssignmentTarget = isBindingElement = false;
	            token = lex();
	            token.value = (token.value === 'true');
	            expr = node.finishLiteral(token);
	        } else if (type === Token.NullLiteral) {
	            isAssignmentTarget = isBindingElement = false;
	            token = lex();
	            token.value = null;
	            expr = node.finishLiteral(token);
	        } else if (match('/') || match('/=')) {
	            isAssignmentTarget = isBindingElement = false;
	            index = startIndex;
	
	            if (typeof extra.tokens !== 'undefined') {
	                token = collectRegex();
	            } else {
	                token = scanRegExp();
	            }
	            lex();
	            expr = node.finishLiteral(token);
	        } else if (type === Token.Template) {
	            expr = parseTemplateLiteral();
	        } else {
	            throwUnexpectedToken(lex());
	        }
	
	        return expr;
	    }
	
	    // ECMA-262 12.3 Left-Hand-Side Expressions
	
	    function parseArguments() {
	        var args = [], expr;
	
	        expect('(');
	
	        if (!match(')')) {
	            while (startIndex < length) {
	                if (match('...')) {
	                    expr = new Node();
	                    lex();
	                    expr.finishSpreadElement(isolateCoverGrammar(parseAssignmentExpression));
	                } else {
	                    expr = isolateCoverGrammar(parseAssignmentExpression);
	                }
	                args.push(expr);
	                if (match(')')) {
	                    break;
	                }
	                expectCommaSeparator();
	            }
	        }
	
	        expect(')');
	
	        return args;
	    }
	
	    function parseNonComputedProperty() {
	        var token, node = new Node();
	
	        token = lex();
	
	        if (!isIdentifierName(token)) {
	            throwUnexpectedToken(token);
	        }
	
	        return node.finishIdentifier(token.value);
	    }
	
	    function parseNonComputedMember() {
	        expect('.');
	
	        return parseNonComputedProperty();
	    }
	
	    function parseComputedMember() {
	        var expr;
	
	        expect('[');
	
	        expr = isolateCoverGrammar(parseExpression);
	
	        expect(']');
	
	        return expr;
	    }
	
	    // ECMA-262 12.3.3 The new Operator
	
	    function parseNewExpression() {
	        var callee, args, node = new Node();
	
	        expectKeyword('new');
	
	        if (match('.')) {
	            lex();
	            if (lookahead.type === Token.Identifier && lookahead.value === 'target') {
	                if (state.inFunctionBody) {
	                    lex();
	                    return node.finishMetaProperty('new', 'target');
	                }
	            }
	            throwUnexpectedToken(lookahead);
	        }
	
	        callee = isolateCoverGrammar(parseLeftHandSideExpression);
	        args = match('(') ? parseArguments() : [];
	
	        isAssignmentTarget = isBindingElement = false;
	
	        return node.finishNewExpression(callee, args);
	    }
	
	    // ECMA-262 12.3.4 Function Calls
	
	    function parseLeftHandSideExpressionAllowCall() {
	        var quasi, expr, args, property, startToken, previousAllowIn = state.allowIn;
	
	        startToken = lookahead;
	        state.allowIn = true;
	
	        if (matchKeyword('super') && state.inFunctionBody) {
	            expr = new Node();
	            lex();
	            expr = expr.finishSuper();
	            if (!match('(') && !match('.') && !match('[')) {
	                throwUnexpectedToken(lookahead);
	            }
	        } else {
	            expr = inheritCoverGrammar(matchKeyword('new') ? parseNewExpression : parsePrimaryExpression);
	        }
	
	        for (;;) {
	            if (match('.')) {
	                isBindingElement = false;
	                isAssignmentTarget = true;
	                property = parseNonComputedMember();
	                expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);
	            } else if (match('(')) {
	                isBindingElement = false;
	                isAssignmentTarget = false;
	                args = parseArguments();
	                expr = new WrappingNode(startToken).finishCallExpression(expr, args);
	            } else if (match('[')) {
	                isBindingElement = false;
	                isAssignmentTarget = true;
	                property = parseComputedMember();
	                expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);
	            } else if (lookahead.type === Token.Template && lookahead.head) {
	                quasi = parseTemplateLiteral();
	                expr = new WrappingNode(startToken).finishTaggedTemplateExpression(expr, quasi);
	            } else {
	                break;
	            }
	        }
	        state.allowIn = previousAllowIn;
	
	        return expr;
	    }
	
	    // ECMA-262 12.3 Left-Hand-Side Expressions
	
	    function parseLeftHandSideExpression() {
	        var quasi, expr, property, startToken;
	        assert(state.allowIn, 'callee of new expression always allow in keyword.');
	
	        startToken = lookahead;
	
	        if (matchKeyword('super') && state.inFunctionBody) {
	            expr = new Node();
	            lex();
	            expr = expr.finishSuper();
	            if (!match('[') && !match('.')) {
	                throwUnexpectedToken(lookahead);
	            }
	        } else {
	            expr = inheritCoverGrammar(matchKeyword('new') ? parseNewExpression : parsePrimaryExpression);
	        }
	
	        for (;;) {
	            if (match('[')) {
	                isBindingElement = false;
	                isAssignmentTarget = true;
	                property = parseComputedMember();
	                expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);
	            } else if (match('.')) {
	                isBindingElement = false;
	                isAssignmentTarget = true;
	                property = parseNonComputedMember();
	                expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);
	            } else if (lookahead.type === Token.Template && lookahead.head) {
	                quasi = parseTemplateLiteral();
	                expr = new WrappingNode(startToken).finishTaggedTemplateExpression(expr, quasi);
	            } else {
	                break;
	            }
	        }
	        return expr;
	    }
	
	    // ECMA-262 12.4 Postfix Expressions
	
	    function parsePostfixExpression() {
	        var expr, token, startToken = lookahead;
	
	        expr = inheritCoverGrammar(parseLeftHandSideExpressionAllowCall);
	
	        if (!hasLineTerminator && lookahead.type === Token.Punctuator) {
	            if (match('++') || match('--')) {
	                // ECMA-262 11.3.1, 11.3.2
	                if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {
	                    tolerateError(Messages.StrictLHSPostfix);
	                }
	
	                if (!isAssignmentTarget) {
	                    tolerateError(Messages.InvalidLHSInAssignment);
	                }
	
	                isAssignmentTarget = isBindingElement = false;
	
	                token = lex();
	                expr = new WrappingNode(startToken).finishPostfixExpression(token.value, expr);
	            }
	        }
	
	        return expr;
	    }
	
	    // ECMA-262 12.5 Unary Operators
	
	    function parseUnaryExpression() {
	        var token, expr, startToken;
	
	        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {
	            expr = parsePostfixExpression();
	        } else if (match('++') || match('--')) {
	            startToken = lookahead;
	            token = lex();
	            expr = inheritCoverGrammar(parseUnaryExpression);
	            // ECMA-262 11.4.4, 11.4.5
	            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {
	                tolerateError(Messages.StrictLHSPrefix);
	            }
	
	            if (!isAssignmentTarget) {
	                tolerateError(Messages.InvalidLHSInAssignment);
	            }
	            expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);
	            isAssignmentTarget = isBindingElement = false;
	        } else if (match('+') || match('-') || match('~') || match('!')) {
	            startToken = lookahead;
	            token = lex();
	            expr = inheritCoverGrammar(parseUnaryExpression);
	            expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);
	            isAssignmentTarget = isBindingElement = false;
	        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {
	            startToken = lookahead;
	            token = lex();
	            expr = inheritCoverGrammar(parseUnaryExpression);
	            expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);
	            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {
	                tolerateError(Messages.StrictDelete);
	            }
	            isAssignmentTarget = isBindingElement = false;
	        } else {
	            expr = parsePostfixExpression();
	        }
	
	        return expr;
	    }
	
	    function binaryPrecedence(token, allowIn) {
	        var prec = 0;
	
	        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {
	            return 0;
	        }
	
	        switch (token.value) {
	        case '||':
	            prec = 1;
	            break;
	
	        case '&&':
	            prec = 2;
	            break;
	
	        case '|':
	            prec = 3;
	            break;
	
	        case '^':
	            prec = 4;
	            break;
	
	        case '&':
	            prec = 5;
	            break;
	
	        case '==':
	        case '!=':
	        case '===':
	        case '!==':
	            prec = 6;
	            break;
	
	        case '<':
	        case '>':
	        case '<=':
	        case '>=':
	        case 'instanceof':
	            prec = 7;
	            break;
	
	        case 'in':
	            prec = allowIn ? 7 : 0;
	            break;
	
	        case '<<':
	        case '>>':
	        case '>>>':
	            prec = 8;
	            break;
	
	        case '+':
	        case '-':
	            prec = 9;
	            break;
	
	        case '*':
	        case '/':
	        case '%':
	            prec = 11;
	            break;
	
	        default:
	            break;
	        }
	
	        return prec;
	    }
	
	    // ECMA-262 12.6 Multiplicative Operators
	    // ECMA-262 12.7 Additive Operators
	    // ECMA-262 12.8 Bitwise Shift Operators
	    // ECMA-262 12.9 Relational Operators
	    // ECMA-262 12.10 Equality Operators
	    // ECMA-262 12.11 Binary Bitwise Operators
	    // ECMA-262 12.12 Binary Logical Operators
	
	    function parseBinaryExpression() {
	        var marker, markers, expr, token, prec, stack, right, operator, left, i;
	
	        marker = lookahead;
	        left = inheritCoverGrammar(parseUnaryExpression);
	
	        token = lookahead;
	        prec = binaryPrecedence(token, state.allowIn);
	        if (prec === 0) {
	            return left;
	        }
	        isAssignmentTarget = isBindingElement = false;
	        token.prec = prec;
	        lex();
	
	        markers = [marker, lookahead];
	        right = isolateCoverGrammar(parseUnaryExpression);
	
	        stack = [left, token, right];
	
	        while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {
	
	            // Reduce: make a binary expression from the three topmost entries.
	            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {
	                right = stack.pop();
	                operator = stack.pop().value;
	                left = stack.pop();
	                markers.pop();
	                expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);
	                stack.push(expr);
	            }
	
	            // Shift.
	            token = lex();
	            token.prec = prec;
	            stack.push(token);
	            markers.push(lookahead);
	            expr = isolateCoverGrammar(parseUnaryExpression);
	            stack.push(expr);
	        }
	
	        // Final reduce to clean-up the stack.
	        i = stack.length - 1;
	        expr = stack[i];
	        markers.pop();
	        while (i > 1) {
	            expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);
	            i -= 2;
	        }
	
	        return expr;
	    }
	
	
	    // ECMA-262 12.13 Conditional Operator
	
	    function parseConditionalExpression() {
	        var expr, previousAllowIn, consequent, alternate, startToken;
	
	        startToken = lookahead;
	
	        expr = inheritCoverGrammar(parseBinaryExpression);
	        if (match('?')) {
	            lex();
	            previousAllowIn = state.allowIn;
	            state.allowIn = true;
	            consequent = isolateCoverGrammar(parseAssignmentExpression);
	            state.allowIn = previousAllowIn;
	            expect(':');
	            alternate = isolateCoverGrammar(parseAssignmentExpression);
	
	            expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);
	            isAssignmentTarget = isBindingElement = false;
	        }
	
	        return expr;
	    }
	
	    // ECMA-262 14.2 Arrow Function Definitions
	
	    function parseConciseBody() {
	        if (match('{')) {
	            return parseFunctionSourceElements();
	        }
	        return isolateCoverGrammar(parseAssignmentExpression);
	    }
	
	    function checkPatternParam(options, param) {
	        var i;
	        switch (param.type) {
	        case Syntax.Identifier:
	            validateParam(options, param, param.name);
	            break;
	        case Syntax.RestElement:
	            checkPatternParam(options, param.argument);
	            break;
	        case Syntax.AssignmentPattern:
	            checkPatternParam(options, param.left);
	            break;
	        case Syntax.ArrayPattern:
	            for (i = 0; i < param.elements.length; i++) {
	                if (param.elements[i] !== null) {
	                    checkPatternParam(options, param.elements[i]);
	                }
	            }
	            break;
	        case Syntax.YieldExpression:
	            break;
	        default:
	            assert(param.type === Syntax.ObjectPattern, 'Invalid type');
	            for (i = 0; i < param.properties.length; i++) {
	                checkPatternParam(options, param.properties[i].value);
	            }
	            break;
	        }
	    }
	    function reinterpretAsCoverFormalsList(expr) {
	        var i, len, param, params, defaults, defaultCount, options, token;
	
	        defaults = [];
	        defaultCount = 0;
	        params = [expr];
	
	        switch (expr.type) {
	        case Syntax.Identifier:
	            break;
	        case PlaceHolders.ArrowParameterPlaceHolder:
	            params = expr.params;
	            break;
	        default:
	            return null;
	        }
	
	        options = {
	            paramSet: {}
	        };
	
	        for (i = 0, len = params.length; i < len; i += 1) {
	            param = params[i];
	            switch (param.type) {
	            case Syntax.AssignmentPattern:
	                params[i] = param.left;
	                if (param.right.type === Syntax.YieldExpression) {
	                    if (param.right.argument) {
	                        throwUnexpectedToken(lookahead);
	                    }
	                    param.right.type = Syntax.Identifier;
	                    param.right.name = 'yield';
	                    delete param.right.argument;
	                    delete param.right.delegate;
	                }
	                defaults.push(param.right);
	                ++defaultCount;
	                checkPatternParam(options, param.left);
	                break;
	            default:
	                checkPatternParam(options, param);
	                params[i] = param;
	                defaults.push(null);
	                break;
	            }
	        }
	
	        if (strict || !state.allowYield) {
	            for (i = 0, len = params.length; i < len; i += 1) {
	                param = params[i];
	                if (param.type === Syntax.YieldExpression) {
	                    throwUnexpectedToken(lookahead);
	                }
	            }
	        }
	
	        if (options.message === Messages.StrictParamDupe) {
	            token = strict ? options.stricted : options.firstRestricted;
	            throwUnexpectedToken(token, options.message);
	        }
	
	        if (defaultCount === 0) {
	            defaults = [];
	        }
	
	        return {
	            params: params,
	            defaults: defaults,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    }
	
	    function parseArrowFunctionExpression(options, node) {
	        var previousStrict, previousAllowYield, body;
	
	        if (hasLineTerminator) {
	            tolerateUnexpectedToken(lookahead);
	        }
	        expect('=>');
	
	        previousStrict = strict;
	        previousAllowYield = state.allowYield;
	        state.allowYield = true;
	
	        body = parseConciseBody();
	
	        if (strict && options.firstRestricted) {
	            throwUnexpectedToken(options.firstRestricted, options.message);
	        }
	        if (strict && options.stricted) {
	            tolerateUnexpectedToken(options.stricted, options.message);
	        }
	
	        strict = previousStrict;
	        state.allowYield = previousAllowYield;
	
	        return node.finishArrowFunctionExpression(options.params, options.defaults, body, body.type !== Syntax.BlockStatement);
	    }
	
	    // ECMA-262 14.4 Yield expression
	
	    function parseYieldExpression() {
	        var argument, expr, delegate, previousAllowYield;
	
	        argument = null;
	        expr = new Node();
	        delegate = false;
	
	        expectKeyword('yield');
	
	        if (!hasLineTerminator) {
	            previousAllowYield = state.allowYield;
	            state.allowYield = false;
	            delegate = match('*');
	            if (delegate) {
	                lex();
	                argument = parseAssignmentExpression();
	            } else {
	                if (!match(';') && !match('}') && !match(')') && lookahead.type !== Token.EOF) {
	                    argument = parseAssignmentExpression();
	                }
	            }
	            state.allowYield = previousAllowYield;
	        }
	
	        return expr.finishYieldExpression(argument, delegate);
	    }
	
	    // ECMA-262 12.14 Assignment Operators
	
	    function parseAssignmentExpression() {
	        var token, expr, right, list, startToken;
	
	        startToken = lookahead;
	        token = lookahead;
	
	        if (!state.allowYield && matchKeyword('yield')) {
	            return parseYieldExpression();
	        }
	
	        expr = parseConditionalExpression();
	
	        if (expr.type === PlaceHolders.ArrowParameterPlaceHolder || match('=>')) {
	            isAssignmentTarget = isBindingElement = false;
	            list = reinterpretAsCoverFormalsList(expr);
	
	            if (list) {
	                firstCoverInitializedNameError = null;
	                return parseArrowFunctionExpression(list, new WrappingNode(startToken));
	            }
	
	            return expr;
	        }
	
	        if (matchAssign()) {
	            if (!isAssignmentTarget) {
	                tolerateError(Messages.InvalidLHSInAssignment);
	            }
	
	            // ECMA-262 12.1.1
	            if (strict && expr.type === Syntax.Identifier) {
	                if (isRestrictedWord(expr.name)) {
	                    tolerateUnexpectedToken(token, Messages.StrictLHSAssignment);
	                }
	                if (isStrictModeReservedWord(expr.name)) {
	                    tolerateUnexpectedToken(token, Messages.StrictReservedWord);
	                }
	            }
	
	            if (!match('=')) {
	                isAssignmentTarget = isBindingElement = false;
	            } else {
	                reinterpretExpressionAsPattern(expr);
	            }
	
	            token = lex();
	            right = isolateCoverGrammar(parseAssignmentExpression);
	            expr = new WrappingNode(startToken).finishAssignmentExpression(token.value, expr, right);
	            firstCoverInitializedNameError = null;
	        }
	
	        return expr;
	    }
	
	    // ECMA-262 12.15 Comma Operator
	
	    function parseExpression() {
	        var expr, startToken = lookahead, expressions;
	
	        expr = isolateCoverGrammar(parseAssignmentExpression);
	
	        if (match(',')) {
	            expressions = [expr];
	
	            while (startIndex < length) {
	                if (!match(',')) {
	                    break;
	                }
	                lex();
	                expressions.push(isolateCoverGrammar(parseAssignmentExpression));
	            }
	
	            expr = new WrappingNode(startToken).finishSequenceExpression(expressions);
	        }
	
	        return expr;
	    }
	
	    // ECMA-262 13.2 Block
	
	    function parseStatementListItem() {
	        if (lookahead.type === Token.Keyword) {
	            switch (lookahead.value) {
	            case 'export':
	                if (state.sourceType !== 'module') {
	                    tolerateUnexpectedToken(lookahead, Messages.IllegalExportDeclaration);
	                }
	                return parseExportDeclaration();
	            case 'import':
	                if (state.sourceType !== 'module') {
	                    tolerateUnexpectedToken(lookahead, Messages.IllegalImportDeclaration);
	                }
	                return parseImportDeclaration();
	            case 'const':
	                return parseLexicalDeclaration({inFor: false});
	            case 'function':
	                return parseFunctionDeclaration(new Node());
	            case 'class':
	                return parseClassDeclaration();
	            }
	        }
	
	        if (matchKeyword('let') && isLexicalDeclaration()) {
	            return parseLexicalDeclaration({inFor: false});
	        }
	
	        return parseStatement();
	    }
	
	    function parseStatementList() {
	        var list = [];
	        while (startIndex < length) {
	            if (match('}')) {
	                break;
	            }
	            list.push(parseStatementListItem());
	        }
	
	        return list;
	    }
	
	    function parseBlock() {
	        var block, node = new Node();
	
	        expect('{');
	
	        block = parseStatementList();
	
	        expect('}');
	
	        return node.finishBlockStatement(block);
	    }
	
	    // ECMA-262 13.3.2 Variable Statement
	
	    function parseVariableIdentifier(kind) {
	        var token, node = new Node();
	
	        token = lex();
	
	        if (token.type === Token.Keyword && token.value === 'yield') {
	            if (strict) {
	                tolerateUnexpectedToken(token, Messages.StrictReservedWord);
	            } if (!state.allowYield) {
	                throwUnexpectedToken(token);
	            }
	        } else if (token.type !== Token.Identifier) {
	            if (strict && token.type === Token.Keyword && isStrictModeReservedWord(token.value)) {
	                tolerateUnexpectedToken(token, Messages.StrictReservedWord);
	            } else {
	                if (strict || token.value !== 'let' || kind !== 'var') {
	                    throwUnexpectedToken(token);
	                }
	            }
	        } else if (state.sourceType === 'module' && token.type === Token.Identifier && token.value === 'await') {
	            tolerateUnexpectedToken(token);
	        }
	
	        return node.finishIdentifier(token.value);
	    }
	
	    function parseVariableDeclaration(options) {
	        var init = null, id, node = new Node(), params = [];
	
	        id = parsePattern(params, 'var');
	
	        // ECMA-262 12.2.1
	        if (strict && isRestrictedWord(id.name)) {
	            tolerateError(Messages.StrictVarName);
	        }
	
	        if (match('=')) {
	            lex();
	            init = isolateCoverGrammar(parseAssignmentExpression);
	        } else if (id.type !== Syntax.Identifier && !options.inFor) {
	            expect('=');
	        }
	
	        return node.finishVariableDeclarator(id, init);
	    }
	
	    function parseVariableDeclarationList(options) {
	        var opt, list;
	
	        opt = { inFor: options.inFor };
	        list = [parseVariableDeclaration(opt)];
	
	        while (match(',')) {
	            lex();
	            list.push(parseVariableDeclaration(opt));
	        }
	
	        return list;
	    }
	
	    function parseVariableStatement(node) {
	        var declarations;
	
	        expectKeyword('var');
	
	        declarations = parseVariableDeclarationList({ inFor: false });
	
	        consumeSemicolon();
	
	        return node.finishVariableDeclaration(declarations);
	    }
	
	    // ECMA-262 13.3.1 Let and Const Declarations
	
	    function parseLexicalBinding(kind, options) {
	        var init = null, id, node = new Node(), params = [];
	
	        id = parsePattern(params, kind);
	
	        // ECMA-262 12.2.1
	        if (strict && id.type === Syntax.Identifier && isRestrictedWord(id.name)) {
	            tolerateError(Messages.StrictVarName);
	        }
	
	        if (kind === 'const') {
	            if (!matchKeyword('in') && !matchContextualKeyword('of')) {
	                expect('=');
	                init = isolateCoverGrammar(parseAssignmentExpression);
	            }
	        } else if ((!options.inFor && id.type !== Syntax.Identifier) || match('=')) {
	            expect('=');
	            init = isolateCoverGrammar(parseAssignmentExpression);
	        }
	
	        return node.finishVariableDeclarator(id, init);
	    }
	
	    function parseBindingList(kind, options) {
	        var list = [parseLexicalBinding(kind, options)];
	
	        while (match(',')) {
	            lex();
	            list.push(parseLexicalBinding(kind, options));
	        }
	
	        return list;
	    }
	
	
	    function tokenizerState() {
	        return {
	            index: index,
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            hasLineTerminator: hasLineTerminator,
	            lastIndex: lastIndex,
	            lastLineNumber: lastLineNumber,
	            lastLineStart: lastLineStart,
	            startIndex: startIndex,
	            startLineNumber: startLineNumber,
	            startLineStart: startLineStart,
	            lookahead: lookahead,
	            tokenCount: extra.tokens ? extra.tokens.length : 0
	        };
	    }
	
	    function resetTokenizerState(ts) {
	        index = ts.index;
	        lineNumber = ts.lineNumber;
	        lineStart = ts.lineStart;
	        hasLineTerminator = ts.hasLineTerminator;
	        lastIndex = ts.lastIndex;
	        lastLineNumber = ts.lastLineNumber;
	        lastLineStart = ts.lastLineStart;
	        startIndex = ts.startIndex;
	        startLineNumber = ts.startLineNumber;
	        startLineStart = ts.startLineStart;
	        lookahead = ts.lookahead;
	        if (extra.tokens) {
	            extra.tokens.splice(ts.tokenCount, extra.tokens.length);
	        }
	    }
	
	    function isLexicalDeclaration() {
	        var lexical, ts;
	
	        ts = tokenizerState();
	
	        lex();
	        lexical = (lookahead.type === Token.Identifier) || match('[') || match('{') ||
	            matchKeyword('let') || matchKeyword('yield');
	
	        resetTokenizerState(ts);
	
	        return lexical;
	    }
	
	    function parseLexicalDeclaration(options) {
	        var kind, declarations, node = new Node();
	
	        kind = lex().value;
	        assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');
	
	        declarations = parseBindingList(kind, options);
	
	        consumeSemicolon();
	
	        return node.finishLexicalDeclaration(declarations, kind);
	    }
	
	    function parseRestElement(params) {
	        var param, node = new Node();
	
	        lex();
	
	        if (match('{')) {
	            throwError(Messages.ObjectPatternAsRestParameter);
	        }
	
	        params.push(lookahead);
	
	        param = parseVariableIdentifier();
	
	        if (match('=')) {
	            throwError(Messages.DefaultRestParameter);
	        }
	
	        if (!match(')')) {
	            throwError(Messages.ParameterAfterRestParameter);
	        }
	
	        return node.finishRestElement(param);
	    }
	
	    // ECMA-262 13.4 Empty Statement
	
	    function parseEmptyStatement(node) {
	        expect(';');
	        return node.finishEmptyStatement();
	    }
	
	    // ECMA-262 12.4 Expression Statement
	
	    function parseExpressionStatement(node) {
	        var expr = parseExpression();
	        consumeSemicolon();
	        return node.finishExpressionStatement(expr);
	    }
	
	    // ECMA-262 13.6 If statement
	
	    function parseIfStatement(node) {
	        var test, consequent, alternate;
	
	        expectKeyword('if');
	
	        expect('(');
	
	        test = parseExpression();
	
	        expect(')');
	
	        consequent = parseStatement();
	
	        if (matchKeyword('else')) {
	            lex();
	            alternate = parseStatement();
	        } else {
	            alternate = null;
	        }
	
	        return node.finishIfStatement(test, consequent, alternate);
	    }
	
	    // ECMA-262 13.7 Iteration Statements
	
	    function parseDoWhileStatement(node) {
	        var body, test, oldInIteration;
	
	        expectKeyword('do');
	
	        oldInIteration = state.inIteration;
	        state.inIteration = true;
	
	        body = parseStatement();
	
	        state.inIteration = oldInIteration;
	
	        expectKeyword('while');
	
	        expect('(');
	
	        test = parseExpression();
	
	        expect(')');
	
	        if (match(';')) {
	            lex();
	        }
	
	        return node.finishDoWhileStatement(body, test);
	    }
	
	    function parseWhileStatement(node) {
	        var test, body, oldInIteration;
	
	        expectKeyword('while');
	
	        expect('(');
	
	        test = parseExpression();
	
	        expect(')');
	
	        oldInIteration = state.inIteration;
	        state.inIteration = true;
	
	        body = parseStatement();
	
	        state.inIteration = oldInIteration;
	
	        return node.finishWhileStatement(test, body);
	    }
	
	    function parseForStatement(node) {
	        var init, forIn, initSeq, initStartToken, test, update, left, right, kind, declarations,
	            body, oldInIteration, previousAllowIn = state.allowIn;
	
	        init = test = update = null;
	        forIn = true;
	
	        expectKeyword('for');
	
	        expect('(');
	
	        if (match(';')) {
	            lex();
	        } else {
	            if (matchKeyword('var')) {
	                init = new Node();
	                lex();
	
	                state.allowIn = false;
	                declarations = parseVariableDeclarationList({ inFor: true });
	                state.allowIn = previousAllowIn;
	
	                if (declarations.length === 1 && matchKeyword('in')) {
	                    init = init.finishVariableDeclaration(declarations);
	                    lex();
	                    left = init;
	                    right = parseExpression();
	                    init = null;
	                } else if (declarations.length === 1 && declarations[0].init === null && matchContextualKeyword('of')) {
	                    init = init.finishVariableDeclaration(declarations);
	                    lex();
	                    left = init;
	                    right = parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                } else {
	                    init = init.finishVariableDeclaration(declarations);
	                    expect(';');
	                }
	            } else if (matchKeyword('const') || matchKeyword('let')) {
	                init = new Node();
	                kind = lex().value;
	
	                if (!strict && lookahead.value === 'in') {
	                    init = init.finishIdentifier(kind);
	                    lex();
	                    left = init;
	                    right = parseExpression();
	                    init = null;
	                } else {
	                    state.allowIn = false;
	                    declarations = parseBindingList(kind, {inFor: true});
	                    state.allowIn = previousAllowIn;
	
	                    if (declarations.length === 1 && declarations[0].init === null && matchKeyword('in')) {
	                        init = init.finishLexicalDeclaration(declarations, kind);
	                        lex();
	                        left = init;
	                        right = parseExpression();
	                        init = null;
	                    } else if (declarations.length === 1 && declarations[0].init === null && matchContextualKeyword('of')) {
	                        init = init.finishLexicalDeclaration(declarations, kind);
	                        lex();
	                        left = init;
	                        right = parseAssignmentExpression();
	                        init = null;
	                        forIn = false;
	                    } else {
	                        consumeSemicolon();
	                        init = init.finishLexicalDeclaration(declarations, kind);
	                    }
	                }
	            } else {
	                initStartToken = lookahead;
	                state.allowIn = false;
	                init = inheritCoverGrammar(parseAssignmentExpression);
	                state.allowIn = previousAllowIn;
	
	                if (matchKeyword('in')) {
	                    if (!isAssignmentTarget) {
	                        tolerateError(Messages.InvalidLHSInForIn);
	                    }
	
	                    lex();
	                    reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = parseExpression();
	                    init = null;
	                } else if (matchContextualKeyword('of')) {
	                    if (!isAssignmentTarget) {
	                        tolerateError(Messages.InvalidLHSInForLoop);
	                    }
	
	                    lex();
	                    reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                } else {
	                    if (match(',')) {
	                        initSeq = [init];
	                        while (match(',')) {
	                            lex();
	                            initSeq.push(isolateCoverGrammar(parseAssignmentExpression));
	                        }
	                        init = new WrappingNode(initStartToken).finishSequenceExpression(initSeq);
	                    }
	                    expect(';');
	                }
	            }
	        }
	
	        if (typeof left === 'undefined') {
	
	            if (!match(';')) {
	                test = parseExpression();
	            }
	            expect(';');
	
	            if (!match(')')) {
	                update = parseExpression();
	            }
	        }
	
	        expect(')');
	
	        oldInIteration = state.inIteration;
	        state.inIteration = true;
	
	        body = isolateCoverGrammar(parseStatement);
	
	        state.inIteration = oldInIteration;
	
	        return (typeof left === 'undefined') ?
	                node.finishForStatement(init, test, update, body) :
	                forIn ? node.finishForInStatement(left, right, body) :
	                    node.finishForOfStatement(left, right, body);
	    }
	
	    // ECMA-262 13.8 The continue statement
	
	    function parseContinueStatement(node) {
	        var label = null, key;
	
	        expectKeyword('continue');
	
	        // Optimize the most common form: 'continue;'.
	        if (source.charCodeAt(startIndex) === 0x3B) {
	            lex();
	
	            if (!state.inIteration) {
	                throwError(Messages.IllegalContinue);
	            }
	
	            return node.finishContinueStatement(null);
	        }
	
	        if (hasLineTerminator) {
	            if (!state.inIteration) {
	                throwError(Messages.IllegalContinue);
	            }
	
	            return node.finishContinueStatement(null);
	        }
	
	        if (lookahead.type === Token.Identifier) {
	            label = parseVariableIdentifier();
	
	            key = '$' + label.name;
	            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
	                throwError(Messages.UnknownLabel, label.name);
	            }
	        }
	
	        consumeSemicolon();
	
	        if (label === null && !state.inIteration) {
	            throwError(Messages.IllegalContinue);
	        }
	
	        return node.finishContinueStatement(label);
	    }
	
	    // ECMA-262 13.9 The break statement
	
	    function parseBreakStatement(node) {
	        var label = null, key;
	
	        expectKeyword('break');
	
	        // Catch the very common case first: immediately a semicolon (U+003B).
	        if (source.charCodeAt(lastIndex) === 0x3B) {
	            lex();
	
	            if (!(state.inIteration || state.inSwitch)) {
	                throwError(Messages.IllegalBreak);
	            }
	
	            return node.finishBreakStatement(null);
	        }
	
	        if (hasLineTerminator) {
	            if (!(state.inIteration || state.inSwitch)) {
	                throwError(Messages.IllegalBreak);
	            }
	        } else if (lookahead.type === Token.Identifier) {
	            label = parseVariableIdentifier();
	
	            key = '$' + label.name;
	            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
	                throwError(Messages.UnknownLabel, label.name);
	            }
	        }
	
	        consumeSemicolon();
	
	        if (label === null && !(state.inIteration || state.inSwitch)) {
	            throwError(Messages.IllegalBreak);
	        }
	
	        return node.finishBreakStatement(label);
	    }
	
	    // ECMA-262 13.10 The return statement
	
	    function parseReturnStatement(node) {
	        var argument = null;
	
	        expectKeyword('return');
	
	        if (!state.inFunctionBody) {
	            tolerateError(Messages.IllegalReturn);
	        }
	
	        // 'return' followed by a space and an identifier is very common.
	        if (source.charCodeAt(lastIndex) === 0x20) {
	            if (isIdentifierStart(source.charCodeAt(lastIndex + 1))) {
	                argument = parseExpression();
	                consumeSemicolon();
	                return node.finishReturnStatement(argument);
	            }
	        }
	
	        if (hasLineTerminator) {
	            // HACK
	            return node.finishReturnStatement(null);
	        }
	
	        if (!match(';')) {
	            if (!match('}') && lookahead.type !== Token.EOF) {
	                argument = parseExpression();
	            }
	        }
	
	        consumeSemicolon();
	
	        return node.finishReturnStatement(argument);
	    }
	
	    // ECMA-262 13.11 The with statement
	
	    function parseWithStatement(node) {
	        var object, body;
	
	        if (strict) {
	            tolerateError(Messages.StrictModeWith);
	        }
	
	        expectKeyword('with');
	
	        expect('(');
	
	        object = parseExpression();
	
	        expect(')');
	
	        body = parseStatement();
	
	        return node.finishWithStatement(object, body);
	    }
	
	    // ECMA-262 13.12 The switch statement
	
	    function parseSwitchCase() {
	        var test, consequent = [], statement, node = new Node();
	
	        if (matchKeyword('default')) {
	            lex();
	            test = null;
	        } else {
	            expectKeyword('case');
	            test = parseExpression();
	        }
	        expect(':');
	
	        while (startIndex < length) {
	            if (match('}') || matchKeyword('default') || matchKeyword('case')) {
	                break;
	            }
	            statement = parseStatementListItem();
	            consequent.push(statement);
	        }
	
	        return node.finishSwitchCase(test, consequent);
	    }
	
	    function parseSwitchStatement(node) {
	        var discriminant, cases, clause, oldInSwitch, defaultFound;
	
	        expectKeyword('switch');
	
	        expect('(');
	
	        discriminant = parseExpression();
	
	        expect(')');
	
	        expect('{');
	
	        cases = [];
	
	        if (match('}')) {
	            lex();
	            return node.finishSwitchStatement(discriminant, cases);
	        }
	
	        oldInSwitch = state.inSwitch;
	        state.inSwitch = true;
	        defaultFound = false;
	
	        while (startIndex < length) {
	            if (match('}')) {
	                break;
	            }
	            clause = parseSwitchCase();
	            if (clause.test === null) {
	                if (defaultFound) {
	                    throwError(Messages.MultipleDefaultsInSwitch);
	                }
	                defaultFound = true;
	            }
	            cases.push(clause);
	        }
	
	        state.inSwitch = oldInSwitch;
	
	        expect('}');
	
	        return node.finishSwitchStatement(discriminant, cases);
	    }
	
	    // ECMA-262 13.14 The throw statement
	
	    function parseThrowStatement(node) {
	        var argument;
	
	        expectKeyword('throw');
	
	        if (hasLineTerminator) {
	            throwError(Messages.NewlineAfterThrow);
	        }
	
	        argument = parseExpression();
	
	        consumeSemicolon();
	
	        return node.finishThrowStatement(argument);
	    }
	
	    // ECMA-262 13.15 The try statement
	
	    function parseCatchClause() {
	        var param, params = [], paramMap = {}, key, i, body, node = new Node();
	
	        expectKeyword('catch');
	
	        expect('(');
	        if (match(')')) {
	            throwUnexpectedToken(lookahead);
	        }
	
	        param = parsePattern(params);
	        for (i = 0; i < params.length; i++) {
	            key = '$' + params[i].value;
	            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {
	                tolerateError(Messages.DuplicateBinding, params[i].value);
	            }
	            paramMap[key] = true;
	        }
	
	        // ECMA-262 12.14.1
	        if (strict && isRestrictedWord(param.name)) {
	            tolerateError(Messages.StrictCatchVariable);
	        }
	
	        expect(')');
	        body = parseBlock();
	        return node.finishCatchClause(param, body);
	    }
	
	    function parseTryStatement(node) {
	        var block, handler = null, finalizer = null;
	
	        expectKeyword('try');
	
	        block = parseBlock();
	
	        if (matchKeyword('catch')) {
	            handler = parseCatchClause();
	        }
	
	        if (matchKeyword('finally')) {
	            lex();
	            finalizer = parseBlock();
	        }
	
	        if (!handler && !finalizer) {
	            throwError(Messages.NoCatchOrFinally);
	        }
	
	        return node.finishTryStatement(block, handler, finalizer);
	    }
	
	    // ECMA-262 13.16 The debugger statement
	
	    function parseDebuggerStatement(node) {
	        expectKeyword('debugger');
	
	        consumeSemicolon();
	
	        return node.finishDebuggerStatement();
	    }
	
	    // 13 Statements
	
	    function parseStatement() {
	        var type = lookahead.type,
	            expr,
	            labeledBody,
	            key,
	            node;
	
	        if (type === Token.EOF) {
	            throwUnexpectedToken(lookahead);
	        }
	
	        if (type === Token.Punctuator && lookahead.value === '{') {
	            return parseBlock();
	        }
	        isAssignmentTarget = isBindingElement = true;
	        node = new Node();
	
	        if (type === Token.Punctuator) {
	            switch (lookahead.value) {
	            case ';':
	                return parseEmptyStatement(node);
	            case '(':
	                return parseExpressionStatement(node);
	            default:
	                break;
	            }
	        } else if (type === Token.Keyword) {
	            switch (lookahead.value) {
	            case 'break':
	                return parseBreakStatement(node);
	            case 'continue':
	                return parseContinueStatement(node);
	            case 'debugger':
	                return parseDebuggerStatement(node);
	            case 'do':
	                return parseDoWhileStatement(node);
	            case 'for':
	                return parseForStatement(node);
	            case 'function':
	                return parseFunctionDeclaration(node);
	            case 'if':
	                return parseIfStatement(node);
	            case 'return':
	                return parseReturnStatement(node);
	            case 'switch':
	                return parseSwitchStatement(node);
	            case 'throw':
	                return parseThrowStatement(node);
	            case 'try':
	                return parseTryStatement(node);
	            case 'var':
	                return parseVariableStatement(node);
	            case 'while':
	                return parseWhileStatement(node);
	            case 'with':
	                return parseWithStatement(node);
	            default:
	                break;
	            }
	        }
	
	        expr = parseExpression();
	
	        // ECMA-262 12.12 Labelled Statements
	        if ((expr.type === Syntax.Identifier) && match(':')) {
	            lex();
	
	            key = '$' + expr.name;
	            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
	                throwError(Messages.Redeclaration, 'Label', expr.name);
	            }
	
	            state.labelSet[key] = true;
	            labeledBody = parseStatement();
	            delete state.labelSet[key];
	            return node.finishLabeledStatement(expr, labeledBody);
	        }
	
	        consumeSemicolon();
	
	        return node.finishExpressionStatement(expr);
	    }
	
	    // ECMA-262 14.1 Function Definition
	
	    function parseFunctionSourceElements() {
	        var statement, body = [], token, directive, firstRestricted,
	            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody,
	            node = new Node();
	
	        expect('{');
	
	        while (startIndex < length) {
	            if (lookahead.type !== Token.StringLiteral) {
	                break;
	            }
	            token = lookahead;
	
	            statement = parseStatementListItem();
	            body.push(statement);
	            if (statement.expression.type !== Syntax.Literal) {
	                // this is not directive
	                break;
	            }
	            directive = source.slice(token.start + 1, token.end - 1);
	            if (directive === 'use strict') {
	                strict = true;
	                if (firstRestricted) {
	                    tolerateUnexpectedToken(firstRestricted, Messages.StrictOctalLiteral);
	                }
	            } else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }
	
	        oldLabelSet = state.labelSet;
	        oldInIteration = state.inIteration;
	        oldInSwitch = state.inSwitch;
	        oldInFunctionBody = state.inFunctionBody;
	
	        state.labelSet = {};
	        state.inIteration = false;
	        state.inSwitch = false;
	        state.inFunctionBody = true;
	
	        while (startIndex < length) {
	            if (match('}')) {
	                break;
	            }
	            body.push(parseStatementListItem());
	        }
	
	        expect('}');
	
	        state.labelSet = oldLabelSet;
	        state.inIteration = oldInIteration;
	        state.inSwitch = oldInSwitch;
	        state.inFunctionBody = oldInFunctionBody;
	
	        return node.finishBlockStatement(body);
	    }
	
	    function validateParam(options, param, name) {
	        var key = '$' + name;
	        if (strict) {
	            if (isRestrictedWord(name)) {
	                options.stricted = param;
	                options.message = Messages.StrictParamName;
	            }
	            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = Messages.StrictParamDupe;
	            }
	        } else if (!options.firstRestricted) {
	            if (isRestrictedWord(name)) {
	                options.firstRestricted = param;
	                options.message = Messages.StrictParamName;
	            } else if (isStrictModeReservedWord(name)) {
	                options.firstRestricted = param;
	                options.message = Messages.StrictReservedWord;
	            } else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = Messages.StrictParamDupe;
	            }
	        }
	        options.paramSet[key] = true;
	    }
	
	    function parseParam(options) {
	        var token, param, params = [], i, def;
	
	        token = lookahead;
	        if (token.value === '...') {
	            param = parseRestElement(params);
	            validateParam(options, param.argument, param.argument.name);
	            options.params.push(param);
	            options.defaults.push(null);
	            return false;
	        }
	
	        param = parsePatternWithDefault(params);
	        for (i = 0; i < params.length; i++) {
	            validateParam(options, params[i], params[i].value);
	        }
	
	        if (param.type === Syntax.AssignmentPattern) {
	            def = param.right;
	            param = param.left;
	            ++options.defaultCount;
	        }
	
	        options.params.push(param);
	        options.defaults.push(def);
	
	        return !match(')');
	    }
	
	    function parseParams(firstRestricted) {
	        var options;
	
	        options = {
	            params: [],
	            defaultCount: 0,
	            defaults: [],
	            firstRestricted: firstRestricted
	        };
	
	        expect('(');
	
	        if (!match(')')) {
	            options.paramSet = {};
	            while (startIndex < length) {
	                if (!parseParam(options)) {
	                    break;
	                }
	                expect(',');
	            }
	        }
	
	        expect(')');
	
	        if (options.defaultCount === 0) {
	            options.defaults = [];
	        }
	
	        return {
	            params: options.params,
	            defaults: options.defaults,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    }
	
	    function parseFunctionDeclaration(node, identifierIsOptional) {
	        var id = null, params = [], defaults = [], body, token, stricted, tmp, firstRestricted, message, previousStrict,
	            isGenerator, previousAllowYield;
	
	        previousAllowYield = state.allowYield;
	
	        expectKeyword('function');
	
	        isGenerator = match('*');
	        if (isGenerator) {
	            lex();
	        }
	
	        if (!identifierIsOptional || !match('(')) {
	            token = lookahead;
	            id = parseVariableIdentifier();
	            if (strict) {
	                if (isRestrictedWord(token.value)) {
	                    tolerateUnexpectedToken(token, Messages.StrictFunctionName);
	                }
	            } else {
	                if (isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = Messages.StrictFunctionName;
	                } else if (isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = Messages.StrictReservedWord;
	                }
	            }
	        }
	
	        state.allowYield = !isGenerator;
	        tmp = parseParams(firstRestricted);
	        params = tmp.params;
	        defaults = tmp.defaults;
	        stricted = tmp.stricted;
	        firstRestricted = tmp.firstRestricted;
	        if (tmp.message) {
	            message = tmp.message;
	        }
	
	
	        previousStrict = strict;
	        body = parseFunctionSourceElements();
	        if (strict && firstRestricted) {
	            throwUnexpectedToken(firstRestricted, message);
	        }
	        if (strict && stricted) {
	            tolerateUnexpectedToken(stricted, message);
	        }
	
	        strict = previousStrict;
	        state.allowYield = previousAllowYield;
	
	        return node.finishFunctionDeclaration(id, params, defaults, body, isGenerator);
	    }
	
	    function parseFunctionExpression() {
	        var token, id = null, stricted, firstRestricted, message, tmp,
	            params = [], defaults = [], body, previousStrict, node = new Node(),
	            isGenerator, previousAllowYield;
	
	        previousAllowYield = state.allowYield;
	
	        expectKeyword('function');
	
	        isGenerator = match('*');
	        if (isGenerator) {
	            lex();
	        }
	
	        state.allowYield = !isGenerator;
	        if (!match('(')) {
	            token = lookahead;
	            id = (!strict && !isGenerator && matchKeyword('yield')) ? parseNonComputedProperty() : parseVariableIdentifier();
	            if (strict) {
	                if (isRestrictedWord(token.value)) {
	                    tolerateUnexpectedToken(token, Messages.StrictFunctionName);
	                }
	            } else {
	                if (isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = Messages.StrictFunctionName;
	                } else if (isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = Messages.StrictReservedWord;
	                }
	            }
	        }
	
	        tmp = parseParams(firstRestricted);
	        params = tmp.params;
	        defaults = tmp.defaults;
	        stricted = tmp.stricted;
	        firstRestricted = tmp.firstRestricted;
	        if (tmp.message) {
	            message = tmp.message;
	        }
	
	        previousStrict = strict;
	        body = parseFunctionSourceElements();
	        if (strict && firstRestricted) {
	            throwUnexpectedToken(firstRestricted, message);
	        }
	        if (strict && stricted) {
	            tolerateUnexpectedToken(stricted, message);
	        }
	        strict = previousStrict;
	        state.allowYield = previousAllowYield;
	
	        return node.finishFunctionExpression(id, params, defaults, body, isGenerator);
	    }
	
	    // ECMA-262 14.5 Class Definitions
	
	    function parseClassBody() {
	        var classBody, token, isStatic, hasConstructor = false, body, method, computed, key;
	
	        classBody = new Node();
	
	        expect('{');
	        body = [];
	        while (!match('}')) {
	            if (match(';')) {
	                lex();
	            } else {
	                method = new Node();
	                token = lookahead;
	                isStatic = false;
	                computed = match('[');
	                if (match('*')) {
	                    lex();
	                } else {
	                    key = parseObjectPropertyKey();
	                    if (key.name === 'static' && (lookaheadPropertyName() || match('*'))) {
	                        token = lookahead;
	                        isStatic = true;
	                        computed = match('[');
	                        if (match('*')) {
	                            lex();
	                        } else {
	                            key = parseObjectPropertyKey();
	                        }
	                    }
	                }
	                method = tryParseMethodDefinition(token, key, computed, method);
	                if (method) {
	                    method['static'] = isStatic; // jscs:ignore requireDotNotation
	                    if (method.kind === 'init') {
	                        method.kind = 'method';
	                    }
	                    if (!isStatic) {
	                        if (!method.computed && (method.key.name || method.key.value.toString()) === 'constructor') {
	                            if (method.kind !== 'method' || !method.method || method.value.generator) {
	                                throwUnexpectedToken(token, Messages.ConstructorSpecialMethod);
	                            }
	                            if (hasConstructor) {
	                                throwUnexpectedToken(token, Messages.DuplicateConstructor);
	                            } else {
	                                hasConstructor = true;
	                            }
	                            method.kind = 'constructor';
	                        }
	                    } else {
	                        if (!method.computed && (method.key.name || method.key.value.toString()) === 'prototype') {
	                            throwUnexpectedToken(token, Messages.StaticPrototype);
	                        }
	                    }
	                    method.type = Syntax.MethodDefinition;
	                    delete method.method;
	                    delete method.shorthand;
	                    body.push(method);
	                } else {
	                    throwUnexpectedToken(lookahead);
	                }
	            }
	        }
	        lex();
	        return classBody.finishClassBody(body);
	    }
	
	    function parseClassDeclaration(identifierIsOptional) {
	        var id = null, superClass = null, classNode = new Node(), classBody, previousStrict = strict;
	        strict = true;
	
	        expectKeyword('class');
	
	        if (!identifierIsOptional || lookahead.type === Token.Identifier) {
	            id = parseVariableIdentifier();
	        }
	
	        if (matchKeyword('extends')) {
	            lex();
	            superClass = isolateCoverGrammar(parseLeftHandSideExpressionAllowCall);
	        }
	        classBody = parseClassBody();
	        strict = previousStrict;
	
	        return classNode.finishClassDeclaration(id, superClass, classBody);
	    }
	
	    function parseClassExpression() {
	        var id = null, superClass = null, classNode = new Node(), classBody, previousStrict = strict;
	        strict = true;
	
	        expectKeyword('class');
	
	        if (lookahead.type === Token.Identifier) {
	            id = parseVariableIdentifier();
	        }
	
	        if (matchKeyword('extends')) {
	            lex();
	            superClass = isolateCoverGrammar(parseLeftHandSideExpressionAllowCall);
	        }
	        classBody = parseClassBody();
	        strict = previousStrict;
	
	        return classNode.finishClassExpression(id, superClass, classBody);
	    }
	
	    // ECMA-262 15.2 Modules
	
	    function parseModuleSpecifier() {
	        var node = new Node();
	
	        if (lookahead.type !== Token.StringLiteral) {
	            throwError(Messages.InvalidModuleSpecifier);
	        }
	        return node.finishLiteral(lex());
	    }
	
	    // ECMA-262 15.2.3 Exports
	
	    function parseExportSpecifier() {
	        var exported, local, node = new Node(), def;
	        if (matchKeyword('default')) {
	            // export {default} from 'something';
	            def = new Node();
	            lex();
	            local = def.finishIdentifier('default');
	        } else {
	            local = parseVariableIdentifier();
	        }
	        if (matchContextualKeyword('as')) {
	            lex();
	            exported = parseNonComputedProperty();
	        }
	        return node.finishExportSpecifier(local, exported);
	    }
	
	    function parseExportNamedDeclaration(node) {
	        var declaration = null,
	            isExportFromIdentifier,
	            src = null, specifiers = [];
	
	        // non-default export
	        if (lookahead.type === Token.Keyword) {
	            // covers:
	            // export var f = 1;
	            switch (lookahead.value) {
	                case 'let':
	                case 'const':
	                    declaration = parseLexicalDeclaration({inFor: false});
	                    return node.finishExportNamedDeclaration(declaration, specifiers, null);
	                case 'var':
	                case 'class':
	                case 'function':
	                    declaration = parseStatementListItem();
	                    return node.finishExportNamedDeclaration(declaration, specifiers, null);
	            }
	        }
	
	        expect('{');
	        while (!match('}')) {
	            isExportFromIdentifier = isExportFromIdentifier || matchKeyword('default');
	            specifiers.push(parseExportSpecifier());
	            if (!match('}')) {
	                expect(',');
	                if (match('}')) {
	                    break;
	                }
	            }
	        }
	        expect('}');
	
	        if (matchContextualKeyword('from')) {
	            // covering:
	            // export {default} from 'foo';
	            // export {foo} from 'foo';
	            lex();
	            src = parseModuleSpecifier();
	            consumeSemicolon();
	        } else if (isExportFromIdentifier) {
	            // covering:
	            // export {default}; // missing fromClause
	            throwError(lookahead.value ?
	                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);
	        } else {
	            // cover
	            // export {foo};
	            consumeSemicolon();
	        }
	        return node.finishExportNamedDeclaration(declaration, specifiers, src);
	    }
	
	    function parseExportDefaultDeclaration(node) {
	        var declaration = null,
	            expression = null;
	
	        // covers:
	        // export default ...
	        expectKeyword('default');
	
	        if (matchKeyword('function')) {
	            // covers:
	            // export default function foo () {}
	            // export default function () {}
	            declaration = parseFunctionDeclaration(new Node(), true);
	            return node.finishExportDefaultDeclaration(declaration);
	        }
	        if (matchKeyword('class')) {
	            declaration = parseClassDeclaration(true);
	            return node.finishExportDefaultDeclaration(declaration);
	        }
	
	        if (matchContextualKeyword('from')) {
	            throwError(Messages.UnexpectedToken, lookahead.value);
	        }
	
	        // covers:
	        // export default {};
	        // export default [];
	        // export default (1 + 2);
	        if (match('{')) {
	            expression = parseObjectInitializer();
	        } else if (match('[')) {
	            expression = parseArrayInitializer();
	        } else {
	            expression = parseAssignmentExpression();
	        }
	        consumeSemicolon();
	        return node.finishExportDefaultDeclaration(expression);
	    }
	
	    function parseExportAllDeclaration(node) {
	        var src;
	
	        // covers:
	        // export * from 'foo';
	        expect('*');
	        if (!matchContextualKeyword('from')) {
	            throwError(lookahead.value ?
	                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);
	        }
	        lex();
	        src = parseModuleSpecifier();
	        consumeSemicolon();
	
	        return node.finishExportAllDeclaration(src);
	    }
	
	    function parseExportDeclaration() {
	        var node = new Node();
	        if (state.inFunctionBody) {
	            throwError(Messages.IllegalExportDeclaration);
	        }
	
	        expectKeyword('export');
	
	        if (matchKeyword('default')) {
	            return parseExportDefaultDeclaration(node);
	        }
	        if (match('*')) {
	            return parseExportAllDeclaration(node);
	        }
	        return parseExportNamedDeclaration(node);
	    }
	
	    // ECMA-262 15.2.2 Imports
	
	    function parseImportSpecifier() {
	        // import {<foo as bar>} ...;
	        var local, imported, node = new Node();
	
	        imported = parseNonComputedProperty();
	        if (matchContextualKeyword('as')) {
	            lex();
	            local = parseVariableIdentifier();
	        }
	
	        return node.finishImportSpecifier(local, imported);
	    }
	
	    function parseNamedImports() {
	        var specifiers = [];
	        // {foo, bar as bas}
	        expect('{');
	        while (!match('}')) {
	            specifiers.push(parseImportSpecifier());
	            if (!match('}')) {
	                expect(',');
	                if (match('}')) {
	                    break;
	                }
	            }
	        }
	        expect('}');
	        return specifiers;
	    }
	
	    function parseImportDefaultSpecifier() {
	        // import <foo> ...;
	        var local, node = new Node();
	
	        local = parseNonComputedProperty();
	
	        return node.finishImportDefaultSpecifier(local);
	    }
	
	    function parseImportNamespaceSpecifier() {
	        // import <* as foo> ...;
	        var local, node = new Node();
	
	        expect('*');
	        if (!matchContextualKeyword('as')) {
	            throwError(Messages.NoAsAfterImportNamespace);
	        }
	        lex();
	        local = parseNonComputedProperty();
	
	        return node.finishImportNamespaceSpecifier(local);
	    }
	
	    function parseImportDeclaration() {
	        var specifiers = [], src, node = new Node();
	
	        if (state.inFunctionBody) {
	            throwError(Messages.IllegalImportDeclaration);
	        }
	
	        expectKeyword('import');
	
	        if (lookahead.type === Token.StringLiteral) {
	            // import 'foo';
	            src = parseModuleSpecifier();
	        } else {
	
	            if (match('{')) {
	                // import {bar}
	                specifiers = specifiers.concat(parseNamedImports());
	            } else if (match('*')) {
	                // import * as foo
	                specifiers.push(parseImportNamespaceSpecifier());
	            } else if (isIdentifierName(lookahead) && !matchKeyword('default')) {
	                // import foo
	                specifiers.push(parseImportDefaultSpecifier());
	                if (match(',')) {
	                    lex();
	                    if (match('*')) {
	                        // import foo, * as foo
	                        specifiers.push(parseImportNamespaceSpecifier());
	                    } else if (match('{')) {
	                        // import foo, {bar}
	                        specifiers = specifiers.concat(parseNamedImports());
	                    } else {
	                        throwUnexpectedToken(lookahead);
	                    }
	                }
	            } else {
	                throwUnexpectedToken(lex());
	            }
	
	            if (!matchContextualKeyword('from')) {
	                throwError(lookahead.value ?
	                        Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);
	            }
	            lex();
	            src = parseModuleSpecifier();
	        }
	
	        consumeSemicolon();
	        return node.finishImportDeclaration(specifiers, src);
	    }
	
	    // ECMA-262 15.1 Scripts
	
	    function parseScriptBody() {
	        var statement, body = [], token, directive, firstRestricted;
	
	        while (startIndex < length) {
	            token = lookahead;
	            if (token.type !== Token.StringLiteral) {
	                break;
	            }
	
	            statement = parseStatementListItem();
	            body.push(statement);
	            if (statement.expression.type !== Syntax.Literal) {
	                // this is not directive
	                break;
	            }
	            directive = source.slice(token.start + 1, token.end - 1);
	            if (directive === 'use strict') {
	                strict = true;
	                if (firstRestricted) {
	                    tolerateUnexpectedToken(firstRestricted, Messages.StrictOctalLiteral);
	                }
	            } else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }
	
	        while (startIndex < length) {
	            statement = parseStatementListItem();
	            /* istanbul ignore if */
	            if (typeof statement === 'undefined') {
	                break;
	            }
	            body.push(statement);
	        }
	        return body;
	    }
	
	    function parseProgram() {
	        var body, node;
	
	        peek();
	        node = new Node();
	
	        body = parseScriptBody();
	        return node.finishProgram(body, state.sourceType);
	    }
	
	    function filterTokenLocation() {
	        var i, entry, token, tokens = [];
	
	        for (i = 0; i < extra.tokens.length; ++i) {
	            entry = extra.tokens[i];
	            token = {
	                type: entry.type,
	                value: entry.value
	            };
	            if (entry.regex) {
	                token.regex = {
	                    pattern: entry.regex.pattern,
	                    flags: entry.regex.flags
	                };
	            }
	            if (extra.range) {
	                token.range = entry.range;
	            }
	            if (extra.loc) {
	                token.loc = entry.loc;
	            }
	            tokens.push(token);
	        }
	
	        extra.tokens = tokens;
	    }
	
	    function tokenize(code, options, delegate) {
	        var toString,
	            tokens;
	
	        toString = String;
	        if (typeof code !== 'string' && !(code instanceof String)) {
	            code = toString(code);
	        }
	
	        source = code;
	        index = 0;
	        lineNumber = (source.length > 0) ? 1 : 0;
	        lineStart = 0;
	        startIndex = index;
	        startLineNumber = lineNumber;
	        startLineStart = lineStart;
	        length = source.length;
	        lookahead = null;
	        state = {
	            allowIn: true,
	            allowYield: true,
	            labelSet: {},
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            lastCommentStart: -1,
	            curlyStack: []
	        };
	
	        extra = {};
	
	        // Options matching.
	        options = options || {};
	
	        // Of course we collect tokens here.
	        options.tokens = true;
	        extra.tokens = [];
	        extra.tokenValues = [];
	        extra.tokenize = true;
	        extra.delegate = delegate;
	
	        // The following two fields are necessary to compute the Regex tokens.
	        extra.openParenToken = -1;
	        extra.openCurlyToken = -1;
	
	        extra.range = (typeof options.range === 'boolean') && options.range;
	        extra.loc = (typeof options.loc === 'boolean') && options.loc;
	
	        if (typeof options.comment === 'boolean' && options.comment) {
	            extra.comments = [];
	        }
	        if (typeof options.tolerant === 'boolean' && options.tolerant) {
	            extra.errors = [];
	        }
	
	        try {
	            peek();
	            if (lookahead.type === Token.EOF) {
	                return extra.tokens;
	            }
	
	            lex();
	            while (lookahead.type !== Token.EOF) {
	                try {
	                    lex();
	                } catch (lexError) {
	                    if (extra.errors) {
	                        recordError(lexError);
	                        // We have to break on the first error
	                        // to avoid infinite loops.
	                        break;
	                    } else {
	                        throw lexError;
	                    }
	                }
	            }
	
	            tokens = extra.tokens;
	            if (typeof extra.errors !== 'undefined') {
	                tokens.errors = extra.errors;
	            }
	        } catch (e) {
	            throw e;
	        } finally {
	            extra = {};
	        }
	        return tokens;
	    }
	
	    function parse(code, options) {
	        var program, toString;
	
	        toString = String;
	        if (typeof code !== 'string' && !(code instanceof String)) {
	            code = toString(code);
	        }
	
	        source = code;
	        index = 0;
	        lineNumber = (source.length > 0) ? 1 : 0;
	        lineStart = 0;
	        startIndex = index;
	        startLineNumber = lineNumber;
	        startLineStart = lineStart;
	        length = source.length;
	        lookahead = null;
	        state = {
	            allowIn: true,
	            allowYield: true,
	            labelSet: {},
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            lastCommentStart: -1,
	            curlyStack: [],
	            sourceType: 'script'
	        };
	        strict = false;
	
	        extra = {};
	        if (typeof options !== 'undefined') {
	            extra.range = (typeof options.range === 'boolean') && options.range;
	            extra.loc = (typeof options.loc === 'boolean') && options.loc;
	            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;
	
	            if (extra.loc && options.source !== null && options.source !== undefined) {
	                extra.source = toString(options.source);
	            }
	
	            if (typeof options.tokens === 'boolean' && options.tokens) {
	                extra.tokens = [];
	            }
	            if (typeof options.comment === 'boolean' && options.comment) {
	                extra.comments = [];
	            }
	            if (typeof options.tolerant === 'boolean' && options.tolerant) {
	                extra.errors = [];
	            }
	            if (extra.attachComment) {
	                extra.range = true;
	                extra.comments = [];
	                extra.bottomRightStack = [];
	                extra.trailingComments = [];
	                extra.leadingComments = [];
	            }
	            if (options.sourceType === 'module') {
	                // very restrictive condition for now
	                state.sourceType = options.sourceType;
	                strict = true;
	            }
	        }
	
	        try {
	            program = parseProgram();
	            if (typeof extra.comments !== 'undefined') {
	                program.comments = extra.comments;
	            }
	            if (typeof extra.tokens !== 'undefined') {
	                filterTokenLocation();
	                program.tokens = extra.tokens;
	            }
	            if (typeof extra.errors !== 'undefined') {
	                program.errors = extra.errors;
	            }
	        } catch (e) {
	            throw e;
	        } finally {
	            extra = {};
	        }
	
	        return program;
	    }
	
	    // Sync with *.json manifests.
	    exports.version = '2.7.2';
	
	    exports.tokenize = tokenize;
	
	    exports.parse = parse;
	
	    // Deep copy.
	    /* istanbul ignore next */
	    exports.Syntax = (function () {
	        var name, types = {};
	
	        if (typeof Object.create === 'function') {
	            types = Object.create(null);
	        }
	
	        for (name in Syntax) {
	            if (Syntax.hasOwnProperty(name)) {
	                types[name] = Syntax[name];
	            }
	        }
	
	        if (typeof Object.freeze === 'function') {
	            Object.freeze(types);
	        }
	
	        return types;
	    }());
	
	}));
	/* vim: set sw=4 ts=4 et tw=80 : */


/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/*eslint-disable no-use-before-define*/
	
	var common              = __webpack_require__(468);
	var YAMLException       = __webpack_require__(469);
	var DEFAULT_FULL_SCHEMA = __webpack_require__(494);
	var DEFAULT_SAFE_SCHEMA = __webpack_require__(471);
	
	var _toString       = Object.prototype.toString;
	var _hasOwnProperty = Object.prototype.hasOwnProperty;
	
	var CHAR_TAB                  = 0x09; /* Tab */
	var CHAR_LINE_FEED            = 0x0A; /* LF */
	var CHAR_SPACE                = 0x20; /* Space */
	var CHAR_EXCLAMATION          = 0x21; /* ! */
	var CHAR_DOUBLE_QUOTE         = 0x22; /* " */
	var CHAR_SHARP                = 0x23; /* # */
	var CHAR_PERCENT              = 0x25; /* % */
	var CHAR_AMPERSAND            = 0x26; /* & */
	var CHAR_SINGLE_QUOTE         = 0x27; /* ' */
	var CHAR_ASTERISK             = 0x2A; /* * */
	var CHAR_COMMA                = 0x2C; /* , */
	var CHAR_MINUS                = 0x2D; /* - */
	var CHAR_COLON                = 0x3A; /* : */
	var CHAR_GREATER_THAN         = 0x3E; /* > */
	var CHAR_QUESTION             = 0x3F; /* ? */
	var CHAR_COMMERCIAL_AT        = 0x40; /* @ */
	var CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */
	var CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */
	var CHAR_GRAVE_ACCENT         = 0x60; /* ` */
	var CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */
	var CHAR_VERTICAL_LINE        = 0x7C; /* | */
	var CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */
	
	var ESCAPE_SEQUENCES = {};
	
	ESCAPE_SEQUENCES[0x00]   = '\\0';
	ESCAPE_SEQUENCES[0x07]   = '\\a';
	ESCAPE_SEQUENCES[0x08]   = '\\b';
	ESCAPE_SEQUENCES[0x09]   = '\\t';
	ESCAPE_SEQUENCES[0x0A]   = '\\n';
	ESCAPE_SEQUENCES[0x0B]   = '\\v';
	ESCAPE_SEQUENCES[0x0C]   = '\\f';
	ESCAPE_SEQUENCES[0x0D]   = '\\r';
	ESCAPE_SEQUENCES[0x1B]   = '\\e';
	ESCAPE_SEQUENCES[0x22]   = '\\"';
	ESCAPE_SEQUENCES[0x5C]   = '\\\\';
	ESCAPE_SEQUENCES[0x85]   = '\\N';
	ESCAPE_SEQUENCES[0xA0]   = '\\_';
	ESCAPE_SEQUENCES[0x2028] = '\\L';
	ESCAPE_SEQUENCES[0x2029] = '\\P';
	
	var DEPRECATED_BOOLEANS_SYNTAX = [
	  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',
	  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'
	];
	
	function compileStyleMap(schema, map) {
	  var result, keys, index, length, tag, style, type;
	
	  if (map === null) return {};
	
	  result = {};
	  keys = Object.keys(map);
	
	  for (index = 0, length = keys.length; index < length; index += 1) {
	    tag = keys[index];
	    style = String(map[tag]);
	
	    if (tag.slice(0, 2) === '!!') {
	      tag = 'tag:yaml.org,2002:' + tag.slice(2);
	    }
	
	    type = schema.compiledTypeMap[tag];
	
	    if (type && _hasOwnProperty.call(type.styleAliases, style)) {
	      style = type.styleAliases[style];
	    }
	
	    result[tag] = style;
	  }
	
	  return result;
	}
	
	function encodeHex(character) {
	  var string, handle, length;
	
	  string = character.toString(16).toUpperCase();
	
	  if (character <= 0xFF) {
	    handle = 'x';
	    length = 2;
	  } else if (character <= 0xFFFF) {
	    handle = 'u';
	    length = 4;
	  } else if (character <= 0xFFFFFFFF) {
	    handle = 'U';
	    length = 8;
	  } else {
	    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');
	  }
	
	  return '\\' + handle + common.repeat('0', length - string.length) + string;
	}
	
	function State(options) {
	  this.schema       = options['schema'] || DEFAULT_FULL_SCHEMA;
	  this.indent       = Math.max(1, (options['indent'] || 2));
	  this.skipInvalid  = options['skipInvalid'] || false;
	  this.flowLevel    = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);
	  this.styleMap     = compileStyleMap(this.schema, options['styles'] || null);
	  this.sortKeys     = options['sortKeys'] || false;
	  this.lineWidth    = options['lineWidth'] || 80;
	  this.noRefs       = options['noRefs'] || false;
	  this.noCompatMode = options['noCompatMode'] || false;
	
	  this.implicitTypes = this.schema.compiledImplicit;
	  this.explicitTypes = this.schema.compiledExplicit;
	
	  this.tag = null;
	  this.result = '';
	
	  this.duplicates = [];
	  this.usedDuplicates = null;
	}
	
	// Indents every line in a string. Empty lines (\n only) are not indented.
	function indentString(string, spaces) {
	  var ind = common.repeat(' ', spaces),
	      position = 0,
	      next = -1,
	      result = '',
	      line,
	      length = string.length;
	
	  while (position < length) {
	    next = string.indexOf('\n', position);
	    if (next === -1) {
	      line = string.slice(position);
	      position = length;
	    } else {
	      line = string.slice(position, next + 1);
	      position = next + 1;
	    }
	
	    if (line.length && line !== '\n') result += ind;
	
	    result += line;
	  }
	
	  return result;
	}
	
	function generateNextLine(state, level) {
	  return '\n' + common.repeat(' ', state.indent * level);
	}
	
	function testImplicitResolving(state, str) {
	  var index, length, type;
	
	  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {
	    type = state.implicitTypes[index];
	
	    if (type.resolve(str)) {
	      return true;
	    }
	  }
	
	  return false;
	}
	
	// [33] s-white ::= s-space | s-tab
	function isWhitespace(c) {
	  return c === CHAR_SPACE || c === CHAR_TAB;
	}
	
	// Returns true if the character can be printed without escaping.
	// From YAML 1.2: "any allowed characters known to be non-printable
	// should also be escaped. [However,] This isn’t mandatory"
	// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
	function isPrintable(c) {
	  return  (0x00020 <= c && c <= 0x00007E)
	      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)
	      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)
	      ||  (0x10000 <= c && c <= 0x10FFFF);
	}
	
	// Simplified test for values allowed after the first character in plain style.
	function isPlainSafe(c) {
	  // Uses a subset of nb-char - c-flow-indicator - ":" - "#"
	  // where nb-char ::= c-printable - b-char - c-byte-order-mark.
	  return isPrintable(c) && c !== 0xFEFF
	    // - c-flow-indicator
	    && c !== CHAR_COMMA
	    && c !== CHAR_LEFT_SQUARE_BRACKET
	    && c !== CHAR_RIGHT_SQUARE_BRACKET
	    && c !== CHAR_LEFT_CURLY_BRACKET
	    && c !== CHAR_RIGHT_CURLY_BRACKET
	    // - ":" - "#"
	    && c !== CHAR_COLON
	    && c !== CHAR_SHARP;
	}
	
	// Simplified test for values allowed as the first character in plain style.
	function isPlainSafeFirst(c) {
	  // Uses a subset of ns-char - c-indicator
	  // where ns-char = nb-char - s-white.
	  return isPrintable(c) && c !== 0xFEFF
	    && !isWhitespace(c) // - s-white
	    // - (c-indicator ::=
	    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
	    && c !== CHAR_MINUS
	    && c !== CHAR_QUESTION
	    && c !== CHAR_COLON
	    && c !== CHAR_COMMA
	    && c !== CHAR_LEFT_SQUARE_BRACKET
	    && c !== CHAR_RIGHT_SQUARE_BRACKET
	    && c !== CHAR_LEFT_CURLY_BRACKET
	    && c !== CHAR_RIGHT_CURLY_BRACKET
	    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “"”
	    && c !== CHAR_SHARP
	    && c !== CHAR_AMPERSAND
	    && c !== CHAR_ASTERISK
	    && c !== CHAR_EXCLAMATION
	    && c !== CHAR_VERTICAL_LINE
	    && c !== CHAR_GREATER_THAN
	    && c !== CHAR_SINGLE_QUOTE
	    && c !== CHAR_DOUBLE_QUOTE
	    // | “%” | “@” | “`”)
	    && c !== CHAR_PERCENT
	    && c !== CHAR_COMMERCIAL_AT
	    && c !== CHAR_GRAVE_ACCENT;
	}
	
	var STYLE_PLAIN   = 1,
	    STYLE_SINGLE  = 2,
	    STYLE_LITERAL = 3,
	    STYLE_FOLDED  = 4,
	    STYLE_DOUBLE  = 5;
	
	// Determines which scalar styles are possible and returns the preferred style.
	// lineWidth = -1 => no limit.
	// Pre-conditions: str.length > 0.
	// Post-conditions:
	//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
	//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
	//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
	function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {
	  var i;
	  var char;
	  var hasLineBreak = false;
	  var hasFoldableLine = false; // only checked if shouldTrackWidth
	  var shouldTrackWidth = lineWidth !== -1;
	  var previousLineBreak = -1; // count the first line correctly
	  var plain = isPlainSafeFirst(string.charCodeAt(0))
	          && !isWhitespace(string.charCodeAt(string.length - 1));
	
	  if (singleLineOnly) {
	    // Case: no block styles.
	    // Check for disallowed characters to rule out plain and single.
	    for (i = 0; i < string.length; i++) {
	      char = string.charCodeAt(i);
	      if (!isPrintable(char)) {
	        return STYLE_DOUBLE;
	      }
	      plain = plain && isPlainSafe(char);
	    }
	  } else {
	    // Case: block styles permitted.
	    for (i = 0; i < string.length; i++) {
	      char = string.charCodeAt(i);
	      if (char === CHAR_LINE_FEED) {
	        hasLineBreak = true;
	        // Check if any line can be folded.
	        if (shouldTrackWidth) {
	          hasFoldableLine = hasFoldableLine ||
	            // Foldable line = too long, and not more-indented.
	            (i - previousLineBreak - 1 > lineWidth &&
	             string[previousLineBreak + 1] !== ' ');
	          previousLineBreak = i;
	        }
	      } else if (!isPrintable(char)) {
	        return STYLE_DOUBLE;
	      }
	      plain = plain && isPlainSafe(char);
	    }
	    // in case the end is missing a \n
	    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&
	      (i - previousLineBreak - 1 > lineWidth &&
	       string[previousLineBreak + 1] !== ' '));
	  }
	  // Although every style can represent \n without escaping, prefer block styles
	  // for multiline, since they're more readable and they don't add empty lines.
	  // Also prefer folding a super-long line.
	  if (!hasLineBreak && !hasFoldableLine) {
	    // Strings interpretable as another type have to be quoted;
	    // e.g. the string 'true' vs. the boolean true.
	    return plain && !testAmbiguousType(string)
	      ? STYLE_PLAIN : STYLE_SINGLE;
	  }
	  // Edge case: block indentation indicator can only have one digit.
	  if (string[0] === ' ' && indentPerLevel > 9) {
	    return STYLE_DOUBLE;
	  }
	  // At this point we know block styles are valid.
	  // Prefer literal style unless we want to fold.
	  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;
	}
	
	// Note: line breaking/folding is implemented for only the folded style.
	// NB. We drop the last trailing newline (if any) of a returned block scalar
	//  since the dumper adds its own newline. This always works:
	//    • No ending newline => unaffected; already using strip "-" chomping.
	//    • Ending newline    => removed then restored.
	//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
	function writeScalar(state, string, level, iskey) {
	  state.dump = (function () {
	    if (string.length === 0) {
	      return "''";
	    }
	    if (!state.noCompatMode &&
	        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {
	      return "'" + string + "'";
	    }
	
	    var indent = state.indent * Math.max(1, level); // no 0-indent scalars
	    // As indentation gets deeper, let the width decrease monotonically
	    // to the lower bound min(state.lineWidth, 40).
	    // Note that this implies
	    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
	    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
	    // This behaves better than a constant minimum width which disallows narrower options,
	    // or an indent threshold which causes the width to suddenly increase.
	    var lineWidth = state.lineWidth === -1
	      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);
	
	    // Without knowing if keys are implicit/explicit, assume implicit for safety.
	    var singleLineOnly = iskey
	      // No block styles in flow mode.
	      || (state.flowLevel > -1 && level >= state.flowLevel);
	    function testAmbiguity(string) {
	      return testImplicitResolving(state, string);
	    }
	
	    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {
	      case STYLE_PLAIN:
	        return string;
	      case STYLE_SINGLE:
	        return "'" + string.replace(/'/g, "''") + "'";
	      case STYLE_LITERAL:
	        return '|' + blockHeader(string, state.indent)
	          + dropEndingNewline(indentString(string, indent));
	      case STYLE_FOLDED:
	        return '>' + blockHeader(string, state.indent)
	          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));
	      case STYLE_DOUBLE:
	        return '"' + escapeString(string, lineWidth) + '"';
	      default:
	        throw new YAMLException('impossible error: invalid scalar style');
	    }
	  }());
	}
	
	// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
	function blockHeader(string, indentPerLevel) {
	  var indentIndicator = (string[0] === ' ') ? String(indentPerLevel) : '';
	
	  // note the special case: the string '\n' counts as a "trailing" empty line.
	  var clip =          string[string.length - 1] === '\n';
	  var keep = clip && (string[string.length - 2] === '\n' || string === '\n');
	  var chomp = keep ? '+' : (clip ? '' : '-');
	
	  return indentIndicator + chomp + '\n';
	}
	
	// (See the note for writeScalar.)
	function dropEndingNewline(string) {
	  return string[string.length - 1] === '\n' ? string.slice(0, -1) : string;
	}
	
	// Note: a long line without a suitable break point will exceed the width limit.
	// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
	function foldString(string, width) {
	  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—
	  // unless they're before or after a more-indented line, or at the very
	  // beginning or end, in which case $k$ maps to $k$.
	  // Therefore, parse each chunk as newline(s) followed by a content line.
	  var lineRe = /(\n+)([^\n]*)/g;
	
	  // first line (possibly an empty line)
	  var result = (function () {
	    var nextLF = string.indexOf('\n');
	    nextLF = nextLF !== -1 ? nextLF : string.length;
	    lineRe.lastIndex = nextLF;
	    return foldLine(string.slice(0, nextLF), width);
	  }());
	  // If we haven't reached the first content line yet, don't add an extra \n.
	  var prevMoreIndented = string[0] === '\n' || string[0] === ' ';
	  var moreIndented;
	
	  // rest of the lines
	  var match;
	  while ((match = lineRe.exec(string))) {
	    var prefix = match[1], line = match[2];
	    moreIndented = (line[0] === ' ');
	    result += prefix
	      + (!prevMoreIndented && !moreIndented && line !== ''
	        ? '\n' : '')
	      + foldLine(line, width);
	    prevMoreIndented = moreIndented;
	  }
	
	  return result;
	}
	
	// Greedy line breaking.
	// Picks the longest line under the limit each time,
	// otherwise settles for the shortest line over the limit.
	// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
	function foldLine(line, width) {
	  if (line === '' || line[0] === ' ') return line;
	
	  // Since a more-indented line adds a \n, breaks can't be followed by a space.
	  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.
	  var match;
	  // start is an inclusive index. end, curr, and next are exclusive.
	  var start = 0, end, curr = 0, next = 0;
	  var result = '';
	
	  // Invariants: 0 <= start <= length-1.
	  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.
	  // Inside the loop:
	  //   A match implies length >= 2, so curr and next are <= length-2.
	  while ((match = breakRe.exec(line))) {
	    next = match.index;
	    // maintain invariant: curr - start <= width
	    if (next - start > width) {
	      end = (curr > start) ? curr : next; // derive end <= length-2
	      result += '\n' + line.slice(start, end);
	      // skip the space that was output as \n
	      start = end + 1;                    // derive start <= length-1
	    }
	    curr = next;
	  }
	
	  // By the invariants, start <= length-1, so there is something left over.
	  // It is either the whole string or a part starting from non-whitespace.
	  result += '\n';
	  // Insert a break if the remainder is too long and there is a break available.
	  if (line.length - start > width && curr > start) {
	    result += line.slice(start, curr) + '\n' + line.slice(curr + 1);
	  } else {
	    result += line.slice(start);
	  }
	
	  return result.slice(1); // drop extra \n joiner
	}
	
	// Escapes a double-quoted string.
	function escapeString(string) {
	  var result = '';
	  var char;
	  var escapeSeq;
	
	  for (var i = 0; i < string.length; i++) {
	    char = string.charCodeAt(i);
	    escapeSeq = ESCAPE_SEQUENCES[char];
	    result += !escapeSeq && isPrintable(char)
	      ? string[i]
	      : escapeSeq || encodeHex(char);
	  }
	
	  return result;
	}
	
	function writeFlowSequence(state, level, object) {
	  var _result = '',
	      _tag    = state.tag,
	      index,
	      length;
	
	  for (index = 0, length = object.length; index < length; index += 1) {
	    // Write only valid elements.
	    if (writeNode(state, level, object[index], false, false)) {
	      if (index !== 0) _result += ', ';
	      _result += state.dump;
	    }
	  }
	
	  state.tag = _tag;
	  state.dump = '[' + _result + ']';
	}
	
	function writeBlockSequence(state, level, object, compact) {
	  var _result = '',
	      _tag    = state.tag,
	      index,
	      length;
	
	  for (index = 0, length = object.length; index < length; index += 1) {
	    // Write only valid elements.
	    if (writeNode(state, level + 1, object[index], true, true)) {
	      if (!compact || index !== 0) {
	        _result += generateNextLine(state, level);
	      }
	      _result += '- ' + state.dump;
	    }
	  }
	
	  state.tag = _tag;
	  state.dump = _result || '[]'; // Empty sequence if no valid values.
	}
	
	function writeFlowMapping(state, level, object) {
	  var _result       = '',
	      _tag          = state.tag,
	      objectKeyList = Object.keys(object),
	      index,
	      length,
	      objectKey,
	      objectValue,
	      pairBuffer;
	
	  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
	    pairBuffer = '';
	
	    if (index !== 0) pairBuffer += ', ';
	
	    objectKey = objectKeyList[index];
	    objectValue = object[objectKey];
	
	    if (!writeNode(state, level, objectKey, false, false)) {
	      continue; // Skip this pair because of invalid key;
	    }
	
	    if (state.dump.length > 1024) pairBuffer += '? ';
	
	    pairBuffer += state.dump + ': ';
	
	    if (!writeNode(state, level, objectValue, false, false)) {
	      continue; // Skip this pair because of invalid value.
	    }
	
	    pairBuffer += state.dump;
	
	    // Both key and value are valid.
	    _result += pairBuffer;
	  }
	
	  state.tag = _tag;
	  state.dump = '{' + _result + '}';
	}
	
	function writeBlockMapping(state, level, object, compact) {
	  var _result       = '',
	      _tag          = state.tag,
	      objectKeyList = Object.keys(object),
	      index,
	      length,
	      objectKey,
	      objectValue,
	      explicitPair,
	      pairBuffer;
	
	  // Allow sorting keys so that the output file is deterministic
	  if (state.sortKeys === true) {
	    // Default sorting
	    objectKeyList.sort();
	  } else if (typeof state.sortKeys === 'function') {
	    // Custom sort function
	    objectKeyList.sort(state.sortKeys);
	  } else if (state.sortKeys) {
	    // Something is wrong
	    throw new YAMLException('sortKeys must be a boolean or a function');
	  }
	
	  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
	    pairBuffer = '';
	
	    if (!compact || index !== 0) {
	      pairBuffer += generateNextLine(state, level);
	    }
	
	    objectKey = objectKeyList[index];
	    objectValue = object[objectKey];
	
	    if (!writeNode(state, level + 1, objectKey, true, true, true)) {
	      continue; // Skip this pair because of invalid key.
	    }
	
	    explicitPair = (state.tag !== null && state.tag !== '?') ||
	                   (state.dump && state.dump.length > 1024);
	
	    if (explicitPair) {
	      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
	        pairBuffer += '?';
	      } else {
	        pairBuffer += '? ';
	      }
	    }
	
	    pairBuffer += state.dump;
	
	    if (explicitPair) {
	      pairBuffer += generateNextLine(state, level);
	    }
	
	    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {
	      continue; // Skip this pair because of invalid value.
	    }
	
	    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
	      pairBuffer += ':';
	    } else {
	      pairBuffer += ': ';
	    }
	
	    pairBuffer += state.dump;
	
	    // Both key and value are valid.
	    _result += pairBuffer;
	  }
	
	  state.tag = _tag;
	  state.dump = _result || '{}'; // Empty mapping if no valid pairs.
	}
	
	function detectType(state, object, explicit) {
	  var _result, typeList, index, length, type, style;
	
	  typeList = explicit ? state.explicitTypes : state.implicitTypes;
	
	  for (index = 0, length = typeList.length; index < length; index += 1) {
	    type = typeList[index];
	
	    if ((type.instanceOf  || type.predicate) &&
	        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&
	        (!type.predicate  || type.predicate(object))) {
	
	      state.tag = explicit ? type.tag : '?';
	
	      if (type.represent) {
	        style = state.styleMap[type.tag] || type.defaultStyle;
	
	        if (_toString.call(type.represent) === '[object Function]') {
	          _result = type.represent(object, style);
	        } else if (_hasOwnProperty.call(type.represent, style)) {
	          _result = type.represent[style](object, style);
	        } else {
	          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not "' + style + '" style');
	        }
	
	        state.dump = _result;
	      }
	
	      return true;
	    }
	  }
	
	  return false;
	}
	
	// Serializes `object` and writes it to global `result`.
	// Returns true on success, or false on invalid object.
	//
	function writeNode(state, level, object, block, compact, iskey) {
	  state.tag = null;
	  state.dump = object;
	
	  if (!detectType(state, object, false)) {
	    detectType(state, object, true);
	  }
	
	  var type = _toString.call(state.dump);
	
	  if (block) {
	    block = (state.flowLevel < 0 || state.flowLevel > level);
	  }
	
	  var objectOrArray = type === '[object Object]' || type === '[object Array]',
	      duplicateIndex,
	      duplicate;
	
	  if (objectOrArray) {
	    duplicateIndex = state.duplicates.indexOf(object);
	    duplicate = duplicateIndex !== -1;
	  }
	
	  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {
	    compact = false;
	  }
	
	  if (duplicate && state.usedDuplicates[duplicateIndex]) {
	    state.dump = '*ref_' + duplicateIndex;
	  } else {
	    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {
	      state.usedDuplicates[duplicateIndex] = true;
	    }
	    if (type === '[object Object]') {
	      if (block && (Object.keys(state.dump).length !== 0)) {
	        writeBlockMapping(state, level, state.dump, compact);
	        if (duplicate) {
	          state.dump = '&ref_' + duplicateIndex + state.dump;
	        }
	      } else {
	        writeFlowMapping(state, level, state.dump);
	        if (duplicate) {
	          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
	        }
	      }
	    } else if (type === '[object Array]') {
	      if (block && (state.dump.length !== 0)) {
	        writeBlockSequence(state, level, state.dump, compact);
	        if (duplicate) {
	          state.dump = '&ref_' + duplicateIndex + state.dump;
	        }
	      } else {
	        writeFlowSequence(state, level, state.dump);
	        if (duplicate) {
	          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
	        }
	      }
	    } else if (type === '[object String]') {
	      if (state.tag !== '?') {
	        writeScalar(state, state.dump, level, iskey);
	      }
	    } else {
	      if (state.skipInvalid) return false;
	      throw new YAMLException('unacceptable kind of an object to dump ' + type);
	    }
	
	    if (state.tag !== null && state.tag !== '?') {
	      state.dump = '!<' + state.tag + '> ' + state.dump;
	    }
	  }
	
	  return true;
	}
	
	function getDuplicateReferences(object, state) {
	  var objects = [],
	      duplicatesIndexes = [],
	      index,
	      length;
	
	  inspectNode(object, objects, duplicatesIndexes);
	
	  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {
	    state.duplicates.push(objects[duplicatesIndexes[index]]);
	  }
	  state.usedDuplicates = new Array(length);
	}
	
	function inspectNode(object, objects, duplicatesIndexes) {
	  var objectKeyList,
	      index,
	      length;
	
	  if (object !== null && typeof object === 'object') {
	    index = objects.indexOf(object);
	    if (index !== -1) {
	      if (duplicatesIndexes.indexOf(index) === -1) {
	        duplicatesIndexes.push(index);
	      }
	    } else {
	      objects.push(object);
	
	      if (Array.isArray(object)) {
	        for (index = 0, length = object.length; index < length; index += 1) {
	          inspectNode(object[index], objects, duplicatesIndexes);
	        }
	      } else {
	        objectKeyList = Object.keys(object);
	
	        for (index = 0, length = objectKeyList.length; index < length; index += 1) {
	          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);
	        }
	      }
	    }
	  }
	}
	
	function dump(input, options) {
	  options = options || {};
	
	  var state = new State(options);
	
	  if (!state.noRefs) getDuplicateReferences(input, state);
	
	  if (writeNode(state, 0, input, true, true)) return state.dump + '\n';
	
	  return '';
	}
	
	function safeDump(input, options) {
	  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
	}
	
	module.exports.dump     = dump;
	module.exports.safeDump = safeDump;


/***/ },
/* 500 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.onRouteUpdate = onRouteUpdate;
	/**
	 * @param {String} location - Route Location from Gatsby on route change
	 */
	function onRouteUpdate() {}

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/*  weak */
	// This file is auto-written and used by Gatsby to require
	// files from your pages directory.
	
	module.exports = function (callback) {
	  var context = __webpack_require__(502);
	  if (false) {
	    module.hot.accept(context.id, function () {
	      context = require.context('./pages', true);
	      return callback(context);
	    });
	  }
	  return callback(context);
	};

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./404.md": 503,
		"./_Section": 504,
		"./_Section.jsx": 504,
		"./_template": 365,
		"./_template.jsx": 365,
		"./anomaly-detection-benchmark/_Section": 528,
		"./anomaly-detection-benchmark/_Section.jsx": 528,
		"./anomaly-detection-benchmark/images/benchmark.png": 538,
		"./anomaly-detection-benchmark/index": 541,
		"./anomaly-detection-benchmark/index.css": 539,
		"./anomaly-detection-benchmark/index.jsx": 541,
		"./applications/_Section": 543,
		"./applications/_Section.jsx": 543,
		"./applications/images/geo.png": 590,
		"./applications/images/geo@2x.png": 686,
		"./applications/images/grok.png": 591,
		"./applications/images/grok@2x.png": 687,
		"./applications/images/htm-for-stocks.png": 588,
		"./applications/images/htm-for-stocks@2x.png": 688,
		"./applications/images/htm-studio.png": 589,
		"./applications/images/htm-studio@2x.png": 689,
		"./applications/images/intrude.png": 593,
		"./applications/images/intrude@2x.png": 690,
		"./applications/images/nlp.png": 592,
		"./applications/images/nlp@2x.png": 691,
		"./applications/images/video-apps.png": 594,
		"./applications/images/video-apps@2x.png": 692,
		"./applications/index": 693,
		"./applications/index.css": 595,
		"./applications/index.jsx": 693,
		"./blog/2012/05/23/images/image.png": 694,
		"./blog/2012/05/23/images/image@2x.png": 695,
		"./blog/2012/05/23/images/main.jpg": 696,
		"./blog/2012/05/23/streams-and-lakes.md": 697,
		"./blog/2012/06/04/how-is-groks-algorithm-different.md": 698,
		"./blog/2012/06/04/images/image.png": 699,
		"./blog/2012/06/04/images/image@2x.png": 700,
		"./blog/2012/06/04/images/main.jpg": 701,
		"./blog/2012/08/27/images/image.png": 702,
		"./blog/2012/08/27/images/image@2x.png": 703,
		"./blog/2012/08/27/images/main.jpg": 704,
		"./blog/2012/08/27/the-problem-of-representation.md": 705,
		"./blog/2012/09/06/big-datas-digital-nervous-system.md": 706,
		"./blog/2012/09/06/images/image.png": 707,
		"./blog/2012/09/06/images/image@2x.png": 708,
		"./blog/2012/09/06/images/main.jpg": 709,
		"./blog/2012/10/01/images/image.png": 710,
		"./blog/2012/10/01/images/main.jpg": 711,
		"./blog/2012/10/01/jeff-hawkins-speaks-at-berkeley.md": 712,
		"./blog/2012/10/07/images/bloom-thumb.jpg": 713,
		"./blog/2012/10/07/images/main.jpg": 714,
		"./blog/2012/10/07/wait-the-brain-is-a-bloom-filter.md": 715,
		"./blog/2012/10/22/images/image.png": 716,
		"./blog/2012/10/22/images/image@2x.png": 717,
		"./blog/2012/10/22/images/main.jpg": 718,
		"./blog/2012/10/22/jeff-hawkins-at-strange-loop.md": 719,
		"./blog/2012/12/13/images/image.png": 720,
		"./blog/2012/12/13/images/image@2x.png": 721,
		"./blog/2012/12/13/images/main.jpg": 722,
		"./blog/2012/12/13/jeff-hawkins-on-skynet-vs-c3po.md": 723,
		"./blog/2013/01/03/images/image.png": 724,
		"./blog/2013/01/03/images/image@2x.png": 725,
		"./blog/2013/01/03/the-neuroscience-behind-grok.md": 726,
		"./blog/2013/01/27/images/image.jpg": 727,
		"./blog/2013/01/27/introducing-the-first-ever-sparse-football-pool.md": 728,
		"./blog/2013/01/29/images/image.jpg": 729,
		"./blog/2013/01/29/sparse-football-pool-winner.md": 730,
		"./blog/2013/02/11/images/image.png": 731,
		"./blog/2013/02/11/images/image@2x.png": 732,
		"./blog/2013/02/11/images/main.jpg": 733,
		"./blog/2013/02/11/super-bowl-neuroscience.md": 734,
		"./blog/2013/02/19/images/main.jpg": 735,
		"./blog/2013/02/19/not-your-fathers-neural-network.md": 736,
		"./blog/2013/03/04/brain-activity-map-project-arrives.md": 737,
		"./blog/2013/03/04/images/image.png": 738,
		"./blog/2013/03/04/images/image@2x.png": 739,
		"./blog/2013/03/04/images/main.jpg": 740,
		"./blog/2013/04/02/images/cep-arrow.jpg": 741,
		"./blog/2013/04/02/images/image.jpg": 742,
		"./blog/2013/04/02/images/main.jpg": 743,
		"./blog/2013/04/02/numenta-and-complex-event-processing.md": 744,
		"./blog/2013/04/11/images/image.png": 745,
		"./blog/2013/04/11/images/image@2x.png": 746,
		"./blog/2013/04/11/the-online-learning-advantage.md": 747,
		"./blog/2013/05/01/images/image.png": 748,
		"./blog/2013/05/01/images/image@2x.png": 749,
		"./blog/2013/05/01/images/main.jpg": 750,
		"./blog/2013/05/01/the-neuroscience-behind-grok-part-2.md": 751,
		"./blog/2014/03/17/images/image.png": 752,
		"./blog/2014/03/17/images/image@2x.png": 753,
		"./blog/2014/03/17/navigating-names-at-numenta.md": 754,
		"./blog/2014/03/20/images/image.png": 755,
		"./blog/2014/03/20/images/image@2x.png": 756,
		"./blog/2014/03/20/science-of-anomaly-detection.md": 757,
		"./blog/2014/04/04/anomaly-of-the-week.md": 758,
		"./blog/2014/04/04/images/1.png": 759,
		"./blog/2014/04/04/images/2.png": 760,
		"./blog/2014/04/04/images/3.png": 761,
		"./blog/2014/04/04/images/image.png": 762,
		"./blog/2014/04/04/images/main.jpg": 763,
		"./blog/2014/04/04/images/main@2x.jpg": 764,
		"./blog/2014/04/22/caught-red-handed.md": 765,
		"./blog/2014/04/22/images/1.png": 766,
		"./blog/2014/04/22/images/2.png": 767,
		"./blog/2014/04/22/images/3.png": 768,
		"./blog/2014/04/22/images/4.png": 769,
		"./blog/2014/04/22/images/image.png": 770,
		"./blog/2014/04/22/images/main.jpg": 771,
		"./blog/2014/04/22/images/main@2x.jpg": 772,
		"./blog/2014/07/15/detecting-anomalies-in-stock-volumes.md": 773,
		"./blog/2014/07/15/images/1.png": 774,
		"./blog/2014/07/15/images/2.png": 775,
		"./blog/2014/07/15/images/image.png": 776,
		"./blog/2014/07/15/images/main.jpg": 777,
		"./blog/2014/07/22/cleanup-on-asg-3.md": 778,
		"./blog/2014/07/22/images/ASG-failing.png": 779,
		"./blog/2014/07/22/images/ASG-healthy.png": 780,
		"./blog/2014/07/22/images/image.png": 781,
		"./blog/2014/08/11/images/geo.png": 782,
		"./blog/2014/08/11/images/image.png": 783,
		"./blog/2014/08/11/images/motor.png": 784,
		"./blog/2014/08/11/images/nlp.png": 785,
		"./blog/2014/08/11/images/rogue.png": 786,
		"./blog/2014/08/11/summer-internships-and-extensibility-of-htm.md": 787,
		"./blog/2014/08/18/images/image.png": 788,
		"./blog/2014/08/18/images/image@2x.png": 789,
		"./blog/2014/08/18/progress-at-numenta.md": 790,
		"./blog/2014/08/29/grok-for-managing-aws-cost-anomalies.md": 791,
		"./blog/2014/08/29/images/1.png": 792,
		"./blog/2014/08/29/images/2.png": 793,
		"./blog/2014/08/29/images/3.png": 794,
		"./blog/2014/08/29/images/4.png": 795,
		"./blog/2014/08/29/images/image.png": 796,
		"./blog/2014/08/29/images/image@2x.png": 797,
		"./blog/2014/09/17/images/image.png": 798,
		"./blog/2014/09/17/increasing-research-transparency.md": 799,
		"./blog/2014/10/07/images/1.png": 800,
		"./blog/2014/10/07/images/2.png": 801,
		"./blog/2014/10/07/images/3.png": 802,
		"./blog/2014/10/07/images/image.png": 803,
		"./blog/2014/10/07/images/image@2x.png": 804,
		"./blog/2014/10/07/learning-through-active-exploration.md": 805,
		"./blog/2014/12/15/custom-burnrate-metric.md": 806,
		"./blog/2014/12/15/images/image.png": 807,
		"./blog/2014/12/15/images/image@2x.png": 808,
		"./blog/2015/01/22/images/image.jpg": 809,
		"./blog/2015/01/22/introducing-sparse-football-pool-ii-super-bowl-xlix.md": 810,
		"./blog/2015/02/04/images/image.png": 811,
		"./blog/2015/02/04/images/image@2x.png": 812,
		"./blog/2015/02/04/super-bowl-neuroscience-sparse-pool-ii-2015-results.md": 813,
		"./blog/2015/06/02/images/graph1.png": 814,
		"./blog/2015/06/02/images/graph2.png": 815,
		"./blog/2015/06/02/nab-a-benchmark-for-streaming-anomaly-detection.md": 816,
		"./blog/2015/07/01/images/image.png": 817,
		"./blog/2015/07/01/images/image@2x.png": 818,
		"./blog/2015/07/01/winner-of-htm-contest-at-yale.md": 819,
		"./blog/2015/08/15/images/image.png": 820,
		"./blog/2015/08/15/images/image@2x.png": 821,
		"./blog/2015/08/15/numenta-licensing-update-agpl.md": 822,
		"./blog/2015/09/29/images/image.png": 823,
		"./blog/2015/09/29/introducing-the-numenta-htm-challenge.md": 824,
		"./blog/2015/12/01/htm-challenge-2015-results.md": 825,
		"./blog/2015/12/01/images/image.png": 826,
		"./blog/2015/12/01/images/image@2x.png": 827,
		"./blog/2016/01/11/images/image.png": 828,
		"./blog/2016/01/11/images/image@2x.png": 829,
		"./blog/2016/01/11/machine-intelligence-machine-learning-deep-learning-artificial-intelligence.md": 830,
		"./blog/2016/01/14/and-the-award-goes-to.md": 831,
		"./blog/2016/01/14/images/image.png": 832,
		"./blog/2016/02/11/images/image.png": 833,
		"./blog/2016/02/11/images/image@2x.png": 834,
		"./blog/2016/02/11/numenta-anomaly-benchmark-contest-ieee-wcci-2016.md": 835,
		"./blog/2016/02/18/images/1.png": 836,
		"./blog/2016/02/18/images/1@2x.png": 837,
		"./blog/2016/02/18/images/2.png": 838,
		"./blog/2016/02/18/images/3.png": 839,
		"./blog/2016/02/18/images/4.png": 840,
		"./blog/2016/02/18/images/image.png": 841,
		"./blog/2016/02/18/real-time-insights-from-a-random-walk-htm-for-stocks-hits-the-iphone.md": 842,
		"./blog/2016/03/30/images/2.png": 843,
		"./blog/2016/03/30/images/3.png": 844,
		"./blog/2016/03/30/images/cosyne-poster.pdf": 845,
		"./blog/2016/03/30/images/image.png": 846,
		"./blog/2016/03/30/numenta-at-computational-and-systems-neuroscience-conference.md": 847,
		"./blog/2016/06/16/can-neuroscientists-understand-the-brain.md": 848,
		"./blog/2016/06/16/images/image.png": 849,
		"./blog/2016/06/16/images/image@2x.png": 850,
		"./blog/index": 851,
		"./blog/index.jsx": 851,
		"./brains-and-machine-intelligence/index": 855,
		"./brains-and-machine-intelligence/index.jsx": 855,
		"./business-strategy-and-ip/_Section": 597,
		"./business-strategy-and-ip/_Section.jsx": 597,
		"./business-strategy-and-ip/images/business.png": 626,
		"./business-strategy-and-ip/images/business@2x.png": 856,
		"./business-strategy-and-ip/index": 857,
		"./business-strategy-and-ip/index.css": 627,
		"./business-strategy-and-ip/index.jsx": 857,
		"./careers-team-and-contact/_Section": 629,
		"./careers-team-and-contact/_Section.jsx": 629,
		"./careers-team-and-contact/careers/internship-program.md": 858,
		"./careers-team-and-contact/careers/research-internship.md": 859,
		"./careers-team-and-contact/images/careers.png": 643,
		"./careers-team-and-contact/images/careers@2x.png": 860,
		"./careers-team-and-contact/images/map.png": 649,
		"./careers-team-and-contact/images/team/celeste-baranski.jpg": 644,
		"./careers-team-and-contact/images/team/donna-dubinsky.jpg": 645,
		"./careers-team-and-contact/images/team/donna-dubinsky@2x.jpg": 861,
		"./careers-team-and-contact/images/team/ed-colligan.jpg": 646,
		"./careers-team-and-contact/images/team/ed-colligan@2x.jpg": 862,
		"./careers-team-and-contact/images/team/harry-saal.jpg": 647,
		"./careers-team-and-contact/images/team/harry-saal@2x.jpg": 863,
		"./careers-team-and-contact/images/team/jeff-hawkins.jpg": 648,
		"./careers-team-and-contact/images/team/jeff-hawkins@2x.jpg": 864,
		"./careers-team-and-contact/images/team/mike-farmwald.jpg": 650,
		"./careers-team-and-contact/images/team/mike-farmwald@2x.jpg": 865,
		"./careers-team-and-contact/images/team/subutai-ahmad.jpg": 651,
		"./careers-team-and-contact/images/team/subutai-ahmad@2x.jpg": 866,
		"./careers-team-and-contact/index": 867,
		"./careers-team-and-contact/index.css": 652,
		"./careers-team-and-contact/index.jsx": 867,
		"./careers-team-and-contact/thanks.md": 868,
		"./events/2014/03/26/amazon-web-services-summit-sf.md": 869,
		"./events/2014/03/26/images/image.png": 870,
		"./events/2014/03/26/images/image@2x.png": 871,
		"./events/2014/05/03/images/image.png": 872,
		"./events/2014/05/03/nupic-spring-2014-hackathon.md": 873,
		"./events/2014/05/05/grok-for-it-analytics-at-monitorama.md": 874,
		"./events/2014/05/05/images/image.png": 875,
		"./events/2014/07/09/amazon-web-services-summit-ny.md": 876,
		"./events/2014/07/09/images/image.png": 877,
		"./events/2014/07/09/images/image@2x.png": 878,
		"./events/2014/08/20/cognitive-computing-forum.md": 879,
		"./events/2014/08/20/images/image.png": 880,
		"./events/2014/08/20/images/image@2x.png": 881,
		"./events/2014/10/02/brainscales-neuromorphic-computing-conference.md": 882,
		"./events/2014/10/02/images/image.png": 883,
		"./events/2014/10/02/images/image@2x.png": 884,
		"./events/2014/10/15/advanced-aws-meetup.md": 885,
		"./events/2014/10/17/images/image.png": 886,
		"./events/2014/10/17/images/image@2x.png": 887,
		"./events/2014/10/17/numenta-training-workshop.md": 888,
		"./events/2014/10/18/images/image.png": 889,
		"./events/2014/10/18/nupic-fall-2014-hackathon.md": 890,
		"./events/2014/10/30/ibm-research-cognitive-systems-colloquium.md": 891,
		"./events/2014/10/30/images/image.png": 892,
		"./events/2014/11/11/AWS-reInvent.md": 893,
		"./events/2014/11/11/images/image.png": 894,
		"./events/2014/12/04/images/image.png": 895,
		"./events/2014/12/04/images/image@2x.png": 896,
		"./events/2014/12/04/sv-forum-ihuman-the-future-of-minds-and-machines.md": 897,
		"./events/2015/02/17/images/image.png": 898,
		"./events/2015/02/17/images/image@2x.png": 899,
		"./events/2015/02/17/strata-hadoop-world.md": 900,
		"./events/2015/02/23/images/image.png": 901,
		"./events/2015/02/23/sandia-national-labs-neuro-computational-workshop-2015.md": 902,
		"./events/2015/03/05/cosyne-computational-systems-neuroscience-2015.md": 903,
		"./events/2015/03/05/images/image.png": 904,
		"./events/2015/03/05/images/image@2x.png": 905,
		"./events/2015/03/17/images/image.png": 906,
		"./events/2015/03/17/images/image@2x.png": 907,
		"./events/2015/03/17/what-the-brain-says-about-machine-intelligence-nyc-meetup.md": 908,
		"./events/2015/05/30/images/image.png": 909,
		"./events/2015/05/30/nupic-spring-2015-hackathon.md": 910,
		"./events/2015/06/01/images/image.png": 911,
		"./events/2015/06/01/orange-institute-14-silicon-valley-redefining-business-again.md": 912,
		"./events/2015/08/18/dataversity-smart-data-conference-san-jose-2015.md": 913,
		"./events/2015/08/18/images/image.png": 914,
		"./events/2015/08/18/images/image@2x.png": 915,
		"./events/2015/10/01/berkeley-symposium-on-energy-efficient-electronic-systems.md": 916,
		"./events/2015/10/01/images/image.png": 917,
		"./events/2015/10/01/images/image@2x.png": 918,
		"./events/2015/10/07/gsv-labs-pioneer-summit.md": 919,
		"./events/2015/10/07/images/image.png": 920,
		"./events/2015/10/07/images/image@2x.png": 921,
		"./events/2015/10/22/compute-midwest-imagine-the-future-2015.md": 922,
		"./events/2015/10/22/images/image.png": 923,
		"./events/2015/11/01/hhmi-janelia-emerging-tools-for-whole-brain-functional-data.md": 924,
		"./events/2015/11/01/images/image.png": 925,
		"./events/2015/11/13/images/htm-challenge.png": 926,
		"./events/2015/11/13/images/image.png": 927,
		"./events/2015/11/13/images/image@2x.png": 928,
		"./events/2015/11/13/ml-conf-machine-learning-conference-san-francisco.md": 929,
		"./events/2015/11/13/numenta-htm-challenge-community-meetup.md": 930,
		"./events/2015/11/14/images/image.png": 931,
		"./events/2015/11/14/numenta-htm-challenge-onsite.md": 932,
		"./events/2015/12/09/14th-ieee-international-conference-on-machine-learning-icmla.md": 933,
		"./events/2015/12/09/images/image.png": 934,
		"./events/2015/12/09/images/image@2x.png": 935,
		"./events/2016/02/25/cosyne-computational-and-systems-neuroscience-meeting-2016.md": 936,
		"./events/2016/02/25/images/image.png": 937,
		"./events/2016/02/25/images/image@2x.png": 938,
		"./events/2016/03/07/global-big-data-conference-2016.md": 939,
		"./events/2016/03/07/images/bigdata.png": 940,
		"./events/2016/03/07/images/nice.png": 941,
		"./events/2016/03/07/neuro-inspired-elements-workshop-nice-2016.md": 942,
		"./events/2016/03/14/images/image.png": 943,
		"./events/2016/03/14/images/image@2x.png": 944,
		"./events/2016/03/14/numenta-htm-bay-area-meetup-santa-clara.md": 945,
		"./events/2016/03/17/images/image.png": 946,
		"./events/2016/03/17/images/image@2x.png": 947,
		"./events/2016/03/17/numenta-htm-workshop-berkeley-institute-for-data-science.md": 948,
		"./events/2016/03/29/images/image.png": 949,
		"./events/2016/03/29/images/image@2x.png": 950,
		"./events/2016/03/29/strata-hadoop-world-big-data-conference-2016.md": 951,
		"./events/2016/04/07/ai-meetup-hierarchical-temporal-memory-san-francisco.md": 952,
		"./events/2016/04/07/images/image.png": 953,
		"./events/2016/04/07/images/image@2x.png": 954,
		"./events/2016/04/09/connected-car-hackathon-oakland-ca.md": 955,
		"./events/2016/04/09/images/image.png": 956,
		"./events/2016/04/09/images/image@2x.png": 957,
		"./events/2016/04/23/images/image.png": 958,
		"./events/2016/04/23/ted-x-cornell-tech.md": 959,
		"./events/2016/04/26/images/image.png": 960,
		"./events/2016/04/26/images/image@2x.png": 961,
		"./events/2016/04/26/numenta-webinar.md": 962,
		"./events/2016/05/12/images/image.png": 963,
		"./events/2016/05/12/neuro-tech-x-meetup-featuring-jeff-hawkins.md": 964,
		"./events/2016/05/19/ai-by-the-bay.md": 965,
		"./events/2016/05/19/business-analytics-innovation-summit-chicago-2016.md": 966,
		"./events/2016/05/19/images/aibythebay.png": 967,
		"./events/2016/05/19/images/image.png": 968,
		"./events/2016/05/25/ai-startups-conference.md": 969,
		"./events/2016/05/25/images/image.png": 970,
		"./events/2016/05/25/images/image@2x.png": 971,
		"./events/2016/06/01/orange-county-meetup-deriving-machine-intelligence-from-neuroscience.md": 972,
		"./events/2016/06/18/dendritic-anatomy-molecules-and-function-heraklion-crete.md": 973,
		"./events/2016/06/18/images/image.png": 974,
		"./events/2016/06/18/images/image@2x.png": 975,
		"./events/2016/06/22/areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles.md": 976,
		"./events/2016/06/22/images/image.png": 977,
		"./events/2016/07/01/images/image.png": 978,
		"./events/2016/07/01/images/image@2x.png": 979,
		"./events/2016/07/01/the-playfair-ai-summit-2016.md": 980,
		"./events/2016/07/13/data-science-summit.md": 981,
		"./events/2016/07/13/images/image.png": 982,
		"./events/2016/07/13/images/image@2x.png": 983,
		"./events/2016/07/24/images/image.png": 984,
		"./events/2016/07/24/images/image@2x.png": 985,
		"./events/2016/07/24/numenta-anomaly-benchmark-competition-at-ieee-wcci-2016.md": 986,
		"./events/2016/07/26/ieee-wcci-2016.md": 987,
		"./events/2016/07/26/images/image.png": 988,
		"./events/2016/08/02/images/image.png": 989,
		"./events/2016/08/02/sf-data-science-meetup.md": 990,
		"./events/2016/08/08/htm-bay-area-meetup.md": 991,
		"./events/2016/08/08/images/meetup.png": 992,
		"./events/2016/08/08/images/meetup@2x.png": 993,
		"./events/2016/09/25/ai-with-the-best.md": 994,
		"./events/2016/09/25/images/image.png": 995,
		"./events/2016/09/25/images/image@2x.png": 996,
		"./events/2016/11/11/images/image.png": 997,
		"./events/2016/11/11/images/image@2x.png": 998,
		"./events/2016/11/11/mlconf-machine-learning-conference-san-francisco-2016.md": 999,
		"./events/index": 1000,
		"./events/index.jsx": 1000,
		"./htm-for-stocks/index": 1001,
		"./htm-for-stocks/index.jsx": 1001,
		"./htm-studio/index": 1002,
		"./htm-studio/index.jsx": 1002,
		"./index": 1003,
		"./index.css": 526,
		"./index.jsx": 1003,
		"./legal/privacy.md": 1004,
		"./legal/terms.md": 1005,
		"./mission-and-history/_Section": 654,
		"./mission-and-history/_Section.jsx": 654,
		"./mission-and-history/images/brain.svg": 655,
		"./mission-and-history/images/timeline.png": 656,
		"./mission-and-history/images/timeline@2x.png": 1006,
		"./mission-and-history/index": 1007,
		"./mission-and-history/index.css": 657,
		"./mission-and-history/index.jsx": 1007,
		"./newsletter/2013/10/11/announcing-grok-for-it.md": 1008,
		"./newsletter/2013/11/08/grok-at-aws-reinvent.md": 1009,
		"./newsletter/2014/02/04/grok-soft-launch.md": 1010,
		"./newsletter/2014/03/25/announcing-grok-for-it-analytics-on-aws.md": 1011,
		"./newsletter/2014/06/10/progress-report-june-2014.md": 1012,
		"./newsletter/2014/08/19/machine-intelligence-applications-summer-2014.md": 1013,
		"./newsletter/2014/09/16/fall-workshop-and-hackathon.md": 1014,
		"./newsletter/2014/11/11/grok-1-6-showcasing-at-aws-re-invent-las-vegas-2014.md": 1015,
		"./newsletter/2015/01/26/welcome-to-2015.md": 1016,
		"./newsletter/2015/03/12/numenta-newsletter-mar-2015.md": 1017,
		"./newsletter/2015/04/29/numenta-newsletter-apr-2015.md": 1018,
		"./newsletter/2015/05/14/announcing-relationship-with-cortical-io.md": 1019,
		"./newsletter/2015/06/09/numenta-open-sourcing-two-htm-products.md": 1020,
		"./newsletter/2015/07/02/announcing-open-source-htm-app-grok-for-stocks.md": 1021,
		"./newsletter/2015/07/02/images/homescreen.png": 1022,
		"./newsletter/2015/07/02/images/image.png": 1023,
		"./newsletter/2015/09/01/images/image.png": 1024,
		"./newsletter/2015/09/01/images/image@2x.png": 1025,
		"./newsletter/2015/09/01/partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics.md": 1026,
		"./newsletter/2015/10/01/images/image.png": 1027,
		"./newsletter/2015/10/01/images/image@2x.png": 1028,
		"./newsletter/2015/10/01/numenta-anomaly-benchmark-and-numenta-htm-challenge.md": 1029,
		"./newsletter/2015/11/10/images/image.png": 1030,
		"./newsletter/2015/11/10/images/image@2x.png": 1031,
		"./newsletter/2015/11/10/numenta-anomaly-benchmark-nab-open-source-with-white-paper.md": 1032,
		"./newsletter/2015/11/17/images/image.png": 1033,
		"./newsletter/2015/11/17/why-neurons-have-thousands-of-synapses-a-theory-of-sequence-memory.md": 1034,
		"./newsletter/2016/01/07/year-in-review-numenta-2015.md": 1035,
		"./newsletter/2016/02/10/numenta-anomaly-benchmark-competition.md": 1036,
		"./newsletter/2016/02/18/htm-for-stocks-available-in-the-app-store.md": 1037,
		"./newsletter/2016/02/18/images/image.png": 1038,
		"./newsletter/2016/03/28/neuron-paper-published-in-peer-reviewed-neuroscience-journal.md": 1039,
		"./newsletter/2016/05/11/announcing-bami-biological-and-machine-intelligence.md": 1040,
		"./newsletter/2016/06/28/images/htm-studio.png": 1041,
		"./newsletter/2016/06/28/images/htm-studio@2x.png": 1042,
		"./newsletter/2016/06/28/numenta-releases-htm-studio-desktop-application.md": 1043,
		"./newsletter/images/numenta.png": 1044,
		"./newsletter/images/numenta@2x.png": 1045,
		"./newsletter/index": 1046,
		"./newsletter/index.jsx": 1046,
		"./numenta-anomaly-benchmark/index": 1047,
		"./numenta-anomaly-benchmark/index.jsx": 1047,
		"./open-source-project/_Section": 659,
		"./open-source-project/_Section.jsx": 659,
		"./open-source-project/images/video-tech.png": 1048,
		"./open-source-project/images/video-tech@2x.png": 1049,
		"./open-source-project/index": 1050,
		"./open-source-project/index.css": 661,
		"./open-source-project/index.jsx": 1050,
		"./papers-videos-and-more/_Section": 663,
		"./papers-videos-and-more/_Section.jsx": 663,
		"./papers-videos-and-more/index": 1051,
		"./papers-videos-and-more/index.css": 664,
		"./papers-videos-and-more/index.jsx": 1051,
		"./papers-videos-and-more/learn/applications-of-hierarchical-temporal-memory.md": 1052,
		"./papers-videos-and-more/learn/getting-started-with-numenta-technology.md": 1053,
		"./papers-videos-and-more/learn/hierarchical-temporal-memory-basics-tutorial.md": 1054,
		"./papers-videos-and-more/learn/hierarchical-temporal-memory-white-paper.md": 1055,
		"./papers-videos-and-more/learn/htm-videos-from-jeff-hawkins.md": 1056,
		"./papers-videos-and-more/learn/machine-intelligence-with-streaming-data-webinar.md": 1057,
		"./papers-videos-and-more/learn/on-intelligence.md": 1058,
		"./papers-videos-and-more/learn/science-of-anomaly-detection.md": 1059,
		"./papers-videos-and-more/learn/sparse-distributed-representations.md": 1060,
		"./papers-videos-and-more/papers/continuous-online-sequence-learning-with-an-unsupervised-neural-network-model.md": 1061,
		"./papers-videos-and-more/papers/encoding-data-for-htm-systems.md": 1062,
		"./papers-videos-and-more/papers/evaluating-real-time-anomaly-detection-algorithms-numenta-anomaly-benchmark.md": 1063,
		"./papers-videos-and-more/papers/how-do-neurons-operate-on-sparse-distributed-representations.md": 1064,
		"./papers-videos-and-more/papers/porting-htm-models-to-the-heidelberg-neuromorphic-computing-platform.md": 1065,
		"./papers-videos-and-more/papers/properties-of-sparse-distributed-representations.md": 1066,
		"./papers-videos-and-more/papers/real-time-anomaly-detection-for-streaming-analytics.md": 1067,
		"./papers-videos-and-more/papers/why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex.md": 1068,
		"./partners/_Section": 666,
		"./partners/_Section.jsx": 666,
		"./partners/images/cortical.png": 667,
		"./partners/images/grokstream.png": 668,
		"./partners/images/grokstream@2x.png": 1069,
		"./partners/index": 1070,
		"./partners/index.css": 669,
		"./partners/index.jsx": 1070,
		"./press/2013/02/14/images/numenta.png": 1071,
		"./press/2013/02/14/images/numenta@2x.png": 1072,
		"./press/2013/02/14/numenta-gigaom-presentation.md": 1073,
		"./press/2013/04/18/images/numenta.png": 1074,
		"./press/2013/04/18/images/numenta@2x.png": 1075,
		"./press/2013/04/18/thingworx-partnership.md": 1076,
		"./press/2013/05/17/images/numenta.png": 1077,
		"./press/2013/05/17/images/numenta@2x.png": 1078,
		"./press/2013/05/17/sybase-esp-integration.md": 1079,
		"./press/2013/07/22/images/nupic.png": 1080,
		"./press/2013/07/22/nupic-open-source-project.md": 1081,
		"./press/2013/12/04/computing-like-the-brain.md": 1082,
		"./press/2013/12/04/images/yow.png": 1083,
		"./press/2014/01/22/fujitsu-natf-video.md": 1084,
		"./press/2014/01/22/images/fujitsu.png": 1085,
		"./press/2014/01/22/images/fujitsu@2x.png": 1086,
		"./press/2014/01/29/brains-view-of-economics.md": 1087,
		"./press/2014/01/29/images/project-syndicate.png": 1088,
		"./press/2014/03/25/images/numenta.png": 1089,
		"./press/2014/03/25/images/numenta@2x.png": 1090,
		"./press/2014/03/25/numenta-releases-grok-for-it-analytics-on-aws.md": 1091,
		"./press/2014/03/29/building-an-ai-that-mimics-our-neocortex.md": 1092,
		"./press/2014/03/29/images/the-register.png": 1093,
		"./press/2014/03/29/images/the-register@2x.png": 1094,
		"./press/2014/04/07/images/twit.png": 1095,
		"./press/2014/04/07/triangulation-146-with-leo-laporte.md": 1096,
		"./press/2014/04/08/images/33rd-square.png": 1097,
		"./press/2014/04/08/path-to-machine-intelligence.md": 1098,
		"./press/2014/04/20/images/forbes.png": 1099,
		"./press/2014/04/20/images/forbes@2x.png": 1100,
		"./press/2014/04/20/what-really-scares-tech-leaders-about-artificial-intelligence.md": 1101,
		"./press/2014/04/23/images/mit-technology-review.png": 1102,
		"./press/2014/04/23/neuromorphic-chips-enhance-artificial-intelligence.md": 1103,
		"./press/2014/04/30/images/nordea-invest.png": 1104,
		"./press/2014/04/30/when-big-data-is-old-news.md": 1105,
		"./press/2014/05/29/computer-programming-is-a-dying-art.md": 1106,
		"./press/2014/05/29/images/newsweek.png": 1107,
		"./press/2014/06/03/big-data-dump-overwhelms-spy-agencies.md": 1108,
		"./press/2014/06/03/images/bloomberg.png": 1109,
		"./press/2014/06/03/images/bloomberg@2x.png": 1110,
		"./press/2014/07/09/images/venture-beat.png": 1111,
		"./press/2014/07/09/numenta-apps-mimic-way-brain-works.md": 1112,
		"./press/2014/08/13/images/search-cloud-computing.png": 1113,
		"./press/2014/08/13/images/search-cloud-computing@2x.png": 1114,
		"./press/2014/08/13/when-cloud-monitoring-falls-short.md": 1115,
		"./press/2014/09/02/images/dataconomy.png": 1116,
		"./press/2014/09/02/mimicking-brain-function-is-revolutionising-nlp.md": 1117,
		"./press/2014/09/05/cognitive-computing-truly-amazing-apps.md": 1118,
		"./press/2014/09/05/images/programmableweb.png": 1119,
		"./press/2014/09/16/images/dataconomy.png": 1120,
		"./press/2014/09/16/ten-machine-learning-experts.md": 1121,
		"./press/2014/09/24/images/gigaom.png": 1122,
		"./press/2014/09/24/jeff-hawkins-on-his-approach-to-ai.md": 1123,
		"./press/2014/10/22/images/thinkingmachine.png": 1124,
		"./press/2014/10/22/jeff-hawkins-limitations-of-artificial-neural-networks.md": 1125,
		"./press/2014/11/05/images/numenta.png": 1126,
		"./press/2014/11/05/images/numenta@2x.png": 1127,
		"./press/2014/11/05/numenta-showcases-new-version-grok-aws-reinvent-2014.md": 1128,
		"./press/2014/11/10/images/newsweek.png": 1129,
		"./press/2014/11/10/innovation-lite-modern-day-technology-is-stuck.md": 1130,
		"./press/2014/11/12/cortical-io-gain-over-1-million-in-new-venture-capital.md": 1131,
		"./press/2014/11/12/images/dataconomy.png": 1132,
		"./press/2014/11/21/cognitive-computing-what-it-means-to-you.md": 1133,
		"./press/2014/11/21/images/techworld.png": 1134,
		"./press/2014/11/21/images/techworld@2x.png": 1135,
		"./press/2014/12/09/images/eetimes.png": 1136,
		"./press/2014/12/09/smart-panel-ponders-ais-future.md": 1137,
		"./press/2014/12/29/deep-learning-and-machine-intelligence-eat-the-world-2015.md": 1138,
		"./press/2014/12/29/images/forbes.png": 1139,
		"./press/2014/12/29/images/forbes@2x.png": 1140,
		"./press/2015/01/09/artificial-intelligence-is-real-now.md": 1141,
		"./press/2015/01/09/images/gigaom.png": 1142,
		"./press/2015/02/19/images/science20.png": 1143,
		"./press/2015/02/19/life-happens-ai-will-happen-probably-at-ibm-numenta.md": 1144,
		"./press/2015/03/02/images/recode.png": 1145,
		"./press/2015/03/02/images/recode@2x.png": 1146,
		"./press/2015/03/02/terminator-not-coming-future-will-thank-us.md": 1147,
		"./press/2015/03/05/images/fortune.png": 1148,
		"./press/2015/03/05/images/fortune@2x.png": 1149,
		"./press/2015/03/05/many-scientists-dismiss-the-fear-of-robots-heres-why.md": 1150,
		"./press/2015/03/26/artificial-intelligence-could-have-prevented-the-germanwings-crash.md": 1151,
		"./press/2015/03/26/images/forbes.png": 1152,
		"./press/2015/03/26/images/forbes@2x.png": 1153,
		"./press/2015/04/02/how-we-learn-to-stop-worrying-and-love-the-bots.md": 1154,
		"./press/2015/04/02/images/wired.png": 1155,
		"./press/2015/04/02/images/wired@2x.png": 1156,
		"./press/2015/04/08/ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms.md": 1157,
		"./press/2015/04/08/images/mit-technology-review.png": 1158,
		"./press/2015/04/14/images/science20.png": 1159,
		"./press/2015/04/14/numenta-the-bruce-lee-of-ai-and-deep-learning.md": 1160,
		"./press/2015/05/07/images/wired.png": 1161,
		"./press/2015/05/07/images/wired@2x.png": 1162,
		"./press/2015/05/07/jeff-hawkins-of-firing-up-the-silicon-brain.md": 1163,
		"./press/2015/05/14/images/numenta.png": 1164,
		"./press/2015/05/14/images/numenta@2x.png": 1165,
		"./press/2015/05/14/numenta-and-cortical-io-form-strategic-partnership.md": 1166,
		"./press/2015/05/22/images/cnn.png": 1167,
		"./press/2015/05/22/images/cnn@2x.png": 1168,
		"./press/2015/05/22/images/science20.png": 1169,
		"./press/2015/05/22/numenta-and-ibm-to-build-biologically-inspired-intelligent-machines.md": 1170,
		"./press/2015/05/22/on-gps-with-fareed-zakaria-the-threat-of-intelligent-machines.md": 1171,
		"./press/2015/07/08/images/image.png": 1172,
		"./press/2015/07/08/images/screen.png": 1173,
		"./press/2015/07/08/images/venture-beat.png": 1174,
		"./press/2015/07/08/numenta-grok-for-stocks-app-uses-ai-decipher-stock-market-patterns.md": 1175,
		"./press/2015/07/08/numenta-ships-new-htm-example-app-htm-for-stocks.md": 1176,
		"./press/2015/08/19/images/numenta.png": 1177,
		"./press/2015/08/19/images/numenta@2x.png": 1178,
		"./press/2015/08/19/numenta-announces-licensing-of-grok-for-it-to-avik-partners.md": 1179,
		"./press/2015/09/05/images/network-world.png": 1180,
		"./press/2015/09/05/images/network-world@2x.png": 1181,
		"./press/2015/09/05/numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis.md": 1182,
		"./press/2015/10/06/avik-partners-unfurls-machine-learning-service-to-optimize-it-operations.md": 1183,
		"./press/2015/10/06/images/it-business-edge.png": 1184,
		"./press/2015/10/29/images/prweb.png": 1185,
		"./press/2015/10/29/usd-2-million-for-brain-inspired-algorithm-made-in-austria-cortical-io.md": 1186,
		"./press/2015/11/10/images/image.png": 1187,
		"./press/2015/11/10/images/image@2x.png": 1188,
		"./press/2015/11/10/numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques.md": 1189,
		"./press/2015/11/12/images/mit-technology-review.png": 1190,
		"./press/2015/11/12/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns.md": 1191,
		"./press/2016/03/07/images/the-new-york-times.png": 1192,
		"./press/2016/03/07/images/the-new-york-times@2x.png": 1193,
		"./press/2016/03/07/the-terminator-and-the-washing-machine.md": 1194,
		"./press/2016/04/12/images/image.jpg": 1195,
		"./press/2016/04/12/numenta-researchers-discover-how-the-brain-learns-sequences.md": 1196,
		"./press/2016/05/01/brain-like-computing.md": 1197,
		"./press/2016/05/01/images/computing-now.png": 1198,
		"./press/2016/05/01/images/computing-now@2x.png": 1199,
		"./press/2016/05/22/images/wall-street-journal.png": 1200,
		"./press/2016/05/22/images/wall-street-journal@2x.png": 1201,
		"./press/2016/05/22/new-chips-propel-machine-learning.md": 1202,
		"./press/2016/05/29/donna-dubinsky-standing-up-to-steve-jobs-and-being-right.md": 1203,
		"./press/2016/05/29/images/learning-leader.png": 1204,
		"./press/2016/06/16/here-is-what-uk-developers-need-to-know-about-machine-learning.md": 1205,
		"./press/2016/06/16/images/techworld.png": 1206,
		"./press/2016/06/16/images/techworld@2x.png": 1207,
		"./press/2016/06/25/from-not-working-to-neural-networking.md": 1208,
		"./press/2016/06/25/images/economist.png": 1209,
		"./press/2016/06/25/images/economist@2x.png": 1210,
		"./press/2016/06/26/images/htm-studio.png": 1211,
		"./press/2016/06/26/images/htm-studio@2x.png": 1212,
		"./press/2016/06/26/numenta-releases-htm-studio.md": 1213,
		"./press/2016/06/27/images/recode.png": 1214,
		"./press/2016/06/27/images/recode@2x.png": 1215,
		"./press/2016/06/27/this-is-why-your-fears-about-artificial-intelligence-are-wrong.md": 1216,
		"./press/2016/07/26/images/jaxenter.png": 1217,
		"./press/2016/07/26/images/jaxenter@2x.png": 1218,
		"./press/2016/07/26/machine-learning-expert-check-6-tips-for-getting-started-in-the-machine-learning.md": 1219,
		"./press/index": 1220,
		"./press/index.jsx": 1220,
		"./sitemap/index": 1221,
		"./sitemap/index.jsx": 1221,
		"./technology-overview/_Section": 671,
		"./technology-overview/_Section.jsx": 671,
		"./technology-overview/images/video-tech.png": 672,
		"./technology-overview/images/video-tech@2x.png": 1222,
		"./technology-overview/index": 1223,
		"./technology-overview/index.css": 673,
		"./technology-overview/index.jsx": 1223
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 502;


/***/ },
/* 503 */
/***/ function(module, exports) {

	module.exports = {"body":"<h1>NOT FOUND</h1>\n<p>You just hit a route that doesn’t exist… the sadness.</p>\n"}

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Glance = __webpack_require__(505);
	
	var _Glance2 = _interopRequireDefault(_Glance);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _Strong = __webpack_require__(523);
	
	var _Strong2 = _interopRequireDefault(_Strong);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _index = __webpack_require__(526);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionIndex = (props, { config }) => {
	  const { links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    { className: _index2.default.columns },
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.aside },
	      _react2.default.createElement(_Glance2.default, null)
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.content },
	      _react2.default.createElement(
	        _Paragraph2.default,
	        { lead: true },
	        _react2.default.createElement(
	          _Strong2.default,
	          null,
	          'At Numenta,'
	        ),
	        ' we are tackling one of the most important scientific challenges of all time: reverse engineering the neocortex. Studying how the brain works helps us understand the principles of intelligence. We apply our discoveries to one of the most important technology challenges of all time: creating intelligent machines. We believe that understanding how the neocortex works is the fastest path to machine intelligence, and creating intelligent machines is important for the continued success of humankind.'
	      ),
	      _react2.default.createElement(
	        _Paragraph2.default,
	        null,
	        'We are at the very beginning of a thrilling new era of computing that will unfold over the coming decades, and we invite you to learn about our approach, research and technology that is helping to advance the state of brain theory and machine intelligence.'
	      ),
	      _react2.default.createElement(
	        _Paragraph2.default,
	        null,
	        'On this site, you’ll find information about our company. If you’re looking for technical resources, including our research details, software implementations and how to get started with our technology, visit our HTM open source community at ',
	        ' ',
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.out.org },
	          links.out.org,
	          '.'
	        )
	      )
	    )
	  );
	};
	
	SectionIndex.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SectionIndex;
	module.exports = exports['default'];

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _DefineItem = __webpack_require__(506);
	
	var _DefineItem2 = _interopRequireDefault(_DefineItem);
	
	var _DefineList = __webpack_require__(509);
	
	var _DefineList2 = _interopRequireDefault(_DefineList);
	
	var _DefineTitle = __webpack_require__(512);
	
	var _DefineTitle2 = _interopRequireDefault(_DefineTitle);
	
	var _Logo = __webpack_require__(403);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	var _Spacer = __webpack_require__(390);
	
	var _Spacer2 = _interopRequireDefault(_Spacer);
	
	var _Tag = __webpack_require__(515);
	
	var _Tag2 = _interopRequireDefault(_Tag);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _universal = __webpack_require__(376);
	
	var _index = __webpack_require__(518);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Glance = (props, context) => {
	  const { config } = context;
	  const { links } = config;
	  const data = {
	    About: _universal.trims`Numenta develops machine intelligence technology based on
	            neocortical theory.`,
	    Established: 'Feb 4, 2005',
	    Location: 'Redwood City, CA',
	    Employees: '15 — 20',
	    Business: 'Licensing',
	    Type: 'Private',
	    Media: _react2.default.createElement(
	      'span',
	      null,
	      _react2.default.createElement(
	        _TextLink2.default,
	        { to: links.in.blog },
	        'Blog'
	      ),
	      _react2.default.createElement(_Spacer2.default, null),
	      _react2.default.createElement(
	        _TextLink2.default,
	        { to: links.in.events },
	        'Events'
	      ),
	      _react2.default.createElement(_Spacer2.default, null),
	      _react2.default.createElement(
	        _TextLink2.default,
	        { to: links.in.newsletter },
	        'Newsletter'
	      ),
	      _react2.default.createElement(_Spacer2.default, null),
	      _react2.default.createElement(
	        _TextLink2.default,
	        { to: links.in.press },
	        'Press'
	      )
	    ),
	    Latest: _react2.default.createElement(
	      _TextLink2.default,
	      { to: links.in.htmstudio },
	      'Numenta releases HTM Studio! ',
	      _react2.default.createElement(
	        _Tag2.default,
	        null,
	        'New'
	      )
	    )
	  };
	  let defs = [];
	
	  for (let key in data) {
	    if (data.hasOwnProperty(key)) {
	      defs.push(_react2.default.createElement(
	        _DefineTitle2.default,
	        { key: `DefineTitle-${ key }` },
	        key
	      ));
	      defs.push(_react2.default.createElement(
	        _DefineItem2.default,
	        { key: `DefineItem-${ key }` },
	        data[key]
	      ));
	    }
	  }
	
	  return _react2.default.createElement(
	    'aside',
	    { className: _index2.default.glance },
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.logo },
	      _react2.default.createElement(_Logo2.default, null)
	    ),
	    _react2.default.createElement(
	      _DefineList2.default,
	      { direction: 'horizontal' },
	      defs
	    )
	  );
	};
	
	Glance.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = Glance;
	module.exports = exports['default'];

/***/ },
/* 506 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(507);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const DefineItem = ({ children, direction }) => {
	  const classes = [_index2.default.defineItem];
	
	  if (direction) classes.push(_index2.default[direction]);
	
	  return _react2.default.createElement(
	    'dd',
	    { className: (0, _classnames2.default)(...classes) },
	    children
	  );
	};
	
	DefineItem.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  direction: _react2.default.PropTypes.oneOf(['horizontal', 'vertical'])
	};
	
	exports.default = DefineItem;
	module.exports = exports['default'];

/***/ },
/* 507 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"horizontal":"index_horizontal_7U1 tachyons_fl_wJK tachyons_h-100_Yu8 tachyons_ma0_2xh","vertical":"index_vertical_IQM tachyons_mb3_1mV tachyons_ml0_x1_","defineItem":"index_defineItem_6by"};

/***/ },
/* 508 */,
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(510);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const DefineList = ({ children, direction }) => {
	  const classes = [_index2.default.defineList, _index2.default[direction]];
	  const childrenWithProps = _react2.default.Children.map(children, child => _react2.default.cloneElement(child, { direction }));
	
	  return _react2.default.createElement(
	    'dl',
	    { className: (0, _classnames2.default)(...classes) },
	    childrenWithProps
	  );
	};
	
	DefineList.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  direction: _react2.default.PropTypes.oneOf(['horizontal', 'vertical'])
	};
	
	DefineList.defaultProps = {
	  direction: 'vertical'
	};
	
	exports.default = DefineList;
	module.exports = exports['default'];

/***/ },
/* 510 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"horizontal":"index_horizontal_2iP tachyons_cf_g7R tachyons_lh-title_1xo","vertical":"index_vertical_1Dv tachyons_lh-copy_15f tachyons_mb3_1mV tachyons_measure_hbr tachyons_measure-wide-l_2Qf","defineList":"index_defineList_2Bk tachyons_ma0_2xh tachyons_pa0_RbR"};

/***/ },
/* 511 */,
/* 512 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(513);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const DefineTitle = ({ children, direction }) => {
	  const classes = [_index2.default.defineTitle];
	
	  if (direction) classes.push(_index2.default[direction]);
	
	  return _react2.default.createElement(
	    'dt',
	    { className: (0, _classnames2.default)(...classes) },
	    children
	  );
	};
	
	DefineTitle.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  direction: _react2.default.PropTypes.oneOf(['horizontal', 'vertical'])
	};
	
	exports.default = DefineTitle;
	module.exports = exports['default'];

/***/ },
/* 513 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"horizontal":"index_horizontal_1Zy tachyons_fl_wJK tachyons_h-100_Yu8 tachyons_ma0_2xh","vertical":"index_vertical_3bW tachyons_lh-title_1xo tachyons_mb1_2-H","defineTitle":"index_defineTitle_1cB tachyons_fw6_1NV"};

/***/ },
/* 514 */,
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(516);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Tag = ({ children }) => _react2.default.createElement(
	  'span',
	  { className: _index2.default.tag },
	  children
	);
	
	Tag.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = Tag;
	module.exports = exports['default'];

/***/ },
/* 516 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"tag":"index_tag_5Af tachyons_br2_rOa tachyons_fw4_3tj tachyons_mh1_-Z3 tachyons_relative_1fO tachyons_ttu_1fW tachyons_white_3f5 theme_bg-color-blue-lite_1Sp"};

/***/ },
/* 517 */,
/* 518 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_rules":"index__rules_3UH","glance":"index_glance_21U tachyons_bg-near-white_1Oi tachyons_br2_rOa tachyons_f5_2mB tachyons_f6-ns_27V tachyons_mb3_1mV tachyons_pb3_9S8 tachyons_ph3_Qxl tachyons_pt2_3ym tachyons_tl_3s2 index__rules_3UH","logo":"index_logo_3u- tachyons_center_iwf tachyons_mb3_1mV tachyons_mt2_3dR tachyons_w5_2u9 tachyons_w4-m_39b"};

/***/ },
/* 519 */,
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(521);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Paragraph = ({ children, lead }) => {
	  const classes = [_index2.default.paragraph];
	
	  if (lead === true) classes.push(_index2.default.lead);
	
	  return _react2.default.createElement(
	    'p',
	    { className: (0, _classnames2.default)(...classes) },
	    children
	  );
	};
	
	Paragraph.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  lead: _react2.default.PropTypes.bool.isRequired
	};
	
	Paragraph.defaultProps = {
	  lead: false
	};
	
	exports.default = Paragraph;
	module.exports = exports['default'];

/***/ },
/* 521 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_dropcap":"index__dropcap_1Kn","paragraph":"index_paragraph_bzb tachyons_lh-copy_15f tachyons_measure_hbr tachyons_measure-wide-l_2Qf tachyons_mt0_12u","lead":"index_lead_10g index__dropcap_1Kn"};

/***/ },
/* 522 */,
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(524);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Strong = ({ children }) => _react2.default.createElement(
	  'strong',
	  { className: _index2.default.strong },
	  children
	);
	
	Strong.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = Strong;
	module.exports = exports['default'];

/***/ },
/* 524 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"strong":"index_strong_1Cs tachyons_fw7_3qC"};

/***/ },
/* 525 */,
/* 526 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"page":"index_page_1OM tachyons_mt2_3dR","columns":"index_columns_1d3 theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","aside":"index_aside_2P5 tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN","content":"index_content_3bf theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_"};

/***/ },
/* 527 */,
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _ImageLink = __webpack_require__(400);
	
	var _ImageLink2 = _interopRequireDefault(_ImageLink);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _Strong = __webpack_require__(523);
	
	var _Strong2 = _interopRequireDefault(_Strong);
	
	var _SubTitle = __webpack_require__(535);
	
	var _SubTitle2 = _interopRequireDefault(_SubTitle);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _benchmark = __webpack_require__(538);
	
	var _benchmark2 = _interopRequireDefault(_benchmark);
	
	var _index = __webpack_require__(539);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionAnomaly = (props, { config }) => {
	  const { links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    { className: _index2.default.columns },
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.content },
	      _react2.default.createElement(
	        _Paragraph2.default,
	        { lead: true },
	        'Sensors and data streams are proliferating as the Internet of Things vision becomes realized. However, using the data from these sensors is not so easy. Specifically, being able to identify anomalies in streaming data is surprisingly difficult. Most techniques are a form of thresholds, i.e. predetermined limits that must be set to notify abnormalities. However, thresholds have some glaring weaknesses, including often finding a problem after it has happened, not before, and not adapting to new states, such that false positives can crowd out the important signal.'
	      ),
	      _react2.default.createElement(
	        _Paragraph2.default,
	        null,
	        'We created the ',
	        _react2.default.createElement(
	          _Strong2.default,
	          null,
	          'Numenta Anomaly Benchmark (NAB)'
	        ),
	        ' in order to be able to measure and compare results from algorithms designed to find anomalies in streaming data. NAB is an open source framework consisting of:'
	      ),
	      _react2.default.createElement(
	        _List2.default,
	        { marker: 'disc' },
	        _react2.default.createElement(
	          _ListItem2.default,
	          null,
	          'A dataset with 58 real-world, labeled data files'
	        ),
	        _react2.default.createElement(
	          _ListItem2.default,
	          null,
	          'A scoring mechanism that rewards early detection and on-line learning'
	        )
	      ),
	      _react2.default.createElement(
	        _SubTitle2.default,
	        { level: 3 },
	        'Resources'
	      ),
	      _react2.default.createElement(
	        _List2.default,
	        { marker: 'disc' },
	        _react2.default.createElement(
	          _ListItem2.default,
	          null,
	          'Business Paper: ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.nabBiz },
	            'The Numenta Anomaly Benchmark'
	          )
	        ),
	        _react2.default.createElement(
	          _ListItem2.default,
	          null,
	          'Technical Peer-Reviewed Paper: ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.nabPaper },
	            'Evaluating Real-time Anomaly Detection Algorithms – the Numenta Anomaly Benchmark'
	          )
	        ),
	        _react2.default.createElement(
	          _ListItem2.default,
	          null,
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.in.nab },
	            'More Information'
	          )
	        )
	      )
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.aside },
	      _react2.default.createElement(
	        _ImageLink2.default,
	        { to: links.in.nab },
	        _react2.default.createElement(_Image2.default, {
	          alt: 'Numenta Anomaly Benchmark (NAB) screenshot',
	          border: true,
	          respond: 'mw',
	          src: _benchmark2.default
	        })
	      )
	    )
	  );
	};
	
	SectionAnomaly.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SectionAnomaly;
	module.exports = exports['default'];

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(530);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const List = ({ children, copy, marker }) => {
	  const childrenWithProps = _react2.default.Children.map(children, child => _react2.default.cloneElement(child, { copy, marker }));
	
	  return _react2.default.createElement(
	    'ul',
	    { className: _index2.default.ul },
	    childrenWithProps
	  );
	};
	
	List.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  copy: _react2.default.PropTypes.bool,
	  marker: _react2.default.PropTypes.oneOf(['circle', 'disc', 'icon', 'square'])
	};
	
	List.defaultProps = {
	  copy: true
	};
	
	exports.default = List;
	module.exports = exports['default'];

/***/ },
/* 530 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"ul":"index_ul_2Hl tachyons_list_amB tachyons_mb4_3KK tachyons_pl0_3tn"};

/***/ },
/* 531 */,
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(533);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const markers = {
	  circle: _index2.default.markerCircle,
	  decimal: _index2.default.markerDecimal,
	  disc: _index2.default.markerDisc,
	  icon: _index2.default.markerIcon,
	  square: _index2.default.markerSquare
	};
	
	/**
	 *
	 */
	const ListItem = ({ children, copy, marker }) => {
	  const classes = [_index2.default.li];
	
	  if (copy) classes.push(_index2.default.copy);
	  if (marker) classes.push(markers[marker]);
	
	  return _react2.default.createElement(
	    'li',
	    { className: (0, _classnames2.default)(...classes) },
	    children
	  );
	};
	
	ListItem.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  copy: _react2.default.PropTypes.bool,
	  marker: _react2.default.PropTypes.oneOf(Object.keys(markers))
	};
	
	ListItem.defaultProps = {
	  copy: true
	};
	
	exports.default = ListItem;
	module.exports = exports['default'];

/***/ },
/* 533 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_marker":"index__marker_Wi5 tachyons_ml4_xhA tachyons_mb2_1U4 tachyons_pl1_2sV","markerCircle":"index_markerCircle_3Ki index__marker_Wi5 tachyons_ml4_xhA tachyons_mb2_1U4 tachyons_pl1_2sV","markerDecimal":"index_markerDecimal_16M index__marker_Wi5 tachyons_ml4_xhA tachyons_mb2_1U4 tachyons_pl1_2sV","markerDisc":"index_markerDisc_2tg index__marker_Wi5 tachyons_ml4_xhA tachyons_mb2_1U4 tachyons_pl1_2sV","markerIcon":"index_markerIcon_dAR tachyons_list_amB","markerSquare":"index_markerSquare_2Kw index__marker_Wi5 tachyons_ml4_xhA tachyons_mb2_1U4 tachyons_pl1_2sV","copy":"index_copy_2n_ tachyons_lh-copy_15f tachyons_measure_hbr tachyons_measure-wide-l_2Qf","li":"index_li_3Ep"};

/***/ },
/* 534 */,
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(536);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const SubTitle = ({ children, level }) => {
	  const Heading = `h${ level }`;
	
	  return _react2.default.createElement(
	    Heading,
	    { className: _index2.default[Heading] },
	    children
	  );
	};
	
	SubTitle.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  level: _react2.default.PropTypes.number
	};
	
	SubTitle.defaultProps = {
	  level: 2
	};
	
	exports.default = SubTitle;
	module.exports = exports['default'];

/***/ },
/* 536 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_heading":"index__heading_1uv tachyons_lh-title_1xo tachyons_mt1_3Hm tachyons_w-60-ns_3x_ tachyons_w-100_1xC","h2":"index_h2_3Q- tachyons_b--black-20_1zc tachyons_bb_GPu tachyons_dark-gray_32l tachyons_f3_2mk tachyons_fw5_3Jq tachyons_mb2_1U4 tachyons_pb1_2R8 index__heading_1uv tachyons_lh-title_1xo tachyons_mt1_3Hm tachyons_w-60-ns_3x_ tachyons_w-100_1xC","h3":"index_h3_3Iz tachyons_f4_1Zt tachyons_fw5_3Jq tachyons_mid-gray_2UN tachyons_mb1_2-H index__heading_1uv tachyons_lh-title_1xo tachyons_mt1_3Hm tachyons_w-60-ns_3x_ tachyons_w-100_1xC","h4":"index_h4_2N9 tachyons_f4_1Zt tachyons_fw4_3tj tachyons_mb1_2-H tachyons_gray_3RD index__heading_1uv tachyons_lh-title_1xo tachyons_mt1_3Hm tachyons_w-60-ns_3x_ tachyons_w-100_1xC","h5":"index_h5_mZn tachyons_f5_2mB tachyons_fw3_3xI tachyons_silver_3lN tachyons_mb1_2-H index__heading_1uv tachyons_lh-title_1xo tachyons_mt1_3Hm tachyons_w-60-ns_3x_ tachyons_w-100_1xC","h6":"index_h6_2Q0 tachyons_f5_2mB tachyons_fw3_3xI tachyons_light-silver_kiI tachyons_mb1_2-H index__heading_1uv tachyons_lh-title_1xo tachyons_mt1_3Hm tachyons_w-60-ns_3x_ tachyons_w-100_1xC"};

/***/ },
/* 537 */,
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6806c1a4e3db820e9d6b4621fc29061b.png";

/***/ },
/* 539 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"columns":"index_columns_1Nc theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_tLX theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_3Mx tachyons_mt2_3dR tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN"};

/***/ },
/* 540 */,
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(528);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class AnomalyBenchmarkPage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Anomaly Detection Benchmark' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	
	}
	
	exports.default = AnomalyBenchmarkPage;
	module.exports = exports['default'];

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getMainSectionComponents = getMainSectionComponents;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Section = __webpack_require__(528);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(543);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	var _Section5 = __webpack_require__(597);
	
	var _Section6 = _interopRequireDefault(_Section5);
	
	var _Section7 = __webpack_require__(629);
	
	var _Section8 = _interopRequireDefault(_Section7);
	
	var _Section9 = __webpack_require__(504);
	
	var _Section10 = _interopRequireDefault(_Section9);
	
	var _Section11 = __webpack_require__(654);
	
	var _Section12 = _interopRequireDefault(_Section11);
	
	var _Section13 = __webpack_require__(659);
	
	var _Section14 = _interopRequireDefault(_Section13);
	
	var _Section15 = __webpack_require__(663);
	
	var _Section16 = _interopRequireDefault(_Section15);
	
	var _Section17 = __webpack_require__(666);
	
	var _Section18 = _interopRequireDefault(_Section17);
	
	var _Section19 = __webpack_require__(671);
	
	var _Section20 = _interopRequireDefault(_Section19);
	
	var _Section21 = __webpack_require__(675);
	
	var _Section22 = _interopRequireDefault(_Section21);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const mainSections = [{
	  component: _react2.default.createElement(_Section10.default, null),
	  title: 'Leading the New Era of Machine Intelligence',
	  url: '/'
	}, {
	  component: _react2.default.createElement(_Section12.default, null),
	  title: 'Mission & History',
	  url: '/mission-and-history/'
	}, {
	  component: _react2.default.createElement(_Section20.default, null),
	  title: 'Technology Overview',
	  url: '/technology-overview/'
	}, {
	  component: _react2.default.createElement(_Section14.default, null),
	  title: 'Open Source Project',
	  url: '/open-source-project/'
	}, {
	  component: _react2.default.createElement(_Section4.default, null),
	  title: 'Applications',
	  url: '/applications/'
	}, {
	  component: _react2.default.createElement(_Section2.default, null),
	  title: 'Anomaly Detection Benchmark',
	  url: '/anomaly-detection-benchmark/'
	}, {
	  component: _react2.default.createElement(_Section18.default, null),
	  title: 'Partners',
	  url: '/partners/'
	}, {
	  component: _react2.default.createElement(_Section6.default, null),
	  title: 'Business Strategy & IP',
	  url: '/business-strategy-and-ip/'
	}, {
	  component: _react2.default.createElement(_Section16.default, null),
	  title: 'Papers, Videos & More',
	  url: '/papers-videos-and-more/'
	}, {
	  component: _react2.default.createElement(_Section8.default, null),
	  title: 'Careers, Team & Contact',
	  url: '/careers-team-and-contact/'
	}];
	
	/**
	 * List of Homepage/Mainpage Section/Page's in order, used to load on client.
	 * @param {Object} [current] - Current node, to alternate section title display.
	 * @returns {Array} - Array of React Component node objects.
	 */
	function getMainSectionComponents(current) {
	  const details = {};
	  const mainComponents = mainSections.map(item => {
	    const { component, title, url } = item;
	    const key = component.type.name;
	    details[key] = { title, url };
	
	    return component;
	  });
	  const childrenWithProps = _react2.default.Children.map(mainComponents, Component => {
	    const key = Component.type.name;
	    const { title, url } = details[key];
	    const open = key === current.type.name;
	    const headline = open && url === '/';
	
	    return _react2.default.createElement(
	      _Section22.default,
	      {
	        headline: headline,
	        key: key,
	        open: open,
	        title: title,
	        url: url
	      },
	      Component
	    );
	  });
	
	  return childrenWithProps;
	}

/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Anchor = __webpack_require__(544);
	
	var _Anchor2 = _interopRequireDefault(_Anchor);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _ImageLink = __webpack_require__(400);
	
	var _ImageLink2 = _interopRequireDefault(_ImageLink);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _SubTitle = __webpack_require__(535);
	
	var _SubTitle2 = _interopRequireDefault(_SubTitle);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _Video = __webpack_require__(547);
	
	var _Video2 = _interopRequireDefault(_Video);
	
	var _htmForStocks = __webpack_require__(588);
	
	var _htmForStocks2 = _interopRequireDefault(_htmForStocks);
	
	var _htmStudio = __webpack_require__(589);
	
	var _htmStudio2 = _interopRequireDefault(_htmStudio);
	
	var _geo = __webpack_require__(590);
	
	var _geo2 = _interopRequireDefault(_geo);
	
	var _grok = __webpack_require__(591);
	
	var _grok2 = _interopRequireDefault(_grok);
	
	var _nlp = __webpack_require__(592);
	
	var _nlp2 = _interopRequireDefault(_nlp);
	
	var _intrude = __webpack_require__(593);
	
	var _intrude2 = _interopRequireDefault(_intrude);
	
	var _videoApps = __webpack_require__(594);
	
	var _videoApps2 = _interopRequireDefault(_videoApps);
	
	var _index = __webpack_require__(595);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionApplications = (props, { config }) => {
	  const { links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          { lead: true },
	          'We have created demonstration HTM applications in several fields such as IT monitoring, detecting unusual human behavior, geospatial tracking, and understanding natural language and we are confident that many additional applications will be created in the future.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'HTM is well suited for applications that have the following characteristics:'
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'Data flowing through time… the data can be in the form of numbers, dates, text, or GPS points'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'A data sampling rate from once per minute to once per hour, with the “sweet spot” being between once per minute and once every five minutes (faster velocity data can be aggregated or sampled as well)'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'Data that has inherent structure, i.e. not entirely random'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'Many models are required rather than one large model'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'Focus of the application is prediction or anomaly detection'
	          )
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'The following applications are examples that fit these characteristics:'
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'Predicting energy usage for a utility on a customer by customer basis'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'Predicting failure in a complex machine based on data from many sensors'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'Highlighting anomalies in the behavior of moving objects, such as tracking a fleet’s movements on a truck by truck basis'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            'Understanding if human behavior it normal or abnormal on a securities trading floor'
	          )
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'In order to demonstrate these capabilities, we have created several tools and example applications.'
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(_Video2.default, {
	          image: _videoApps2.default,
	          respond: 'mw',
	          time: '02:32',
	          title: 'Intro to our Applications',
	          type: 'youtube',
	          videoId: '9jWmS62MWx8'
	        })
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'htmstudio' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'HTM Studio for Anomaly Detection'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'HTM Studio for Anomaly Detection is a tool that makes it easy to experiment with using HTM to detect anomalies in your own scalar data. Designed for the business-focused user, this tool makes it easy to develop a proof of concept with HTM technology. No coding skills are required to test it, and HTM parameters are determined automatically.'
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.in.htmstudio },
	              'More Information'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: [links.in.htmstudio, links.anchor.get].join('') },
	              'Register to Give Feedback'
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.in.htmstudio },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'HTM Studio screenshot',
	            border: true,
	            respond: 'mw',
	            src: _htmStudio2.default
	          })
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'htmstocks' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'HTM for Stocks'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'HTM for Stocks is an example application that detects anomalies in publicly traded companies. It continuously models stock price, stock volume, and Twitter volume for top publicly traded companies and alerts you in real time when something unusual is happening. HTM for Stocks is available for free via the ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.htmstocksApp },
	            'App Store'
	          ),
	          ' ',
	          ' or ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.htmstocksPlay },
	            'Google Play Store.'
	          )
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.in.htmstocks },
	              'More Information'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: [links.in.htmstocks, links.anchor.get].join('') },
	              'Register to Give Feedback'
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.in.htmstocks },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'HTM for Stocks screenshot',
	            respond: 'mw',
	            src: _htmForStocks2.default
	          })
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'grokit' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Grok for IT Analytics'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Grok for IT Analytics is a commercial application that detects anomalies in servers and applications. It learns continuously, automatically discovers time-based patterns in data, and generalizes from experience.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Grok for IT Analytics 2.0 is now available at ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.grok },
	            links.out.grok,
	            '.'
	          )
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.grokGet },
	              'Sign Up'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.grok },
	              'More Information'
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.out.grok },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'Grok for IT Analytics screenshot',
	            respond: 'mw',
	            src: _grok2.default
	          })
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'rogue' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Rogue Behavior Detection'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'This example application models normal behavior of individuals by detecting changes in behavior, such as unusual use of files. You can experiment with this application using your own data by downloading our sample application code below.'
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.roguePaper },
	              'Whitepaper: HTM for Rogue Behavior'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.rogue },
	              'Download Application Code'
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.out.rogue },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'Rogue Behavior Detection screenshot',
	            respond: 'mw',
	            src: _intrude2.default
	          })
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'geo' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Geospatial Tracking'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'The example geospatial tracking application detects anomalies in the movement of people, objects, or material using speed and location data. Use this application to enable logistics optimization. You can experiment with this application using your own data by downloading our sample application code below.'
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.geoPaper },
	              'Whitepaper: HTM for Geospatial Tracking'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.geo },
	              'Download Application Code'
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.out.geo },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'Geospatial Tracking screenshot',
	            border: true,
	            respond: 'mw',
	            src: _geo2.default
	          })
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'nlp' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Natural Language Processing'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'One of our partners, Cortical.io, has used Numenta’s technology to develop and commercialize Natural Language Processing Solutions. By representing language with highly efficient semantic fingerprints, Cortical.io has built the first semantic engine that can analyze text in real time, in any language. Learn more at ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.cortical },
	            links.out.cortical,
	            '.'
	          )
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.cortical },
	              'More Information'
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.out.cortical },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'Natural Language Processing screenshot',
	            respond: 'mw',
	            src: _nlp2.default
	          })
	        )
	      )
	    )
	  );
	};
	
	SectionApplications.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SectionApplications;
	module.exports = exports['default'];

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(545);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Anchor = ({ name }) => _react2.default.createElement('span', { className: _index2.default.anchor, id: name });
	
	Anchor.propTypes = {
	  name: _react2.default.PropTypes.string.isRequired
	};
	
	exports.default = Anchor;
	module.exports = exports['default'];

/***/ },
/* 545 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"anchor":"index_anchor_ZmH tachyons_clip_2YG tachyons_db_32y tachyons_h3_bmk"};

/***/ },
/* 546 */,
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _browserSize = __webpack_require__(548);
	
	var _browserSize2 = _interopRequireDefault(_browserSize);
	
	var _reactModal = __webpack_require__(554);
	
	var _reactModal2 = _interopRequireDefault(_reactModal);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactYoutube = __webpack_require__(564);
	
	var _reactYoutube2 = _interopRequireDefault(_reactYoutube);
	
	var _universal = __webpack_require__(376);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _index = __webpack_require__(585);
	
	var _index2 = _interopRequireDefault(_index);
	
	var _styleModal = __webpack_require__(587);
	
	var _styleModal2 = _interopRequireDefault(_styleModal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const DefaultWidth = 640;
	
	class Video extends _react2.default.Component {
	
	  constructor(props) {
	    super(props);
	
	    this.state = {
	      open: false
	    };
	
	    this._sizer = null;
	    this._width = DefaultWidth;
	  }
	
	  componentDidMount() {
	    this._sizer = (0, _browserSize2.default)();
	    this._width = this._sizer.width;
	    this._sizer.on('resize', () => {
	      this._width = this._sizer.width;
	    });
	  }
	
	  componentWillUnmount() {
	    this._sizer = null;
	    this._width = DefaultWidth;
	  }
	
	  _playerClose() {
	    this.setState({ open: false });
	  }
	
	  _playerOpen() {
	    this.setState({ open: true });
	  }
	
	  render() {
	    const { image, respond, time, title, type, videoId } = this.props;
	    const { open } = this.state;
	    const isOpen = open === true;
	    const width = (0, _universal.getModalAspect)(this._width);
	    const playerOptions = {
	      width: width.toString(),
	      height: (width * 0.5625).toString(), // ~640x360
	      playerVars: { autoplay: 1 }
	    };
	    const alternate = `${ title } ${ type } video screenshot`;
	    let player;
	
	    if (isOpen && videoId && type === 'youtube') {
	      player = _react2.default.createElement(_reactYoutube2.default, { opts: playerOptions, videoId: videoId });
	    }
	
	    return _react2.default.createElement(
	      'div',
	      { className: _index2.default.video },
	      _react2.default.createElement(_Image2.default, {
	        alt: alternate,
	        onClick: this._playerOpen.bind(this),
	        respond: respond,
	        src: image
	      }),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.caption },
	        'Video: ',
	        title,
	        ' (',
	        time,
	        ')'
	      ),
	      _react2.default.createElement(
	        _reactModal2.default,
	        {
	          isOpen: open,
	          onRequestClose: this._playerClose.bind(this),
	          style: _styleModal2.default
	        },
	        player
	      )
	    );
	  }
	
	}
	
	Video.propTypes = {
	  image: _react2.default.PropTypes.string.isRequired,
	  respond: _react2.default.PropTypes.oneOf(['mw', 'w']),
	  time: _react2.default.PropTypes.string.isRequired,
	  title: _react2.default.PropTypes.string.isRequired,
	  type: _react2.default.PropTypes.oneOf(['youtube']).isRequired,
	  videoId: _react2.default.PropTypes.string.isRequired
	};
	Video.defaultProps = {
	  type: 'youtube'
	};
	exports.default = Video;
	module.exports = exports['default'];

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var EventEmitter = __webpack_require__(549).EventEmitter;
	var throttle = _interopRequire(__webpack_require__(550));
	
	var singleton = _interopRequire(__webpack_require__(553));
	
	var BrowserSize = (function (EventEmitter) {
	  function BrowserSize() {
	    var _this = this;
	    _classCallCheck(this, BrowserSize);
	
	    window.addEventListener("resize", throttle(function () {
	      _this.computeSize();
	      _this.emit("resize");
	    }, 200));
	
	    this.computeSize();
	  }
	
	  _inherits(BrowserSize, EventEmitter);
	
	  _prototypeProperties(BrowserSize, null, {
	    computeSize: {
	      value: function computeSize() {
	        this.width = document.documentElement.clientWidth;
	        this.height = document.documentElement.clientHeight;
	      },
	      writable: true,
	      configurable: true
	    }
	  });
	
	  return BrowserSize;
	})(EventEmitter);
	
	module.exports = singleton(BrowserSize);
	


/***/ },
/* 549 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;
	
	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;
	
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;
	
	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;
	
	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};
	
	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;
	
	  if (!this._events)
	    this._events = {};
	
	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }
	
	  handler = this._events[type];
	
	  if (isUndefined(handler))
	    return false;
	
	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }
	
	  return true;
	};
	
	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events)
	    this._events = {};
	
	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);
	
	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];
	
	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }
	
	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.on = EventEmitter.prototype.addListener;
	
	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  var fired = false;
	
	  function g() {
	    this.removeListener(type, g);
	
	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }
	
	  g.listener = listener;
	  this.on(type, g);
	
	  return this;
	};
	
	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events || !this._events[type])
	    return this;
	
	  list = this._events[type];
	  length = list.length;
	  position = -1;
	
	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	
	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }
	
	    if (position < 0)
	      return this;
	
	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }
	
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;
	
	  if (!this._events)
	    return this;
	
	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }
	
	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }
	
	  listeners = this._events[type];
	
	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];
	
	  return this;
	};
	
	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};
	
	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];
	
	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};
	
	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	
	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * lodash 3.0.4 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	var debounce = __webpack_require__(551);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/**
	 * Creates a throttled function that only invokes `func` at most once per
	 * every `wait` milliseconds. The throttled function comes with a `cancel`
	 * method to cancel delayed invocations. Provide an options object to indicate
	 * that `func` should be invoked on the leading and/or trailing edge of the
	 * `wait` timeout. Subsequent calls to the throttled function return the
	 * result of the last `func` call.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	 * on the trailing edge of the timeout only if the the throttled function is
	 * invoked more than once during the `wait` timeout.
	 *
	 * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
	 * for details over the differences between `_.throttle` and `_.debounce`.
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to throttle.
	 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	 * @param {Object} [options] The options object.
	 * @param {boolean} [options.leading=true] Specify invoking on the leading
	 *  edge of the timeout.
	 * @param {boolean} [options.trailing=true] Specify invoking on the trailing
	 *  edge of the timeout.
	 * @returns {Function} Returns the new throttled function.
	 * @example
	 *
	 * // avoid excessively updating the position while scrolling
	 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	 *
	 * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes
	 * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
	 *   'trailing': false
	 * }));
	 *
	 * // cancel a trailing throttled call
	 * jQuery(window).on('popstate', throttled.cancel);
	 */
	function throttle(func, wait, options) {
	  var leading = true,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  if (options === false) {
	    leading = false;
	  } else if (isObject(options)) {
	    leading = 'leading' in options ? !!options.leading : leading;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	  return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = throttle;


/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * lodash 3.1.1 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	var getNative = __webpack_require__(552);
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeNow = getNative(Date, 'now');
	
	/**
	 * Gets the number of milliseconds that have elapsed since the Unix epoch
	 * (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @category Date
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => logs the number of milliseconds it took for the deferred function to be invoked
	 */
	var now = nativeNow || function() {
	  return new Date().getTime();
	};
	
	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed invocations. Provide an options object to indicate that `func`
	 * should be invoked on the leading and/or trailing edge of the `wait` timeout.
	 * Subsequent calls to the debounced function return the result of the last
	 * `func` invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	 * on the trailing edge of the timeout only if the the debounced function is
	 * invoked more than once during the `wait` timeout.
	 *
	 * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options] The options object.
	 * @param {boolean} [options.leading=false] Specify invoking on the leading
	 *  edge of the timeout.
	 * @param {number} [options.maxWait] The maximum time `func` is allowed to be
	 *  delayed before it is invoked.
	 * @param {boolean} [options.trailing=true] Specify invoking on the trailing
	 *  edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // avoid costly calculations while the window size is in flux
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // invoke `sendMail` when the click event is fired, debouncing subsequent calls
	 * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // ensure `batchLog` is invoked once after 1 second of debounced calls
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', _.debounce(batchLog, 250, {
	 *   'maxWait': 1000
	 * }));
	 *
	 * // cancel a debounced call
	 * var todoChanges = _.debounce(batchLog, 1000);
	 * Object.observe(models.todo, todoChanges);
	 *
	 * Object.observe(models, function(changes) {
	 *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {
	 *     todoChanges.cancel();
	 *   }
	 * }, ['delete']);
	 *
	 * // ...at some point `models.todo` is changed
	 * models.todo.completed = true;
	 *
	 * // ...before 1 second has passed `models.todo` is deleted
	 * // which cancels the debounced `todoChanges` call
	 * delete models.todo;
	 */
	function debounce(func, wait, options) {
	  var args,
	      maxTimeoutId,
	      result,
	      stamp,
	      thisArg,
	      timeoutId,
	      trailingCall,
	      lastCalled = 0,
	      maxWait = false,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = wait < 0 ? 0 : (+wait || 0);
	  if (options === true) {
	    var leading = true;
	    trailing = false;
	  } else if (isObject(options)) {
	    leading = !!options.leading;
	    maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	
	  function cancel() {
	    if (timeoutId) {
	      clearTimeout(timeoutId);
	    }
	    if (maxTimeoutId) {
	      clearTimeout(maxTimeoutId);
	    }
	    lastCalled = 0;
	    maxTimeoutId = timeoutId = trailingCall = undefined;
	  }
	
	  function complete(isCalled, id) {
	    if (id) {
	      clearTimeout(id);
	    }
	    maxTimeoutId = timeoutId = trailingCall = undefined;
	    if (isCalled) {
	      lastCalled = now();
	      result = func.apply(thisArg, args);
	      if (!timeoutId && !maxTimeoutId) {
	        args = thisArg = undefined;
	      }
	    }
	  }
	
	  function delayed() {
	    var remaining = wait - (now() - stamp);
	    if (remaining <= 0 || remaining > wait) {
	      complete(trailingCall, maxTimeoutId);
	    } else {
	      timeoutId = setTimeout(delayed, remaining);
	    }
	  }
	
	  function maxDelayed() {
	    complete(trailing, timeoutId);
	  }
	
	  function debounced() {
	    args = arguments;
	    stamp = now();
	    thisArg = this;
	    trailingCall = trailing && (timeoutId || !leading);
	
	    if (maxWait === false) {
	      var leadingCall = leading && !timeoutId;
	    } else {
	      if (!maxTimeoutId && !leading) {
	        lastCalled = stamp;
	      }
	      var remaining = maxWait - (stamp - lastCalled),
	          isCalled = remaining <= 0 || remaining > maxWait;
	
	      if (isCalled) {
	        if (maxTimeoutId) {
	          maxTimeoutId = clearTimeout(maxTimeoutId);
	        }
	        lastCalled = stamp;
	        result = func.apply(thisArg, args);
	      }
	      else if (!maxTimeoutId) {
	        maxTimeoutId = setTimeout(maxDelayed, remaining);
	      }
	    }
	    if (isCalled && timeoutId) {
	      timeoutId = clearTimeout(timeoutId);
	    }
	    else if (!timeoutId && wait !== maxWait) {
	      timeoutId = setTimeout(delayed, wait);
	    }
	    if (leadingCall) {
	      isCalled = true;
	      result = func.apply(thisArg, args);
	    }
	    if (isCalled && !timeoutId && !maxTimeoutId) {
	      args = thisArg = undefined;
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  return debounced;
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	module.exports = debounce;


/***/ },
/* 552 */
/***/ function(module, exports) {

	/**
	 * lodash 3.9.1 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]';
	
	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/**
	 * Checks if `value` is object-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var fnToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in older versions of Chrome and Safari which return 'function' for regexes
	  // and Safari 8 equivalents which return 'object' for typed array constructors.
	  return isObject(value) && objToString.call(value) == funcTag;
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}
	
	module.exports = getNative;


/***/ },
/* 553 */
/***/ function(module, exports) {

	/* 
	 * pragma-singleton-d
	 *
	 * Copyright (c) 2013 Pragma Dudes and project contributors.
	 *
	 * pragma-singleton-d's license follows:
	 *
	 * Permission is hereby granted, free of charge, to any person
	 * obtaining a copy of this software and associated documentation
	 * files (the "Software"), to deal in the Software without restriction,
	 * including without limitation the rights to use, copy, modify, merge, 
	 * publish, distribute, sublicense, and/or sell copies of the Software, 
	 * and to permit persons to whom the Software is furnished to do so, 
	 * subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included
	 * in all copies or substantial portions of the Software.
	
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
	 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	 * SOFTWARE.
	 * 
	 * This license applies to all parts of pragma-singleton-d that are not externally
	 * maintained libraries.
	 */
	
	'use strict';
	
	var singletonInstances = {};
	
	/**
	 * Creates singleton constructor wrapper by constructor name.
	 * @param {Function} constructor Specified constructor.
	 * @return {Function} Singleton constructor wrapper.
	 */
	module.exports = function (constructor) {
	
		var singletonKey = constructor.toString(),
			singletonWrapper = function () {
	
				if (singletonKey in singletonInstances) {
					return singletonInstances[singletonKey];
				}
	
				// create new object as we use "new" operator and set constructor to it.
				singletonInstances[singletonKey] =
					Object.create(constructor.prototype, {
						constructor: {
							value: constructor,
							enumerable: true,
							writable: true,
							configurable: true
						}
					});
	
				// apply constructor logic to new object.
				constructor.apply(singletonInstances[singletonKey], arguments);
	
				return singletonInstances[singletonKey];
			};
	
		// jshint proto: true, camelcase: false
		// NOTE: this string below isn't portable to some browsers like IE.
		// Using __proto__ is not a good idea, but solving current task it's an only way
		// for saving properties which were saved to constructor itself and V8 allows to do it.
		singletonWrapper.__proto__ = constructor;
	
		return singletonWrapper;
	};
	
	/**
	 * Clears all singleton instances.
	 */
	module.exports.clear = function () {
		singletonInstances = {};
	};

/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(555);
	


/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	var React = __webpack_require__(2);
	var ReactDOM = __webpack_require__(30);
	var ExecutionEnvironment = __webpack_require__(556);
	var ModalPortal = React.createFactory(__webpack_require__(557));
	var ariaAppHider = __webpack_require__(562);
	var elementClass = __webpack_require__(563);
	var renderSubtreeIntoContainer = __webpack_require__(30).unstable_renderSubtreeIntoContainer;
	var Assign = __webpack_require__(561);
	
	var SafeHTMLElement = ExecutionEnvironment.canUseDOM ? window.HTMLElement : {};
	var AppElement = ExecutionEnvironment.canUseDOM ? document.body : {appendChild: function() {}};
	
	var Modal = React.createClass({
	
	  displayName: 'Modal',
	  statics: {
	    setAppElement: function(element) {
	        AppElement = ariaAppHider.setElement(element);
	    },
	    injectCSS: function() {
	      "production" !== ("production")
	        && console.warn('React-Modal: injectCSS has been deprecated ' +
	                        'and no longer has any effect. It will be removed in a later version');
	    }
	  },
	
	  propTypes: {
	    isOpen: React.PropTypes.bool.isRequired,
	    style: React.PropTypes.shape({
	      content: React.PropTypes.object,
	      overlay: React.PropTypes.object
	    }),
	    appElement: React.PropTypes.instanceOf(SafeHTMLElement),
	    onAfterOpen: React.PropTypes.func,
	    onRequestClose: React.PropTypes.func,
	    closeTimeoutMS: React.PropTypes.number,
	    ariaHideApp: React.PropTypes.bool,
	    shouldCloseOnOverlayClick: React.PropTypes.bool
	  },
	
	  getDefaultProps: function () {
	    return {
	      isOpen: false,
	      ariaHideApp: true,
	      closeTimeoutMS: 0,
	      shouldCloseOnOverlayClick: true
	    };
	  },
	
	  componentDidMount: function() {
	    this.node = document.createElement('div');
	    this.node.className = 'ReactModalPortal';
	    document.body.appendChild(this.node);
	    this.renderPortal(this.props);
	  },
	
	  componentWillReceiveProps: function(newProps) {
	    this.renderPortal(newProps);
	  },
	
	  componentWillUnmount: function() {
	    ReactDOM.unmountComponentAtNode(this.node);
	    document.body.removeChild(this.node);
	    elementClass(document.body).remove('ReactModal__Body--open');
	  },
	
	  renderPortal: function(props) {
	    if (props.isOpen) {
	      elementClass(document.body).add('ReactModal__Body--open');
	    } else {
	      elementClass(document.body).remove('ReactModal__Body--open');
	    }
	
	    if (props.ariaHideApp) {
	      ariaAppHider.toggle(props.isOpen, props.appElement);
	    }
	
	    this.portal = renderSubtreeIntoContainer(this, ModalPortal(Assign({}, props, {defaultStyles: Modal.defaultStyles})), this.node);
	  },
	
	  render: function () {
	    return React.DOM.noscript();
	  }
	});
	
	Modal.defaultStyles = {
	  overlay: {
	    position        : 'fixed',
	    top             : 0,
	    left            : 0,
	    right           : 0,
	    bottom          : 0,
	    backgroundColor : 'rgba(255, 255, 255, 0.75)'
	  },
	  content: {
	    position                : 'absolute',
	    top                     : '40px',
	    left                    : '40px',
	    right                   : '40px',
	    bottom                  : '40px',
	    border                  : '1px solid #ccc',
	    background              : '#fff',
	    overflow                : 'auto',
	    WebkitOverflowScrolling : 'touch',
	    borderRadius            : '4px',
	    outline                 : 'none',
	    padding                 : '20px'
	  }
	}
	
	module.exports = Modal


/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Based on code that is Copyright 2013-2015, Facebook, Inc.
	  All rights reserved.
	*/
	
	(function () {
		'use strict';
	
		var canUseDOM = !!(
			typeof window !== 'undefined' &&
			window.document &&
			window.document.createElement
		);
	
		var ExecutionEnvironment = {
	
			canUseDOM: canUseDOM,
	
			canUseWorkers: typeof Worker !== 'undefined',
	
			canUseEventListeners:
				canUseDOM && !!(window.addEventListener || window.attachEvent),
	
			canUseViewport: canUseDOM && !!window.screen
	
		};
	
		if (true) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return ExecutionEnvironment;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module !== 'undefined' && module.exports) {
			module.exports = ExecutionEnvironment;
		} else {
			window.ExecutionEnvironment = ExecutionEnvironment;
		}
	
	}());


/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	var React = __webpack_require__(2);
	var div = React.DOM.div;
	var focusManager = __webpack_require__(558);
	var scopeTab = __webpack_require__(560);
	var Assign = __webpack_require__(561);
	
	// so that our CSS is statically analyzable
	var CLASS_NAMES = {
	  overlay: {
	    base: 'ReactModal__Overlay',
	    afterOpen: 'ReactModal__Overlay--after-open',
	    beforeClose: 'ReactModal__Overlay--before-close'
	  },
	  content: {
	    base: 'ReactModal__Content',
	    afterOpen: 'ReactModal__Content--after-open',
	    beforeClose: 'ReactModal__Content--before-close'
	  }
	};
	
	var ModalPortal = module.exports = React.createClass({
	
	  displayName: 'ModalPortal',
	
	  getDefaultProps: function() {
	    return {
	      style: {
	        overlay: {},
	        content: {}
	      }
	    };
	  },
	
	  getInitialState: function() {
	    return {
	      afterOpen: false,
	      beforeClose: false
	    };
	  },
	
	  componentDidMount: function() {
	    // Focus needs to be set when mounting and already open
	    if (this.props.isOpen) {
	      this.setFocusAfterRender(true);
	      this.open();
	    }
	  },
	
	  componentWillUnmount: function() {
	    clearTimeout(this.closeTimer);
	  },
	
	  componentWillReceiveProps: function(newProps) {
	    // Focus only needs to be set once when the modal is being opened
	    if (!this.props.isOpen && newProps.isOpen) {
	      this.setFocusAfterRender(true);
	      this.open();
	    } else if (this.props.isOpen && !newProps.isOpen) {
	      this.close();
	    }
	  },
	
	  componentDidUpdate: function () {
	    if (this.focusAfterRender) {
	      this.focusContent();
	      this.setFocusAfterRender(false);
	    }
	  },
	
	  setFocusAfterRender: function (focus) {
	    this.focusAfterRender = focus;
	  },
	
	  open: function() {
	    if (this.state.afterOpen && this.state.beforeClose) {
	      clearTimeout(this.closeTimer);
	      this.setState({ beforeClose: false });
	    } else {
	      focusManager.setupScopedFocus(this.node);
	      focusManager.markForFocusLater();
	      this.setState({isOpen: true}, function() {
	        this.setState({afterOpen: true});
	
	        if (this.props.isOpen && this.props.onAfterOpen) {
	          this.props.onAfterOpen();
	        }
	      }.bind(this));
	    }
	  },
	
	  close: function() {
	    if (!this.ownerHandlesClose())
	      return;
	    if (this.props.closeTimeoutMS > 0)
	      this.closeWithTimeout();
	    else
	      this.closeWithoutTimeout();
	  },
	
	  focusContent: function() {
	    this.refs.content.focus();
	  },
	
	  closeWithTimeout: function() {
	    this.setState({beforeClose: true}, function() {
	      this.closeTimer = setTimeout(this.closeWithoutTimeout, this.props.closeTimeoutMS);
	    }.bind(this));
	  },
	
	  closeWithoutTimeout: function() {
	    this.setState({
	      beforeClose: false,
	      isOpen: false,
	      afterOpen: false,
	    }, this.afterClose);
	  },
	
	  afterClose: function() {
	    focusManager.returnFocus();
	    focusManager.teardownScopedFocus();
	  },
	
	  handleKeyDown: function(event) {
	    if (event.keyCode == 9 /*tab*/) scopeTab(this.refs.content, event);
	    if (event.keyCode == 27 /*esc*/) {
	      event.preventDefault();
	      this.requestClose(event);
	    }
	  },
	
	  handleOverlayClick: function(event) {
	    var node = event.target
	
	    while (node) {
	      if (node === this.refs.content) return
	      node = node.parentNode
	    }
	
	    if (this.props.shouldCloseOnOverlayClick) {
	      if (this.ownerHandlesClose())
	        this.requestClose(event);
	      else
	        this.focusContent();
	    }
	  },
	
	  requestClose: function(event) {
	    if (this.ownerHandlesClose())
	      this.props.onRequestClose(event);
	  },
	
	  ownerHandlesClose: function() {
	    return this.props.onRequestClose;
	  },
	
	  shouldBeClosed: function() {
	    return !this.props.isOpen && !this.state.beforeClose;
	  },
	
	  buildClassName: function(which, additional) {
	    var className = CLASS_NAMES[which].base;
	    if (this.state.afterOpen)
	      className += ' '+CLASS_NAMES[which].afterOpen;
	    if (this.state.beforeClose)
	      className += ' '+CLASS_NAMES[which].beforeClose;
	    return additional ? className + ' ' + additional : className;
	  },
	
	  render: function() {
	    var contentStyles = (this.props.className) ? {} : this.props.defaultStyles.content;
	    var overlayStyles = (this.props.overlayClassName) ? {} : this.props.defaultStyles.overlay;
	
	    return this.shouldBeClosed() ? div() : (
	      div({
	        ref: "overlay",
	        className: this.buildClassName('overlay', this.props.overlayClassName),
	        style: Assign({}, overlayStyles, this.props.style.overlay || {}),
	        onClick: this.handleOverlayClick
	      },
	        div({
	          ref: "content",
	          style: Assign({}, contentStyles, this.props.style.content || {}),
	          className: this.buildClassName('content', this.props.className),
	          tabIndex: "-1",
	          onKeyDown: this.handleKeyDown
	        },
	          this.props.children
	        )
	      )
	    );
	  }
	});


/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	var findTabbable = __webpack_require__(559);
	var modalElement = null;
	var focusLaterElement = null;
	var needToFocus = false;
	
	function handleBlur(event) {
	  needToFocus = true;
	}
	
	function handleFocus(event) {
	  if (needToFocus) {
	    needToFocus = false;
	    if (!modalElement) {
	      return;
	    }
	    // need to see how jQuery shims document.on('focusin') so we don't need the
	    // setTimeout, firefox doesn't support focusin, if it did, we could focus
	    // the element outside of a setTimeout. Side-effect of this implementation 
	    // is that the document.body gets focus, and then we focus our element right 
	    // after, seems fine.
	    setTimeout(function() {
	      if (modalElement.contains(document.activeElement))
	        return;
	      var el = (findTabbable(modalElement)[0] || modalElement);
	      el.focus();
	    }, 0);
	  }
	}
	
	exports.markForFocusLater = function() {
	  focusLaterElement = document.activeElement;
	};
	
	exports.returnFocus = function() {
	  try {
	    focusLaterElement.focus();
	  }
	  catch (e) {
	    console.warn('You tried to return focus to '+focusLaterElement+' but it is not in the DOM anymore');
	  }
	  focusLaterElement = null;
	};
	
	exports.setupScopedFocus = function(element) {
	  modalElement = element;
	
	  if (window.addEventListener) {
	    window.addEventListener('blur', handleBlur, false);
	    document.addEventListener('focus', handleFocus, true);
	  } else {
	    window.attachEvent('onBlur', handleBlur);
	    document.attachEvent('onFocus', handleFocus);
	  }
	};
	
	exports.teardownScopedFocus = function() {
	  modalElement = null;
	
	  if (window.addEventListener) {
	    window.removeEventListener('blur', handleBlur);
	    document.removeEventListener('focus', handleFocus);
	  } else {
	    window.detachEvent('onBlur', handleBlur);
	    document.detachEvent('onFocus', handleFocus);
	  }
	};
	
	


/***/ },
/* 559 */
/***/ function(module, exports) {

	/*!
	 * Adapted from jQuery UI core
	 *
	 * http://jqueryui.com
	 *
	 * Copyright 2014 jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 *
	 * http://api.jqueryui.com/category/ui-core/
	 */
	
	function focusable(element, isTabIndexNotNaN) {
	  var nodeName = element.nodeName.toLowerCase();
	  return (/input|select|textarea|button|object/.test(nodeName) ?
	    !element.disabled :
	    "a" === nodeName ?
	      element.href || isTabIndexNotNaN :
	      isTabIndexNotNaN) && visible(element);
	}
	
	function hidden(el) {
	  return (el.offsetWidth <= 0 && el.offsetHeight <= 0) ||
	    el.style.display === 'none';
	}
	
	function visible(element) {
	  while (element) {
	    if (element === document.body) break;
	    if (hidden(element)) return false;
	    element = element.parentNode;
	  }
	  return true;
	}
	
	function tabbable(element) {
	  var tabIndex = element.getAttribute('tabindex');
	  if (tabIndex === null) tabIndex = undefined;
	  var isTabIndexNaN = isNaN(tabIndex);
	  return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
	}
	
	function findTabbableDescendants(element) {
	  return [].slice.call(element.querySelectorAll('*'), 0).filter(function(el) {
	    return tabbable(el);
	  });
	}
	
	module.exports = findTabbableDescendants;
	


/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	var findTabbable = __webpack_require__(559);
	
	module.exports = function(node, event) {
	  var tabbable = findTabbable(node);
	  if (!tabbable.length) {
	      event.preventDefault();
	      return;
	  }
	  var finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];
	  var leavingFinalTabbable = (
	    finalTabbable === document.activeElement ||
	    // handle immediate shift+tab after opening with mouse
	    node === document.activeElement
	  );
	  if (!leavingFinalTabbable) return;
	  event.preventDefault();
	  var target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];
	  target.focus();
	};


/***/ },
/* 561 */
/***/ function(module, exports) {

	/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    stringTag = '[object String]';
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	/**
	 * Creates a function that invokes `func` with its first argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf,
	    nativeKeys = Object.keys,
	    nativeMax = Math.max;
	
	/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
	var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	  // that are composed entirely of index properties, return `false` for
	  // `hasOwnProperty` checks of them.
	  return object != null &&
	    (hasOwnProperty.call(object, key) ||
	      (typeof object == 'object' && key in object && getPrototype(object) === null));
	}
	
	/**
	 * The base implementation of `_.keys` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	var baseKeys = overArg(nativeKeys, Object);
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    assignValue(object, key, newValue === undefined ? source[key] : newValue);
	  }
	  return object;
	}
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a
	 * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	 * Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	var getPrototype = overArg(nativeGetPrototype, Object);
	
	/**
	 * Creates an array of index keys for `object` values of arrays,
	 * `arguments` objects, and strings, otherwise `null` is returned.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array|null} Returns index keys, else `null`.
	 */
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value)) && !isFunction(value);
	}
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8 which returns 'object' for typed array and weak map constructors,
	  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length,
	 *  else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}
	
	/**
	 * Assigns own enumerable string keyed properties of source objects to the
	 * destination object. Source objects are applied from left to right.
	 * Subsequent sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object` and is loosely based on
	 * [`Object.assign`](https://mdn.io/Object/assign).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.10.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assignIn
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * function Bar() {
	 *   this.c = 3;
	 * }
	 *
	 * Foo.prototype.b = 2;
	 * Bar.prototype.d = 4;
	 *
	 * _.assign({ 'a': 0 }, new Foo, new Bar);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var assign = createAssigner(function(object, source) {
	  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	    copyObject(source, keys(source), object);
	    return;
	  }
	  for (var key in source) {
	    if (hasOwnProperty.call(source, key)) {
	      assignValue(object, key, source[key]);
	    }
	  }
	});
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = assign;


/***/ },
/* 562 */
/***/ function(module, exports) {

	var _element = typeof document !== 'undefined' ? document.body : null;
	
	function setElement(element) {
	  if (typeof element === 'string') {
	    var el = document.querySelectorAll(element);
	    element = 'length' in el ? el[0] : el;
	  }
	  _element = element || _element;
	  return _element;
	}
	
	function hide(appElement) {
	  validateElement(appElement);
	  (appElement || _element).setAttribute('aria-hidden', 'true');
	}
	
	function show(appElement) {
	  validateElement(appElement);
	  (appElement || _element).removeAttribute('aria-hidden');
	}
	
	function toggle(shouldHide, appElement) {
	  if (shouldHide)
	    hide(appElement);
	  else
	    show(appElement);
	}
	
	function validateElement(appElement) {
	  if (!appElement && !_element)
	    throw new Error('react-modal: You must set an element with `Modal.setAppElement(el)` to make this accessible');
	}
	
	function resetForTesting() {
	  _element = document.body;
	}
	
	exports.toggle = toggle;
	exports.setElement = setElement;
	exports.show = show;
	exports.hide = hide;
	exports.resetForTesting = resetForTesting;


/***/ },
/* 563 */
/***/ function(module, exports) {

	module.exports = function(opts) {
	  return new ElementClass(opts)
	}
	
	function indexOf(arr, prop) {
	  if (arr.indexOf) return arr.indexOf(prop)
	  for (var i = 0, len = arr.length; i < len; i++)
	    if (arr[i] === prop) return i
	  return -1
	}
	
	function ElementClass(opts) {
	  if (!(this instanceof ElementClass)) return new ElementClass(opts)
	  var self = this
	  if (!opts) opts = {}
	
	  // similar doing instanceof HTMLElement but works in IE8
	  if (opts.nodeType) opts = {el: opts}
	
	  this.opts = opts
	  this.el = opts.el || document.body
	  if (typeof this.el !== 'object') this.el = document.querySelector(this.el)
	}
	
	ElementClass.prototype.add = function(className) {
	  var el = this.el
	  if (!el) return
	  if (el.className === "") return el.className = className
	  var classes = el.className.split(' ')
	  if (indexOf(classes, className) > -1) return classes
	  classes.push(className)
	  el.className = classes.join(' ')
	  return classes
	}
	
	ElementClass.prototype.remove = function(className) {
	  var el = this.el
	  if (!el) return
	  if (el.className === "") return
	  var classes = el.className.split(' ')
	  var idx = indexOf(classes, className)
	  if (idx > -1) classes.splice(idx, 1)
	  el.className = classes.join(' ')
	  return classes
	}
	
	ElementClass.prototype.has = function(className) {
	  var el = this.el
	  if (!el) return
	  var classes = el.className.split(' ')
	  return indexOf(classes, className) > -1
	}
	
	ElementClass.prototype.toggle = function(className) {
	  var el = this.el
	  if (!el) return
	  if (this.has(className)) this.remove(className)
	  else this.add(className)
	}


/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _lodash = __webpack_require__(565);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _youtubePlayer = __webpack_require__(566);
	
	var _youtubePlayer2 = _interopRequireDefault(_youtubePlayer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Check whether a `props` change should result in the video being updated.
	 *
	 * @param {Object} prevProps
	 * @param {Object} props
	 */
	function shouldUpdateVideo(prevProps, props) {
	  // A changing video should always trigger an update
	  if (prevProps.videoId !== props.videoId) {
	    return true;
	  }
	
	  // Otherwise, a change in the start/end time playerVars also requires a player
	  // update.
	  var prevVars = prevProps.opts.playerVars || {};
	  var vars = props.opts.playerVars || {};
	
	  return prevVars.start !== vars.start || prevVars.end !== vars.end;
	}
	
	/**
	 * Neutralise API options that only require a video update, leaving only options
	 * that require a player reset. The results can then be compared to see if a
	 * player reset is necessary.
	 *
	 * @param {Object} opts
	 */
	function filterResetOptions(opts) {
	  return _extends({}, opts, {
	    playerVars: _extends({}, opts.playerVars, {
	      start: 0,
	      end: 0
	    })
	  });
	}
	
	/**
	 * Check whether a `props` change should result in the player being reset.
	 * The player is reset when the `props.opts` change, except if the only change
	 * is in the `start` and `end` playerVars, because a video update can deal with
	 * those.
	 *
	 * @param {Object} prevProps
	 * @param {Object} props
	 */
	function shouldResetPlayer(prevProps, props) {
	  return !(0, _lodash2.default)(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));
	}
	
	/**
	 * Check whether a props change should result in an id or className update.
	 *
	 * @param {Object} prevProps
	 * @param {Object} props
	 */
	function shouldUpdatePlayer(prevProps, props) {
	  return prevProps.id === props.id || prevProps.className === props.className;
	}
	
	var YouTube = function (_React$Component) {
	  _inherits(YouTube, _React$Component);
	
	  function YouTube(props) {
	    _classCallCheck(this, YouTube);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(YouTube).call(this, props));
	
	    _this.onPlayerReady = function (event) {
	      return _this.props.onReady(event);
	    };
	
	    _this.onPlayerError = function (event) {
	      return _this.props.onError(event);
	    };
	
	    _this.onPlayerStateChange = function (event) {
	      _this.props.onStateChange(event);
	      switch (event.data) {
	
	        case window.YT.PlayerState.ENDED:
	          _this.props.onEnd(event);
	          break;
	
	        case window.YT.PlayerState.PLAYING:
	          _this.props.onPlay(event);
	          break;
	
	        case window.YT.PlayerState.PAUSED:
	          _this.props.onPause(event);
	          break;
	
	        default:
	          return;
	      }
	    };
	
	    _this.onPlayerPlaybackRateChange = function (event) {
	      return _this.props.onPlaybackRateChange(event);
	    };
	
	    _this.onPlayerPlaybackQualityChange = function (event) {
	      return _this.props.onPlaybackQualityChange(event);
	    };
	
	    _this.createPlayer = function () {
	      // do not attempt to create a player server-side, it won't work
	      if (typeof document === 'undefined') return;
	      // create player
	      var playerOpts = _extends({}, _this.props.opts, {
	        // preload the `videoId` video if one is already given
	        videoId: _this.props.videoId
	      });
	      _this.internalPlayer = (0, _youtubePlayer2.default)(_this.container, playerOpts);
	      // attach event handlers
	      _this.internalPlayer.on('ready', _this.onPlayerReady);
	      _this.internalPlayer.on('error', _this.onPlayerError);
	      _this.internalPlayer.on('stateChange', _this.onPlayerStateChange);
	      _this.internalPlayer.on('playbackRateChange', _this.onPlayerPlaybackRateChange);
	      _this.internalPlayer.on('playbackQualityChange', _this.onPlayerPlaybackQualityChange);
	    };
	
	    _this.resetPlayer = function () {
	      return _this.internalPlayer.destroy().then(_this.createPlayer);
	    };
	
	    _this.updatePlayer = function () {
	      _this.internalPlayer.getIframe().then(function (iframe) {
	        iframe.setAttribute('id', _this.props.id);
	        iframe.setAttribute('class', _this.props.className);
	      });
	    };
	
	    _this.updateVideo = function () {
	      if (typeof _this.props.videoId === 'undefined' || _this.props.videoId === null) {
	        _this.internalPlayer.stopVideo();
	        return;
	      }
	
	      // set queueing options
	      var autoplay = false;
	      var opts = {
	        videoId: _this.props.videoId
	      };
	      if ('playerVars' in _this.props.opts) {
	        autoplay = _this.props.opts.playerVars.autoplay === 1;
	        if ('start' in _this.props.opts.playerVars) {
	          opts.startSeconds = _this.props.opts.playerVars.start;
	        }
	        if ('end' in _this.props.opts.playerVars) {
	          opts.endSeconds = _this.props.opts.playerVars.end;
	        }
	      }
	
	      // if autoplay is enabled loadVideoById
	      if (autoplay) {
	        _this.internalPlayer.loadVideoById(opts);
	        return;
	      }
	      // default behaviour just cues the video
	      _this.internalPlayer.cueVideoById(opts);
	    };
	
	    _this.refContainer = function (container) {
	      _this.container = container;
	    };
	
	    _this.container = null;
	    _this.internalPlayer = null;
	    return _this;
	  }
	
	  _createClass(YouTube, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.createPlayer();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      if (shouldUpdatePlayer(prevProps, this.props)) {
	        this.updatePlayer();
	      }
	
	      if (shouldResetPlayer(prevProps, this.props)) {
	        this.resetPlayer();
	      }
	
	      if (shouldUpdateVideo(prevProps, this.props)) {
	        this.updateVideo();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      /**
	       * Note: The `youtube-player` package that is used promisifies all Youtube
	       * Player API calls, which introduces a delay of a tick before it actually
	       * gets destroyed. Since React attempts to remove the element instantly
	       * this method isn't quick enough to reset the container element.
	       */
	      this.internalPlayer.destroy();
	    }
	
	    /**
	     * https://developers.google.com/youtube/iframe_api_reference#onReady
	     *
	     * @param {Object} event
	     *   @param {Object} target - player object
	     */
	
	
	    /**
	     * https://developers.google.com/youtube/iframe_api_reference#onError
	     *
	     * @param {Object} event
	     *   @param {Integer} data  - error type
	     *   @param {Object} target - player object
	     */
	
	
	    /**
	     * https://developers.google.com/youtube/iframe_api_reference#onStateChange
	     *
	     * @param {Object} event
	     *   @param {Integer} data  - status change type
	     *   @param {Object} target - actual YT player
	     */
	
	
	    /**
	     * https://developers.google.com/youtube/iframe_api_reference#onPlaybackRateChange
	     *
	     * @param {Object} event
	     *   @param {Float} data    - playback rate
	     *   @param {Object} target - actual YT player
	     */
	
	
	    /**
	     * https://developers.google.com/youtube/iframe_api_reference#onPlaybackQualityChange
	     *
	     * @param {Object} event
	     *   @param {String} data   - playback quality
	     *   @param {Object} target - actual YT player
	     */
	
	
	    /**
	     * Initialize the Youtube Player API on the container and attach event handlers
	     */
	
	
	    /**
	     * Shorthand for destroying and then re-creating the Youtube Player
	     */
	
	
	    /**
	     * Method to update the id and class of the Youtube Player iframe.
	     * React should update this automatically but since the Youtube Player API
	     * replaced the DIV that is mounted by React we need to do this manually.
	     */
	
	
	    /**
	     * Call Youtube Player API methods to update the currently playing video.
	     * Depeding on the `opts.playerVars.autoplay` this function uses one of two
	     * Youtube Player API methods to update the video.
	     */
	
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'span',
	        null,
	        _react2.default.createElement('div', { id: this.props.id, className: this.props.className, ref: this.refContainer })
	      );
	    }
	  }]);
	
	  return YouTube;
	}(_react2.default.Component);
	
	YouTube.propTypes = {
	  videoId: _react2.default.PropTypes.string,
	
	  // custom ID for player element
	  id: _react2.default.PropTypes.string,
	
	  // custom class name for player element
	  className: _react2.default.PropTypes.string,
	
	  // https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player
	  opts: _react2.default.PropTypes.object,
	
	  // event subscriptions
	  onReady: _react2.default.PropTypes.func,
	  onError: _react2.default.PropTypes.func,
	  onPlay: _react2.default.PropTypes.func,
	  onPause: _react2.default.PropTypes.func,
	  onEnd: _react2.default.PropTypes.func,
	  onStateChange: _react2.default.PropTypes.func,
	  onPlaybackRateChange: _react2.default.PropTypes.func,
	  onPlaybackQualityChange: _react2.default.PropTypes.func
	};
	YouTube.defaultProps = {
	  opts: {},
	  onReady: function onReady() {},
	  onError: function onError() {},
	  onPlay: function onPlay() {},
	  onPause: function onPause() {},
	  onEnd: function onEnd() {},
	  onStateChange: function onStateChange() {},
	  onPlaybackRateChange: function onPlaybackRateChange() {},
	  onPlaybackQualityChange: function onPlaybackQualityChange() {}
	};
	exports.default = YouTube;

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	/** Used to compose bitmasks for comparison styles. */
	var UNORDERED_COMPARE_FLAG = 1,
	    PARTIAL_COMPARE_FLAG = 2;
	
	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';
	
	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';
	
	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
	
	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;
	
	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	/** Detect free variable `exports`. */
	var freeExports = freeGlobal && typeof exports == 'object' && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;
	
	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding('util');
	  } catch (e) {}
	}());
	
	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);
	
	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}
	
	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);
	
	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}
	
	/**
	 * Creates a function that invokes `func` with its first argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);
	
	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype,
	    objectProto = Object.prototype;
	
	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];
	
	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/** Built-in value references. */
	var Symbol = root.Symbol,
	    Uint8Array = root.Uint8Array,
	    propertyIsEnumerable = objectProto.propertyIsEnumerable,
	    splice = arrayProto.splice;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf,
	    nativeKeys = Object.keys;
	
	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView'),
	    Map = getNative(root, 'Map'),
	    Promise = getNative(root, 'Promise'),
	    Set = getNative(root, 'Set'),
	    WeakMap = getNative(root, 'WeakMap'),
	    nativeCreate = getNative(Object, 'create');
	
	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
	
	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}
	
	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}
	
	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}
	
	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}
	
	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}
	
	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}
	
	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}
	
	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}
	
	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}
	
	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}
	
	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;
	
	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values ? values.length : 0;
	
	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}
	
	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}
	
	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}
	
	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;
	
	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}
	
	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}
	
	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}
	
	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}
	
	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}
	
	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache) {
	    var pairs = cache.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      return this;
	    }
	    cache = this.__data__ = new MapCache(pairs);
	  }
	  cache.set(key, value);
	  return this;
	}
	
	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to search.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	/**
	 * The base implementation of `getTag`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  return objectToString.call(value);
	}
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	  // that are composed entirely of index properties, return `false` for
	  // `hasOwnProperty` checks of them.
	  return object != null &&
	    (hasOwnProperty.call(object, key) ||
	      (typeof object == 'object' && key in object && getPrototype(object) === null));
	}
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {boolean} [bitmask] The bitmask of comparison flags.
	 *  The bitmask may be composed of the following flags:
	 *     1 - Unordered comparison
	 *     2 - Partial comparison
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, customizer, bitmask, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	}
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = arrayTag,
	      othTag = arrayTag;
	
	  if (!objIsArr) {
	    objTag = getTag(object);
	    objTag = objTag == argsTag ? objectTag : objTag;
	  }
	  if (!othIsArr) {
	    othTag = getTag(other);
	    othTag = othTag == argsTag ? objectTag : othTag;
	  }
	  var objIsObj = objTag == objectTag && !isHostObject(object),
	      othIsObj = othTag == objectTag && !isHostObject(other),
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	  }
	  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	}
	
	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}
	
	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}
	
	/**
	 * The base implementation of `_.keys` which doesn't skip the constructor
	 * property of prototypes or treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	var baseKeys = overArg(nativeKeys, Object);
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!seen.has(othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
	              return seen.add(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, customizer, bitmask, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  return result;
	}
	
	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;
	
	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;
	
	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);
	
	    case errorTag:
	      return object.name == other.name && object.message == other.message;
	
	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');
	
	    case mapTag:
	      var convert = mapToArray;
	
	    case setTag:
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	      convert || (convert = setToArray);
	
	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= UNORDERED_COMPARE_FLAG;
	
	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	      stack['delete'](object);
	      return result;
	
	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	 *  for more details.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	      objProps = keys(object),
	      objLength = objProps.length,
	      othProps = keys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : baseHas(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  return result;
	}
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a
	 * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	 * Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}
	
	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	var getPrototype = overArg(nativeGetPrototype, Object);
	
	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;
	
	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;
	
	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}
	
	/**
	 * Creates an array of index keys for `object` values of arrays,
	 * `arguments` objects, and strings, otherwise `null` is returned.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array|null} Returns index keys, else `null`.
	 */
	function indexKeys(object) {
	  var length = object ? object.length : undefined;
	  if (isLength(length) &&
	      (isArray(object) || isString(object) || isArguments(object))) {
	    return baseTimes(length, String);
	  }
	  return null;
	}
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}
	
	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}
	
	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}
	
	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	  return value === proto;
	}
	
	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}
	
	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value)) && !isFunction(value);
	}
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are **not** supported.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent,
	 *  else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8 which returns 'object' for typed array and weak map constructors,
	  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length,
	 *  else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	}
	
	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  var isProto = isPrototype(object);
	  if (!(isProto || isArrayLike(object))) {
	    return baseKeys(object);
	  }
	  var indexes = indexKeys(object),
	      skipIndexes = !!indexes,
	      result = indexes || [],
	      length = result.length;
	
	  for (var key in object) {
	    if (baseHas(object, key) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	        !(isProto && key == 'constructor')) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = isEqual;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(327)(module)))

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _isString2 = __webpack_require__(314);
	
	var _isString3 = _interopRequireDefault(_isString2);
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _sister = __webpack_require__(567);
	
	var _sister2 = _interopRequireDefault(_sister);
	
	var _bluebird = __webpack_require__(568);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	var _loadYouTubeIframeAPI = __webpack_require__(572);
	
	var _loadYouTubeIframeAPI2 = _interopRequireDefault(_loadYouTubeIframeAPI);
	
	var _YouTubePlayer = __webpack_require__(574);
	
	var _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @typedef options
	 * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player
	 * @param {Number} width
	 * @param {Number} height
	 * @param {String} videoId
	 * @param {Object} playerVars
	 * @param {Object} events
	 */
	
	var youtubeIframeAPI = undefined;
	
	/**
	 * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.
	 *
	 * @param {HTMLElement|String} elementId Either the DOM element or the id of the HTML element where the API will insert an <iframe>.
	 * @param {YouTubePlayer~options} options
	 * @returns {Object}
	 */
	
	exports.default = function (elementId) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	
	    var emitter = undefined,
	        playerAPI = undefined,
	        playerAPIReady = undefined;
	
	    if (!youtubeIframeAPI) {
	        youtubeIframeAPI = (0, _loadYouTubeIframeAPI2.default)();
	    }
	
	    playerAPI = {};
	    emitter = (0, _sister2.default)();
	
	    if (options.events) {
	        throw new Error('Event handlers cannot be overwritten.');
	    }
	
	    if ((0, _isString3.default)(elementId) && !document.getElementById(elementId)) {
	        throw new Error('Element "' + elementId + '" does not exist.');
	    }
	
	    options.events = _YouTubePlayer2.default.proxyEvents(emitter);
	
	    playerAPIReady = new _bluebird2.default(function (resolve) {
	        youtubeIframeAPI.then(function (YT) {
	            return new YT.Player(elementId, options);
	        }).then(function (player) {
	            emitter.on('ready', function () {
	                resolve(player);
	            });
	        });
	    });
	
	    playerAPI = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady);
	    playerAPI.on = emitter.on;
	
	    return playerAPI;
	};
	
	module.exports = exports['default'];
	//# sourceMappingURL=index.js.map


/***/ },
/* 567 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	* @link https://github.com/gajus/sister for the canonical source repository
	* @license https://github.com/gajus/sister/blob/master/LICENSE BSD 3-Clause
	*/
	function Sister () {
	    var sister = {},
	        events = {};
	
	    /**
	     * @name handler
	     * @function
	     * @param {Object} data Event data.
	     */
	
	    /**
	     * @param {String} name Event name.
	     * @param {handler} handler
	     * @return {listener}
	     */
	    sister.on = function (name, handler) {
	        var listener = {name: name, handler: handler};
	        events[name] = events[name] || [];
	        events[name].unshift(listener);
	        return listener;
	    };
	
	    /**
	     * @param {listener}
	     */
	    sister.off = function (listener) {
	        var index = events[listener.name].indexOf(listener);
	
	        if (index != -1) {
	            events[listener.name].splice(index, 1);
	        }
	    };
	
	    /**
	     * @param {String} name Event name.
	     * @param {Object} data Event data.
	     */
	    sister.trigger = function (name, data) {
	        var listeners = events[name],
	            i;
	
	        if (listeners) {
	            i = listeners.length;
	            while (i--) {
	                listeners[i].handler(data);
	            }
	        }
	    };
	
	    return sister;
	}
	
	global.gajus = global.gajus || {};
	global.gajus.Sister = Sister;
	
	module.exports = Sister;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, global, setImmediate) {/* @preserve
	 * The MIT License (MIT)
	 * 
	 * Copyright (c) 2013-2015 Petka Antonov
	 * 
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 * 
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 * 
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 * 
	 */
	/**
	 * bluebird build version 3.4.1
	 * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each
	*/
	!function(e){if(true)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_=="function"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_=="function"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise) {
	var SomePromiseArray = Promise._SomePromiseArray;
	function any(promises) {
	    var ret = new SomePromiseArray(promises);
	    var promise = ret.promise();
	    ret.setHowMany(1);
	    ret.setUnwrap();
	    ret.init();
	    return promise;
	}
	
	Promise.any = function (promises) {
	    return any(promises);
	};
	
	Promise.prototype.any = function () {
	    return any(this);
	};
	
	};
	
	},{}],2:[function(_dereq_,module,exports){
	"use strict";
	var firstLineError;
	try {throw new Error(); } catch (e) {firstLineError = e;}
	var schedule = _dereq_("./schedule");
	var Queue = _dereq_("./queue");
	var util = _dereq_("./util");
	
	function Async() {
	    this._customScheduler = false;
	    this._isTickUsed = false;
	    this._lateQueue = new Queue(16);
	    this._normalQueue = new Queue(16);
	    this._haveDrainedQueues = false;
	    this._trampolineEnabled = true;
	    var self = this;
	    this.drainQueues = function () {
	        self._drainQueues();
	    };
	    this._schedule = schedule;
	}
	
	Async.prototype.setScheduler = function(fn) {
	    var prev = this._schedule;
	    this._schedule = fn;
	    this._customScheduler = true;
	    return prev;
	};
	
	Async.prototype.hasCustomScheduler = function() {
	    return this._customScheduler;
	};
	
	Async.prototype.enableTrampoline = function() {
	    this._trampolineEnabled = true;
	};
	
	Async.prototype.disableTrampolineIfNecessary = function() {
	    if (util.hasDevTools) {
	        this._trampolineEnabled = false;
	    }
	};
	
	Async.prototype.haveItemsQueued = function () {
	    return this._isTickUsed || this._haveDrainedQueues;
	};
	
	
	Async.prototype.fatalError = function(e, isNode) {
	    if (isNode) {
	        process.stderr.write("Fatal " + (e instanceof Error ? e.stack : e) +
	            "\n");
	        process.exit(2);
	    } else {
	        this.throwLater(e);
	    }
	};
	
	Async.prototype.throwLater = function(fn, arg) {
	    if (arguments.length === 1) {
	        arg = fn;
	        fn = function () { throw arg; };
	    }
	    if (typeof setTimeout !== "undefined") {
	        setTimeout(function() {
	            fn(arg);
	        }, 0);
	    } else try {
	        this._schedule(function() {
	            fn(arg);
	        });
	    } catch (e) {
	        throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	};
	
	function AsyncInvokeLater(fn, receiver, arg) {
	    this._lateQueue.push(fn, receiver, arg);
	    this._queueTick();
	}
	
	function AsyncInvoke(fn, receiver, arg) {
	    this._normalQueue.push(fn, receiver, arg);
	    this._queueTick();
	}
	
	function AsyncSettlePromises(promise) {
	    this._normalQueue._pushOne(promise);
	    this._queueTick();
	}
	
	if (!util.hasDevTools) {
	    Async.prototype.invokeLater = AsyncInvokeLater;
	    Async.prototype.invoke = AsyncInvoke;
	    Async.prototype.settlePromises = AsyncSettlePromises;
	} else {
	    Async.prototype.invokeLater = function (fn, receiver, arg) {
	        if (this._trampolineEnabled) {
	            AsyncInvokeLater.call(this, fn, receiver, arg);
	        } else {
	            this._schedule(function() {
	                setTimeout(function() {
	                    fn.call(receiver, arg);
	                }, 100);
	            });
	        }
	    };
	
	    Async.prototype.invoke = function (fn, receiver, arg) {
	        if (this._trampolineEnabled) {
	            AsyncInvoke.call(this, fn, receiver, arg);
	        } else {
	            this._schedule(function() {
	                fn.call(receiver, arg);
	            });
	        }
	    };
	
	    Async.prototype.settlePromises = function(promise) {
	        if (this._trampolineEnabled) {
	            AsyncSettlePromises.call(this, promise);
	        } else {
	            this._schedule(function() {
	                promise._settlePromises();
	            });
	        }
	    };
	}
	
	Async.prototype.invokeFirst = function (fn, receiver, arg) {
	    this._normalQueue.unshift(fn, receiver, arg);
	    this._queueTick();
	};
	
	Async.prototype._drainQueue = function(queue) {
	    while (queue.length() > 0) {
	        var fn = queue.shift();
	        if (typeof fn !== "function") {
	            fn._settlePromises();
	            continue;
	        }
	        var receiver = queue.shift();
	        var arg = queue.shift();
	        fn.call(receiver, arg);
	    }
	};
	
	Async.prototype._drainQueues = function () {
	    this._drainQueue(this._normalQueue);
	    this._reset();
	    this._haveDrainedQueues = true;
	    this._drainQueue(this._lateQueue);
	};
	
	Async.prototype._queueTick = function () {
	    if (!this._isTickUsed) {
	        this._isTickUsed = true;
	        this._schedule(this.drainQueues);
	    }
	};
	
	Async.prototype._reset = function () {
	    this._isTickUsed = false;
	};
	
	module.exports = Async;
	module.exports.firstLineError = firstLineError;
	
	},{"./queue":26,"./schedule":29,"./util":36}],3:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {
	var calledBind = false;
	var rejectThis = function(_, e) {
	    this._reject(e);
	};
	
	var targetRejected = function(e, context) {
	    context.promiseRejectionQueued = true;
	    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);
	};
	
	var bindingResolved = function(thisArg, context) {
	    if (((this._bitField & 50397184) === 0)) {
	        this._resolveCallback(context.target);
	    }
	};
	
	var bindingRejected = function(e, context) {
	    if (!context.promiseRejectionQueued) this._reject(e);
	};
	
	Promise.prototype.bind = function (thisArg) {
	    if (!calledBind) {
	        calledBind = true;
	        Promise.prototype._propagateFrom = debug.propagateFromFunction();
	        Promise.prototype._boundValue = debug.boundValueFunction();
	    }
	    var maybePromise = tryConvertToPromise(thisArg);
	    var ret = new Promise(INTERNAL);
	    ret._propagateFrom(this, 1);
	    var target = this._target();
	    ret._setBoundTo(maybePromise);
	    if (maybePromise instanceof Promise) {
	        var context = {
	            promiseRejectionQueued: false,
	            promise: ret,
	            target: target,
	            bindingPromise: maybePromise
	        };
	        target._then(INTERNAL, targetRejected, undefined, ret, context);
	        maybePromise._then(
	            bindingResolved, bindingRejected, undefined, ret, context);
	        ret._setOnCancel(maybePromise);
	    } else {
	        ret._resolveCallback(target);
	    }
	    return ret;
	};
	
	Promise.prototype._setBoundTo = function (obj) {
	    if (obj !== undefined) {
	        this._bitField = this._bitField | 2097152;
	        this._boundTo = obj;
	    } else {
	        this._bitField = this._bitField & (~2097152);
	    }
	};
	
	Promise.prototype._isBound = function () {
	    return (this._bitField & 2097152) === 2097152;
	};
	
	Promise.bind = function (thisArg, value) {
	    return Promise.resolve(value).bind(thisArg);
	};
	};
	
	},{}],4:[function(_dereq_,module,exports){
	"use strict";
	var old;
	if (typeof Promise !== "undefined") old = Promise;
	function noConflict() {
	    try { if (Promise === bluebird) Promise = old; }
	    catch (e) {}
	    return bluebird;
	}
	var bluebird = _dereq_("./promise")();
	bluebird.noConflict = noConflict;
	module.exports = bluebird;
	
	},{"./promise":22}],5:[function(_dereq_,module,exports){
	"use strict";
	var cr = Object.create;
	if (cr) {
	    var callerCache = cr(null);
	    var getterCache = cr(null);
	    callerCache[" size"] = getterCache[" size"] = 0;
	}
	
	module.exports = function(Promise) {
	var util = _dereq_("./util");
	var canEvaluate = util.canEvaluate;
	var isIdentifier = util.isIdentifier;
	
	var getMethodCaller;
	var getGetter;
	if (false) {
	var makeMethodCaller = function (methodName) {
	    return new Function("ensureMethod", "                                    \n\
	        return function(obj) {                                               \n\
	            'use strict'                                                     \n\
	            var len = this.length;                                           \n\
	            ensureMethod(obj, 'methodName');                                 \n\
	            switch(len) {                                                    \n\
	                case 1: return obj.methodName(this[0]);                      \n\
	                case 2: return obj.methodName(this[0], this[1]);             \n\
	                case 3: return obj.methodName(this[0], this[1], this[2]);    \n\
	                case 0: return obj.methodName();                             \n\
	                default:                                                     \n\
	                    return obj.methodName.apply(obj, this);                  \n\
	            }                                                                \n\
	        };                                                                   \n\
	        ".replace(/methodName/g, methodName))(ensureMethod);
	};
	
	var makeGetter = function (propertyName) {
	    return new Function("obj", "                                             \n\
	        'use strict';                                                        \n\
	        return obj.propertyName;                                             \n\
	        ".replace("propertyName", propertyName));
	};
	
	var getCompiled = function(name, compiler, cache) {
	    var ret = cache[name];
	    if (typeof ret !== "function") {
	        if (!isIdentifier(name)) {
	            return null;
	        }
	        ret = compiler(name);
	        cache[name] = ret;
	        cache[" size"]++;
	        if (cache[" size"] > 512) {
	            var keys = Object.keys(cache);
	            for (var i = 0; i < 256; ++i) delete cache[keys[i]];
	            cache[" size"] = keys.length - 256;
	        }
	    }
	    return ret;
	};
	
	getMethodCaller = function(name) {
	    return getCompiled(name, makeMethodCaller, callerCache);
	};
	
	getGetter = function(name) {
	    return getCompiled(name, makeGetter, getterCache);
	};
	}
	
	function ensureMethod(obj, methodName) {
	    var fn;
	    if (obj != null) fn = obj[methodName];
	    if (typeof fn !== "function") {
	        var message = "Object " + util.classString(obj) + " has no method '" +
	            util.toString(methodName) + "'";
	        throw new Promise.TypeError(message);
	    }
	    return fn;
	}
	
	function caller(obj) {
	    var methodName = this.pop();
	    var fn = ensureMethod(obj, methodName);
	    return fn.apply(obj, this);
	}
	Promise.prototype.call = function (methodName) {
	    var args = [].slice.call(arguments, 1);;
	    if (false) {
	        if (canEvaluate) {
	            var maybeCaller = getMethodCaller(methodName);
	            if (maybeCaller !== null) {
	                return this._then(
	                    maybeCaller, undefined, undefined, args, undefined);
	            }
	        }
	    }
	    args.push(methodName);
	    return this._then(caller, undefined, undefined, args, undefined);
	};
	
	function namedGetter(obj) {
	    return obj[this];
	}
	function indexedGetter(obj) {
	    var index = +this;
	    if (index < 0) index = Math.max(0, index + obj.length);
	    return obj[index];
	}
	Promise.prototype.get = function (propertyName) {
	    var isIndex = (typeof propertyName === "number");
	    var getter;
	    if (!isIndex) {
	        if (canEvaluate) {
	            var maybeGetter = getGetter(propertyName);
	            getter = maybeGetter !== null ? maybeGetter : namedGetter;
	        } else {
	            getter = namedGetter;
	        }
	    } else {
	        getter = indexedGetter;
	    }
	    return this._then(getter, undefined, undefined, propertyName, undefined);
	};
	};
	
	},{"./util":36}],6:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, PromiseArray, apiRejection, debug) {
	var util = _dereq_("./util");
	var tryCatch = util.tryCatch;
	var errorObj = util.errorObj;
	var async = Promise._async;
	
	Promise.prototype["break"] = Promise.prototype.cancel = function() {
	    if (!debug.cancellation()) return this._warn("cancellation is disabled");
	
	    var promise = this;
	    var child = promise;
	    while (promise.isCancellable()) {
	        if (!promise._cancelBy(child)) {
	            if (child._isFollowing()) {
	                child._followee().cancel();
	            } else {
	                child._cancelBranched();
	            }
	            break;
	        }
	
	        var parent = promise._cancellationParent;
	        if (parent == null || !parent.isCancellable()) {
	            if (promise._isFollowing()) {
	                promise._followee().cancel();
	            } else {
	                promise._cancelBranched();
	            }
	            break;
	        } else {
	            if (promise._isFollowing()) promise._followee().cancel();
	            child = promise;
	            promise = parent;
	        }
	    }
	};
	
	Promise.prototype._branchHasCancelled = function() {
	    this._branchesRemainingToCancel--;
	};
	
	Promise.prototype._enoughBranchesHaveCancelled = function() {
	    return this._branchesRemainingToCancel === undefined ||
	           this._branchesRemainingToCancel <= 0;
	};
	
	Promise.prototype._cancelBy = function(canceller) {
	    if (canceller === this) {
	        this._branchesRemainingToCancel = 0;
	        this._invokeOnCancel();
	        return true;
	    } else {
	        this._branchHasCancelled();
	        if (this._enoughBranchesHaveCancelled()) {
	            this._invokeOnCancel();
	            return true;
	        }
	    }
	    return false;
	};
	
	Promise.prototype._cancelBranched = function() {
	    if (this._enoughBranchesHaveCancelled()) {
	        this._cancel();
	    }
	};
	
	Promise.prototype._cancel = function() {
	    if (!this.isCancellable()) return;
	
	    this._setCancelled();
	    async.invoke(this._cancelPromises, this, undefined);
	};
	
	Promise.prototype._cancelPromises = function() {
	    if (this._length() > 0) this._settlePromises();
	};
	
	Promise.prototype._unsetOnCancel = function() {
	    this._onCancelField = undefined;
	};
	
	Promise.prototype.isCancellable = function() {
	    return this.isPending() && !this.isCancelled();
	};
	
	Promise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {
	    if (util.isArray(onCancelCallback)) {
	        for (var i = 0; i < onCancelCallback.length; ++i) {
	            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);
	        }
	    } else if (onCancelCallback !== undefined) {
	        if (typeof onCancelCallback === "function") {
	            if (!internalOnly) {
	                var e = tryCatch(onCancelCallback).call(this._boundValue());
	                if (e === errorObj) {
	                    this._attachExtraTrace(e.e);
	                    async.throwLater(e.e);
	                }
	            }
	        } else {
	            onCancelCallback._resultCancelled(this);
	        }
	    }
	};
	
	Promise.prototype._invokeOnCancel = function() {
	    var onCancelCallback = this._onCancel();
	    this._unsetOnCancel();
	    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);
	};
	
	Promise.prototype._invokeInternalOnCancel = function() {
	    if (this.isCancellable()) {
	        this._doInvokeOnCancel(this._onCancel(), true);
	        this._unsetOnCancel();
	    }
	};
	
	Promise.prototype._resultCancelled = function() {
	    this.cancel();
	};
	
	};
	
	},{"./util":36}],7:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(NEXT_FILTER) {
	var util = _dereq_("./util");
	var getKeys = _dereq_("./es5").keys;
	var tryCatch = util.tryCatch;
	var errorObj = util.errorObj;
	
	function catchFilter(instances, cb, promise) {
	    return function(e) {
	        var boundTo = promise._boundValue();
	        predicateLoop: for (var i = 0; i < instances.length; ++i) {
	            var item = instances[i];
	
	            if (item === Error ||
	                (item != null && item.prototype instanceof Error)) {
	                if (e instanceof item) {
	                    return tryCatch(cb).call(boundTo, e);
	                }
	            } else if (typeof item === "function") {
	                var matchesPredicate = tryCatch(item).call(boundTo, e);
	                if (matchesPredicate === errorObj) {
	                    return matchesPredicate;
	                } else if (matchesPredicate) {
	                    return tryCatch(cb).call(boundTo, e);
	                }
	            } else if (util.isObject(e)) {
	                var keys = getKeys(item);
	                for (var j = 0; j < keys.length; ++j) {
	                    var key = keys[j];
	                    if (item[key] != e[key]) {
	                        continue predicateLoop;
	                    }
	                }
	                return tryCatch(cb).call(boundTo, e);
	            }
	        }
	        return NEXT_FILTER;
	    };
	}
	
	return catchFilter;
	};
	
	},{"./es5":13,"./util":36}],8:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise) {
	var longStackTraces = false;
	var contextStack = [];
	
	Promise.prototype._promiseCreated = function() {};
	Promise.prototype._pushContext = function() {};
	Promise.prototype._popContext = function() {return null;};
	Promise._peekContext = Promise.prototype._peekContext = function() {};
	
	function Context() {
	    this._trace = new Context.CapturedTrace(peekContext());
	}
	Context.prototype._pushContext = function () {
	    if (this._trace !== undefined) {
	        this._trace._promiseCreated = null;
	        contextStack.push(this._trace);
	    }
	};
	
	Context.prototype._popContext = function () {
	    if (this._trace !== undefined) {
	        var trace = contextStack.pop();
	        var ret = trace._promiseCreated;
	        trace._promiseCreated = null;
	        return ret;
	    }
	    return null;
	};
	
	function createContext() {
	    if (longStackTraces) return new Context();
	}
	
	function peekContext() {
	    var lastIndex = contextStack.length - 1;
	    if (lastIndex >= 0) {
	        return contextStack[lastIndex];
	    }
	    return undefined;
	}
	Context.CapturedTrace = null;
	Context.create = createContext;
	Context.deactivateLongStackTraces = function() {};
	Context.activateLongStackTraces = function() {
	    var Promise_pushContext = Promise.prototype._pushContext;
	    var Promise_popContext = Promise.prototype._popContext;
	    var Promise_PeekContext = Promise._peekContext;
	    var Promise_peekContext = Promise.prototype._peekContext;
	    var Promise_promiseCreated = Promise.prototype._promiseCreated;
	    Context.deactivateLongStackTraces = function() {
	        Promise.prototype._pushContext = Promise_pushContext;
	        Promise.prototype._popContext = Promise_popContext;
	        Promise._peekContext = Promise_PeekContext;
	        Promise.prototype._peekContext = Promise_peekContext;
	        Promise.prototype._promiseCreated = Promise_promiseCreated;
	        longStackTraces = false;
	    };
	    longStackTraces = true;
	    Promise.prototype._pushContext = Context.prototype._pushContext;
	    Promise.prototype._popContext = Context.prototype._popContext;
	    Promise._peekContext = Promise.prototype._peekContext = peekContext;
	    Promise.prototype._promiseCreated = function() {
	        var ctx = this._peekContext();
	        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;
	    };
	};
	return Context;
	};
	
	},{}],9:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, Context) {
	var getDomain = Promise._getDomain;
	var async = Promise._async;
	var Warning = _dereq_("./errors").Warning;
	var util = _dereq_("./util");
	var canAttachTrace = util.canAttachTrace;
	var unhandledRejectionHandled;
	var possiblyUnhandledRejection;
	var bluebirdFramePattern =
	    /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
	var stackFramePattern = null;
	var formatStack = null;
	var indentStackFrames = false;
	var printWarning;
	var debugging = !!(util.env("BLUEBIRD_DEBUG") != 0 &&
	                        (true ||
	                         util.env("BLUEBIRD_DEBUG") ||
	                         util.env("NODE_ENV") === "development"));
	
	var warnings = !!(util.env("BLUEBIRD_WARNINGS") != 0 &&
	    (debugging || util.env("BLUEBIRD_WARNINGS")));
	
	var longStackTraces = !!(util.env("BLUEBIRD_LONG_STACK_TRACES") != 0 &&
	    (debugging || util.env("BLUEBIRD_LONG_STACK_TRACES")));
	
	var wForgottenReturn = util.env("BLUEBIRD_W_FORGOTTEN_RETURN") != 0 &&
	    (warnings || !!util.env("BLUEBIRD_W_FORGOTTEN_RETURN"));
	
	Promise.prototype.suppressUnhandledRejections = function() {
	    var target = this._target();
	    target._bitField = ((target._bitField & (~1048576)) |
	                      524288);
	};
	
	Promise.prototype._ensurePossibleRejectionHandled = function () {
	    if ((this._bitField & 524288) !== 0) return;
	    this._setRejectionIsUnhandled();
	    async.invokeLater(this._notifyUnhandledRejection, this, undefined);
	};
	
	Promise.prototype._notifyUnhandledRejectionIsHandled = function () {
	    fireRejectionEvent("rejectionHandled",
	                                  unhandledRejectionHandled, undefined, this);
	};
	
	Promise.prototype._setReturnedNonUndefined = function() {
	    this._bitField = this._bitField | 268435456;
	};
	
	Promise.prototype._returnedNonUndefined = function() {
	    return (this._bitField & 268435456) !== 0;
	};
	
	Promise.prototype._notifyUnhandledRejection = function () {
	    if (this._isRejectionUnhandled()) {
	        var reason = this._settledValue();
	        this._setUnhandledRejectionIsNotified();
	        fireRejectionEvent("unhandledRejection",
	                                      possiblyUnhandledRejection, reason, this);
	    }
	};
	
	Promise.prototype._setUnhandledRejectionIsNotified = function () {
	    this._bitField = this._bitField | 262144;
	};
	
	Promise.prototype._unsetUnhandledRejectionIsNotified = function () {
	    this._bitField = this._bitField & (~262144);
	};
	
	Promise.prototype._isUnhandledRejectionNotified = function () {
	    return (this._bitField & 262144) > 0;
	};
	
	Promise.prototype._setRejectionIsUnhandled = function () {
	    this._bitField = this._bitField | 1048576;
	};
	
	Promise.prototype._unsetRejectionIsUnhandled = function () {
	    this._bitField = this._bitField & (~1048576);
	    if (this._isUnhandledRejectionNotified()) {
	        this._unsetUnhandledRejectionIsNotified();
	        this._notifyUnhandledRejectionIsHandled();
	    }
	};
	
	Promise.prototype._isRejectionUnhandled = function () {
	    return (this._bitField & 1048576) > 0;
	};
	
	Promise.prototype._warn = function(message, shouldUseOwnTrace, promise) {
	    return warn(message, shouldUseOwnTrace, promise || this);
	};
	
	Promise.onPossiblyUnhandledRejection = function (fn) {
	    var domain = getDomain();
	    possiblyUnhandledRejection =
	        typeof fn === "function" ? (domain === null ? fn : domain.bind(fn))
	                                 : undefined;
	};
	
	Promise.onUnhandledRejectionHandled = function (fn) {
	    var domain = getDomain();
	    unhandledRejectionHandled =
	        typeof fn === "function" ? (domain === null ? fn : domain.bind(fn))
	                                 : undefined;
	};
	
	var disableLongStackTraces = function() {};
	Promise.longStackTraces = function () {
	    if (async.haveItemsQueued() && !config.longStackTraces) {
	        throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	    if (!config.longStackTraces && longStackTracesIsSupported()) {
	        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;
	        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;
	        config.longStackTraces = true;
	        disableLongStackTraces = function() {
	            if (async.haveItemsQueued() && !config.longStackTraces) {
	                throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	            }
	            Promise.prototype._captureStackTrace = Promise_captureStackTrace;
	            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
	            Context.deactivateLongStackTraces();
	            async.enableTrampoline();
	            config.longStackTraces = false;
	        };
	        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
	        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
	        Context.activateLongStackTraces();
	        async.disableTrampolineIfNecessary();
	    }
	};
	
	Promise.hasLongStackTraces = function () {
	    return config.longStackTraces && longStackTracesIsSupported();
	};
	
	var fireDomEvent = (function() {
	    try {
	        var event = document.createEvent("CustomEvent");
	        event.initCustomEvent("testingtheevent", false, true, {});
	        util.global.dispatchEvent(event);
	        return function(name, event) {
	            var domEvent = document.createEvent("CustomEvent");
	            domEvent.initCustomEvent(name.toLowerCase(), false, true, event);
	            return !util.global.dispatchEvent(domEvent);
	        };
	    } catch (e) {}
	    return function() {
	        return false;
	    };
	})();
	
	var fireGlobalEvent = (function() {
	    if (util.isNode) {
	        return function() {
	            return process.emit.apply(process, arguments);
	        };
	    } else {
	        if (!util.global) {
	            return function() {
	                return false;
	            };
	        }
	        return function(name) {
	            var methodName = "on" + name.toLowerCase();
	            var method = util.global[methodName];
	            if (!method) return false;
	            method.apply(util.global, [].slice.call(arguments, 1));
	            return true;
	        };
	    }
	})();
	
	function generatePromiseLifecycleEventObject(name, promise) {
	    return {promise: promise};
	}
	
	var eventToObjectGenerator = {
	    promiseCreated: generatePromiseLifecycleEventObject,
	    promiseFulfilled: generatePromiseLifecycleEventObject,
	    promiseRejected: generatePromiseLifecycleEventObject,
	    promiseResolved: generatePromiseLifecycleEventObject,
	    promiseCancelled: generatePromiseLifecycleEventObject,
	    promiseChained: function(name, promise, child) {
	        return {promise: promise, child: child};
	    },
	    warning: function(name, warning) {
	        return {warning: warning};
	    },
	    unhandledRejection: function (name, reason, promise) {
	        return {reason: reason, promise: promise};
	    },
	    rejectionHandled: generatePromiseLifecycleEventObject
	};
	
	var activeFireEvent = function (name) {
	    var globalEventFired = false;
	    try {
	        globalEventFired = fireGlobalEvent.apply(null, arguments);
	    } catch (e) {
	        async.throwLater(e);
	        globalEventFired = true;
	    }
	
	    var domEventFired = false;
	    try {
	        domEventFired = fireDomEvent(name,
	                    eventToObjectGenerator[name].apply(null, arguments));
	    } catch (e) {
	        async.throwLater(e);
	        domEventFired = true;
	    }
	
	    return domEventFired || globalEventFired;
	};
	
	Promise.config = function(opts) {
	    opts = Object(opts);
	    if ("longStackTraces" in opts) {
	        if (opts.longStackTraces) {
	            Promise.longStackTraces();
	        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {
	            disableLongStackTraces();
	        }
	    }
	    if ("warnings" in opts) {
	        var warningsOption = opts.warnings;
	        config.warnings = !!warningsOption;
	        wForgottenReturn = config.warnings;
	
	        if (util.isObject(warningsOption)) {
	            if ("wForgottenReturn" in warningsOption) {
	                wForgottenReturn = !!warningsOption.wForgottenReturn;
	            }
	        }
	    }
	    if ("cancellation" in opts && opts.cancellation && !config.cancellation) {
	        if (async.haveItemsQueued()) {
	            throw new Error(
	                "cannot enable cancellation after promises are in use");
	        }
	        Promise.prototype._clearCancellationData =
	            cancellationClearCancellationData;
	        Promise.prototype._propagateFrom = cancellationPropagateFrom;
	        Promise.prototype._onCancel = cancellationOnCancel;
	        Promise.prototype._setOnCancel = cancellationSetOnCancel;
	        Promise.prototype._attachCancellationCallback =
	            cancellationAttachCancellationCallback;
	        Promise.prototype._execute = cancellationExecute;
	        propagateFromFunction = cancellationPropagateFrom;
	        config.cancellation = true;
	    }
	    if ("monitoring" in opts) {
	        if (opts.monitoring && !config.monitoring) {
	            config.monitoring = true;
	            Promise.prototype._fireEvent = activeFireEvent;
	        } else if (!opts.monitoring && config.monitoring) {
	            config.monitoring = false;
	            Promise.prototype._fireEvent = defaultFireEvent;
	        }
	    }
	};
	
	function defaultFireEvent() { return false; }
	
	Promise.prototype._fireEvent = defaultFireEvent;
	Promise.prototype._execute = function(executor, resolve, reject) {
	    try {
	        executor(resolve, reject);
	    } catch (e) {
	        return e;
	    }
	};
	Promise.prototype._onCancel = function () {};
	Promise.prototype._setOnCancel = function (handler) { ; };
	Promise.prototype._attachCancellationCallback = function(onCancel) {
	    ;
	};
	Promise.prototype._captureStackTrace = function () {};
	Promise.prototype._attachExtraTrace = function () {};
	Promise.prototype._clearCancellationData = function() {};
	Promise.prototype._propagateFrom = function (parent, flags) {
	    ;
	    ;
	};
	
	function cancellationExecute(executor, resolve, reject) {
	    var promise = this;
	    try {
	        executor(resolve, reject, function(onCancel) {
	            if (typeof onCancel !== "function") {
	                throw new TypeError("onCancel must be a function, got: " +
	                                    util.toString(onCancel));
	            }
	            promise._attachCancellationCallback(onCancel);
	        });
	    } catch (e) {
	        return e;
	    }
	}
	
	function cancellationAttachCancellationCallback(onCancel) {
	    if (!this.isCancellable()) return this;
	
	    var previousOnCancel = this._onCancel();
	    if (previousOnCancel !== undefined) {
	        if (util.isArray(previousOnCancel)) {
	            previousOnCancel.push(onCancel);
	        } else {
	            this._setOnCancel([previousOnCancel, onCancel]);
	        }
	    } else {
	        this._setOnCancel(onCancel);
	    }
	}
	
	function cancellationOnCancel() {
	    return this._onCancelField;
	}
	
	function cancellationSetOnCancel(onCancel) {
	    this._onCancelField = onCancel;
	}
	
	function cancellationClearCancellationData() {
	    this._cancellationParent = undefined;
	    this._onCancelField = undefined;
	}
	
	function cancellationPropagateFrom(parent, flags) {
	    if ((flags & 1) !== 0) {
	        this._cancellationParent = parent;
	        var branchesRemainingToCancel = parent._branchesRemainingToCancel;
	        if (branchesRemainingToCancel === undefined) {
	            branchesRemainingToCancel = 0;
	        }
	        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
	    }
	    if ((flags & 2) !== 0 && parent._isBound()) {
	        this._setBoundTo(parent._boundTo);
	    }
	}
	
	function bindingPropagateFrom(parent, flags) {
	    if ((flags & 2) !== 0 && parent._isBound()) {
	        this._setBoundTo(parent._boundTo);
	    }
	}
	var propagateFromFunction = bindingPropagateFrom;
	
	function boundValueFunction() {
	    var ret = this._boundTo;
	    if (ret !== undefined) {
	        if (ret instanceof Promise) {
	            if (ret.isFulfilled()) {
	                return ret.value();
	            } else {
	                return undefined;
	            }
	        }
	    }
	    return ret;
	}
	
	function longStackTracesCaptureStackTrace() {
	    this._trace = new CapturedTrace(this._peekContext());
	}
	
	function longStackTracesAttachExtraTrace(error, ignoreSelf) {
	    if (canAttachTrace(error)) {
	        var trace = this._trace;
	        if (trace !== undefined) {
	            if (ignoreSelf) trace = trace._parent;
	        }
	        if (trace !== undefined) {
	            trace.attachExtraTrace(error);
	        } else if (!error.__stackCleaned__) {
	            var parsed = parseStackAndMessage(error);
	            util.notEnumerableProp(error, "stack",
	                parsed.message + "\n" + parsed.stack.join("\n"));
	            util.notEnumerableProp(error, "__stackCleaned__", true);
	        }
	    }
	}
	
	function checkForgottenReturns(returnValue, promiseCreated, name, promise,
	                               parent) {
	    if (returnValue === undefined && promiseCreated !== null &&
	        wForgottenReturn) {
	        if (parent !== undefined && parent._returnedNonUndefined()) return;
	        if ((promise._bitField & 65535) === 0) return;
	
	        if (name) name = name + " ";
	        var msg = "a promise was created in a " + name +
	            "handler but was not returned from it";
	        promise._warn(msg, true, promiseCreated);
	    }
	}
	
	function deprecated(name, replacement) {
	    var message = name +
	        " is deprecated and will be removed in a future version.";
	    if (replacement) message += " Use " + replacement + " instead.";
	    return warn(message);
	}
	
	function warn(message, shouldUseOwnTrace, promise) {
	    if (!config.warnings) return;
	    var warning = new Warning(message);
	    var ctx;
	    if (shouldUseOwnTrace) {
	        promise._attachExtraTrace(warning);
	    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {
	        ctx.attachExtraTrace(warning);
	    } else {
	        var parsed = parseStackAndMessage(warning);
	        warning.stack = parsed.message + "\n" + parsed.stack.join("\n");
	    }
	
	    if (!activeFireEvent("warning", warning)) {
	        formatAndLogError(warning, "", true);
	    }
	}
	
	function reconstructStack(message, stacks) {
	    for (var i = 0; i < stacks.length - 1; ++i) {
	        stacks[i].push("From previous event:");
	        stacks[i] = stacks[i].join("\n");
	    }
	    if (i < stacks.length) {
	        stacks[i] = stacks[i].join("\n");
	    }
	    return message + "\n" + stacks.join("\n");
	}
	
	function removeDuplicateOrEmptyJumps(stacks) {
	    for (var i = 0; i < stacks.length; ++i) {
	        if (stacks[i].length === 0 ||
	            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {
	            stacks.splice(i, 1);
	            i--;
	        }
	    }
	}
	
	function removeCommonRoots(stacks) {
	    var current = stacks[0];
	    for (var i = 1; i < stacks.length; ++i) {
	        var prev = stacks[i];
	        var currentLastIndex = current.length - 1;
	        var currentLastLine = current[currentLastIndex];
	        var commonRootMeetPoint = -1;
	
	        for (var j = prev.length - 1; j >= 0; --j) {
	            if (prev[j] === currentLastLine) {
	                commonRootMeetPoint = j;
	                break;
	            }
	        }
	
	        for (var j = commonRootMeetPoint; j >= 0; --j) {
	            var line = prev[j];
	            if (current[currentLastIndex] === line) {
	                current.pop();
	                currentLastIndex--;
	            } else {
	                break;
	            }
	        }
	        current = prev;
	    }
	}
	
	function cleanStack(stack) {
	    var ret = [];
	    for (var i = 0; i < stack.length; ++i) {
	        var line = stack[i];
	        var isTraceLine = "    (No stack trace)" === line ||
	            stackFramePattern.test(line);
	        var isInternalFrame = isTraceLine && shouldIgnore(line);
	        if (isTraceLine && !isInternalFrame) {
	            if (indentStackFrames && line.charAt(0) !== " ") {
	                line = "    " + line;
	            }
	            ret.push(line);
	        }
	    }
	    return ret;
	}
	
	function stackFramesAsArray(error) {
	    var stack = error.stack.replace(/\s+$/g, "").split("\n");
	    for (var i = 0; i < stack.length; ++i) {
	        var line = stack[i];
	        if ("    (No stack trace)" === line || stackFramePattern.test(line)) {
	            break;
	        }
	    }
	    if (i > 0) {
	        stack = stack.slice(i);
	    }
	    return stack;
	}
	
	function parseStackAndMessage(error) {
	    var stack = error.stack;
	    var message = error.toString();
	    stack = typeof stack === "string" && stack.length > 0
	                ? stackFramesAsArray(error) : ["    (No stack trace)"];
	    return {
	        message: message,
	        stack: cleanStack(stack)
	    };
	}
	
	function formatAndLogError(error, title, isSoft) {
	    if (typeof console !== "undefined") {
	        var message;
	        if (util.isObject(error)) {
	            var stack = error.stack;
	            message = title + formatStack(stack, error);
	        } else {
	            message = title + String(error);
	        }
	        if (typeof printWarning === "function") {
	            printWarning(message, isSoft);
	        } else if (typeof console.log === "function" ||
	            typeof console.log === "object") {
	            console.log(message);
	        }
	    }
	}
	
	function fireRejectionEvent(name, localHandler, reason, promise) {
	    var localEventFired = false;
	    try {
	        if (typeof localHandler === "function") {
	            localEventFired = true;
	            if (name === "rejectionHandled") {
	                localHandler(promise);
	            } else {
	                localHandler(reason, promise);
	            }
	        }
	    } catch (e) {
	        async.throwLater(e);
	    }
	
	    if (name === "unhandledRejection") {
	        if (!activeFireEvent(name, reason, promise) && !localEventFired) {
	            formatAndLogError(reason, "Unhandled rejection ");
	        }
	    } else {
	        activeFireEvent(name, promise);
	    }
	}
	
	function formatNonError(obj) {
	    var str;
	    if (typeof obj === "function") {
	        str = "[function " +
	            (obj.name || "anonymous") +
	            "]";
	    } else {
	        str = obj && typeof obj.toString === "function"
	            ? obj.toString() : util.toString(obj);
	        var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
	        if (ruselessToString.test(str)) {
	            try {
	                var newStr = JSON.stringify(obj);
	                str = newStr;
	            }
	            catch(e) {
	
	            }
	        }
	        if (str.length === 0) {
	            str = "(empty array)";
	        }
	    }
	    return ("(<" + snip(str) + ">, no stack trace)");
	}
	
	function snip(str) {
	    var maxChars = 41;
	    if (str.length < maxChars) {
	        return str;
	    }
	    return str.substr(0, maxChars - 3) + "...";
	}
	
	function longStackTracesIsSupported() {
	    return typeof captureStackTrace === "function";
	}
	
	var shouldIgnore = function() { return false; };
	var parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
	function parseLineInfo(line) {
	    var matches = line.match(parseLineInfoRegex);
	    if (matches) {
	        return {
	            fileName: matches[1],
	            line: parseInt(matches[2], 10)
	        };
	    }
	}
	
	function setBounds(firstLineError, lastLineError) {
	    if (!longStackTracesIsSupported()) return;
	    var firstStackLines = firstLineError.stack.split("\n");
	    var lastStackLines = lastLineError.stack.split("\n");
	    var firstIndex = -1;
	    var lastIndex = -1;
	    var firstFileName;
	    var lastFileName;
	    for (var i = 0; i < firstStackLines.length; ++i) {
	        var result = parseLineInfo(firstStackLines[i]);
	        if (result) {
	            firstFileName = result.fileName;
	            firstIndex = result.line;
	            break;
	        }
	    }
	    for (var i = 0; i < lastStackLines.length; ++i) {
	        var result = parseLineInfo(lastStackLines[i]);
	        if (result) {
	            lastFileName = result.fileName;
	            lastIndex = result.line;
	            break;
	        }
	    }
	    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||
	        firstFileName !== lastFileName || firstIndex >= lastIndex) {
	        return;
	    }
	
	    shouldIgnore = function(line) {
	        if (bluebirdFramePattern.test(line)) return true;
	        var info = parseLineInfo(line);
	        if (info) {
	            if (info.fileName === firstFileName &&
	                (firstIndex <= info.line && info.line <= lastIndex)) {
	                return true;
	            }
	        }
	        return false;
	    };
	}
	
	function CapturedTrace(parent) {
	    this._parent = parent;
	    this._promisesCreated = 0;
	    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);
	    captureStackTrace(this, CapturedTrace);
	    if (length > 32) this.uncycle();
	}
	util.inherits(CapturedTrace, Error);
	Context.CapturedTrace = CapturedTrace;
	
	CapturedTrace.prototype.uncycle = function() {
	    var length = this._length;
	    if (length < 2) return;
	    var nodes = [];
	    var stackToIndex = {};
	
	    for (var i = 0, node = this; node !== undefined; ++i) {
	        nodes.push(node);
	        node = node._parent;
	    }
	    length = this._length = i;
	    for (var i = length - 1; i >= 0; --i) {
	        var stack = nodes[i].stack;
	        if (stackToIndex[stack] === undefined) {
	            stackToIndex[stack] = i;
	        }
	    }
	    for (var i = 0; i < length; ++i) {
	        var currentStack = nodes[i].stack;
	        var index = stackToIndex[currentStack];
	        if (index !== undefined && index !== i) {
	            if (index > 0) {
	                nodes[index - 1]._parent = undefined;
	                nodes[index - 1]._length = 1;
	            }
	            nodes[i]._parent = undefined;
	            nodes[i]._length = 1;
	            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;
	
	            if (index < length - 1) {
	                cycleEdgeNode._parent = nodes[index + 1];
	                cycleEdgeNode._parent.uncycle();
	                cycleEdgeNode._length =
	                    cycleEdgeNode._parent._length + 1;
	            } else {
	                cycleEdgeNode._parent = undefined;
	                cycleEdgeNode._length = 1;
	            }
	            var currentChildLength = cycleEdgeNode._length + 1;
	            for (var j = i - 2; j >= 0; --j) {
	                nodes[j]._length = currentChildLength;
	                currentChildLength++;
	            }
	            return;
	        }
	    }
	};
	
	CapturedTrace.prototype.attachExtraTrace = function(error) {
	    if (error.__stackCleaned__) return;
	    this.uncycle();
	    var parsed = parseStackAndMessage(error);
	    var message = parsed.message;
	    var stacks = [parsed.stack];
	
	    var trace = this;
	    while (trace !== undefined) {
	        stacks.push(cleanStack(trace.stack.split("\n")));
	        trace = trace._parent;
	    }
	    removeCommonRoots(stacks);
	    removeDuplicateOrEmptyJumps(stacks);
	    util.notEnumerableProp(error, "stack", reconstructStack(message, stacks));
	    util.notEnumerableProp(error, "__stackCleaned__", true);
	};
	
	var captureStackTrace = (function stackDetection() {
	    var v8stackFramePattern = /^\s*at\s*/;
	    var v8stackFormatter = function(stack, error) {
	        if (typeof stack === "string") return stack;
	
	        if (error.name !== undefined &&
	            error.message !== undefined) {
	            return error.toString();
	        }
	        return formatNonError(error);
	    };
	
	    if (typeof Error.stackTraceLimit === "number" &&
	        typeof Error.captureStackTrace === "function") {
	        Error.stackTraceLimit += 6;
	        stackFramePattern = v8stackFramePattern;
	        formatStack = v8stackFormatter;
	        var captureStackTrace = Error.captureStackTrace;
	
	        shouldIgnore = function(line) {
	            return bluebirdFramePattern.test(line);
	        };
	        return function(receiver, ignoreUntil) {
	            Error.stackTraceLimit += 6;
	            captureStackTrace(receiver, ignoreUntil);
	            Error.stackTraceLimit -= 6;
	        };
	    }
	    var err = new Error();
	
	    if (typeof err.stack === "string" &&
	        err.stack.split("\n")[0].indexOf("stackDetection@") >= 0) {
	        stackFramePattern = /@/;
	        formatStack = v8stackFormatter;
	        indentStackFrames = true;
	        return function captureStackTrace(o) {
	            o.stack = new Error().stack;
	        };
	    }
	
	    var hasStackAfterThrow;
	    try { throw new Error(); }
	    catch(e) {
	        hasStackAfterThrow = ("stack" in e);
	    }
	    if (!("stack" in err) && hasStackAfterThrow &&
	        typeof Error.stackTraceLimit === "number") {
	        stackFramePattern = v8stackFramePattern;
	        formatStack = v8stackFormatter;
	        return function captureStackTrace(o) {
	            Error.stackTraceLimit += 6;
	            try { throw new Error(); }
	            catch(e) { o.stack = e.stack; }
	            Error.stackTraceLimit -= 6;
	        };
	    }
	
	    formatStack = function(stack, error) {
	        if (typeof stack === "string") return stack;
	
	        if ((typeof error === "object" ||
	            typeof error === "function") &&
	            error.name !== undefined &&
	            error.message !== undefined) {
	            return error.toString();
	        }
	        return formatNonError(error);
	    };
	
	    return null;
	
	})([]);
	
	if (typeof console !== "undefined" && typeof console.warn !== "undefined") {
	    printWarning = function (message) {
	        console.warn(message);
	    };
	    if (util.isNode && process.stderr.isTTY) {
	        printWarning = function(message, isSoft) {
	            var color = isSoft ? "\u001b[33m" : "\u001b[31m";
	            console.warn(color + message + "\u001b[0m\n");
	        };
	    } else if (!util.isNode && typeof (new Error().stack) === "string") {
	        printWarning = function(message, isSoft) {
	            console.warn("%c" + message,
	                        isSoft ? "color: darkorange" : "color: red");
	        };
	    }
	}
	
	var config = {
	    warnings: warnings,
	    longStackTraces: false,
	    cancellation: false,
	    monitoring: false
	};
	
	if (longStackTraces) Promise.longStackTraces();
	
	return {
	    longStackTraces: function() {
	        return config.longStackTraces;
	    },
	    warnings: function() {
	        return config.warnings;
	    },
	    cancellation: function() {
	        return config.cancellation;
	    },
	    monitoring: function() {
	        return config.monitoring;
	    },
	    propagateFromFunction: function() {
	        return propagateFromFunction;
	    },
	    boundValueFunction: function() {
	        return boundValueFunction;
	    },
	    checkForgottenReturns: checkForgottenReturns,
	    setBounds: setBounds,
	    warn: warn,
	    deprecated: deprecated,
	    CapturedTrace: CapturedTrace,
	    fireDomEvent: fireDomEvent,
	    fireGlobalEvent: fireGlobalEvent
	};
	};
	
	},{"./errors":12,"./util":36}],10:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise) {
	function returner() {
	    return this.value;
	}
	function thrower() {
	    throw this.reason;
	}
	
	Promise.prototype["return"] =
	Promise.prototype.thenReturn = function (value) {
	    if (value instanceof Promise) value.suppressUnhandledRejections();
	    return this._then(
	        returner, undefined, undefined, {value: value}, undefined);
	};
	
	Promise.prototype["throw"] =
	Promise.prototype.thenThrow = function (reason) {
	    return this._then(
	        thrower, undefined, undefined, {reason: reason}, undefined);
	};
	
	Promise.prototype.catchThrow = function (reason) {
	    if (arguments.length <= 1) {
	        return this._then(
	            undefined, thrower, undefined, {reason: reason}, undefined);
	    } else {
	        var _reason = arguments[1];
	        var handler = function() {throw _reason;};
	        return this.caught(reason, handler);
	    }
	};
	
	Promise.prototype.catchReturn = function (value) {
	    if (arguments.length <= 1) {
	        if (value instanceof Promise) value.suppressUnhandledRejections();
	        return this._then(
	            undefined, returner, undefined, {value: value}, undefined);
	    } else {
	        var _value = arguments[1];
	        if (_value instanceof Promise) _value.suppressUnhandledRejections();
	        var handler = function() {return _value;};
	        return this.caught(value, handler);
	    }
	};
	};
	
	},{}],11:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, INTERNAL) {
	var PromiseReduce = Promise.reduce;
	var PromiseAll = Promise.all;
	
	function promiseAllThis() {
	    return PromiseAll(this);
	}
	
	function PromiseMapSeries(promises, fn) {
	    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);
	}
	
	Promise.prototype.each = function (fn) {
	    return this.mapSeries(fn)
	            ._then(promiseAllThis, undefined, undefined, this, undefined);
	};
	
	Promise.prototype.mapSeries = function (fn) {
	    return PromiseReduce(this, fn, INTERNAL, INTERNAL);
	};
	
	Promise.each = function (promises, fn) {
	    return PromiseMapSeries(promises, fn)
	            ._then(promiseAllThis, undefined, undefined, promises, undefined);
	};
	
	Promise.mapSeries = PromiseMapSeries;
	};
	
	},{}],12:[function(_dereq_,module,exports){
	"use strict";
	var es5 = _dereq_("./es5");
	var Objectfreeze = es5.freeze;
	var util = _dereq_("./util");
	var inherits = util.inherits;
	var notEnumerableProp = util.notEnumerableProp;
	
	function subError(nameProperty, defaultMessage) {
	    function SubError(message) {
	        if (!(this instanceof SubError)) return new SubError(message);
	        notEnumerableProp(this, "message",
	            typeof message === "string" ? message : defaultMessage);
	        notEnumerableProp(this, "name", nameProperty);
	        if (Error.captureStackTrace) {
	            Error.captureStackTrace(this, this.constructor);
	        } else {
	            Error.call(this);
	        }
	    }
	    inherits(SubError, Error);
	    return SubError;
	}
	
	var _TypeError, _RangeError;
	var Warning = subError("Warning", "warning");
	var CancellationError = subError("CancellationError", "cancellation error");
	var TimeoutError = subError("TimeoutError", "timeout error");
	var AggregateError = subError("AggregateError", "aggregate error");
	try {
	    _TypeError = TypeError;
	    _RangeError = RangeError;
	} catch(e) {
	    _TypeError = subError("TypeError", "type error");
	    _RangeError = subError("RangeError", "range error");
	}
	
	var methods = ("join pop push shift unshift slice filter forEach some " +
	    "every map indexOf lastIndexOf reduce reduceRight sort reverse").split(" ");
	
	for (var i = 0; i < methods.length; ++i) {
	    if (typeof Array.prototype[methods[i]] === "function") {
	        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];
	    }
	}
	
	es5.defineProperty(AggregateError.prototype, "length", {
	    value: 0,
	    configurable: false,
	    writable: true,
	    enumerable: true
	});
	AggregateError.prototype["isOperational"] = true;
	var level = 0;
	AggregateError.prototype.toString = function() {
	    var indent = Array(level * 4 + 1).join(" ");
	    var ret = "\n" + indent + "AggregateError of:" + "\n";
	    level++;
	    indent = Array(level * 4 + 1).join(" ");
	    for (var i = 0; i < this.length; ++i) {
	        var str = this[i] === this ? "[Circular AggregateError]" : this[i] + "";
	        var lines = str.split("\n");
	        for (var j = 0; j < lines.length; ++j) {
	            lines[j] = indent + lines[j];
	        }
	        str = lines.join("\n");
	        ret += str + "\n";
	    }
	    level--;
	    return ret;
	};
	
	function OperationalError(message) {
	    if (!(this instanceof OperationalError))
	        return new OperationalError(message);
	    notEnumerableProp(this, "name", "OperationalError");
	    notEnumerableProp(this, "message", message);
	    this.cause = message;
	    this["isOperational"] = true;
	
	    if (message instanceof Error) {
	        notEnumerableProp(this, "message", message.message);
	        notEnumerableProp(this, "stack", message.stack);
	    } else if (Error.captureStackTrace) {
	        Error.captureStackTrace(this, this.constructor);
	    }
	
	}
	inherits(OperationalError, Error);
	
	var errorTypes = Error["__BluebirdErrorTypes__"];
	if (!errorTypes) {
	    errorTypes = Objectfreeze({
	        CancellationError: CancellationError,
	        TimeoutError: TimeoutError,
	        OperationalError: OperationalError,
	        RejectionError: OperationalError,
	        AggregateError: AggregateError
	    });
	    es5.defineProperty(Error, "__BluebirdErrorTypes__", {
	        value: errorTypes,
	        writable: false,
	        enumerable: false,
	        configurable: false
	    });
	}
	
	module.exports = {
	    Error: Error,
	    TypeError: _TypeError,
	    RangeError: _RangeError,
	    CancellationError: errorTypes.CancellationError,
	    OperationalError: errorTypes.OperationalError,
	    TimeoutError: errorTypes.TimeoutError,
	    AggregateError: errorTypes.AggregateError,
	    Warning: Warning
	};
	
	},{"./es5":13,"./util":36}],13:[function(_dereq_,module,exports){
	var isES5 = (function(){
	    "use strict";
	    return this === undefined;
	})();
	
	if (isES5) {
	    module.exports = {
	        freeze: Object.freeze,
	        defineProperty: Object.defineProperty,
	        getDescriptor: Object.getOwnPropertyDescriptor,
	        keys: Object.keys,
	        names: Object.getOwnPropertyNames,
	        getPrototypeOf: Object.getPrototypeOf,
	        isArray: Array.isArray,
	        isES5: isES5,
	        propertyIsWritable: function(obj, prop) {
	            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
	            return !!(!descriptor || descriptor.writable || descriptor.set);
	        }
	    };
	} else {
	    var has = {}.hasOwnProperty;
	    var str = {}.toString;
	    var proto = {}.constructor.prototype;
	
	    var ObjectKeys = function (o) {
	        var ret = [];
	        for (var key in o) {
	            if (has.call(o, key)) {
	                ret.push(key);
	            }
	        }
	        return ret;
	    };
	
	    var ObjectGetDescriptor = function(o, key) {
	        return {value: o[key]};
	    };
	
	    var ObjectDefineProperty = function (o, key, desc) {
	        o[key] = desc.value;
	        return o;
	    };
	
	    var ObjectFreeze = function (obj) {
	        return obj;
	    };
	
	    var ObjectGetPrototypeOf = function (obj) {
	        try {
	            return Object(obj).constructor.prototype;
	        }
	        catch (e) {
	            return proto;
	        }
	    };
	
	    var ArrayIsArray = function (obj) {
	        try {
	            return str.call(obj) === "[object Array]";
	        }
	        catch(e) {
	            return false;
	        }
	    };
	
	    module.exports = {
	        isArray: ArrayIsArray,
	        keys: ObjectKeys,
	        names: ObjectKeys,
	        defineProperty: ObjectDefineProperty,
	        getDescriptor: ObjectGetDescriptor,
	        freeze: ObjectFreeze,
	        getPrototypeOf: ObjectGetPrototypeOf,
	        isES5: isES5,
	        propertyIsWritable: function() {
	            return true;
	        }
	    };
	}
	
	},{}],14:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, INTERNAL) {
	var PromiseMap = Promise.map;
	
	Promise.prototype.filter = function (fn, options) {
	    return PromiseMap(this, fn, options, INTERNAL);
	};
	
	Promise.filter = function (promises, fn, options) {
	    return PromiseMap(promises, fn, options, INTERNAL);
	};
	};
	
	},{}],15:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, tryConvertToPromise) {
	var util = _dereq_("./util");
	var CancellationError = Promise.CancellationError;
	var errorObj = util.errorObj;
	
	function PassThroughHandlerContext(promise, type, handler) {
	    this.promise = promise;
	    this.type = type;
	    this.handler = handler;
	    this.called = false;
	    this.cancelPromise = null;
	}
	
	PassThroughHandlerContext.prototype.isFinallyHandler = function() {
	    return this.type === 0;
	};
	
	function FinallyHandlerCancelReaction(finallyHandler) {
	    this.finallyHandler = finallyHandler;
	}
	
	FinallyHandlerCancelReaction.prototype._resultCancelled = function() {
	    checkCancel(this.finallyHandler);
	};
	
	function checkCancel(ctx, reason) {
	    if (ctx.cancelPromise != null) {
	        if (arguments.length > 1) {
	            ctx.cancelPromise._reject(reason);
	        } else {
	            ctx.cancelPromise._cancel();
	        }
	        ctx.cancelPromise = null;
	        return true;
	    }
	    return false;
	}
	
	function succeed() {
	    return finallyHandler.call(this, this.promise._target()._settledValue());
	}
	function fail(reason) {
	    if (checkCancel(this, reason)) return;
	    errorObj.e = reason;
	    return errorObj;
	}
	function finallyHandler(reasonOrValue) {
	    var promise = this.promise;
	    var handler = this.handler;
	
	    if (!this.called) {
	        this.called = true;
	        var ret = this.isFinallyHandler()
	            ? handler.call(promise._boundValue())
	            : handler.call(promise._boundValue(), reasonOrValue);
	        if (ret !== undefined) {
	            promise._setReturnedNonUndefined();
	            var maybePromise = tryConvertToPromise(ret, promise);
	            if (maybePromise instanceof Promise) {
	                if (this.cancelPromise != null) {
	                    if (maybePromise.isCancelled()) {
	                        var reason =
	                            new CancellationError("late cancellation observer");
	                        promise._attachExtraTrace(reason);
	                        errorObj.e = reason;
	                        return errorObj;
	                    } else if (maybePromise.isPending()) {
	                        maybePromise._attachCancellationCallback(
	                            new FinallyHandlerCancelReaction(this));
	                    }
	                }
	                return maybePromise._then(
	                    succeed, fail, undefined, this, undefined);
	            }
	        }
	    }
	
	    if (promise.isRejected()) {
	        checkCancel(this);
	        errorObj.e = reasonOrValue;
	        return errorObj;
	    } else {
	        checkCancel(this);
	        return reasonOrValue;
	    }
	}
	
	Promise.prototype._passThrough = function(handler, type, success, fail) {
	    if (typeof handler !== "function") return this.then();
	    return this._then(success,
	                      fail,
	                      undefined,
	                      new PassThroughHandlerContext(this, type, handler),
	                      undefined);
	};
	
	Promise.prototype.lastly =
	Promise.prototype["finally"] = function (handler) {
	    return this._passThrough(handler,
	                             0,
	                             finallyHandler,
	                             finallyHandler);
	};
	
	Promise.prototype.tap = function (handler) {
	    return this._passThrough(handler, 1, finallyHandler);
	};
	
	return PassThroughHandlerContext;
	};
	
	},{"./util":36}],16:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise,
	                          apiRejection,
	                          INTERNAL,
	                          tryConvertToPromise,
	                          Proxyable,
	                          debug) {
	var errors = _dereq_("./errors");
	var TypeError = errors.TypeError;
	var util = _dereq_("./util");
	var errorObj = util.errorObj;
	var tryCatch = util.tryCatch;
	var yieldHandlers = [];
	
	function promiseFromYieldHandler(value, yieldHandlers, traceParent) {
	    for (var i = 0; i < yieldHandlers.length; ++i) {
	        traceParent._pushContext();
	        var result = tryCatch(yieldHandlers[i])(value);
	        traceParent._popContext();
	        if (result === errorObj) {
	            traceParent._pushContext();
	            var ret = Promise.reject(errorObj.e);
	            traceParent._popContext();
	            return ret;
	        }
	        var maybePromise = tryConvertToPromise(result, traceParent);
	        if (maybePromise instanceof Promise) return maybePromise;
	    }
	    return null;
	}
	
	function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
	    if (debug.cancellation()) {
	        var internal = new Promise(INTERNAL);
	        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);
	        this._promise = internal.lastly(function() {
	            return _finallyPromise;
	        });
	        internal._captureStackTrace();
	        internal._setOnCancel(this);
	    } else {
	        var promise = this._promise = new Promise(INTERNAL);
	        promise._captureStackTrace();
	    }
	    this._stack = stack;
	    this._generatorFunction = generatorFunction;
	    this._receiver = receiver;
	    this._generator = undefined;
	    this._yieldHandlers = typeof yieldHandler === "function"
	        ? [yieldHandler].concat(yieldHandlers)
	        : yieldHandlers;
	    this._yieldedPromise = null;
	    this._cancellationPhase = false;
	}
	util.inherits(PromiseSpawn, Proxyable);
	
	PromiseSpawn.prototype._isResolved = function() {
	    return this._promise === null;
	};
	
	PromiseSpawn.prototype._cleanup = function() {
	    this._promise = this._generator = null;
	    if (debug.cancellation() && this._finallyPromise !== null) {
	        this._finallyPromise._fulfill();
	        this._finallyPromise = null;
	    }
	};
	
	PromiseSpawn.prototype._promiseCancelled = function() {
	    if (this._isResolved()) return;
	    var implementsReturn = typeof this._generator["return"] !== "undefined";
	
	    var result;
	    if (!implementsReturn) {
	        var reason = new Promise.CancellationError(
	            "generator .return() sentinel");
	        Promise.coroutine.returnSentinel = reason;
	        this._promise._attachExtraTrace(reason);
	        this._promise._pushContext();
	        result = tryCatch(this._generator["throw"]).call(this._generator,
	                                                         reason);
	        this._promise._popContext();
	    } else {
	        this._promise._pushContext();
	        result = tryCatch(this._generator["return"]).call(this._generator,
	                                                          undefined);
	        this._promise._popContext();
	    }
	    this._cancellationPhase = true;
	    this._yieldedPromise = null;
	    this._continue(result);
	};
	
	PromiseSpawn.prototype._promiseFulfilled = function(value) {
	    this._yieldedPromise = null;
	    this._promise._pushContext();
	    var result = tryCatch(this._generator.next).call(this._generator, value);
	    this._promise._popContext();
	    this._continue(result);
	};
	
	PromiseSpawn.prototype._promiseRejected = function(reason) {
	    this._yieldedPromise = null;
	    this._promise._attachExtraTrace(reason);
	    this._promise._pushContext();
	    var result = tryCatch(this._generator["throw"])
	        .call(this._generator, reason);
	    this._promise._popContext();
	    this._continue(result);
	};
	
	PromiseSpawn.prototype._resultCancelled = function() {
	    if (this._yieldedPromise instanceof Promise) {
	        var promise = this._yieldedPromise;
	        this._yieldedPromise = null;
	        promise.cancel();
	    }
	};
	
	PromiseSpawn.prototype.promise = function () {
	    return this._promise;
	};
	
	PromiseSpawn.prototype._run = function () {
	    this._generator = this._generatorFunction.call(this._receiver);
	    this._receiver =
	        this._generatorFunction = undefined;
	    this._promiseFulfilled(undefined);
	};
	
	PromiseSpawn.prototype._continue = function (result) {
	    var promise = this._promise;
	    if (result === errorObj) {
	        this._cleanup();
	        if (this._cancellationPhase) {
	            return promise.cancel();
	        } else {
	            return promise._rejectCallback(result.e, false);
	        }
	    }
	
	    var value = result.value;
	    if (result.done === true) {
	        this._cleanup();
	        if (this._cancellationPhase) {
	            return promise.cancel();
	        } else {
	            return promise._resolveCallback(value);
	        }
	    } else {
	        var maybePromise = tryConvertToPromise(value, this._promise);
	        if (!(maybePromise instanceof Promise)) {
	            maybePromise =
	                promiseFromYieldHandler(maybePromise,
	                                        this._yieldHandlers,
	                                        this._promise);
	            if (maybePromise === null) {
	                this._promiseRejected(
	                    new TypeError(
	                        "A value %s was yielded that could not be treated as a promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a\u000a".replace("%s", value) +
	                        "From coroutine:\u000a" +
	                        this._stack.split("\n").slice(1, -7).join("\n")
	                    )
	                );
	                return;
	            }
	        }
	        maybePromise = maybePromise._target();
	        var bitField = maybePromise._bitField;
	        ;
	        if (((bitField & 50397184) === 0)) {
	            this._yieldedPromise = maybePromise;
	            maybePromise._proxy(this, null);
	        } else if (((bitField & 33554432) !== 0)) {
	            this._promiseFulfilled(maybePromise._value());
	        } else if (((bitField & 16777216) !== 0)) {
	            this._promiseRejected(maybePromise._reason());
	        } else {
	            this._promiseCancelled();
	        }
	    }
	};
	
	Promise.coroutine = function (generatorFunction, options) {
	    if (typeof generatorFunction !== "function") {
	        throw new TypeError("generatorFunction must be a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	    var yieldHandler = Object(options).yieldHandler;
	    var PromiseSpawn$ = PromiseSpawn;
	    var stack = new Error().stack;
	    return function () {
	        var generator = generatorFunction.apply(this, arguments);
	        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,
	                                      stack);
	        var ret = spawn.promise();
	        spawn._generator = generator;
	        spawn._promiseFulfilled(undefined);
	        return ret;
	    };
	};
	
	Promise.coroutine.addYieldHandler = function(fn) {
	    if (typeof fn !== "function") {
	        throw new TypeError("expecting a function but got " + util.classString(fn));
	    }
	    yieldHandlers.push(fn);
	};
	
	Promise.spawn = function (generatorFunction) {
	    debug.deprecated("Promise.spawn()", "Promise.coroutine()");
	    if (typeof generatorFunction !== "function") {
	        return apiRejection("generatorFunction must be a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	    var spawn = new PromiseSpawn(generatorFunction, this);
	    var ret = spawn.promise();
	    spawn._run(Promise.spawn);
	    return ret;
	};
	};
	
	},{"./errors":12,"./util":36}],17:[function(_dereq_,module,exports){
	"use strict";
	module.exports =
	function(Promise, PromiseArray, tryConvertToPromise, INTERNAL) {
	var util = _dereq_("./util");
	var canEvaluate = util.canEvaluate;
	var tryCatch = util.tryCatch;
	var errorObj = util.errorObj;
	var reject;
	
	if (false) {
	if (canEvaluate) {
	    var thenCallback = function(i) {
	        return new Function("value", "holder", "                             \n\
	            'use strict';                                                    \n\
	            holder.pIndex = value;                                           \n\
	            holder.checkFulfillment(this);                                   \n\
	            ".replace(/Index/g, i));
	    };
	
	    var promiseSetter = function(i) {
	        return new Function("promise", "holder", "                           \n\
	            'use strict';                                                    \n\
	            holder.pIndex = promise;                                         \n\
	            ".replace(/Index/g, i));
	    };
	
	    var generateHolderClass = function(total) {
	        var props = new Array(total);
	        for (var i = 0; i < props.length; ++i) {
	            props[i] = "this.p" + (i+1);
	        }
	        var assignment = props.join(" = ") + " = null;";
	        var cancellationCode= "var promise;\n" + props.map(function(prop) {
	            return "                                                         \n\
	                promise = " + prop + ";                                      \n\
	                if (promise instanceof Promise) {                            \n\
	                    promise.cancel();                                        \n\
	                }                                                            \n\
	            ";
	        }).join("\n");
	        var passedArguments = props.join(", ");
	        var name = "Holder$" + total;
	
	
	        var code = "return function(tryCatch, errorObj, Promise) {           \n\
	            'use strict';                                                    \n\
	            function [TheName](fn) {                                         \n\
	                [TheProperties]                                              \n\
	                this.fn = fn;                                                \n\
	                this.now = 0;                                                \n\
	            }                                                                \n\
	            [TheName].prototype.checkFulfillment = function(promise) {       \n\
	                var now = ++this.now;                                        \n\
	                if (now === [TheTotal]) {                                    \n\
	                    promise._pushContext();                                  \n\
	                    var callback = this.fn;                                  \n\
	                    var ret = tryCatch(callback)([ThePassedArguments]);      \n\
	                    promise._popContext();                                   \n\
	                    if (ret === errorObj) {                                  \n\
	                        promise._rejectCallback(ret.e, false);               \n\
	                    } else {                                                 \n\
	                        promise._resolveCallback(ret);                       \n\
	                    }                                                        \n\
	                }                                                            \n\
	            };                                                               \n\
	                                                                             \n\
	            [TheName].prototype._resultCancelled = function() {              \n\
	                [CancellationCode]                                           \n\
	            };                                                               \n\
	                                                                             \n\
	            return [TheName];                                                \n\
	        }(tryCatch, errorObj, Promise);                                      \n\
	        ";
	
	        code = code.replace(/\[TheName\]/g, name)
	            .replace(/\[TheTotal\]/g, total)
	            .replace(/\[ThePassedArguments\]/g, passedArguments)
	            .replace(/\[TheProperties\]/g, assignment)
	            .replace(/\[CancellationCode\]/g, cancellationCode);
	
	        return new Function("tryCatch", "errorObj", "Promise", code)
	                           (tryCatch, errorObj, Promise);
	    };
	
	    var holderClasses = [];
	    var thenCallbacks = [];
	    var promiseSetters = [];
	
	    for (var i = 0; i < 8; ++i) {
	        holderClasses.push(generateHolderClass(i + 1));
	        thenCallbacks.push(thenCallback(i + 1));
	        promiseSetters.push(promiseSetter(i + 1));
	    }
	
	    reject = function (reason) {
	        this._reject(reason);
	    };
	}}
	
	Promise.join = function () {
	    var last = arguments.length - 1;
	    var fn;
	    if (last > 0 && typeof arguments[last] === "function") {
	        fn = arguments[last];
	        if (false) {
	            if (last <= 8 && canEvaluate) {
	                var ret = new Promise(INTERNAL);
	                ret._captureStackTrace();
	                var HolderClass = holderClasses[last - 1];
	                var holder = new HolderClass(fn);
	                var callbacks = thenCallbacks;
	
	                for (var i = 0; i < last; ++i) {
	                    var maybePromise = tryConvertToPromise(arguments[i], ret);
	                    if (maybePromise instanceof Promise) {
	                        maybePromise = maybePromise._target();
	                        var bitField = maybePromise._bitField;
	                        ;
	                        if (((bitField & 50397184) === 0)) {
	                            maybePromise._then(callbacks[i], reject,
	                                               undefined, ret, holder);
	                            promiseSetters[i](maybePromise, holder);
	                        } else if (((bitField & 33554432) !== 0)) {
	                            callbacks[i].call(ret,
	                                              maybePromise._value(), holder);
	                        } else if (((bitField & 16777216) !== 0)) {
	                            ret._reject(maybePromise._reason());
	                        } else {
	                            ret._cancel();
	                        }
	                    } else {
	                        callbacks[i].call(ret, maybePromise, holder);
	                    }
	                }
	                if (!ret._isFateSealed()) {
	                    ret._setAsyncGuaranteed();
	                    ret._setOnCancel(holder);
	                }
	                return ret;
	            }
	        }
	    }
	    var args = [].slice.call(arguments);;
	    if (fn) args.pop();
	    var ret = new PromiseArray(args).promise();
	    return fn !== undefined ? ret.spread(fn) : ret;
	};
	
	};
	
	},{"./util":36}],18:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise,
	                          PromiseArray,
	                          apiRejection,
	                          tryConvertToPromise,
	                          INTERNAL,
	                          debug) {
	var getDomain = Promise._getDomain;
	var util = _dereq_("./util");
	var tryCatch = util.tryCatch;
	var errorObj = util.errorObj;
	var EMPTY_ARRAY = [];
	
	function MappingPromiseArray(promises, fn, limit, _filter) {
	    this.constructor$(promises);
	    this._promise._captureStackTrace();
	    var domain = getDomain();
	    this._callback = domain === null ? fn : domain.bind(fn);
	    this._preservedValues = _filter === INTERNAL
	        ? new Array(this.length())
	        : null;
	    this._limit = limit;
	    this._inFlight = 0;
	    this._queue = limit >= 1 ? [] : EMPTY_ARRAY;
	    this._init$(undefined, -2);
	}
	util.inherits(MappingPromiseArray, PromiseArray);
	
	MappingPromiseArray.prototype._init = function () {};
	
	MappingPromiseArray.prototype._promiseFulfilled = function (value, index) {
	    var values = this._values;
	    var length = this.length();
	    var preservedValues = this._preservedValues;
	    var limit = this._limit;
	
	    if (index < 0) {
	        index = (index * -1) - 1;
	        values[index] = value;
	        if (limit >= 1) {
	            this._inFlight--;
	            this._drainQueue();
	            if (this._isResolved()) return true;
	        }
	    } else {
	        if (limit >= 1 && this._inFlight >= limit) {
	            values[index] = value;
	            this._queue.push(index);
	            return false;
	        }
	        if (preservedValues !== null) preservedValues[index] = value;
	
	        var promise = this._promise;
	        var callback = this._callback;
	        var receiver = promise._boundValue();
	        promise._pushContext();
	        var ret = tryCatch(callback).call(receiver, value, index, length);
	        var promiseCreated = promise._popContext();
	        debug.checkForgottenReturns(
	            ret,
	            promiseCreated,
	            preservedValues !== null ? "Promise.filter" : "Promise.map",
	            promise
	        );
	        if (ret === errorObj) {
	            this._reject(ret.e);
	            return true;
	        }
	
	        var maybePromise = tryConvertToPromise(ret, this._promise);
	        if (maybePromise instanceof Promise) {
	            maybePromise = maybePromise._target();
	            var bitField = maybePromise._bitField;
	            ;
	            if (((bitField & 50397184) === 0)) {
	                if (limit >= 1) this._inFlight++;
	                values[index] = maybePromise;
	                maybePromise._proxy(this, (index + 1) * -1);
	                return false;
	            } else if (((bitField & 33554432) !== 0)) {
	                ret = maybePromise._value();
	            } else if (((bitField & 16777216) !== 0)) {
	                this._reject(maybePromise._reason());
	                return true;
	            } else {
	                this._cancel();
	                return true;
	            }
	        }
	        values[index] = ret;
	    }
	    var totalResolved = ++this._totalResolved;
	    if (totalResolved >= length) {
	        if (preservedValues !== null) {
	            this._filter(values, preservedValues);
	        } else {
	            this._resolve(values);
	        }
	        return true;
	    }
	    return false;
	};
	
	MappingPromiseArray.prototype._drainQueue = function () {
	    var queue = this._queue;
	    var limit = this._limit;
	    var values = this._values;
	    while (queue.length > 0 && this._inFlight < limit) {
	        if (this._isResolved()) return;
	        var index = queue.pop();
	        this._promiseFulfilled(values[index], index);
	    }
	};
	
	MappingPromiseArray.prototype._filter = function (booleans, values) {
	    var len = values.length;
	    var ret = new Array(len);
	    var j = 0;
	    for (var i = 0; i < len; ++i) {
	        if (booleans[i]) ret[j++] = values[i];
	    }
	    ret.length = j;
	    this._resolve(ret);
	};
	
	MappingPromiseArray.prototype.preservedValues = function () {
	    return this._preservedValues;
	};
	
	function map(promises, fn, options, _filter) {
	    if (typeof fn !== "function") {
	        return apiRejection("expecting a function but got " + util.classString(fn));
	    }
	
	    var limit = 0;
	    if (options !== undefined) {
	        if (typeof options === "object" && options !== null) {
	            if (typeof options.concurrency !== "number") {
	                return Promise.reject(
	                    new TypeError("'concurrency' must be a number but it is " +
	                                    util.classString(options.concurrency)));
	            }
	            limit = options.concurrency;
	        } else {
	            return Promise.reject(new TypeError(
	                            "options argument must be an object but it is " +
	                             util.classString(options)));
	        }
	    }
	    limit = typeof limit === "number" &&
	        isFinite(limit) && limit >= 1 ? limit : 0;
	    return new MappingPromiseArray(promises, fn, limit, _filter).promise();
	}
	
	Promise.prototype.map = function (fn, options) {
	    return map(this, fn, options, null);
	};
	
	Promise.map = function (promises, fn, options, _filter) {
	    return map(promises, fn, options, _filter);
	};
	
	
	};
	
	},{"./util":36}],19:[function(_dereq_,module,exports){
	"use strict";
	module.exports =
	function(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {
	var util = _dereq_("./util");
	var tryCatch = util.tryCatch;
	
	Promise.method = function (fn) {
	    if (typeof fn !== "function") {
	        throw new Promise.TypeError("expecting a function but got " + util.classString(fn));
	    }
	    return function () {
	        var ret = new Promise(INTERNAL);
	        ret._captureStackTrace();
	        ret._pushContext();
	        var value = tryCatch(fn).apply(this, arguments);
	        var promiseCreated = ret._popContext();
	        debug.checkForgottenReturns(
	            value, promiseCreated, "Promise.method", ret);
	        ret._resolveFromSyncValue(value);
	        return ret;
	    };
	};
	
	Promise.attempt = Promise["try"] = function (fn) {
	    if (typeof fn !== "function") {
	        return apiRejection("expecting a function but got " + util.classString(fn));
	    }
	    var ret = new Promise(INTERNAL);
	    ret._captureStackTrace();
	    ret._pushContext();
	    var value;
	    if (arguments.length > 1) {
	        debug.deprecated("calling Promise.try with more than 1 argument");
	        var arg = arguments[1];
	        var ctx = arguments[2];
	        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)
	                                  : tryCatch(fn).call(ctx, arg);
	    } else {
	        value = tryCatch(fn)();
	    }
	    var promiseCreated = ret._popContext();
	    debug.checkForgottenReturns(
	        value, promiseCreated, "Promise.try", ret);
	    ret._resolveFromSyncValue(value);
	    return ret;
	};
	
	Promise.prototype._resolveFromSyncValue = function (value) {
	    if (value === util.errorObj) {
	        this._rejectCallback(value.e, false);
	    } else {
	        this._resolveCallback(value, true);
	    }
	};
	};
	
	},{"./util":36}],20:[function(_dereq_,module,exports){
	"use strict";
	var util = _dereq_("./util");
	var maybeWrapAsError = util.maybeWrapAsError;
	var errors = _dereq_("./errors");
	var OperationalError = errors.OperationalError;
	var es5 = _dereq_("./es5");
	
	function isUntypedError(obj) {
	    return obj instanceof Error &&
	        es5.getPrototypeOf(obj) === Error.prototype;
	}
	
	var rErrorKey = /^(?:name|message|stack|cause)$/;
	function wrapAsOperationalError(obj) {
	    var ret;
	    if (isUntypedError(obj)) {
	        ret = new OperationalError(obj);
	        ret.name = obj.name;
	        ret.message = obj.message;
	        ret.stack = obj.stack;
	        var keys = es5.keys(obj);
	        for (var i = 0; i < keys.length; ++i) {
	            var key = keys[i];
	            if (!rErrorKey.test(key)) {
	                ret[key] = obj[key];
	            }
	        }
	        return ret;
	    }
	    util.markAsOriginatingFromRejection(obj);
	    return obj;
	}
	
	function nodebackForPromise(promise, multiArgs) {
	    return function(err, value) {
	        if (promise === null) return;
	        if (err) {
	            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
	            promise._attachExtraTrace(wrapped);
	            promise._reject(wrapped);
	        } else if (!multiArgs) {
	            promise._fulfill(value);
	        } else {
	            var args = [].slice.call(arguments, 1);;
	            promise._fulfill(args);
	        }
	        promise = null;
	    };
	}
	
	module.exports = nodebackForPromise;
	
	},{"./errors":12,"./es5":13,"./util":36}],21:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise) {
	var util = _dereq_("./util");
	var async = Promise._async;
	var tryCatch = util.tryCatch;
	var errorObj = util.errorObj;
	
	function spreadAdapter(val, nodeback) {
	    var promise = this;
	    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);
	    var ret =
	        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));
	    if (ret === errorObj) {
	        async.throwLater(ret.e);
	    }
	}
	
	function successAdapter(val, nodeback) {
	    var promise = this;
	    var receiver = promise._boundValue();
	    var ret = val === undefined
	        ? tryCatch(nodeback).call(receiver, null)
	        : tryCatch(nodeback).call(receiver, null, val);
	    if (ret === errorObj) {
	        async.throwLater(ret.e);
	    }
	}
	function errorAdapter(reason, nodeback) {
	    var promise = this;
	    if (!reason) {
	        var newReason = new Error(reason + "");
	        newReason.cause = reason;
	        reason = newReason;
	    }
	    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);
	    if (ret === errorObj) {
	        async.throwLater(ret.e);
	    }
	}
	
	Promise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,
	                                                                     options) {
	    if (typeof nodeback == "function") {
	        var adapter = successAdapter;
	        if (options !== undefined && Object(options).spread) {
	            adapter = spreadAdapter;
	        }
	        this._then(
	            adapter,
	            errorAdapter,
	            undefined,
	            this,
	            nodeback
	        );
	    }
	    return this;
	};
	};
	
	},{"./util":36}],22:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function() {
	var makeSelfResolutionError = function () {
	    return new TypeError("circular promise resolution chain\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	};
	var reflectHandler = function() {
	    return new Promise.PromiseInspection(this._target());
	};
	var apiRejection = function(msg) {
	    return Promise.reject(new TypeError(msg));
	};
	function Proxyable() {}
	var UNDEFINED_BINDING = {};
	var util = _dereq_("./util");
	
	var getDomain;
	if (util.isNode) {
	    getDomain = function() {
	        var ret = process.domain;
	        if (ret === undefined) ret = null;
	        return ret;
	    };
	} else {
	    getDomain = function() {
	        return null;
	    };
	}
	util.notEnumerableProp(Promise, "_getDomain", getDomain);
	
	var es5 = _dereq_("./es5");
	var Async = _dereq_("./async");
	var async = new Async();
	es5.defineProperty(Promise, "_async", {value: async});
	var errors = _dereq_("./errors");
	var TypeError = Promise.TypeError = errors.TypeError;
	Promise.RangeError = errors.RangeError;
	var CancellationError = Promise.CancellationError = errors.CancellationError;
	Promise.TimeoutError = errors.TimeoutError;
	Promise.OperationalError = errors.OperationalError;
	Promise.RejectionError = errors.OperationalError;
	Promise.AggregateError = errors.AggregateError;
	var INTERNAL = function(){};
	var APPLY = {};
	var NEXT_FILTER = {};
	var tryConvertToPromise = _dereq_("./thenables")(Promise, INTERNAL);
	var PromiseArray =
	    _dereq_("./promise_array")(Promise, INTERNAL,
	                               tryConvertToPromise, apiRejection, Proxyable);
	var Context = _dereq_("./context")(Promise);
	 /*jshint unused:false*/
	var createContext = Context.create;
	var debug = _dereq_("./debuggability")(Promise, Context);
	var CapturedTrace = debug.CapturedTrace;
	var PassThroughHandlerContext =
	    _dereq_("./finally")(Promise, tryConvertToPromise);
	var catchFilter = _dereq_("./catch_filter")(NEXT_FILTER);
	var nodebackForPromise = _dereq_("./nodeback");
	var errorObj = util.errorObj;
	var tryCatch = util.tryCatch;
	function check(self, executor) {
	    if (typeof executor !== "function") {
	        throw new TypeError("expecting a function but got " + util.classString(executor));
	    }
	    if (self.constructor !== Promise) {
	        throw new TypeError("the promise constructor cannot be invoked directly\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	}
	
	function Promise(executor) {
	    this._bitField = 0;
	    this._fulfillmentHandler0 = undefined;
	    this._rejectionHandler0 = undefined;
	    this._promise0 = undefined;
	    this._receiver0 = undefined;
	    if (executor !== INTERNAL) {
	        check(this, executor);
	        this._resolveFromExecutor(executor);
	    }
	    this._promiseCreated();
	    this._fireEvent("promiseCreated", this);
	}
	
	Promise.prototype.toString = function () {
	    return "[object Promise]";
	};
	
	Promise.prototype.caught = Promise.prototype["catch"] = function (fn) {
	    var len = arguments.length;
	    if (len > 1) {
	        var catchInstances = new Array(len - 1),
	            j = 0, i;
	        for (i = 0; i < len - 1; ++i) {
	            var item = arguments[i];
	            if (util.isObject(item)) {
	                catchInstances[j++] = item;
	            } else {
	                return apiRejection("expecting an object but got " + util.classString(item));
	            }
	        }
	        catchInstances.length = j;
	        fn = arguments[i];
	        return this.then(undefined, catchFilter(catchInstances, fn, this));
	    }
	    return this.then(undefined, fn);
	};
	
	Promise.prototype.reflect = function () {
	    return this._then(reflectHandler,
	        reflectHandler, undefined, this, undefined);
	};
	
	Promise.prototype.then = function (didFulfill, didReject) {
	    if (debug.warnings() && arguments.length > 0 &&
	        typeof didFulfill !== "function" &&
	        typeof didReject !== "function") {
	        var msg = ".then() only accepts functions but was passed: " +
	                util.classString(didFulfill);
	        if (arguments.length > 1) {
	            msg += ", " + util.classString(didReject);
	        }
	        this._warn(msg);
	    }
	    return this._then(didFulfill, didReject, undefined, undefined, undefined);
	};
	
	Promise.prototype.done = function (didFulfill, didReject) {
	    var promise =
	        this._then(didFulfill, didReject, undefined, undefined, undefined);
	    promise._setIsFinal();
	};
	
	Promise.prototype.spread = function (fn) {
	    if (typeof fn !== "function") {
	        return apiRejection("expecting a function but got " + util.classString(fn));
	    }
	    return this.all()._then(fn, undefined, undefined, APPLY, undefined);
	};
	
	Promise.prototype.toJSON = function () {
	    var ret = {
	        isFulfilled: false,
	        isRejected: false,
	        fulfillmentValue: undefined,
	        rejectionReason: undefined
	    };
	    if (this.isFulfilled()) {
	        ret.fulfillmentValue = this.value();
	        ret.isFulfilled = true;
	    } else if (this.isRejected()) {
	        ret.rejectionReason = this.reason();
	        ret.isRejected = true;
	    }
	    return ret;
	};
	
	Promise.prototype.all = function () {
	    if (arguments.length > 0) {
	        this._warn(".all() was passed arguments but it does not take any");
	    }
	    return new PromiseArray(this).promise();
	};
	
	Promise.prototype.error = function (fn) {
	    return this.caught(util.originatesFromRejection, fn);
	};
	
	Promise.getNewLibraryCopy = module.exports;
	
	Promise.is = function (val) {
	    return val instanceof Promise;
	};
	
	Promise.fromNode = Promise.fromCallback = function(fn) {
	    var ret = new Promise(INTERNAL);
	    ret._captureStackTrace();
	    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs
	                                         : false;
	    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));
	    if (result === errorObj) {
	        ret._rejectCallback(result.e, true);
	    }
	    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();
	    return ret;
	};
	
	Promise.all = function (promises) {
	    return new PromiseArray(promises).promise();
	};
	
	Promise.cast = function (obj) {
	    var ret = tryConvertToPromise(obj);
	    if (!(ret instanceof Promise)) {
	        ret = new Promise(INTERNAL);
	        ret._captureStackTrace();
	        ret._setFulfilled();
	        ret._rejectionHandler0 = obj;
	    }
	    return ret;
	};
	
	Promise.resolve = Promise.fulfilled = Promise.cast;
	
	Promise.reject = Promise.rejected = function (reason) {
	    var ret = new Promise(INTERNAL);
	    ret._captureStackTrace();
	    ret._rejectCallback(reason, true);
	    return ret;
	};
	
	Promise.setScheduler = function(fn) {
	    if (typeof fn !== "function") {
	        throw new TypeError("expecting a function but got " + util.classString(fn));
	    }
	    return async.setScheduler(fn);
	};
	
	Promise.prototype._then = function (
	    didFulfill,
	    didReject,
	    _,    receiver,
	    internalData
	) {
	    var haveInternalData = internalData !== undefined;
	    var promise = haveInternalData ? internalData : new Promise(INTERNAL);
	    var target = this._target();
	    var bitField = target._bitField;
	
	    if (!haveInternalData) {
	        promise._propagateFrom(this, 3);
	        promise._captureStackTrace();
	        if (receiver === undefined &&
	            ((this._bitField & 2097152) !== 0)) {
	            if (!((bitField & 50397184) === 0)) {
	                receiver = this._boundValue();
	            } else {
	                receiver = target === this ? undefined : this._boundTo;
	            }
	        }
	        this._fireEvent("promiseChained", this, promise);
	    }
	
	    var domain = getDomain();
	    if (!((bitField & 50397184) === 0)) {
	        var handler, value, settler = target._settlePromiseCtx;
	        if (((bitField & 33554432) !== 0)) {
	            value = target._rejectionHandler0;
	            handler = didFulfill;
	        } else if (((bitField & 16777216) !== 0)) {
	            value = target._fulfillmentHandler0;
	            handler = didReject;
	            target._unsetRejectionIsUnhandled();
	        } else {
	            settler = target._settlePromiseLateCancellationObserver;
	            value = new CancellationError("late cancellation observer");
	            target._attachExtraTrace(value);
	            handler = didReject;
	        }
	
	        async.invoke(settler, target, {
	            handler: domain === null ? handler
	                : (typeof handler === "function" && domain.bind(handler)),
	            promise: promise,
	            receiver: receiver,
	            value: value
	        });
	    } else {
	        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
	    }
	
	    return promise;
	};
	
	Promise.prototype._length = function () {
	    return this._bitField & 65535;
	};
	
	Promise.prototype._isFateSealed = function () {
	    return (this._bitField & 117506048) !== 0;
	};
	
	Promise.prototype._isFollowing = function () {
	    return (this._bitField & 67108864) === 67108864;
	};
	
	Promise.prototype._setLength = function (len) {
	    this._bitField = (this._bitField & -65536) |
	        (len & 65535);
	};
	
	Promise.prototype._setFulfilled = function () {
	    this._bitField = this._bitField | 33554432;
	    this._fireEvent("promiseFulfilled", this);
	};
	
	Promise.prototype._setRejected = function () {
	    this._bitField = this._bitField | 16777216;
	    this._fireEvent("promiseRejected", this);
	};
	
	Promise.prototype._setFollowing = function () {
	    this._bitField = this._bitField | 67108864;
	    this._fireEvent("promiseResolved", this);
	};
	
	Promise.prototype._setIsFinal = function () {
	    this._bitField = this._bitField | 4194304;
	};
	
	Promise.prototype._isFinal = function () {
	    return (this._bitField & 4194304) > 0;
	};
	
	Promise.prototype._unsetCancelled = function() {
	    this._bitField = this._bitField & (~65536);
	};
	
	Promise.prototype._setCancelled = function() {
	    this._bitField = this._bitField | 65536;
	    this._fireEvent("promiseCancelled", this);
	};
	
	Promise.prototype._setAsyncGuaranteed = function() {
	    if (async.hasCustomScheduler()) return;
	    this._bitField = this._bitField | 134217728;
	};
	
	Promise.prototype._receiverAt = function (index) {
	    var ret = index === 0 ? this._receiver0 : this[
	            index * 4 - 4 + 3];
	    if (ret === UNDEFINED_BINDING) {
	        return undefined;
	    } else if (ret === undefined && this._isBound()) {
	        return this._boundValue();
	    }
	    return ret;
	};
	
	Promise.prototype._promiseAt = function (index) {
	    return this[
	            index * 4 - 4 + 2];
	};
	
	Promise.prototype._fulfillmentHandlerAt = function (index) {
	    return this[
	            index * 4 - 4 + 0];
	};
	
	Promise.prototype._rejectionHandlerAt = function (index) {
	    return this[
	            index * 4 - 4 + 1];
	};
	
	Promise.prototype._boundValue = function() {};
	
	Promise.prototype._migrateCallback0 = function (follower) {
	    var bitField = follower._bitField;
	    var fulfill = follower._fulfillmentHandler0;
	    var reject = follower._rejectionHandler0;
	    var promise = follower._promise0;
	    var receiver = follower._receiverAt(0);
	    if (receiver === undefined) receiver = UNDEFINED_BINDING;
	    this._addCallbacks(fulfill, reject, promise, receiver, null);
	};
	
	Promise.prototype._migrateCallbackAt = function (follower, index) {
	    var fulfill = follower._fulfillmentHandlerAt(index);
	    var reject = follower._rejectionHandlerAt(index);
	    var promise = follower._promiseAt(index);
	    var receiver = follower._receiverAt(index);
	    if (receiver === undefined) receiver = UNDEFINED_BINDING;
	    this._addCallbacks(fulfill, reject, promise, receiver, null);
	};
	
	Promise.prototype._addCallbacks = function (
	    fulfill,
	    reject,
	    promise,
	    receiver,
	    domain
	) {
	    var index = this._length();
	
	    if (index >= 65535 - 4) {
	        index = 0;
	        this._setLength(0);
	    }
	
	    if (index === 0) {
	        this._promise0 = promise;
	        this._receiver0 = receiver;
	        if (typeof fulfill === "function") {
	            this._fulfillmentHandler0 =
	                domain === null ? fulfill : domain.bind(fulfill);
	        }
	        if (typeof reject === "function") {
	            this._rejectionHandler0 =
	                domain === null ? reject : domain.bind(reject);
	        }
	    } else {
	        var base = index * 4 - 4;
	        this[base + 2] = promise;
	        this[base + 3] = receiver;
	        if (typeof fulfill === "function") {
	            this[base + 0] =
	                domain === null ? fulfill : domain.bind(fulfill);
	        }
	        if (typeof reject === "function") {
	            this[base + 1] =
	                domain === null ? reject : domain.bind(reject);
	        }
	    }
	    this._setLength(index + 1);
	    return index;
	};
	
	Promise.prototype._proxy = function (proxyable, arg) {
	    this._addCallbacks(undefined, undefined, arg, proxyable, null);
	};
	
	Promise.prototype._resolveCallback = function(value, shouldBind) {
	    if (((this._bitField & 117506048) !== 0)) return;
	    if (value === this)
	        return this._rejectCallback(makeSelfResolutionError(), false);
	    var maybePromise = tryConvertToPromise(value, this);
	    if (!(maybePromise instanceof Promise)) return this._fulfill(value);
	
	    if (shouldBind) this._propagateFrom(maybePromise, 2);
	
	    var promise = maybePromise._target();
	
	    if (promise === this) {
	        this._reject(makeSelfResolutionError());
	        return;
	    }
	
	    var bitField = promise._bitField;
	    if (((bitField & 50397184) === 0)) {
	        var len = this._length();
	        if (len > 0) promise._migrateCallback0(this);
	        for (var i = 1; i < len; ++i) {
	            promise._migrateCallbackAt(this, i);
	        }
	        this._setFollowing();
	        this._setLength(0);
	        this._setFollowee(promise);
	    } else if (((bitField & 33554432) !== 0)) {
	        this._fulfill(promise._value());
	    } else if (((bitField & 16777216) !== 0)) {
	        this._reject(promise._reason());
	    } else {
	        var reason = new CancellationError("late cancellation observer");
	        promise._attachExtraTrace(reason);
	        this._reject(reason);
	    }
	};
	
	Promise.prototype._rejectCallback =
	function(reason, synchronous, ignoreNonErrorWarnings) {
	    var trace = util.ensureErrorObject(reason);
	    var hasStack = trace === reason;
	    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
	        var message = "a promise was rejected with a non-error: " +
	            util.classString(reason);
	        this._warn(message, true);
	    }
	    this._attachExtraTrace(trace, synchronous ? hasStack : false);
	    this._reject(reason);
	};
	
	Promise.prototype._resolveFromExecutor = function (executor) {
	    var promise = this;
	    this._captureStackTrace();
	    this._pushContext();
	    var synchronous = true;
	    var r = this._execute(executor, function(value) {
	        promise._resolveCallback(value);
	    }, function (reason) {
	        promise._rejectCallback(reason, synchronous);
	    });
	    synchronous = false;
	    this._popContext();
	
	    if (r !== undefined) {
	        promise._rejectCallback(r, true);
	    }
	};
	
	Promise.prototype._settlePromiseFromHandler = function (
	    handler, receiver, value, promise
	) {
	    var bitField = promise._bitField;
	    if (((bitField & 65536) !== 0)) return;
	    promise._pushContext();
	    var x;
	    if (receiver === APPLY) {
	        if (!value || typeof value.length !== "number") {
	            x = errorObj;
	            x.e = new TypeError("cannot .spread() a non-array: " +
	                                    util.classString(value));
	        } else {
	            x = tryCatch(handler).apply(this._boundValue(), value);
	        }
	    } else {
	        x = tryCatch(handler).call(receiver, value);
	    }
	    var promiseCreated = promise._popContext();
	    bitField = promise._bitField;
	    if (((bitField & 65536) !== 0)) return;
	
	    if (x === NEXT_FILTER) {
	        promise._reject(value);
	    } else if (x === errorObj) {
	        promise._rejectCallback(x.e, false);
	    } else {
	        debug.checkForgottenReturns(x, promiseCreated, "",  promise, this);
	        promise._resolveCallback(x);
	    }
	};
	
	Promise.prototype._target = function() {
	    var ret = this;
	    while (ret._isFollowing()) ret = ret._followee();
	    return ret;
	};
	
	Promise.prototype._followee = function() {
	    return this._rejectionHandler0;
	};
	
	Promise.prototype._setFollowee = function(promise) {
	    this._rejectionHandler0 = promise;
	};
	
	Promise.prototype._settlePromise = function(promise, handler, receiver, value) {
	    var isPromise = promise instanceof Promise;
	    var bitField = this._bitField;
	    var asyncGuaranteed = ((bitField & 134217728) !== 0);
	    if (((bitField & 65536) !== 0)) {
	        if (isPromise) promise._invokeInternalOnCancel();
	
	        if (receiver instanceof PassThroughHandlerContext &&
	            receiver.isFinallyHandler()) {
	            receiver.cancelPromise = promise;
	            if (tryCatch(handler).call(receiver, value) === errorObj) {
	                promise._reject(errorObj.e);
	            }
	        } else if (handler === reflectHandler) {
	            promise._fulfill(reflectHandler.call(receiver));
	        } else if (receiver instanceof Proxyable) {
	            receiver._promiseCancelled(promise);
	        } else if (isPromise || promise instanceof PromiseArray) {
	            promise._cancel();
	        } else {
	            receiver.cancel();
	        }
	    } else if (typeof handler === "function") {
	        if (!isPromise) {
	            handler.call(receiver, value, promise);
	        } else {
	            if (asyncGuaranteed) promise._setAsyncGuaranteed();
	            this._settlePromiseFromHandler(handler, receiver, value, promise);
	        }
	    } else if (receiver instanceof Proxyable) {
	        if (!receiver._isResolved()) {
	            if (((bitField & 33554432) !== 0)) {
	                receiver._promiseFulfilled(value, promise);
	            } else {
	                receiver._promiseRejected(value, promise);
	            }
	        }
	    } else if (isPromise) {
	        if (asyncGuaranteed) promise._setAsyncGuaranteed();
	        if (((bitField & 33554432) !== 0)) {
	            promise._fulfill(value);
	        } else {
	            promise._reject(value);
	        }
	    }
	};
	
	Promise.prototype._settlePromiseLateCancellationObserver = function(ctx) {
	    var handler = ctx.handler;
	    var promise = ctx.promise;
	    var receiver = ctx.receiver;
	    var value = ctx.value;
	    if (typeof handler === "function") {
	        if (!(promise instanceof Promise)) {
	            handler.call(receiver, value, promise);
	        } else {
	            this._settlePromiseFromHandler(handler, receiver, value, promise);
	        }
	    } else if (promise instanceof Promise) {
	        promise._reject(value);
	    }
	};
	
	Promise.prototype._settlePromiseCtx = function(ctx) {
	    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);
	};
	
	Promise.prototype._settlePromise0 = function(handler, value, bitField) {
	    var promise = this._promise0;
	    var receiver = this._receiverAt(0);
	    this._promise0 = undefined;
	    this._receiver0 = undefined;
	    this._settlePromise(promise, handler, receiver, value);
	};
	
	Promise.prototype._clearCallbackDataAtIndex = function(index) {
	    var base = index * 4 - 4;
	    this[base + 2] =
	    this[base + 3] =
	    this[base + 0] =
	    this[base + 1] = undefined;
	};
	
	Promise.prototype._fulfill = function (value) {
	    var bitField = this._bitField;
	    if (((bitField & 117506048) >>> 16)) return;
	    if (value === this) {
	        var err = makeSelfResolutionError();
	        this._attachExtraTrace(err);
	        return this._reject(err);
	    }
	    this._setFulfilled();
	    this._rejectionHandler0 = value;
	
	    if ((bitField & 65535) > 0) {
	        if (((bitField & 134217728) !== 0)) {
	            this._settlePromises();
	        } else {
	            async.settlePromises(this);
	        }
	    }
	};
	
	Promise.prototype._reject = function (reason) {
	    var bitField = this._bitField;
	    if (((bitField & 117506048) >>> 16)) return;
	    this._setRejected();
	    this._fulfillmentHandler0 = reason;
	
	    if (this._isFinal()) {
	        return async.fatalError(reason, util.isNode);
	    }
	
	    if ((bitField & 65535) > 0) {
	        async.settlePromises(this);
	    } else {
	        this._ensurePossibleRejectionHandled();
	    }
	};
	
	Promise.prototype._fulfillPromises = function (len, value) {
	    for (var i = 1; i < len; i++) {
	        var handler = this._fulfillmentHandlerAt(i);
	        var promise = this._promiseAt(i);
	        var receiver = this._receiverAt(i);
	        this._clearCallbackDataAtIndex(i);
	        this._settlePromise(promise, handler, receiver, value);
	    }
	};
	
	Promise.prototype._rejectPromises = function (len, reason) {
	    for (var i = 1; i < len; i++) {
	        var handler = this._rejectionHandlerAt(i);
	        var promise = this._promiseAt(i);
	        var receiver = this._receiverAt(i);
	        this._clearCallbackDataAtIndex(i);
	        this._settlePromise(promise, handler, receiver, reason);
	    }
	};
	
	Promise.prototype._settlePromises = function () {
	    var bitField = this._bitField;
	    var len = (bitField & 65535);
	
	    if (len > 0) {
	        if (((bitField & 16842752) !== 0)) {
	            var reason = this._fulfillmentHandler0;
	            this._settlePromise0(this._rejectionHandler0, reason, bitField);
	            this._rejectPromises(len, reason);
	        } else {
	            var value = this._rejectionHandler0;
	            this._settlePromise0(this._fulfillmentHandler0, value, bitField);
	            this._fulfillPromises(len, value);
	        }
	        this._setLength(0);
	    }
	    this._clearCancellationData();
	};
	
	Promise.prototype._settledValue = function() {
	    var bitField = this._bitField;
	    if (((bitField & 33554432) !== 0)) {
	        return this._rejectionHandler0;
	    } else if (((bitField & 16777216) !== 0)) {
	        return this._fulfillmentHandler0;
	    }
	};
	
	function deferResolve(v) {this.promise._resolveCallback(v);}
	function deferReject(v) {this.promise._rejectCallback(v, false);}
	
	Promise.defer = Promise.pending = function() {
	    debug.deprecated("Promise.defer", "new Promise");
	    var promise = new Promise(INTERNAL);
	    return {
	        promise: promise,
	        resolve: deferResolve,
	        reject: deferReject
	    };
	};
	
	util.notEnumerableProp(Promise,
	                       "_makeSelfResolutionError",
	                       makeSelfResolutionError);
	
	_dereq_("./method")(Promise, INTERNAL, tryConvertToPromise, apiRejection,
	    debug);
	_dereq_("./bind")(Promise, INTERNAL, tryConvertToPromise, debug);
	_dereq_("./cancel")(Promise, PromiseArray, apiRejection, debug);
	_dereq_("./direct_resolve")(Promise);
	_dereq_("./synchronous_inspection")(Promise);
	_dereq_("./join")(
	    Promise, PromiseArray, tryConvertToPromise, INTERNAL, debug);
	Promise.Promise = Promise;
	Promise.version = "3.4.0";
	_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
	_dereq_('./call_get.js')(Promise);
	_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);
	_dereq_('./timers.js')(Promise, INTERNAL, debug);
	_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);
	_dereq_('./nodeify.js')(Promise);
	_dereq_('./promisify.js')(Promise, INTERNAL);
	_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);
	_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);
	_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
	_dereq_('./settle.js')(Promise, PromiseArray, debug);
	_dereq_('./some.js')(Promise, PromiseArray, apiRejection);
	_dereq_('./filter.js')(Promise, INTERNAL);
	_dereq_('./each.js')(Promise, INTERNAL);
	_dereq_('./any.js')(Promise);
	                                                         
	    util.toFastProperties(Promise);                                          
	    util.toFastProperties(Promise.prototype);                                
	    function fillTypes(value) {                                              
	        var p = new Promise(INTERNAL);                                       
	        p._fulfillmentHandler0 = value;                                      
	        p._rejectionHandler0 = value;                                        
	        p._promise0 = value;                                                 
	        p._receiver0 = value;                                                
	    }                                                                        
	    // Complete slack tracking, opt out of field-type tracking and           
	    // stabilize map                                                         
	    fillTypes({a: 1});                                                       
	    fillTypes({b: 2});                                                       
	    fillTypes({c: 3});                                                       
	    fillTypes(1);                                                            
	    fillTypes(function(){});                                                 
	    fillTypes(undefined);                                                    
	    fillTypes(false);                                                        
	    fillTypes(new Promise(INTERNAL));                                        
	    debug.setBounds(Async.firstLineError, util.lastLineError);               
	    return Promise;                                                          
	
	};
	
	},{"./any.js":1,"./async":2,"./bind":3,"./call_get.js":5,"./cancel":6,"./catch_filter":7,"./context":8,"./debuggability":9,"./direct_resolve":10,"./each.js":11,"./errors":12,"./es5":13,"./filter.js":14,"./finally":15,"./generators.js":16,"./join":17,"./map.js":18,"./method":19,"./nodeback":20,"./nodeify.js":21,"./promise_array":23,"./promisify.js":24,"./props.js":25,"./race.js":27,"./reduce.js":28,"./settle.js":30,"./some.js":31,"./synchronous_inspection":32,"./thenables":33,"./timers.js":34,"./using.js":35,"./util":36}],23:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, INTERNAL, tryConvertToPromise,
	    apiRejection, Proxyable) {
	var util = _dereq_("./util");
	var isArray = util.isArray;
	
	function toResolutionValue(val) {
	    switch(val) {
	    case -2: return [];
	    case -3: return {};
	    }
	}
	
	function PromiseArray(values) {
	    var promise = this._promise = new Promise(INTERNAL);
	    if (values instanceof Promise) {
	        promise._propagateFrom(values, 3);
	    }
	    promise._setOnCancel(this);
	    this._values = values;
	    this._length = 0;
	    this._totalResolved = 0;
	    this._init(undefined, -2);
	}
	util.inherits(PromiseArray, Proxyable);
	
	PromiseArray.prototype.length = function () {
	    return this._length;
	};
	
	PromiseArray.prototype.promise = function () {
	    return this._promise;
	};
	
	PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {
	    var values = tryConvertToPromise(this._values, this._promise);
	    if (values instanceof Promise) {
	        values = values._target();
	        var bitField = values._bitField;
	        ;
	        this._values = values;
	
	        if (((bitField & 50397184) === 0)) {
	            this._promise._setAsyncGuaranteed();
	            return values._then(
	                init,
	                this._reject,
	                undefined,
	                this,
	                resolveValueIfEmpty
	           );
	        } else if (((bitField & 33554432) !== 0)) {
	            values = values._value();
	        } else if (((bitField & 16777216) !== 0)) {
	            return this._reject(values._reason());
	        } else {
	            return this._cancel();
	        }
	    }
	    values = util.asArray(values);
	    if (values === null) {
	        var err = apiRejection(
	            "expecting an array or an iterable object but got " + util.classString(values)).reason();
	        this._promise._rejectCallback(err, false);
	        return;
	    }
	
	    if (values.length === 0) {
	        if (resolveValueIfEmpty === -5) {
	            this._resolveEmptyArray();
	        }
	        else {
	            this._resolve(toResolutionValue(resolveValueIfEmpty));
	        }
	        return;
	    }
	    this._iterate(values);
	};
	
	PromiseArray.prototype._iterate = function(values) {
	    var len = this.getActualLength(values.length);
	    this._length = len;
	    this._values = this.shouldCopyValues() ? new Array(len) : this._values;
	    var result = this._promise;
	    var isResolved = false;
	    var bitField = null;
	    for (var i = 0; i < len; ++i) {
	        var maybePromise = tryConvertToPromise(values[i], result);
	
	        if (maybePromise instanceof Promise) {
	            maybePromise = maybePromise._target();
	            bitField = maybePromise._bitField;
	        } else {
	            bitField = null;
	        }
	
	        if (isResolved) {
	            if (bitField !== null) {
	                maybePromise.suppressUnhandledRejections();
	            }
	        } else if (bitField !== null) {
	            if (((bitField & 50397184) === 0)) {
	                maybePromise._proxy(this, i);
	                this._values[i] = maybePromise;
	            } else if (((bitField & 33554432) !== 0)) {
	                isResolved = this._promiseFulfilled(maybePromise._value(), i);
	            } else if (((bitField & 16777216) !== 0)) {
	                isResolved = this._promiseRejected(maybePromise._reason(), i);
	            } else {
	                isResolved = this._promiseCancelled(i);
	            }
	        } else {
	            isResolved = this._promiseFulfilled(maybePromise, i);
	        }
	    }
	    if (!isResolved) result._setAsyncGuaranteed();
	};
	
	PromiseArray.prototype._isResolved = function () {
	    return this._values === null;
	};
	
	PromiseArray.prototype._resolve = function (value) {
	    this._values = null;
	    this._promise._fulfill(value);
	};
	
	PromiseArray.prototype._cancel = function() {
	    if (this._isResolved() || !this._promise.isCancellable()) return;
	    this._values = null;
	    this._promise._cancel();
	};
	
	PromiseArray.prototype._reject = function (reason) {
	    this._values = null;
	    this._promise._rejectCallback(reason, false);
	};
	
	PromiseArray.prototype._promiseFulfilled = function (value, index) {
	    this._values[index] = value;
	    var totalResolved = ++this._totalResolved;
	    if (totalResolved >= this._length) {
	        this._resolve(this._values);
	        return true;
	    }
	    return false;
	};
	
	PromiseArray.prototype._promiseCancelled = function() {
	    this._cancel();
	    return true;
	};
	
	PromiseArray.prototype._promiseRejected = function (reason) {
	    this._totalResolved++;
	    this._reject(reason);
	    return true;
	};
	
	PromiseArray.prototype._resultCancelled = function() {
	    if (this._isResolved()) return;
	    var values = this._values;
	    this._cancel();
	    if (values instanceof Promise) {
	        values.cancel();
	    } else {
	        for (var i = 0; i < values.length; ++i) {
	            if (values[i] instanceof Promise) {
	                values[i].cancel();
	            }
	        }
	    }
	};
	
	PromiseArray.prototype.shouldCopyValues = function () {
	    return true;
	};
	
	PromiseArray.prototype.getActualLength = function (len) {
	    return len;
	};
	
	return PromiseArray;
	};
	
	},{"./util":36}],24:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, INTERNAL) {
	var THIS = {};
	var util = _dereq_("./util");
	var nodebackForPromise = _dereq_("./nodeback");
	var withAppended = util.withAppended;
	var maybeWrapAsError = util.maybeWrapAsError;
	var canEvaluate = util.canEvaluate;
	var TypeError = _dereq_("./errors").TypeError;
	var defaultSuffix = "Async";
	var defaultPromisified = {__isPromisified__: true};
	var noCopyProps = [
	    "arity",    "length",
	    "name",
	    "arguments",
	    "caller",
	    "callee",
	    "prototype",
	    "__isPromisified__"
	];
	var noCopyPropsPattern = new RegExp("^(?:" + noCopyProps.join("|") + ")$");
	
	var defaultFilter = function(name) {
	    return util.isIdentifier(name) &&
	        name.charAt(0) !== "_" &&
	        name !== "constructor";
	};
	
	function propsFilter(key) {
	    return !noCopyPropsPattern.test(key);
	}
	
	function isPromisified(fn) {
	    try {
	        return fn.__isPromisified__ === true;
	    }
	    catch (e) {
	        return false;
	    }
	}
	
	function hasPromisified(obj, key, suffix) {
	    var val = util.getDataPropertyOrDefault(obj, key + suffix,
	                                            defaultPromisified);
	    return val ? isPromisified(val) : false;
	}
	function checkValid(ret, suffix, suffixRegexp) {
	    for (var i = 0; i < ret.length; i += 2) {
	        var key = ret[i];
	        if (suffixRegexp.test(key)) {
	            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, "");
	            for (var j = 0; j < ret.length; j += 2) {
	                if (ret[j] === keyWithoutAsyncSuffix) {
	                    throw new TypeError("Cannot promisify an API that has normal methods with '%s'-suffix\u000a\u000a    See http://goo.gl/MqrFmX\u000a"
	                        .replace("%s", suffix));
	                }
	            }
	        }
	    }
	}
	
	function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
	    var keys = util.inheritedDataKeys(obj);
	    var ret = [];
	    for (var i = 0; i < keys.length; ++i) {
	        var key = keys[i];
	        var value = obj[key];
	        var passesDefaultFilter = filter === defaultFilter
	            ? true : defaultFilter(key, value, obj);
	        if (typeof value === "function" &&
	            !isPromisified(value) &&
	            !hasPromisified(obj, key, suffix) &&
	            filter(key, value, obj, passesDefaultFilter)) {
	            ret.push(key, value);
	        }
	    }
	    checkValid(ret, suffix, suffixRegexp);
	    return ret;
	}
	
	var escapeIdentRegex = function(str) {
	    return str.replace(/([$])/, "\\$");
	};
	
	var makeNodePromisifiedEval;
	if (false) {
	var switchCaseArgumentOrder = function(likelyArgumentCount) {
	    var ret = [likelyArgumentCount];
	    var min = Math.max(0, likelyArgumentCount - 1 - 3);
	    for(var i = likelyArgumentCount - 1; i >= min; --i) {
	        ret.push(i);
	    }
	    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {
	        ret.push(i);
	    }
	    return ret;
	};
	
	var argumentSequence = function(argumentCount) {
	    return util.filledRange(argumentCount, "_arg", "");
	};
	
	var parameterDeclaration = function(parameterCount) {
	    return util.filledRange(
	        Math.max(parameterCount, 3), "_arg", "");
	};
	
	var parameterCount = function(fn) {
	    if (typeof fn.length === "number") {
	        return Math.max(Math.min(fn.length, 1023 + 1), 0);
	    }
	    return 0;
	};
	
	makeNodePromisifiedEval =
	function(callback, receiver, originalName, fn, _, multiArgs) {
	    var newParameterCount = Math.max(0, parameterCount(fn) - 1);
	    var argumentOrder = switchCaseArgumentOrder(newParameterCount);
	    var shouldProxyThis = typeof callback === "string" || receiver === THIS;
	
	    function generateCallForArgumentCount(count) {
	        var args = argumentSequence(count).join(", ");
	        var comma = count > 0 ? ", " : "";
	        var ret;
	        if (shouldProxyThis) {
	            ret = "ret = callback.call(this, {{args}}, nodeback); break;\n";
	        } else {
	            ret = receiver === undefined
	                ? "ret = callback({{args}}, nodeback); break;\n"
	                : "ret = callback.call(receiver, {{args}}, nodeback); break;\n";
	        }
	        return ret.replace("{{args}}", args).replace(", ", comma);
	    }
	
	    function generateArgumentSwitchCase() {
	        var ret = "";
	        for (var i = 0; i < argumentOrder.length; ++i) {
	            ret += "case " + argumentOrder[i] +":" +
	                generateCallForArgumentCount(argumentOrder[i]);
	        }
	
	        ret += "                                                             \n\
	        default:                                                             \n\
	            var args = new Array(len + 1);                                   \n\
	            var i = 0;                                                       \n\
	            for (var i = 0; i < len; ++i) {                                  \n\
	               args[i] = arguments[i];                                       \n\
	            }                                                                \n\
	            args[i] = nodeback;                                              \n\
	            [CodeForCall]                                                    \n\
	            break;                                                           \n\
	        ".replace("[CodeForCall]", (shouldProxyThis
	                                ? "ret = callback.apply(this, args);\n"
	                                : "ret = callback.apply(receiver, args);\n"));
	        return ret;
	    }
	
	    var getFunctionCode = typeof callback === "string"
	                                ? ("this != null ? this['"+callback+"'] : fn")
	                                : "fn";
	    var body = "'use strict';                                                \n\
	        var ret = function (Parameters) {                                    \n\
	            'use strict';                                                    \n\
	            var len = arguments.length;                                      \n\
	            var promise = new Promise(INTERNAL);                             \n\
	            promise._captureStackTrace();                                    \n\
	            var nodeback = nodebackForPromise(promise, " + multiArgs + ");   \n\
	            var ret;                                                         \n\
	            var callback = tryCatch([GetFunctionCode]);                      \n\
	            switch(len) {                                                    \n\
	                [CodeForSwitchCase]                                          \n\
	            }                                                                \n\
	            if (ret === errorObj) {                                          \n\
	                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n\
	            }                                                                \n\
	            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \n\
	            return promise;                                                  \n\
	        };                                                                   \n\
	        notEnumerableProp(ret, '__isPromisified__', true);                   \n\
	        return ret;                                                          \n\
	    ".replace("[CodeForSwitchCase]", generateArgumentSwitchCase())
	        .replace("[GetFunctionCode]", getFunctionCode);
	    body = body.replace("Parameters", parameterDeclaration(newParameterCount));
	    return new Function("Promise",
	                        "fn",
	                        "receiver",
	                        "withAppended",
	                        "maybeWrapAsError",
	                        "nodebackForPromise",
	                        "tryCatch",
	                        "errorObj",
	                        "notEnumerableProp",
	                        "INTERNAL",
	                        body)(
	                    Promise,
	                    fn,
	                    receiver,
	                    withAppended,
	                    maybeWrapAsError,
	                    nodebackForPromise,
	                    util.tryCatch,
	                    util.errorObj,
	                    util.notEnumerableProp,
	                    INTERNAL);
	};
	}
	
	function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {
	    var defaultThis = (function() {return this;})();
	    var method = callback;
	    if (typeof method === "string") {
	        callback = fn;
	    }
	    function promisified() {
	        var _receiver = receiver;
	        if (receiver === THIS) _receiver = this;
	        var promise = new Promise(INTERNAL);
	        promise._captureStackTrace();
	        var cb = typeof method === "string" && this !== defaultThis
	            ? this[method] : callback;
	        var fn = nodebackForPromise(promise, multiArgs);
	        try {
	            cb.apply(_receiver, withAppended(arguments, fn));
	        } catch(e) {
	            promise._rejectCallback(maybeWrapAsError(e), true, true);
	        }
	        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();
	        return promise;
	    }
	    util.notEnumerableProp(promisified, "__isPromisified__", true);
	    return promisified;
	}
	
	var makeNodePromisified = canEvaluate
	    ? makeNodePromisifiedEval
	    : makeNodePromisifiedClosure;
	
	function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {
	    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + "$");
	    var methods =
	        promisifiableMethods(obj, suffix, suffixRegexp, filter);
	
	    for (var i = 0, len = methods.length; i < len; i+= 2) {
	        var key = methods[i];
	        var fn = methods[i+1];
	        var promisifiedKey = key + suffix;
	        if (promisifier === makeNodePromisified) {
	            obj[promisifiedKey] =
	                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
	        } else {
	            var promisified = promisifier(fn, function() {
	                return makeNodePromisified(key, THIS, key,
	                                           fn, suffix, multiArgs);
	            });
	            util.notEnumerableProp(promisified, "__isPromisified__", true);
	            obj[promisifiedKey] = promisified;
	        }
	    }
	    util.toFastProperties(obj);
	    return obj;
	}
	
	function promisify(callback, receiver, multiArgs) {
	    return makeNodePromisified(callback, receiver, undefined,
	                                callback, null, multiArgs);
	}
	
	Promise.promisify = function (fn, options) {
	    if (typeof fn !== "function") {
	        throw new TypeError("expecting a function but got " + util.classString(fn));
	    }
	    if (isPromisified(fn)) {
	        return fn;
	    }
	    options = Object(options);
	    var receiver = options.context === undefined ? THIS : options.context;
	    var multiArgs = !!options.multiArgs;
	    var ret = promisify(fn, receiver, multiArgs);
	    util.copyDescriptors(fn, ret, propsFilter);
	    return ret;
	};
	
	Promise.promisifyAll = function (target, options) {
	    if (typeof target !== "function" && typeof target !== "object") {
	        throw new TypeError("the target of promisifyAll must be an object or a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	    options = Object(options);
	    var multiArgs = !!options.multiArgs;
	    var suffix = options.suffix;
	    if (typeof suffix !== "string") suffix = defaultSuffix;
	    var filter = options.filter;
	    if (typeof filter !== "function") filter = defaultFilter;
	    var promisifier = options.promisifier;
	    if (typeof promisifier !== "function") promisifier = makeNodePromisified;
	
	    if (!util.isIdentifier(suffix)) {
	        throw new RangeError("suffix must be a valid identifier\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	
	    var keys = util.inheritedDataKeys(target);
	    for (var i = 0; i < keys.length; ++i) {
	        var value = target[keys[i]];
	        if (keys[i] !== "constructor" &&
	            util.isClass(value)) {
	            promisifyAll(value.prototype, suffix, filter, promisifier,
	                multiArgs);
	            promisifyAll(value, suffix, filter, promisifier, multiArgs);
	        }
	    }
	
	    return promisifyAll(target, suffix, filter, promisifier, multiArgs);
	};
	};
	
	
	},{"./errors":12,"./nodeback":20,"./util":36}],25:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(
	    Promise, PromiseArray, tryConvertToPromise, apiRejection) {
	var util = _dereq_("./util");
	var isObject = util.isObject;
	var es5 = _dereq_("./es5");
	var Es6Map;
	if (typeof Map === "function") Es6Map = Map;
	
	var mapToEntries = (function() {
	    var index = 0;
	    var size = 0;
	
	    function extractEntry(value, key) {
	        this[index] = value;
	        this[index + size] = key;
	        index++;
	    }
	
	    return function mapToEntries(map) {
	        size = map.size;
	        index = 0;
	        var ret = new Array(map.size * 2);
	        map.forEach(extractEntry, ret);
	        return ret;
	    };
	})();
	
	var entriesToMap = function(entries) {
	    var ret = new Es6Map();
	    var length = entries.length / 2 | 0;
	    for (var i = 0; i < length; ++i) {
	        var key = entries[length + i];
	        var value = entries[i];
	        ret.set(key, value);
	    }
	    return ret;
	};
	
	function PropertiesPromiseArray(obj) {
	    var isMap = false;
	    var entries;
	    if (Es6Map !== undefined && obj instanceof Es6Map) {
	        entries = mapToEntries(obj);
	        isMap = true;
	    } else {
	        var keys = es5.keys(obj);
	        var len = keys.length;
	        entries = new Array(len * 2);
	        for (var i = 0; i < len; ++i) {
	            var key = keys[i];
	            entries[i] = obj[key];
	            entries[i + len] = key;
	        }
	    }
	    this.constructor$(entries);
	    this._isMap = isMap;
	    this._init$(undefined, -3);
	}
	util.inherits(PropertiesPromiseArray, PromiseArray);
	
	PropertiesPromiseArray.prototype._init = function () {};
	
	PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {
	    this._values[index] = value;
	    var totalResolved = ++this._totalResolved;
	    if (totalResolved >= this._length) {
	        var val;
	        if (this._isMap) {
	            val = entriesToMap(this._values);
	        } else {
	            val = {};
	            var keyOffset = this.length();
	            for (var i = 0, len = this.length(); i < len; ++i) {
	                val[this._values[i + keyOffset]] = this._values[i];
	            }
	        }
	        this._resolve(val);
	        return true;
	    }
	    return false;
	};
	
	PropertiesPromiseArray.prototype.shouldCopyValues = function () {
	    return false;
	};
	
	PropertiesPromiseArray.prototype.getActualLength = function (len) {
	    return len >> 1;
	};
	
	function props(promises) {
	    var ret;
	    var castValue = tryConvertToPromise(promises);
	
	    if (!isObject(castValue)) {
	        return apiRejection("cannot await properties of a non-object\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    } else if (castValue instanceof Promise) {
	        ret = castValue._then(
	            Promise.props, undefined, undefined, undefined, undefined);
	    } else {
	        ret = new PropertiesPromiseArray(castValue).promise();
	    }
	
	    if (castValue instanceof Promise) {
	        ret._propagateFrom(castValue, 2);
	    }
	    return ret;
	}
	
	Promise.prototype.props = function () {
	    return props(this);
	};
	
	Promise.props = function (promises) {
	    return props(promises);
	};
	};
	
	},{"./es5":13,"./util":36}],26:[function(_dereq_,module,exports){
	"use strict";
	function arrayMove(src, srcIndex, dst, dstIndex, len) {
	    for (var j = 0; j < len; ++j) {
	        dst[j + dstIndex] = src[j + srcIndex];
	        src[j + srcIndex] = void 0;
	    }
	}
	
	function Queue(capacity) {
	    this._capacity = capacity;
	    this._length = 0;
	    this._front = 0;
	}
	
	Queue.prototype._willBeOverCapacity = function (size) {
	    return this._capacity < size;
	};
	
	Queue.prototype._pushOne = function (arg) {
	    var length = this.length();
	    this._checkCapacity(length + 1);
	    var i = (this._front + length) & (this._capacity - 1);
	    this[i] = arg;
	    this._length = length + 1;
	};
	
	Queue.prototype._unshiftOne = function(value) {
	    var capacity = this._capacity;
	    this._checkCapacity(this.length() + 1);
	    var front = this._front;
	    var i = (((( front - 1 ) &
	                    ( capacity - 1) ) ^ capacity ) - capacity );
	    this[i] = value;
	    this._front = i;
	    this._length = this.length() + 1;
	};
	
	Queue.prototype.unshift = function(fn, receiver, arg) {
	    this._unshiftOne(arg);
	    this._unshiftOne(receiver);
	    this._unshiftOne(fn);
	};
	
	Queue.prototype.push = function (fn, receiver, arg) {
	    var length = this.length() + 3;
	    if (this._willBeOverCapacity(length)) {
	        this._pushOne(fn);
	        this._pushOne(receiver);
	        this._pushOne(arg);
	        return;
	    }
	    var j = this._front + length - 3;
	    this._checkCapacity(length);
	    var wrapMask = this._capacity - 1;
	    this[(j + 0) & wrapMask] = fn;
	    this[(j + 1) & wrapMask] = receiver;
	    this[(j + 2) & wrapMask] = arg;
	    this._length = length;
	};
	
	Queue.prototype.shift = function () {
	    var front = this._front,
	        ret = this[front];
	
	    this[front] = undefined;
	    this._front = (front + 1) & (this._capacity - 1);
	    this._length--;
	    return ret;
	};
	
	Queue.prototype.length = function () {
	    return this._length;
	};
	
	Queue.prototype._checkCapacity = function (size) {
	    if (this._capacity < size) {
	        this._resizeTo(this._capacity << 1);
	    }
	};
	
	Queue.prototype._resizeTo = function (capacity) {
	    var oldCapacity = this._capacity;
	    this._capacity = capacity;
	    var front = this._front;
	    var length = this._length;
	    var moveItemsCount = (front + length) & (oldCapacity - 1);
	    arrayMove(this, 0, this, oldCapacity, moveItemsCount);
	};
	
	module.exports = Queue;
	
	},{}],27:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(
	    Promise, INTERNAL, tryConvertToPromise, apiRejection) {
	var util = _dereq_("./util");
	
	var raceLater = function (promise) {
	    return promise.then(function(array) {
	        return race(array, promise);
	    });
	};
	
	function race(promises, parent) {
	    var maybePromise = tryConvertToPromise(promises);
	
	    if (maybePromise instanceof Promise) {
	        return raceLater(maybePromise);
	    } else {
	        promises = util.asArray(promises);
	        if (promises === null)
	            return apiRejection("expecting an array or an iterable object but got " + util.classString(promises));
	    }
	
	    var ret = new Promise(INTERNAL);
	    if (parent !== undefined) {
	        ret._propagateFrom(parent, 3);
	    }
	    var fulfill = ret._fulfill;
	    var reject = ret._reject;
	    for (var i = 0, len = promises.length; i < len; ++i) {
	        var val = promises[i];
	
	        if (val === undefined && !(i in promises)) {
	            continue;
	        }
	
	        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
	    }
	    return ret;
	}
	
	Promise.race = function (promises) {
	    return race(promises, undefined);
	};
	
	Promise.prototype.race = function () {
	    return race(this, undefined);
	};
	
	};
	
	},{"./util":36}],28:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise,
	                          PromiseArray,
	                          apiRejection,
	                          tryConvertToPromise,
	                          INTERNAL,
	                          debug) {
	var getDomain = Promise._getDomain;
	var util = _dereq_("./util");
	var tryCatch = util.tryCatch;
	
	function ReductionPromiseArray(promises, fn, initialValue, _each) {
	    this.constructor$(promises);
	    var domain = getDomain();
	    this._fn = domain === null ? fn : domain.bind(fn);
	    if (initialValue !== undefined) {
	        initialValue = Promise.resolve(initialValue);
	        initialValue._attachCancellationCallback(this);
	    }
	    this._initialValue = initialValue;
	    this._currentCancellable = null;
	    this._eachValues = _each === INTERNAL ? [] : undefined;
	    this._promise._captureStackTrace();
	    this._init$(undefined, -5);
	}
	util.inherits(ReductionPromiseArray, PromiseArray);
	
	ReductionPromiseArray.prototype._gotAccum = function(accum) {
	    if (this._eachValues !== undefined && accum !== INTERNAL) {
	        this._eachValues.push(accum);
	    }
	};
	
	ReductionPromiseArray.prototype._eachComplete = function(value) {
	    this._eachValues.push(value);
	    return this._eachValues;
	};
	
	ReductionPromiseArray.prototype._init = function() {};
	
	ReductionPromiseArray.prototype._resolveEmptyArray = function() {
	    this._resolve(this._eachValues !== undefined ? this._eachValues
	                                                 : this._initialValue);
	};
	
	ReductionPromiseArray.prototype.shouldCopyValues = function () {
	    return false;
	};
	
	ReductionPromiseArray.prototype._resolve = function(value) {
	    this._promise._resolveCallback(value);
	    this._values = null;
	};
	
	ReductionPromiseArray.prototype._resultCancelled = function(sender) {
	    if (sender === this._initialValue) return this._cancel();
	    if (this._isResolved()) return;
	    this._resultCancelled$();
	    if (this._currentCancellable instanceof Promise) {
	        this._currentCancellable.cancel();
	    }
	    if (this._initialValue instanceof Promise) {
	        this._initialValue.cancel();
	    }
	};
	
	ReductionPromiseArray.prototype._iterate = function (values) {
	    this._values = values;
	    var value;
	    var i;
	    var length = values.length;
	    if (this._initialValue !== undefined) {
	        value = this._initialValue;
	        i = 0;
	    } else {
	        value = Promise.resolve(values[0]);
	        i = 1;
	    }
	
	    this._currentCancellable = value;
	
	    if (!value.isRejected()) {
	        for (; i < length; ++i) {
	            var ctx = {
	                accum: null,
	                value: values[i],
	                index: i,
	                length: length,
	                array: this
	            };
	            value = value._then(gotAccum, undefined, undefined, ctx, undefined);
	        }
	    }
	
	    if (this._eachValues !== undefined) {
	        value = value
	            ._then(this._eachComplete, undefined, undefined, this, undefined);
	    }
	    value._then(completed, completed, undefined, value, this);
	};
	
	Promise.prototype.reduce = function (fn, initialValue) {
	    return reduce(this, fn, initialValue, null);
	};
	
	Promise.reduce = function (promises, fn, initialValue, _each) {
	    return reduce(promises, fn, initialValue, _each);
	};
	
	function completed(valueOrReason, array) {
	    if (this.isFulfilled()) {
	        array._resolve(valueOrReason);
	    } else {
	        array._reject(valueOrReason);
	    }
	}
	
	function reduce(promises, fn, initialValue, _each) {
	    if (typeof fn !== "function") {
	        return apiRejection("expecting a function but got " + util.classString(fn));
	    }
	    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);
	    return array.promise();
	}
	
	function gotAccum(accum) {
	    this.accum = accum;
	    this.array._gotAccum(accum);
	    var value = tryConvertToPromise(this.value, this.array._promise);
	    if (value instanceof Promise) {
	        this.array._currentCancellable = value;
	        return value._then(gotValue, undefined, undefined, this, undefined);
	    } else {
	        return gotValue.call(this, value);
	    }
	}
	
	function gotValue(value) {
	    var array = this.array;
	    var promise = array._promise;
	    var fn = tryCatch(array._fn);
	    promise._pushContext();
	    var ret;
	    if (array._eachValues !== undefined) {
	        ret = fn.call(promise._boundValue(), value, this.index, this.length);
	    } else {
	        ret = fn.call(promise._boundValue(),
	                              this.accum, value, this.index, this.length);
	    }
	    if (ret instanceof Promise) {
	        array._currentCancellable = ret;
	    }
	    var promiseCreated = promise._popContext();
	    debug.checkForgottenReturns(
	        ret,
	        promiseCreated,
	        array._eachValues !== undefined ? "Promise.each" : "Promise.reduce",
	        promise
	    );
	    return ret;
	}
	};
	
	},{"./util":36}],29:[function(_dereq_,module,exports){
	"use strict";
	var util = _dereq_("./util");
	var schedule;
	var noAsyncScheduler = function() {
	    throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	};
	var NativePromise = util.getNativePromise();
	if (util.isNode && typeof MutationObserver === "undefined") {
	    var GlobalSetImmediate = global.setImmediate;
	    var ProcessNextTick = process.nextTick;
	    schedule = util.isRecentNode
	                ? function(fn) { GlobalSetImmediate.call(global, fn); }
	                : function(fn) { ProcessNextTick.call(process, fn); };
	} else if (typeof NativePromise === "function") {
	    var nativePromise = NativePromise.resolve();
	    schedule = function(fn) {
	        nativePromise.then(fn);
	    };
	} else if ((typeof MutationObserver !== "undefined") &&
	          !(typeof window !== "undefined" &&
	            window.navigator &&
	            window.navigator.standalone)) {
	    schedule = (function() {
	        var div = document.createElement("div");
	        var opts = {attributes: true};
	        var toggleScheduled = false;
	        var div2 = document.createElement("div");
	        var o2 = new MutationObserver(function() {
	            div.classList.toggle("foo");
	            toggleScheduled = false;
	        });
	        o2.observe(div2, opts);
	
	        var scheduleToggle = function() {
	            if (toggleScheduled) return;
	                toggleScheduled = true;
	                div2.classList.toggle("foo");
	            };
	
	            return function schedule(fn) {
	            var o = new MutationObserver(function() {
	                o.disconnect();
	                fn();
	            });
	            o.observe(div, opts);
	            scheduleToggle();
	        };
	    })();
	} else if (typeof setImmediate !== "undefined") {
	    schedule = function (fn) {
	        setImmediate(fn);
	    };
	} else if (typeof setTimeout !== "undefined") {
	    schedule = function (fn) {
	        setTimeout(fn, 0);
	    };
	} else {
	    schedule = noAsyncScheduler;
	}
	module.exports = schedule;
	
	},{"./util":36}],30:[function(_dereq_,module,exports){
	"use strict";
	module.exports =
	    function(Promise, PromiseArray, debug) {
	var PromiseInspection = Promise.PromiseInspection;
	var util = _dereq_("./util");
	
	function SettledPromiseArray(values) {
	    this.constructor$(values);
	}
	util.inherits(SettledPromiseArray, PromiseArray);
	
	SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {
	    this._values[index] = inspection;
	    var totalResolved = ++this._totalResolved;
	    if (totalResolved >= this._length) {
	        this._resolve(this._values);
	        return true;
	    }
	    return false;
	};
	
	SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {
	    var ret = new PromiseInspection();
	    ret._bitField = 33554432;
	    ret._settledValueField = value;
	    return this._promiseResolved(index, ret);
	};
	SettledPromiseArray.prototype._promiseRejected = function (reason, index) {
	    var ret = new PromiseInspection();
	    ret._bitField = 16777216;
	    ret._settledValueField = reason;
	    return this._promiseResolved(index, ret);
	};
	
	Promise.settle = function (promises) {
	    debug.deprecated(".settle()", ".reflect()");
	    return new SettledPromiseArray(promises).promise();
	};
	
	Promise.prototype.settle = function () {
	    return Promise.settle(this);
	};
	};
	
	},{"./util":36}],31:[function(_dereq_,module,exports){
	"use strict";
	module.exports =
	function(Promise, PromiseArray, apiRejection) {
	var util = _dereq_("./util");
	var RangeError = _dereq_("./errors").RangeError;
	var AggregateError = _dereq_("./errors").AggregateError;
	var isArray = util.isArray;
	var CANCELLATION = {};
	
	
	function SomePromiseArray(values) {
	    this.constructor$(values);
	    this._howMany = 0;
	    this._unwrap = false;
	    this._initialized = false;
	}
	util.inherits(SomePromiseArray, PromiseArray);
	
	SomePromiseArray.prototype._init = function () {
	    if (!this._initialized) {
	        return;
	    }
	    if (this._howMany === 0) {
	        this._resolve([]);
	        return;
	    }
	    this._init$(undefined, -5);
	    var isArrayResolved = isArray(this._values);
	    if (!this._isResolved() &&
	        isArrayResolved &&
	        this._howMany > this._canPossiblyFulfill()) {
	        this._reject(this._getRangeError(this.length()));
	    }
	};
	
	SomePromiseArray.prototype.init = function () {
	    this._initialized = true;
	    this._init();
	};
	
	SomePromiseArray.prototype.setUnwrap = function () {
	    this._unwrap = true;
	};
	
	SomePromiseArray.prototype.howMany = function () {
	    return this._howMany;
	};
	
	SomePromiseArray.prototype.setHowMany = function (count) {
	    this._howMany = count;
	};
	
	SomePromiseArray.prototype._promiseFulfilled = function (value) {
	    this._addFulfilled(value);
	    if (this._fulfilled() === this.howMany()) {
	        this._values.length = this.howMany();
	        if (this.howMany() === 1 && this._unwrap) {
	            this._resolve(this._values[0]);
	        } else {
	            this._resolve(this._values);
	        }
	        return true;
	    }
	    return false;
	
	};
	SomePromiseArray.prototype._promiseRejected = function (reason) {
	    this._addRejected(reason);
	    return this._checkOutcome();
	};
	
	SomePromiseArray.prototype._promiseCancelled = function () {
	    if (this._values instanceof Promise || this._values == null) {
	        return this._cancel();
	    }
	    this._addRejected(CANCELLATION);
	    return this._checkOutcome();
	};
	
	SomePromiseArray.prototype._checkOutcome = function() {
	    if (this.howMany() > this._canPossiblyFulfill()) {
	        var e = new AggregateError();
	        for (var i = this.length(); i < this._values.length; ++i) {
	            if (this._values[i] !== CANCELLATION) {
	                e.push(this._values[i]);
	            }
	        }
	        if (e.length > 0) {
	            this._reject(e);
	        } else {
	            this._cancel();
	        }
	        return true;
	    }
	    return false;
	};
	
	SomePromiseArray.prototype._fulfilled = function () {
	    return this._totalResolved;
	};
	
	SomePromiseArray.prototype._rejected = function () {
	    return this._values.length - this.length();
	};
	
	SomePromiseArray.prototype._addRejected = function (reason) {
	    this._values.push(reason);
	};
	
	SomePromiseArray.prototype._addFulfilled = function (value) {
	    this._values[this._totalResolved++] = value;
	};
	
	SomePromiseArray.prototype._canPossiblyFulfill = function () {
	    return this.length() - this._rejected();
	};
	
	SomePromiseArray.prototype._getRangeError = function (count) {
	    var message = "Input array must contain at least " +
	            this._howMany + " items but contains only " + count + " items";
	    return new RangeError(message);
	};
	
	SomePromiseArray.prototype._resolveEmptyArray = function () {
	    this._reject(this._getRangeError(0));
	};
	
	function some(promises, howMany) {
	    if ((howMany | 0) !== howMany || howMany < 0) {
	        return apiRejection("expecting a positive integer\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	    var ret = new SomePromiseArray(promises);
	    var promise = ret.promise();
	    ret.setHowMany(howMany);
	    ret.init();
	    return promise;
	}
	
	Promise.some = function (promises, howMany) {
	    return some(promises, howMany);
	};
	
	Promise.prototype.some = function (howMany) {
	    return some(this, howMany);
	};
	
	Promise._SomePromiseArray = SomePromiseArray;
	};
	
	},{"./errors":12,"./util":36}],32:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise) {
	function PromiseInspection(promise) {
	    if (promise !== undefined) {
	        promise = promise._target();
	        this._bitField = promise._bitField;
	        this._settledValueField = promise._isFateSealed()
	            ? promise._settledValue() : undefined;
	    }
	    else {
	        this._bitField = 0;
	        this._settledValueField = undefined;
	    }
	}
	
	PromiseInspection.prototype._settledValue = function() {
	    return this._settledValueField;
	};
	
	var value = PromiseInspection.prototype.value = function () {
	    if (!this.isFulfilled()) {
	        throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	    return this._settledValue();
	};
	
	var reason = PromiseInspection.prototype.error =
	PromiseInspection.prototype.reason = function () {
	    if (!this.isRejected()) {
	        throw new TypeError("cannot get rejection reason of a non-rejected promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
	    }
	    return this._settledValue();
	};
	
	var isFulfilled = PromiseInspection.prototype.isFulfilled = function() {
	    return (this._bitField & 33554432) !== 0;
	};
	
	var isRejected = PromiseInspection.prototype.isRejected = function () {
	    return (this._bitField & 16777216) !== 0;
	};
	
	var isPending = PromiseInspection.prototype.isPending = function () {
	    return (this._bitField & 50397184) === 0;
	};
	
	var isResolved = PromiseInspection.prototype.isResolved = function () {
	    return (this._bitField & 50331648) !== 0;
	};
	
	PromiseInspection.prototype.isCancelled =
	Promise.prototype._isCancelled = function() {
	    return (this._bitField & 65536) === 65536;
	};
	
	Promise.prototype.isCancelled = function() {
	    return this._target()._isCancelled();
	};
	
	Promise.prototype.isPending = function() {
	    return isPending.call(this._target());
	};
	
	Promise.prototype.isRejected = function() {
	    return isRejected.call(this._target());
	};
	
	Promise.prototype.isFulfilled = function() {
	    return isFulfilled.call(this._target());
	};
	
	Promise.prototype.isResolved = function() {
	    return isResolved.call(this._target());
	};
	
	Promise.prototype.value = function() {
	    return value.call(this._target());
	};
	
	Promise.prototype.reason = function() {
	    var target = this._target();
	    target._unsetRejectionIsUnhandled();
	    return reason.call(target);
	};
	
	Promise.prototype._value = function() {
	    return this._settledValue();
	};
	
	Promise.prototype._reason = function() {
	    this._unsetRejectionIsUnhandled();
	    return this._settledValue();
	};
	
	Promise.PromiseInspection = PromiseInspection;
	};
	
	},{}],33:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, INTERNAL) {
	var util = _dereq_("./util");
	var errorObj = util.errorObj;
	var isObject = util.isObject;
	
	function tryConvertToPromise(obj, context) {
	    if (isObject(obj)) {
	        if (obj instanceof Promise) return obj;
	        var then = getThen(obj);
	        if (then === errorObj) {
	            if (context) context._pushContext();
	            var ret = Promise.reject(then.e);
	            if (context) context._popContext();
	            return ret;
	        } else if (typeof then === "function") {
	            if (isAnyBluebirdPromise(obj)) {
	                var ret = new Promise(INTERNAL);
	                obj._then(
	                    ret._fulfill,
	                    ret._reject,
	                    undefined,
	                    ret,
	                    null
	                );
	                return ret;
	            }
	            return doThenable(obj, then, context);
	        }
	    }
	    return obj;
	}
	
	function doGetThen(obj) {
	    return obj.then;
	}
	
	function getThen(obj) {
	    try {
	        return doGetThen(obj);
	    } catch (e) {
	        errorObj.e = e;
	        return errorObj;
	    }
	}
	
	var hasProp = {}.hasOwnProperty;
	function isAnyBluebirdPromise(obj) {
	    try {
	        return hasProp.call(obj, "_promise0");
	    } catch (e) {
	        return false;
	    }
	}
	
	function doThenable(x, then, context) {
	    var promise = new Promise(INTERNAL);
	    var ret = promise;
	    if (context) context._pushContext();
	    promise._captureStackTrace();
	    if (context) context._popContext();
	    var synchronous = true;
	    var result = util.tryCatch(then).call(x, resolve, reject);
	    synchronous = false;
	
	    if (promise && result === errorObj) {
	        promise._rejectCallback(result.e, true, true);
	        promise = null;
	    }
	
	    function resolve(value) {
	        if (!promise) return;
	        promise._resolveCallback(value);
	        promise = null;
	    }
	
	    function reject(reason) {
	        if (!promise) return;
	        promise._rejectCallback(reason, synchronous, true);
	        promise = null;
	    }
	    return ret;
	}
	
	return tryConvertToPromise;
	};
	
	},{"./util":36}],34:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function(Promise, INTERNAL, debug) {
	var util = _dereq_("./util");
	var TimeoutError = Promise.TimeoutError;
	
	function HandleWrapper(handle)  {
	    this.handle = handle;
	}
	
	HandleWrapper.prototype._resultCancelled = function() {
	    clearTimeout(this.handle);
	};
	
	var afterValue = function(value) { return delay(+this).thenReturn(value); };
	var delay = Promise.delay = function (ms, value) {
	    var ret;
	    var handle;
	    if (value !== undefined) {
	        ret = Promise.resolve(value)
	                ._then(afterValue, null, null, ms, undefined);
	        if (debug.cancellation() && value instanceof Promise) {
	            ret._setOnCancel(value);
	        }
	    } else {
	        ret = new Promise(INTERNAL);
	        handle = setTimeout(function() { ret._fulfill(); }, +ms);
	        if (debug.cancellation()) {
	            ret._setOnCancel(new HandleWrapper(handle));
	        }
	    }
	    ret._setAsyncGuaranteed();
	    return ret;
	};
	
	Promise.prototype.delay = function (ms) {
	    return delay(ms, this);
	};
	
	var afterTimeout = function (promise, message, parent) {
	    var err;
	    if (typeof message !== "string") {
	        if (message instanceof Error) {
	            err = message;
	        } else {
	            err = new TimeoutError("operation timed out");
	        }
	    } else {
	        err = new TimeoutError(message);
	    }
	    util.markAsOriginatingFromRejection(err);
	    promise._attachExtraTrace(err);
	    promise._reject(err);
	
	    if (parent != null) {
	        parent.cancel();
	    }
	};
	
	function successClear(value) {
	    clearTimeout(this.handle);
	    return value;
	}
	
	function failureClear(reason) {
	    clearTimeout(this.handle);
	    throw reason;
	}
	
	Promise.prototype.timeout = function (ms, message) {
	    ms = +ms;
	    var ret, parent;
	
	    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
	        if (ret.isPending()) {
	            afterTimeout(ret, message, parent);
	        }
	    }, ms));
	
	    if (debug.cancellation()) {
	        parent = this.then();
	        ret = parent._then(successClear, failureClear,
	                            undefined, handleWrapper, undefined);
	        ret._setOnCancel(handleWrapper);
	    } else {
	        ret = this._then(successClear, failureClear,
	                            undefined, handleWrapper, undefined);
	    }
	
	    return ret;
	};
	
	};
	
	},{"./util":36}],35:[function(_dereq_,module,exports){
	"use strict";
	module.exports = function (Promise, apiRejection, tryConvertToPromise,
	    createContext, INTERNAL, debug) {
	    var util = _dereq_("./util");
	    var TypeError = _dereq_("./errors").TypeError;
	    var inherits = _dereq_("./util").inherits;
	    var errorObj = util.errorObj;
	    var tryCatch = util.tryCatch;
	    var NULL = {};
	
	    function thrower(e) {
	        setTimeout(function(){throw e;}, 0);
	    }
	
	    function castPreservingDisposable(thenable) {
	        var maybePromise = tryConvertToPromise(thenable);
	        if (maybePromise !== thenable &&
	            typeof thenable._isDisposable === "function" &&
	            typeof thenable._getDisposer === "function" &&
	            thenable._isDisposable()) {
	            maybePromise._setDisposable(thenable._getDisposer());
	        }
	        return maybePromise;
	    }
	    function dispose(resources, inspection) {
	        var i = 0;
	        var len = resources.length;
	        var ret = new Promise(INTERNAL);
	        function iterator() {
	            if (i >= len) return ret._fulfill();
	            var maybePromise = castPreservingDisposable(resources[i++]);
	            if (maybePromise instanceof Promise &&
	                maybePromise._isDisposable()) {
	                try {
	                    maybePromise = tryConvertToPromise(
	                        maybePromise._getDisposer().tryDispose(inspection),
	                        resources.promise);
	                } catch (e) {
	                    return thrower(e);
	                }
	                if (maybePromise instanceof Promise) {
	                    return maybePromise._then(iterator, thrower,
	                                              null, null, null);
	                }
	            }
	            iterator();
	        }
	        iterator();
	        return ret;
	    }
	
	    function Disposer(data, promise, context) {
	        this._data = data;
	        this._promise = promise;
	        this._context = context;
	    }
	
	    Disposer.prototype.data = function () {
	        return this._data;
	    };
	
	    Disposer.prototype.promise = function () {
	        return this._promise;
	    };
	
	    Disposer.prototype.resource = function () {
	        if (this.promise().isFulfilled()) {
	            return this.promise().value();
	        }
	        return NULL;
	    };
	
	    Disposer.prototype.tryDispose = function(inspection) {
	        var resource = this.resource();
	        var context = this._context;
	        if (context !== undefined) context._pushContext();
	        var ret = resource !== NULL
	            ? this.doDispose(resource, inspection) : null;
	        if (context !== undefined) context._popContext();
	        this._promise._unsetDisposable();
	        this._data = null;
	        return ret;
	    };
	
	    Disposer.isDisposer = function (d) {
	        return (d != null &&
	                typeof d.resource === "function" &&
	                typeof d.tryDispose === "function");
	    };
	
	    function FunctionDisposer(fn, promise, context) {
	        this.constructor$(fn, promise, context);
	    }
	    inherits(FunctionDisposer, Disposer);
	
	    FunctionDisposer.prototype.doDispose = function (resource, inspection) {
	        var fn = this.data();
	        return fn.call(resource, resource, inspection);
	    };
	
	    function maybeUnwrapDisposer(value) {
	        if (Disposer.isDisposer(value)) {
	            this.resources[this.index]._setDisposable(value);
	            return value.promise();
	        }
	        return value;
	    }
	
	    function ResourceList(length) {
	        this.length = length;
	        this.promise = null;
	        this[length-1] = null;
	    }
	
	    ResourceList.prototype._resultCancelled = function() {
	        var len = this.length;
	        for (var i = 0; i < len; ++i) {
	            var item = this[i];
	            if (item instanceof Promise) {
	                item.cancel();
	            }
	        }
	    };
	
	    Promise.using = function () {
	        var len = arguments.length;
	        if (len < 2) return apiRejection(
	                        "you must pass at least 2 arguments to Promise.using");
	        var fn = arguments[len - 1];
	        if (typeof fn !== "function") {
	            return apiRejection("expecting a function but got " + util.classString(fn));
	        }
	        var input;
	        var spreadArgs = true;
	        if (len === 2 && Array.isArray(arguments[0])) {
	            input = arguments[0];
	            len = input.length;
	            spreadArgs = false;
	        } else {
	            input = arguments;
	            len--;
	        }
	        var resources = new ResourceList(len);
	        for (var i = 0; i < len; ++i) {
	            var resource = input[i];
	            if (Disposer.isDisposer(resource)) {
	                var disposer = resource;
	                resource = resource.promise();
	                resource._setDisposable(disposer);
	            } else {
	                var maybePromise = tryConvertToPromise(resource);
	                if (maybePromise instanceof Promise) {
	                    resource =
	                        maybePromise._then(maybeUnwrapDisposer, null, null, {
	                            resources: resources,
	                            index: i
	                    }, undefined);
	                }
	            }
	            resources[i] = resource;
	        }
	
	        var reflectedResources = new Array(resources.length);
	        for (var i = 0; i < reflectedResources.length; ++i) {
	            reflectedResources[i] = Promise.resolve(resources[i]).reflect();
	        }
	
	        var resultPromise = Promise.all(reflectedResources)
	            .then(function(inspections) {
	                for (var i = 0; i < inspections.length; ++i) {
	                    var inspection = inspections[i];
	                    if (inspection.isRejected()) {
	                        errorObj.e = inspection.error();
	                        return errorObj;
	                    } else if (!inspection.isFulfilled()) {
	                        resultPromise.cancel();
	                        return;
	                    }
	                    inspections[i] = inspection.value();
	                }
	                promise._pushContext();
	
	                fn = tryCatch(fn);
	                var ret = spreadArgs
	                    ? fn.apply(undefined, inspections) : fn(inspections);
	                var promiseCreated = promise._popContext();
	                debug.checkForgottenReturns(
	                    ret, promiseCreated, "Promise.using", promise);
	                return ret;
	            });
	
	        var promise = resultPromise.lastly(function() {
	            var inspection = new Promise.PromiseInspection(resultPromise);
	            return dispose(resources, inspection);
	        });
	        resources.promise = promise;
	        promise._setOnCancel(resources);
	        return promise;
	    };
	
	    Promise.prototype._setDisposable = function (disposer) {
	        this._bitField = this._bitField | 131072;
	        this._disposer = disposer;
	    };
	
	    Promise.prototype._isDisposable = function () {
	        return (this._bitField & 131072) > 0;
	    };
	
	    Promise.prototype._getDisposer = function () {
	        return this._disposer;
	    };
	
	    Promise.prototype._unsetDisposable = function () {
	        this._bitField = this._bitField & (~131072);
	        this._disposer = undefined;
	    };
	
	    Promise.prototype.disposer = function (fn) {
	        if (typeof fn === "function") {
	            return new FunctionDisposer(fn, this, createContext());
	        }
	        throw new TypeError();
	    };
	
	};
	
	},{"./errors":12,"./util":36}],36:[function(_dereq_,module,exports){
	"use strict";
	var es5 = _dereq_("./es5");
	var canEvaluate = typeof navigator == "undefined";
	
	var errorObj = {e: {}};
	var tryCatchTarget;
	var globalObject = typeof self !== "undefined" ? self :
	    typeof window !== "undefined" ? window :
	    typeof global !== "undefined" ? global :
	    this !== undefined ? this : null;
	
	function tryCatcher() {
	    try {
	        var target = tryCatchTarget;
	        tryCatchTarget = null;
	        return target.apply(this, arguments);
	    } catch (e) {
	        errorObj.e = e;
	        return errorObj;
	    }
	}
	function tryCatch(fn) {
	    tryCatchTarget = fn;
	    return tryCatcher;
	}
	
	var inherits = function(Child, Parent) {
	    var hasProp = {}.hasOwnProperty;
	
	    function T() {
	        this.constructor = Child;
	        this.constructor$ = Parent;
	        for (var propertyName in Parent.prototype) {
	            if (hasProp.call(Parent.prototype, propertyName) &&
	                propertyName.charAt(propertyName.length-1) !== "$"
	           ) {
	                this[propertyName + "$"] = Parent.prototype[propertyName];
	            }
	        }
	    }
	    T.prototype = Parent.prototype;
	    Child.prototype = new T();
	    return Child.prototype;
	};
	
	
	function isPrimitive(val) {
	    return val == null || val === true || val === false ||
	        typeof val === "string" || typeof val === "number";
	
	}
	
	function isObject(value) {
	    return typeof value === "function" ||
	           typeof value === "object" && value !== null;
	}
	
	function maybeWrapAsError(maybeError) {
	    if (!isPrimitive(maybeError)) return maybeError;
	
	    return new Error(safeToString(maybeError));
	}
	
	function withAppended(target, appendee) {
	    var len = target.length;
	    var ret = new Array(len + 1);
	    var i;
	    for (i = 0; i < len; ++i) {
	        ret[i] = target[i];
	    }
	    ret[i] = appendee;
	    return ret;
	}
	
	function getDataPropertyOrDefault(obj, key, defaultValue) {
	    if (es5.isES5) {
	        var desc = Object.getOwnPropertyDescriptor(obj, key);
	
	        if (desc != null) {
	            return desc.get == null && desc.set == null
	                    ? desc.value
	                    : defaultValue;
	        }
	    } else {
	        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;
	    }
	}
	
	function notEnumerableProp(obj, name, value) {
	    if (isPrimitive(obj)) return obj;
	    var descriptor = {
	        value: value,
	        configurable: true,
	        enumerable: false,
	        writable: true
	    };
	    es5.defineProperty(obj, name, descriptor);
	    return obj;
	}
	
	function thrower(r) {
	    throw r;
	}
	
	var inheritedDataKeys = (function() {
	    var excludedPrototypes = [
	        Array.prototype,
	        Object.prototype,
	        Function.prototype
	    ];
	
	    var isExcludedProto = function(val) {
	        for (var i = 0; i < excludedPrototypes.length; ++i) {
	            if (excludedPrototypes[i] === val) {
	                return true;
	            }
	        }
	        return false;
	    };
	
	    if (es5.isES5) {
	        var getKeys = Object.getOwnPropertyNames;
	        return function(obj) {
	            var ret = [];
	            var visitedKeys = Object.create(null);
	            while (obj != null && !isExcludedProto(obj)) {
	                var keys;
	                try {
	                    keys = getKeys(obj);
	                } catch (e) {
	                    return ret;
	                }
	                for (var i = 0; i < keys.length; ++i) {
	                    var key = keys[i];
	                    if (visitedKeys[key]) continue;
	                    visitedKeys[key] = true;
	                    var desc = Object.getOwnPropertyDescriptor(obj, key);
	                    if (desc != null && desc.get == null && desc.set == null) {
	                        ret.push(key);
	                    }
	                }
	                obj = es5.getPrototypeOf(obj);
	            }
	            return ret;
	        };
	    } else {
	        var hasProp = {}.hasOwnProperty;
	        return function(obj) {
	            if (isExcludedProto(obj)) return [];
	            var ret = [];
	
	            /*jshint forin:false */
	            enumeration: for (var key in obj) {
	                if (hasProp.call(obj, key)) {
	                    ret.push(key);
	                } else {
	                    for (var i = 0; i < excludedPrototypes.length; ++i) {
	                        if (hasProp.call(excludedPrototypes[i], key)) {
	                            continue enumeration;
	                        }
	                    }
	                    ret.push(key);
	                }
	            }
	            return ret;
	        };
	    }
	
	})();
	
	var thisAssignmentPattern = /this\s*\.\s*\S+\s*=/;
	function isClass(fn) {
	    try {
	        if (typeof fn === "function") {
	            var keys = es5.names(fn.prototype);
	
	            var hasMethods = es5.isES5 && keys.length > 1;
	            var hasMethodsOtherThanConstructor = keys.length > 0 &&
	                !(keys.length === 1 && keys[0] === "constructor");
	            var hasThisAssignmentAndStaticMethods =
	                thisAssignmentPattern.test(fn + "") && es5.names(fn).length > 0;
	
	            if (hasMethods || hasMethodsOtherThanConstructor ||
	                hasThisAssignmentAndStaticMethods) {
	                return true;
	            }
	        }
	        return false;
	    } catch (e) {
	        return false;
	    }
	}
	
	function toFastProperties(obj) {
	    /*jshint -W027,-W055,-W031*/
	    function FakeConstructor() {}
	    FakeConstructor.prototype = obj;
	    var l = 8;
	    while (l--) new FakeConstructor();
	    return obj;
	    eval(obj);
	}
	
	var rident = /^[a-z$_][a-z$_0-9]*$/i;
	function isIdentifier(str) {
	    return rident.test(str);
	}
	
	function filledRange(count, prefix, suffix) {
	    var ret = new Array(count);
	    for(var i = 0; i < count; ++i) {
	        ret[i] = prefix + i + suffix;
	    }
	    return ret;
	}
	
	function safeToString(obj) {
	    try {
	        return obj + "";
	    } catch (e) {
	        return "[no string representation]";
	    }
	}
	
	function isError(obj) {
	    return obj !== null &&
	           typeof obj === "object" &&
	           typeof obj.message === "string" &&
	           typeof obj.name === "string";
	}
	
	function markAsOriginatingFromRejection(e) {
	    try {
	        notEnumerableProp(e, "isOperational", true);
	    }
	    catch(ignore) {}
	}
	
	function originatesFromRejection(e) {
	    if (e == null) return false;
	    return ((e instanceof Error["__BluebirdErrorTypes__"].OperationalError) ||
	        e["isOperational"] === true);
	}
	
	function canAttachTrace(obj) {
	    return isError(obj) && es5.propertyIsWritable(obj, "stack");
	}
	
	var ensureErrorObject = (function() {
	    if (!("stack" in new Error())) {
	        return function(value) {
	            if (canAttachTrace(value)) return value;
	            try {throw new Error(safeToString(value));}
	            catch(err) {return err;}
	        };
	    } else {
	        return function(value) {
	            if (canAttachTrace(value)) return value;
	            return new Error(safeToString(value));
	        };
	    }
	})();
	
	function classString(obj) {
	    return {}.toString.call(obj);
	}
	
	function copyDescriptors(from, to, filter) {
	    var keys = es5.names(from);
	    for (var i = 0; i < keys.length; ++i) {
	        var key = keys[i];
	        if (filter(key)) {
	            try {
	                es5.defineProperty(to, key, es5.getDescriptor(from, key));
	            } catch (ignore) {}
	        }
	    }
	}
	
	var asArray = function(v) {
	    if (es5.isArray(v)) {
	        return v;
	    }
	    return null;
	};
	
	if (typeof Symbol !== "undefined" && Symbol.iterator) {
	    var ArrayFrom = typeof Array.from === "function" ? function(v) {
	        return Array.from(v);
	    } : function(v) {
	        var ret = [];
	        var it = v[Symbol.iterator]();
	        var itResult;
	        while (!((itResult = it.next()).done)) {
	            ret.push(itResult.value);
	        }
	        return ret;
	    };
	
	    asArray = function(v) {
	        if (es5.isArray(v)) {
	            return v;
	        } else if (v != null && typeof v[Symbol.iterator] === "function") {
	            return ArrayFrom(v);
	        }
	        return null;
	    };
	}
	
	var isNode = typeof process !== "undefined" &&
	        classString(process).toLowerCase() === "[object process]";
	
	function env(key, def) {
	    return isNode ? ({"NODE_ENV":"production"})[key] : def;
	}
	
	function getNativePromise() {
	    if (typeof Promise === "function") {
	        try {
	            var promise = new Promise(function(){});
	            if ({}.toString.call(promise) === "[object Promise]") {
	                return Promise;
	            }
	        } catch (e) {}
	    }
	}
	
	var ret = {
	    isClass: isClass,
	    isIdentifier: isIdentifier,
	    inheritedDataKeys: inheritedDataKeys,
	    getDataPropertyOrDefault: getDataPropertyOrDefault,
	    thrower: thrower,
	    isArray: es5.isArray,
	    asArray: asArray,
	    notEnumerableProp: notEnumerableProp,
	    isPrimitive: isPrimitive,
	    isObject: isObject,
	    isError: isError,
	    canEvaluate: canEvaluate,
	    errorObj: errorObj,
	    tryCatch: tryCatch,
	    inherits: inherits,
	    withAppended: withAppended,
	    maybeWrapAsError: maybeWrapAsError,
	    toFastProperties: toFastProperties,
	    filledRange: filledRange,
	    toString: safeToString,
	    canAttachTrace: canAttachTrace,
	    ensureErrorObject: ensureErrorObject,
	    originatesFromRejection: originatesFromRejection,
	    markAsOriginatingFromRejection: markAsOriginatingFromRejection,
	    classString: classString,
	    copyDescriptors: copyDescriptors,
	    hasDevTools: typeof chrome !== "undefined" && chrome &&
	                 typeof chrome.loadTimes === "function",
	    isNode: isNode,
	    env: env,
	    global: globalObject,
	    getNativePromise: getNativePromise
	};
	ret.isRecentNode = ret.isNode && (function() {
	    var version = process.versions.node.split(".").map(Number);
	    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);
	})();
	
	if (ret.isNode) ret.toFastProperties(process);
	
	try {throw new Error(); } catch (e) {ret.lastLineError = e;}
	module.exports = ret;
	
	},{"./es5":13}]},{},[4])(4)
	});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(569), (function() { return this; }()), __webpack_require__(570).setImmediate))

/***/ },
/* 569 */
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	(function () {
	  try {
	    cachedSetTimeout = setTimeout;
	  } catch (e) {
	    cachedSetTimeout = function () {
	      throw new Error('setTimeout is not defined');
	    }
	  }
	  try {
	    cachedClearTimeout = clearTimeout;
	  } catch (e) {
	    cachedClearTimeout = function () {
	      throw new Error('clearTimeout is not defined');
	    }
	  }
	} ())
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = cachedSetTimeout.call(null, cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    cachedClearTimeout.call(null, timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        cachedSetTimeout.call(null, drainQueue, 0);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(571).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);
	
	  immediateIds[id] = true;
	
	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });
	
	  return id;
	};
	
	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(570).setImmediate, __webpack_require__(570).clearImmediate))

/***/ },
/* 571 */
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	
	process.nextTick = (function () {
	    var canSetImmediate = typeof window !== 'undefined'
	    && window.setImmediate;
	    var canPost = typeof window !== 'undefined'
	    && window.postMessage && window.addEventListener
	    ;
	
	    if (canSetImmediate) {
	        return function (f) { return window.setImmediate(f) };
	    }
	
	    if (canPost) {
	        var queue = [];
	        window.addEventListener('message', function (ev) {
	            var source = ev.source;
	            if ((source === window || source === null) && ev.data === 'process-tick') {
	                ev.stopPropagation();
	                if (queue.length > 0) {
	                    var fn = queue.shift();
	                    fn();
	                }
	            }
	        }, true);
	
	        return function nextTick(fn) {
	            queue.push(fn);
	            window.postMessage('process-tick', '*');
	        };
	    }
	
	    return function nextTick(fn) {
	        setTimeout(fn, 0);
	    };
	})();
	
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	}
	
	// TODO(shtylman)
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};


/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _bluebird = __webpack_require__(568);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	var _loadScript = __webpack_require__(573);
	
	var _loadScript2 = _interopRequireDefault(_loadScript);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	    var iframeAPIReady = undefined;
	
	    /**
	     * A promise that is resolved when window.onYouTubeIframeAPIReady is called.
	     * The promise is resolved with a reference to window.YT object.
	     *
	     * @param {Function} resolve
	     * @member {Object} iframeAPIReady
	     */
	    iframeAPIReady = new _bluebird2.default(function (resolve) {
	        var previous = undefined;
	
	        previous = window.onYouTubeIframeAPIReady;
	
	        // The API will call this function when page has finished downloading
	        // the JavaScript for the player API.
	        window.onYouTubeIframeAPIReady = function () {
	            if (previous) {
	                previous();
	            }
	
	            resolve(window.YT);
	        };
	    });
	
	    (0, _loadScript2.default)('https://www.youtube.com/iframe_api');
	
	    return iframeAPIReady;
	};
	
	module.exports = exports['default'];
	//# sourceMappingURL=loadYouTubeIframeAPI.js.map


/***/ },
/* 573 */
/***/ function(module, exports) {

	
	module.exports = function load (src, opts, cb) {
	  var head = document.head || document.getElementsByTagName('head')[0]
	  var script = document.createElement('script')
	
	  if (typeof opts === 'function') {
	    cb = opts
	    opts = {}
	  }
	
	  opts = opts || {}
	  cb = cb || function() {}
	
	  script.type = opts.type || 'text/javascript'
	  script.charset = opts.charset || 'utf8';
	  script.async = 'async' in opts ? !!opts.async : true
	  script.src = src
	
	  if (opts.attrs) {
	    setAttributes(script, opts.attrs)
	  }
	
	  if (opts.text) {
	    script.text = '' + opts.text
	  }
	
	  var onend = 'onload' in script ? stdOnEnd : ieOnEnd
	  onend(script, cb)
	
	  // some good legacy browsers (firefox) fail the 'in' detection above
	  // so as a fallback we always set onload
	  // old IE will ignore this and new IE will set onload
	  if (!script.onload) {
	    stdOnEnd(script, cb);
	  }
	
	  head.appendChild(script)
	}
	
	function setAttributes(script, attrs) {
	  for (var attr in attrs) {
	    script.setAttribute(attr, attrs[attr]);
	  }
	}
	
	function stdOnEnd (script, cb) {
	  script.onload = function () {
	    this.onerror = this.onload = null
	    cb(null, script)
	  }
	  script.onerror = function () {
	    // this.onload = null here is necessary
	    // because even IE9 works not like others
	    this.onerror = this.onload = null
	    cb(new Error('Failed to load ' + this.src), script)
	  }
	}
	
	function ieOnEnd (script, cb) {
	  script.onreadystatechange = function () {
	    if (this.readyState != 'complete' && this.readyState != 'loaded') return
	    this.onreadystatechange = null
	    cb(null, script) // there is no way to catch loading errors in IE8
	  }
	}


/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _upperFirst2 = __webpack_require__(575);
	
	var _upperFirst3 = _interopRequireDefault(_upperFirst2);
	
	var _forEach2 = __webpack_require__(581);
	
	var _forEach3 = _interopRequireDefault(_forEach2);
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _functionNames = __webpack_require__(583);
	
	var _functionNames2 = _interopRequireDefault(_functionNames);
	
	var _eventNames = __webpack_require__(584);
	
	var _eventNames2 = _interopRequireDefault(_eventNames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var YouTubePlayer = undefined;
	
	YouTubePlayer = {};
	
	/**
	 * Construct an object that defines an event handler for all of the YouTube
	 * player events. Proxy captured events through an event emitter.
	 *
	 * @todo Capture event parameters.
	 * @see https://developers.google.com/youtube/iframe_api_reference#Events
	 * @param {Sister} emitter
	 * @returns {Object}
	 */
	YouTubePlayer.proxyEvents = function (emitter) {
	    var events = undefined;
	
	    events = {};
	
	    (0, _forEach3.default)(_eventNames2.default, function (eventName) {
	        var onEventName = undefined;
	
	        onEventName = 'on' + (0, _upperFirst3.default)(eventName);
	
	        events[onEventName] = function (event) {
	            emitter.trigger(eventName, event);
	        };
	    });
	
	    return events;
	};
	
	/**
	 * Delays player API method execution until player state is ready.
	 *
	 * @todo Proxy all of the methods using Object.keys.
	 * @param {Promise} playerAPIReady Promise that resolves when player is ready.
	 * @returns {Object}
	 */
	YouTubePlayer.promisifyPlayer = function (playerAPIReady) {
	    var functions = undefined;
	
	    functions = {};
	
	    (0, _forEach3.default)(_functionNames2.default, function (functionName) {
	        functions[functionName] = function () {
	            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	                args[_key] = arguments[_key];
	            }
	
	            return playerAPIReady.then(function (player) {
	                return player[functionName].apply(player, args);
	            });
	        };
	    });
	
	    return functions;
	};
	
	exports.default = YouTubePlayer;
	module.exports = exports['default'];
	//# sourceMappingURL=YouTubePlayer.js.map


/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	var createCaseFirst = __webpack_require__(576);
	
	/**
	 * Converts the first character of `string` to upper case.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.upperFirst('fred');
	 * // => 'Fred'
	 *
	 * _.upperFirst('FRED');
	 * // => 'FRED'
	 */
	var upperFirst = createCaseFirst('toUpperCase');
	
	module.exports = upperFirst;


/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	var castSlice = __webpack_require__(577),
	    reHasComplexSymbol = __webpack_require__(579),
	    stringToArray = __webpack_require__(580),
	    toString = __webpack_require__(337);
	
	/**
	 * Creates a function like `_.lowerFirst`.
	 *
	 * @private
	 * @param {string} methodName The name of the `String` case method to use.
	 * @returns {Function} Returns the new case function.
	 */
	function createCaseFirst(methodName) {
	  return function(string) {
	    string = toString(string);
	
	    var strSymbols = reHasComplexSymbol.test(string)
	      ? stringToArray(string)
	      : undefined;
	
	    var chr = strSymbols
	      ? strSymbols[0]
	      : string.charAt(0);
	
	    var trailing = strSymbols
	      ? castSlice(strSymbols, 1).join('')
	      : string.slice(1);
	
	    return chr[methodName]() + trailing;
	  };
	}
	
	module.exports = createCaseFirst;


/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(578);
	
	/**
	 * Casts `array` to a slice if it's needed.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {number} start The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the cast slice.
	 */
	function castSlice(array, start, end) {
	  var length = array.length;
	  end = end === undefined ? length : end;
	  return (!start && end >= length) ? array : baseSlice(array, start, end);
	}
	
	module.exports = castSlice;


/***/ },
/* 578 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;
	
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;
	
	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}
	
	module.exports = baseSlice;


/***/ },
/* 579 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';
	
	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');
	
	module.exports = reHasComplexSymbol;


/***/ },
/* 580 */
/***/ function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	    rsComboSymbolsRange = '\\u20d0-\\u20f0',
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Converts `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function stringToArray(string) {
	  return string.match(reComplexSymbol);
	}
	
	module.exports = stringToArray;


/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(582),
	    baseEach = __webpack_require__(349),
	    baseIteratee = __webpack_require__(255),
	    isArray = __webpack_require__(252);
	
	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _([1, 2]).forEach(function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, baseIteratee(iteratee, 3));
	}
	
	module.exports = forEach;


/***/ },
/* 582 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ },
/* 583 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * @see https://developers.google.com/youtube/iframe_api_reference#Functions
	 */
	exports.default = ['cueVideoById', 'loadVideoById', 'cueVideoByUrl', 'loadVideoByUrl', 'playVideo', 'pauseVideo', 'stopVideo', 'clearVideo', 'getVideoBytesLoaded', 'getVideoBytesTotal', 'getVideoLoadedFraction', 'getVideoStartBytes', 'cuePlaylist', 'loadPlaylist', 'nextVideo', 'previousVideo', 'playVideoAt', 'setShuffle', 'setLoop', 'getPlaylist', 'getPlaylistIndex', 'getPlaylistId', 'loadModule', 'unloadModule', 'setOption', 'mute', 'unMute', 'isMuted', 'setVolume', 'getVolume', 'seekTo', 'getPlayerState', 'getPlaybackRate', 'setPlaybackRate', 'getAvailablePlaybackRates', 'getPlaybackQuality', 'setPlaybackQuality', 'getAvailableQualityLevels', 'getCurrentTime', 'getDuration', 'removeEventListener', 'getVideoUrl', 'getDebugText', 'getVideoData', 'addCueRange', 'removeCueRange', 'getApiInterface', 'showVideoInfo', 'hideVideoInfo', 'G', 'C', 'R', 'aa', '$', 'Z', 'getVideoEmbedCode', 'getOptions', 'getOption', 'Y', 'X', 'addEventListener', 'destroy', 'A', 'P', 'J', 'setSize', 'getIframe'];
	module.exports = exports['default'];
	//# sourceMappingURL=functionNames.js.map


/***/ },
/* 584 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * @see https://developers.google.com/youtube/iframe_api_reference#Events
	 */
	exports.default = ['ready', 'stateChange', 'playbackQualityChange', 'playbackRateChange', 'error', 'apiChange'];
	module.exports = exports['default'];
	//# sourceMappingURL=eventNames.js.map


/***/ },
/* 585 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_play":"index__play_3J_","video":"index_video_ApY tachyons_pointer_25K index__play_3J_","caption":"index_caption_10L tachyons_f6_14U tachyons_fw3_3xI tachyons_mt1_3Hm tachyons_silver_3lN"};

/***/ },
/* 586 */,
/* 587 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  content: {
	    boxShadow: '2px 2px 8px 0px rgba(0, 0, 0, 0.2)',
	    top: '50%',
	    left: '50%',
	    right: 'auto',
	    bottom: 'auto',
	    marginRight: '-50%',
	    transform: 'translate(-50%, -50%)',
	    zIndex: 20
	  }
	};
	module.exports = exports['default'];

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "71531685d4dc169a16015de030d3af3a.png";

/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "52db84fcabda7a563259eca747f7e68b.png";

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "dcc1d163b9ed2a1b837883d42ae8115b.png";

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f67339de28c30289780b3b0bfa2e4508.png";

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e4c7ebad64587796c159991b9fc88da2.png";

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cdb77423deb17e90ed4346d8be60bd52.png";

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a2c3e6df9bd0eb4efeb1f5786403d155.png";

/***/ },
/* 595 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"columns":"index_columns_2g- theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_34u theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_2nD tachyons_mt2_3dR tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN"};

/***/ },
/* 596 */,
/* 597 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _cloudUpload = __webpack_require__(598);
	
	var _cloudUpload2 = _interopRequireDefault(_cloudUpload);
	
	var _diamond = __webpack_require__(599);
	
	var _diamond2 = _interopRequireDefault(_diamond);
	
	var _questionCircle = __webpack_require__(600);
	
	var _questionCircle2 = _interopRequireDefault(_questionCircle);
	
	var _spaceShuttle = __webpack_require__(601);
	
	var _spaceShuttle2 = _interopRequireDefault(_spaceShuttle);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Anchor = __webpack_require__(544);
	
	var _Anchor2 = _interopRequireDefault(_Anchor);
	
	var _Code = __webpack_require__(602);
	
	var _Code2 = _interopRequireDefault(_Code);
	
	var _DefineItem = __webpack_require__(506);
	
	var _DefineItem2 = _interopRequireDefault(_DefineItem);
	
	var _DefineList = __webpack_require__(509);
	
	var _DefineList2 = _interopRequireDefault(_DefineList);
	
	var _DefineTitle = __webpack_require__(512);
	
	var _DefineTitle2 = _interopRequireDefault(_DefineTitle);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _ListOrder = __webpack_require__(605);
	
	var _ListOrder2 = _interopRequireDefault(_ListOrder);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _Strong = __webpack_require__(523);
	
	var _Strong2 = _interopRequireDefault(_Strong);
	
	var _SubTitle = __webpack_require__(535);
	
	var _SubTitle2 = _interopRequireDefault(_SubTitle);
	
	var _Table = __webpack_require__(608);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _TableHead = __webpack_require__(611);
	
	var _TableHead2 = _interopRequireDefault(_TableHead);
	
	var _TableBody = __webpack_require__(614);
	
	var _TableBody2 = _interopRequireDefault(_TableBody);
	
	var _TableRow = __webpack_require__(617);
	
	var _TableRow2 = _interopRequireDefault(_TableRow);
	
	var _TableTitle = __webpack_require__(620);
	
	var _TableTitle2 = _interopRequireDefault(_TableTitle);
	
	var _TableCell = __webpack_require__(623);
	
	var _TableCell2 = _interopRequireDefault(_TableCell);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _business = __webpack_require__(626);
	
	var _business2 = _interopRequireDefault(_business);
	
	var _index = __webpack_require__(627);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionBusiness = (props, { config }) => {
	  const { contact, links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          { lead: true },
	          'At Numenta we believe that the coming era of machine intelligence will be based on biological principles. Our mission is to lead the emerging field of machine intelligence by understanding the neocortex and by building technology that reflects that understanding. To serve this mission, we strive both to create an active research community as well as to enable strong commercial opportunities.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'In creating a business strategy and our approach to intellectual property, we follow these general principles:'
	        ),
	        _react2.default.createElement(
	          _ListOrder2.default,
	          { marker: 'decimal' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _Strong2.default,
	              null,
	              'Transparency'
	            ),
	            '. We openly publish our scientific findings, software, intellectual property, and business strategy. There are no hidden agendas.'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _Strong2.default,
	              null,
	              'Scientific Use'
	            ),
	            '. Anyone can freely use our software and intellectual property for non-commercial purposes.'
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _Strong2.default,
	              null,
	              'Commercial Deployment'
	            ),
	            '. Our software can be used for free under an AGPL license. If the AGPL license is not a good fit, we offer low cost licenses that enable commercial use and create a sustainable business opportunity for Numenta.'
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(_Image2.default, {
	          alt: 'Numenta Business Office',
	          respond: 'mw',
	          src: _business2.default
	        })
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'transparency' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      { level: 2 },
	      '1. Transparency'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'We have enabled a community of researchers and developers working on HTM technology in the NuPIC open source community at ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.org },
	            links.out.org,
	            '.'
	          ),
	          ' ',
	          ' ',
	          'We post all of our application and algorithm code in NuPIC as well as our research updates as they occur. We ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.in.papers },
	            'publish our work'
	          ),
	          ' ',
	          ' ',
	          'in peer-reviewed journals and submit pre-publication manuscripts to arXiv. We also speak at a variety of forums, such as machine learning, data science, neuroscience, and application specific events. Other than confidential information relating to partner relationships, products or data, we work as much in the open as possible.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Given the uniqueness of our work and our early focus on temporal data, we have been issued over thirty U.S. and international patents. The list of issued patents ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.license },
	            'can be found here.'
	          ),
	          ' ',
	          ' ',
	          'We believe these patents cover some of the foundational principles of machine intelligence.'
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(_diamond2.default, { className: _index2.default.icon })
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'science' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      { level: 2 },
	      '2. Scientific Use'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Our software, along with its associated IP, is available at ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.org },
	            links.out.org
	          ),
	          ' under the AGPLv3 license at no cost. Scientists, researchers, and students are able to use our technology by agreeing to the terms of this open source license. For those researchers who are unable to use the AGPLv3 license, we have created a separate, no-cost, non-commercial, ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.trial },
	            'trial license.'
	          )
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'For those scientists and researchers who want to use our intellectual property without our software, or whose work may be covered by our patents, we make a clear statement of non-assertion: as long as your work is for non-commercial use, we will not assert our patents.'
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(_spaceShuttle2.default, { className: _index2.default.icon })
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'deployment' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      { level: 2 },
	      '3. Commercial Deployment'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'In our terminology, commercial use means using the technology or patents to create a product or service that is sold, licensed, hosted, or offered to customers or business partners as standalone functionality or as part of another product, whether for a fee or not. In addition, commercial use includes deploying the technology or patents internally to be used in any business process. For example, if you use our technology or patents internally to monitor performance of your IT servers, even if you don’t offer it to others, we view this as commercial use.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Commercial partners are welcome to use our software under the terms of the AGPLv3 license.  For those who want to distribute derivative software and do not want to accept these terms, we have a ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.license },
	            'commercial license available'
	          ),
	          ', which may change as we develop our business.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'For those who do not want to license our software but want to license our patents, we will offer a patent-only license. Our intention is to offer low-cost ways for partners to commercialize this technology. We believe that a broad- based strategy is compelling for a technology that is likely to be widely deployed in time. Please contact us at ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: `mailto:${ contact.email.sales }` },
	            contact.email.sales
	          ),
	          ' ',
	          ' ',
	          'if you are interested in this license.'
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(_cloudUpload2.default, { className: _index2.default.icon })
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'licenses' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      { level: 3 },
	      'Summary of Numenta Licenses'
	    ),
	    _react2.default.createElement(
	      _Table2.default,
	      null,
	      _react2.default.createElement(
	        _TableHead2.default,
	        null,
	        _react2.default.createElement(
	          _TableRow2.default,
	          null,
	          _react2.default.createElement(_TableTitle2.default, null),
	          _react2.default.createElement(
	            _TableTitle2.default,
	            { colSpan: 3 },
	            'Software (includes IP)'
	          ),
	          _react2.default.createElement(
	            _TableTitle2.default,
	            null,
	            'Patents Only'
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _TableBody2.default,
	        null,
	        _react2.default.createElement(
	          _TableRow2.default,
	          null,
	          _react2.default.createElement(
	            _TableCell2.default,
	            null,
	            _react2.default.createElement(
	              _Strong2.default,
	              null,
	              'Scientists, Researchers, or any Non-commercial use'
	            )
	          ),
	          _react2.default.createElement(
	            _TableCell2.default,
	            { colSpan: 3 },
	            'AGPLv3 or trial license (both no cost)'
	          ),
	          _react2.default.createElement(
	            _TableCell2.default,
	            null,
	            'Non-assert statement for non-commercial purposes'
	          )
	        ),
	        _react2.default.createElement(
	          _TableRow2.default,
	          null,
	          _react2.default.createElement(
	            _TableCell2.default,
	            null,
	            _react2.default.createElement(
	              _Strong2.default,
	              null,
	              'Commercial use'
	            )
	          ),
	          _react2.default.createElement(
	            _TableCell2.default,
	            null,
	            'Do not distribute software: AGPLv3 (no cost)'
	          ),
	          _react2.default.createElement(
	            _TableCell2.default,
	            null,
	            'Distribute software, distribute source code: AGPLv3 (no cost)'
	          ),
	          _react2.default.createElement(
	            _TableCell2.default,
	            null,
	            'Distribute software, keep source code proprietary: Commercial license (fee)'
	          ),
	          _react2.default.createElement(
	            _TableCell2.default,
	            null,
	            'Patent license (under development – fee TBD)'
	          )
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'faq' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      { level: 3 },
	      'Numenta Licensing FAQ'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.faq },
	          _react2.default.createElement(
	            _DefineList2.default,
	            null,
	            _react2.default.createElement(
	              _DefineTitle2.default,
	              null,
	              'I operate a business. Why wouldn’t I use the free AGPL version for my product?'
	            ),
	            _react2.default.createElement(
	              _DefineItem2.default,
	              null,
	              'You are welcome to do so under the terms of that license. AGPL is a “copyleft” license. It requires that if you distribute or make available your software (either directly or through a SaaS model), you must also distribute the source code under the AGPL license. For some companies and some situations, that is an acceptable requirement. However, companies who want to keep the resulting code proprietary will prefer a commercial license.'
	            ),
	            _react2.default.createElement(
	              _DefineTitle2.default,
	              null,
	              'If I do not intend to distribute or make available as a SaaS implementation any derivative software, then it seems to me that I can use the AGPL version internally without any additional license, even if it is for a commercial purpose. For example, I run a hedge fund and I figured out how to use NuPIC to advantage, but I don’t distribute the software or results, nor do I make it available to others. Is this correct?'
	            ),
	            _react2.default.createElement(
	              _DefineItem2.default,
	              null,
	              'Generally you may use the software and patents for internal use under the AGPL. Note, however, if you do not use our open-source software (and thus do not fall under the AGPL), you WOULD need a license for our IP. For example, say you do your own, very specific version of HTM for your hedge fund. Once you deploy that within your company for any productive purpose (as opposed to research), you would need an IP license from us because you are not under the AGPL.'
	            ),
	            _react2.default.createElement(
	              _DefineTitle2.default,
	              null,
	              'I’m a researcher who uses different machine learning techniques. I’m trying to add capabilities that are similar to Numenta, i.e. using temporal data streams in a hierarchy, but I’m not using your software. What are my obligations relative to Numenta?'
	            ),
	            _react2.default.createElement(
	              _DefineItem2.default,
	              null,
	              'For researchers who are doing work that is covered by Numenta patents, we have promised to not assert our patents for any non-commercial use including publications, teaching, and experimentation. We do ask that you provide appropriate citations of our work.',
	              _react2.default.createElement(
	                _Paragraph2.default,
	                null,
	                _react2.default.createElement(
	                  _Strong2.default,
	                  null,
	                  'End Reference Example'
	                ),
	                _react2.default.createElement(
	                  _Code2.default,
	                  null,
	                  'Hawkins, J. et al. 2016. Biological and Machine Intelligence.',
	                  _react2.default.createElement('br', null),
	                  '   Release 0.4. Accessed at',
	                  _react2.default.createElement('br', null),
	                  '   http://numenta.com/biological-and-machine-intelligence/.'
	                )
	              ),
	              _react2.default.createElement(
	                _Paragraph2.default,
	                null,
	                'If you are a corporate researcher who is applying this technology to commercial use, then you will need to evaluate the Numenta patent portfolio to see if our patents cover your work. If so, you should contact us to explore a patent license.'
	              )
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(_questionCircle2.default, { className: _index2.default.icon })
	      )
	    )
	  );
	};
	
	SectionBusiness.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SectionBusiness;
	module.exports = exports['default'];

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaCloudUpload = function (_React$Component) {
	    _inherits(FaCloudUpload, _React$Component);
	
	    function FaCloudUpload() {
	        _classCallCheck(this, FaCloudUpload);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaCloudUpload).apply(this, arguments));
	    }
	
	    _createClass(FaCloudUpload, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm26.6 19.3q0-0.3-0.2-0.4l-7.3-7.4q-0.2-0.1-0.5-0.1t-0.5 0.1l-7.3 7.3q-0.2 0.3-0.2 0.5 0 0.3 0.2 0.5t0.5 0.2h4.6v7.3q0 0.3 0.2 0.5t0.5 0.2h4q0.3 0 0.5-0.2t0.2-0.5v-7.3h4.6q0.3 0 0.5-0.2t0.2-0.5z m13.3 6q0 3.3-2.4 5.7t-5.6 2.3h-22.6q-3.8 0-6.6-2.7t-2.7-6.6q0-2.7 1.5-5t3.9-3.4q-0.1-0.6-0.1-0.9 0-4.4 3.1-7.5t7.5-3.1q3.3 0 6 1.8t3.9 4.8q1.5-1.3 3.4-1.3 2.2 0 3.8 1.5t1.5 3.8q0 1.6-0.8 2.8 2.7 0.7 4.4 2.9t1.8 4.9z' })
	                )
	            );
	        }
	    }]);
	
	    return FaCloudUpload;
	}(React.Component);
	
	exports.default = FaCloudUpload;
	module.exports = exports['default'];

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaDiamond = function (_React$Component) {
	    _inherits(FaDiamond, _React$Component);
	
	    function FaDiamond() {
	        _classCallCheck(this, FaDiamond);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaDiamond).apply(this, arguments));
	    }
	
	    _createClass(FaDiamond, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm4.1 17.5l12.1 12.9-5.8-12.9h-6.3z m15.8 15l6.7-15h-13.5z m-9.5-17.5l4-7.4h-5.1l-5.6 7.4h6.7z m13.1 15.4l12.1-12.9h-6.2z m-10.2-15.4h13.2l-4-7.4h-5.3z m16 0h6.7l-5.6-7.4h-5.1z m2.7-9.4l7.5 9.9q0.3 0.4 0.3 0.8t-0.4 0.8l-18.6 19.9q-0.4 0.4-0.9 0.4t-0.9-0.4l-18.7-19.9q-0.3-0.3-0.3-0.8t0.3-0.8l7.4-9.9q0.4-0.5 1-0.5h22.4q0.6 0 0.9 0.5z' })
	                )
	            );
	        }
	    }]);
	
	    return FaDiamond;
	}(React.Component);
	
	exports.default = FaDiamond;
	module.exports = exports['default'];

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaQuestionCircle = function (_React$Component) {
	    _inherits(FaQuestionCircle, _React$Component);
	
	    function FaQuestionCircle() {
	        _classCallCheck(this, FaQuestionCircle);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaQuestionCircle).apply(this, arguments));
	    }
	
	    _createClass(FaQuestionCircle, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm23 30.7v-4.3q0-0.3-0.2-0.5t-0.5-0.2h-4.3q-0.3 0-0.5 0.2t-0.2 0.5v4.3q0 0.3 0.2 0.5t0.5 0.2h4.3q0.3 0 0.5-0.2t0.2-0.5z m5.7-15q0-2-1.2-3.6t-3.1-2.6-3.8-0.9q-5.4 0-8.3 4.7-0.3 0.6 0.2 1l2.9 2.2q0.2 0.1 0.5 0.1 0.3 0 0.5-0.2 1.2-1.6 1.9-2.1 0.8-0.5 2-0.5 1 0 1.9 0.6t0.8 1.3q0 0.8-0.4 1.3t-1.6 1q-1.4 0.7-2.5 2t-1.2 2.8v0.8q0 0.3 0.2 0.5t0.5 0.2h4.3q0.3 0 0.5-0.2t0.2-0.5q0-0.5 0.5-1.1t1.2-1.1q0.7-0.4 1.1-0.7t1-0.8 1-1 0.6-1.4 0.3-1.8z m8.6 4.3q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z' })
	                )
	            );
	        }
	    }]);
	
	    return FaQuestionCircle;
	}(React.Component);
	
	exports.default = FaQuestionCircle;
	module.exports = exports['default'];

/***/ },
/* 601 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaSpaceShuttle = function (_React$Component) {
	    _inherits(FaSpaceShuttle, _React$Component);
	
	    function FaSpaceShuttle() {
	        _classCallCheck(this, FaSpaceShuttle);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaSpaceShuttle).apply(this, arguments));
	    }
	
	    _createClass(FaSpaceShuttle, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm11.3 24.1q-2 1.1-4.9 1.1h-2.3v-1.1h-1.2q-0.2 0-0.4-0.4t-0.2-1.1q0-0.4 0.2-0.9-1.1 0-1.8-0.2t-0.7-0.3 0.7-0.4 1.8-0.2q-0.2-0.5-0.2-0.9 0-0.6 0.2-1t0.4-0.5h1.2v-1.1h2.3q2.9 0 4.9 1.1h20.3q0.7 0.2 1.9 0.4t1.5 0.2q1.6 0.3 2.7 0.8t1.5 0.8 0.4 0.8-0.4 0.7-1.5 0.9-2.7 0.7q-0.3 0.1-1.5 0.3t-1.9 0.3h-20.3z m20.4-4.6q1 0.6 1 1.7t-1 1.6l1.5 0.6q1.2-0.9 1.2-2.2t-1.2-2.3z m-20.3 4.9h18.5q-4 0.7-8.3 1.4-1.1 0-2.1 0.5t-1.5 0.8l-0.5 0.5-5.3 5.2q-0.4 0.5-1.2 0.8t-1.7 0.4h-1.7l-1.7-8.5h0.5q2.9 0 5-1.1z m-5-7.6h-0.5l1.7-8.5h1.7q0.9 0 1.7 0.4t1.2 0.8l5.3 5.3q0.1 0 0.2 0.1t0.5 0.5 0.9 0.5 1.2 0.4 1.3 0.2l8.3 1.5h-18.5q-2.1-1.2-5-1.2z' })
	                )
	            );
	        }
	    }]);
	
	    return FaSpaceShuttle;
	}(React.Component);
	
	exports.default = FaSpaceShuttle;
	module.exports = exports['default'];

/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(603);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Code = ({ children }) => _react2.default.createElement(
	  'code',
	  { className: _index2.default.code },
	  children
	);
	
	Code.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = Code;
	module.exports = exports['default'];

/***/ },
/* 603 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"code":"index_code_2cu tachyons_bg-light-gray_2vM tachyons_db_32y tachyons_f6_14U tachyons_lh-copy_15f tachyons_mb4_3KK tachyons_nowrap_3x4 tachyons_overflow-auto_1h0 tachyons_ph3_Qxl tachyons_pv2_1UD"};

/***/ },
/* 604 */,
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(606);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const ListOrder = ({ children, marker }) => {
	  const childrenWithProps = _react2.default.Children.map(children, child => _react2.default.cloneElement(child, { marker }));
	
	  return _react2.default.createElement(
	    'ol',
	    { className: _index2.default.ol },
	    childrenWithProps
	  );
	};
	
	ListOrder.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  marker: _react2.default.PropTypes.oneOf(['decimal'])
	};
	
	exports.default = ListOrder;
	module.exports = exports['default'];

/***/ },
/* 606 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"ol":"index_ol_X9V tachyons_list_amB tachyons_mb4_3KK tachyons_pl0_3tn"};

/***/ },
/* 607 */,
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(609);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Table = ({ children }) => _react2.default.createElement(
	  'table',
	  { className: _index2.default.table },
	  children
	);
	
	Table.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = Table;
	module.exports = exports['default'];

/***/ },
/* 609 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"table":"index_table_2tq tachyons_b--black-10_14L tachyons_bb_GPu tachyons_br_1TI tachyons_br2_rOa tachyons_collapse_vfH tachyons_mb4_3KK"};

/***/ },
/* 610 */,
/* 611 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(612);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const TableHeader = ({ children }) => _react2.default.createElement(
	  'thead',
	  { className: _index2.default.tableHeader },
	  children
	);
	
	TableHeader.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = TableHeader;
	module.exports = exports['default'];

/***/ },
/* 612 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"tableHeader":"index_tableHeader_10b"};

/***/ },
/* 613 */,
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(615);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const TableBody = ({ children }) => _react2.default.createElement(
	  'tbody',
	  { className: _index2.default.tableBody },
	  children
	);
	
	TableBody.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = TableBody;
	module.exports = exports['default'];

/***/ },
/* 615 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"tableBody":"index_tableBody_1ce"};

/***/ },
/* 616 */,
/* 617 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(618);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const TableRow = ({ children }) => _react2.default.createElement(
	  'tr',
	  { className: _index2.default.tableRow },
	  children
	);
	
	TableRow.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = TableRow;
	module.exports = exports['default'];

/***/ },
/* 618 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"tableRow":"index_tableRow_1vG"};

/***/ },
/* 619 */,
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(621);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const TableTitle = ({ children, colSpan }) => _react2.default.createElement(
	  'th',
	  { className: _index2.default.tableTitle, colSpan: colSpan },
	  children
	);
	
	TableTitle.propTypes = {
	  children: _react2.default.PropTypes.any,
	  colSpan: _react2.default.PropTypes.number.isRequired
	};
	
	TableTitle.defaultProps = {
	  colSpan: 1
	};
	
	exports.default = TableTitle;
	module.exports = exports['default'];

/***/ },
/* 621 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"tableTitle":"index_tableTitle_3Zd tachyons_b--black-10_14L tachyons_bg-near-white_1Oi tachyons_bl_1ft tachyons_bt_LY6 tachyons_pa2_2x2"};

/***/ },
/* 622 */,
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(624);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const TableCell = ({ children, colSpan }) => _react2.default.createElement(
	  'td',
	  { className: _index2.default.tableCell, colSpan: colSpan },
	  children
	);
	
	TableCell.propTypes = {
	  children: _react2.default.PropTypes.any,
	  colSpan: _react2.default.PropTypes.number.isRequired
	};
	
	TableCell.defaultProps = {
	  colSpan: 1
	};
	
	exports.default = TableCell;
	module.exports = exports['default'];

/***/ },
/* 624 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"tableCell":"index_tableCell_1WO tachyons_b--black-10_14L tachyons_bl_1ft tachyons_bt_LY6 tachyons_pa2_2x2 tachyons_v-top_1JD"};

/***/ },
/* 625 */,
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fec6bbc70272ab75a30222b9315a8a0f.png";

/***/ },
/* 627 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_prefix":"index__prefix_dvV","columns":"index_columns_KDn theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_2YI theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_3Hk tachyons_mt2_3dR tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN","faq":"index_faq_1Lk index__prefix_dvV","icon":"index_icon_jEz theme_color-blue-mute_20f"};

/***/ },
/* 628 */,
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _universal = __webpack_require__(376);
	
	var _Anchor = __webpack_require__(544);
	
	var _Anchor2 = _interopRequireDefault(_Anchor);
	
	var _Button = __webpack_require__(410);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _DefineItem = __webpack_require__(506);
	
	var _DefineItem2 = _interopRequireDefault(_DefineItem);
	
	var _DefineList = __webpack_require__(509);
	
	var _DefineList2 = _interopRequireDefault(_DefineList);
	
	var _DefineTitle = __webpack_require__(512);
	
	var _DefineTitle2 = _interopRequireDefault(_DefineTitle);
	
	var _Form = __webpack_require__(413);
	
	var _Form2 = _interopRequireDefault(_Form);
	
	var _FormInput = __webpack_require__(416);
	
	var _FormInput2 = _interopRequireDefault(_FormInput);
	
	var _FormLabel = __webpack_require__(419);
	
	var _FormLabel2 = _interopRequireDefault(_FormLabel);
	
	var _FormRow = __webpack_require__(630);
	
	var _FormRow2 = _interopRequireDefault(_FormRow);
	
	var _FormTextArea = __webpack_require__(633);
	
	var _FormTextArea2 = _interopRequireDefault(_FormTextArea);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _ImageLink = __webpack_require__(400);
	
	var _ImageLink2 = _interopRequireDefault(_ImageLink);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _SocialMedia = __webpack_require__(636);
	
	var _SocialMedia2 = _interopRequireDefault(_SocialMedia);
	
	var _Strong = __webpack_require__(523);
	
	var _Strong2 = _interopRequireDefault(_Strong);
	
	var _SubTitle = __webpack_require__(535);
	
	var _SubTitle2 = _interopRequireDefault(_SubTitle);
	
	var _Table = __webpack_require__(608);
	
	var _Table2 = _interopRequireDefault(_Table);
	
	var _TableBody = __webpack_require__(614);
	
	var _TableBody2 = _interopRequireDefault(_TableBody);
	
	var _TableCell = __webpack_require__(623);
	
	var _TableCell2 = _interopRequireDefault(_TableCell);
	
	var _TableRow = __webpack_require__(617);
	
	var _TableRow2 = _interopRequireDefault(_TableRow);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _careers = __webpack_require__(643);
	
	var _careers2 = _interopRequireDefault(_careers);
	
	var _celesteBaranski = __webpack_require__(644);
	
	var _celesteBaranski2 = _interopRequireDefault(_celesteBaranski);
	
	var _donnaDubinsky = __webpack_require__(645);
	
	var _donnaDubinsky2 = _interopRequireDefault(_donnaDubinsky);
	
	var _edColligan = __webpack_require__(646);
	
	var _edColligan2 = _interopRequireDefault(_edColligan);
	
	var _harrySaal = __webpack_require__(647);
	
	var _harrySaal2 = _interopRequireDefault(_harrySaal);
	
	var _jeffHawkins = __webpack_require__(648);
	
	var _jeffHawkins2 = _interopRequireDefault(_jeffHawkins);
	
	var _map = __webpack_require__(649);
	
	var _map2 = _interopRequireDefault(_map);
	
	var _mikeFarmwald = __webpack_require__(650);
	
	var _mikeFarmwald2 = _interopRequireDefault(_mikeFarmwald);
	
	var _subutaiAhmad = __webpack_require__(651);
	
	var _subutaiAhmad2 = _interopRequireDefault(_subutaiAhmad);
	
	var _index = __webpack_require__(652);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const fields = { // wufoo ids
	  first: 'Field861',
	  last: 'Field862',
	  title: 'Field757',
	  company: 'Field114',
	  email: 'Field9',
	  phone: 'Field244',
	  content: 'Field858',
	  idstamp: 'idstamp'
	};
	
	/**
	 *
	 */
	const SectionCareers = (props, { config, route }) => {
	  const { pages } = route;
	  const { contact, links } = config;
	  const posts = pages.filter(({ file }) => file.path.match(/^.*\/careers\/.*\.md/));
	  const careers = posts.sort(_universal.sortPostsDescend).map(({ data, file, path }) => _react2.default.createElement(
	    _ListItem2.default,
	    { key: file.stem },
	    _react2.default.createElement(
	      _TextLink2.default,
	      { to: path },
	      data.title
	    )
	  ));
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(_Anchor2.default, { name: 'careers' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Careers'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          { lead: true },
	          'Company culture is important to us, so why not join a startup that feels like a family? We may be busy cracking the code on machine intelligence, but we’ve got a work-hard, play-hard attitude. Our kitchen is stocked with salty and sweet snacks, and on Wednesdays we enjoy catered lunches from a variety of local restaurants.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'At the heart of the peninsula, our downtown Redwood City location is a short walk from the Caltrain station.  Outside the office, we blow off steam with company events, happy hours and other fun activities. In the past, we’ve cheered on the SF Giants, baked pies at Pie Ranch in Pescadero, and do-si-doed through the night.'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 3 },
	          'Current Openings'
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          careers
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.asideCenter },
	        _react2.default.createElement(_Image2.default, {
	          alt: 'Numenta Office Interior',
	          respond: 'mw',
	          src: _careers2.default
	        })
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'team' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Management Team'
	    ),
	    _react2.default.createElement(
	      _List2.default,
	      { copy: false },
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Donna Dubinsky'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'CEO & Co-Founder'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Donna first partnered with Jeff Hawkins at Palm, Inc. in 1992, where she served as president and CEO. She held this position throughout Palm’s acquisition by U.S Robotics and subsequently 3Com Corporation. In 1998, Donna and Jeff co-founded Handspring, creator of the category-defining Treo smartphone. Handspring merged with Palm in 2003, and Donna continued to serve on Palm’s board until 2009. Previously, Donna spent 10 years at Apple Inc. in a multitude of sales, sales support, and logistics functions—both at Apple and at Claris, an Apple software subsidiary.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Donna earned a B.A. from Yale University, and an M.B.A. from Harvard Business School. She is currently on the board of Yale University.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Donna Dubinsky',
	              respond: 'mw',
	              src: _donnaDubinsky2.default
	            })
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Jeff Hawkins'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'Co-Founder'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Jeff is an engineer, serial entrepreneur, scientist, inventor and author. His life-long interest in neuroscience and theories of the neocortex has driven his passion for building a technology based on neocortical theory. Previously, he founded two mobile computing companies, Palm and Handspring, and is the architect of many computing products such as the PalmPilot and Treo smartphone. In 2002, he founded the Redwood Neuroscience Institute, a scientific institute focused on understanding how the neocortex processes information. The institute is currently located at U.C. Berkeley. In 2004 Jeff wrote the book, On Intelligence, which outlines Hierarchical Temporal Memory (HTM) and describes progress on understanding the neocortex.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Jeff earned his B.S. in Electrical Engineering from Cornell University in 1979. He was elected to the National Academy of Engineering in 2003.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Jeff Hawkins',
	              respond: 'mw',
	              src: _jeffHawkins2.default
	            })
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Subutai Ahmad'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'VP of Research'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Subutai brings experience across real time systems, computer vision and learning to Numenta. He has previously served as VP Engineering at YesVideo, Inc. where he helped grow the company from a three-person start-up to a leader in automated digital media authoring. In 1997, Subutai co- founded ePlanet Interactive, a spin-off from Interval Research. ePlanet developed the IntelPlay Me2Cam, the first computer vision product developed for consumers. He has served as a key researcher at Interval Research.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Subutai holds a B.S. in Computer Science from Cornell University, and a Ph.D in Computer Science from the University of Illinois at Urbana-Champaign. While pursuing his Ph.D, Subutai completed a thesis on computational neuroscience models of visual attention.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Subutai Ahmad',
	              respond: 'mw',
	              src: _subutaiAhmad2.default
	            })
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Celeste Baranski'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'VP of Engineering'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Celeste has vast experience in high tech engineering, design and management. Previously, Celeste was SVP Engineering & Operations at Panasas, a Big Data storage provider. She was CEO and Co-Founder of Vitamin D, one of the first developers to use the NuPIC platform. Celeste also served in VP Engineering roles at Palm and at Handspring, where she led the companies’ engineering efforts for handheld computers and smartphones. Celeste has built effective engineering teams, starting from a few to over 500 and has delivered numerous successful and award-winning products.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Celeste holds both a B.S. and M.S. in electrical engineering from Stanford University.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Celeste Baranski',
	              respond: 'mw',
	              src: _celesteBaranski2.default
	            })
	          )
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'board' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Board of Directors'
	    ),
	    _react2.default.createElement(
	      _List2.default,
	      { copy: false },
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Ed Colligan'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'Former President & CEO, Palm, Inc.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Ed has been a part of the core team of five Silicon Valley start-ups. Ed’s first big success was Radius, Inc. where he was instrumental in building products and the brand. After Radius, Ed was the first vice president of marketing for Palm where he helped develop the original Palm Pilot, the Palm brand and Palm\'s product strategy. He moved on from Palm to found Handspring where Ed and his partners created the forbearer of all future smartphones; the Handspring Treo. Ed drove the transaction that reunited Palm and Handspring into a single Palm again. He established relationships with wireless carriers globally and drove Palm’s annual smartphone business to more than $2 billion. As the CEO of Palm, Ed spearheaded the transformation that created the WebOS platform and Palm Pre line of smartphones.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Ed now spends his time investing in and mentoring entrepreneurs. Ed is a board member of Numenta, Inc., Active Mind Technology, and POPS Worldwide, and is an investor and on the board of advisors of six other start-up companies. Ed holds a B.S. from the University of Oregon.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Ed Colligan',
	              respond: 'mw',
	              src: _edColligan2.default
	            })
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Donna Dubinsky'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'CEO & Co-Founder'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Donna first partnered with Jeff Hawkins at Palm, Inc. in 1992, where she served as president and CEO. She held this position throughout Palm’s acquisition by U.S Robotics and subsequently 3Com Corporation. In 1998, Donna and Jeff co-founded Handspring, creator of the category-defining Treo smartphone. Handspring merged with Palm in 2003, and Donna continued to serve on Palm’s board until 2009. Previously, Donna spent 10 years at Apple Inc. in a multitude of sales, sales support, and logistics functions—both at Apple and at Claris, an Apple software subsidiary.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Donna earned a B.A. from Yale University, and an M.B.A. from Harvard Business School. She is currently on the board of Yale University.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Donna Dubinsky',
	              respond: 'mw',
	              src: _donnaDubinsky2.default
	            })
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Mike Farmwald'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'General Partner, Skymoon Ventures'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Mike Farmwald is a successful serial entrepreneur. He has founded many companies with breakthrough technologies including FTL, a super computing company that merged with MIPs, Epigram, which was acquired by Broadcom, Rambus and Matrix Semiconductor, a creator of 3D integrated circuits.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Mike currently sits on the board of Rambus (NASDAQ: RMBS). He is participating on the Numenta board as an individual, rather than as a representative of Skymoon Ventures. Mike holds a B.S. degree in Mathematics from Purdue University and a Ph.D. in Computer Science from Stanford University.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Mike Farmwald',
	              respond: 'mw',
	              src: _mikeFarmwald2.default
	            })
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Jeff Hawkins'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'Co-Founder'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Jeff is an engineer, serial entrepreneur, scientist, inventor and author. His life-long interest in neuroscience and theories of the neocortex has driven his passion for building a technology based on neocortical theory. Previously, he founded two mobile computing companies, Palm and Handspring, and is the architect of many computing products such as the PalmPilot and Treo smartphone. In 2002, he founded the Redwood Neuroscience Institute, a scientific institute focused on understanding how the neocortex processes information. The institute is currently located at U.C. Berkeley. In 2004 Jeff wrote the book, On Intelligence, which outlines Hierarchical Temporal Memory (HTM) and describes progress on understanding the neocortex.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Jeff earned his B.S. in Electrical Engineering from Cornell University in 1979. He was elected to the National Academy of Engineering in 2003.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Jeff Hawkins',
	              respond: 'mw',
	              src: _jeffHawkins2.default
	            })
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 4 },
	          'Harry Saal'
	        ),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 5 },
	          'Chairman of ZERO1, The Arts & Technology Network'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.columns },
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.content },
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'In 2002, Dr. Harry J. Saal was chosen by the US Department of Justice to lead the Technical Committee charged with monitoring and enforcing the Microsoft Antitrust case, and he served as Chairman of the Committee through the May 2011 expiration of the Judgment.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Harry founded Nestar Systems, a pioneer in local area network systems, in 1978. In 1986, Harry became the founder and CEO of Network General Corporation, the first company wholly dedicated to the area of network diagnostics. From 1993 through 1995, Harry served as founding CEO and President of Smart Valley, Inc., a non-profit organization chartered to create a regional electronic community based on an advanced information infrastructure and the collective ability to use it.'
	            ),
	            _react2.default.createElement(
	              _Paragraph2.default,
	              null,
	              'Harry is active in philanthropy and community affairs, and serves on the board of the American Institute of Mathematics, among others. Harry holds a B.A., M.A. and Ph.D. in Physics from Columbia University.'
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: _index2.default.asideCenter },
	            _react2.default.createElement(_Image2.default, {
	              alt: 'Harry Saal',
	              respond: 'mw',
	              src: _harrySaal2.default
	            })
	          )
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'contact' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Contact'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Want to get in contact with us? Send us a message by filling out this form or use the appropriate email.'
	        ),
	        _react2.default.createElement(
	          _Form2.default,
	          {
	            action: 'https://numenta.wufoo.com/forms/kcp312j1iehcj2/#public',
	            name: 'form9'
	          },
	          _react2.default.createElement(
	            _FormRow2.default,
	            null,
	            _react2.default.createElement(
	              _FormLabel2.default,
	              { htmlFor: fields.first },
	              'First Name'
	            ),
	            _react2.default.createElement(_FormInput2.default, {
	              name: fields.first,
	              stretch: 'medium',
	              type: 'text',
	              placeholder: 'Firstname'
	            })
	          ),
	          _react2.default.createElement(
	            _FormRow2.default,
	            null,
	            _react2.default.createElement(
	              _FormLabel2.default,
	              { htmlFor: fields.last },
	              'Last Name'
	            ),
	            _react2.default.createElement(_FormInput2.default, {
	              name: fields.last,
	              type: 'text',
	              placeholder: 'Lastname'
	            })
	          ),
	          _react2.default.createElement(
	            _FormRow2.default,
	            null,
	            _react2.default.createElement(
	              _FormLabel2.default,
	              { htmlFor: fields.title },
	              'Job Title'
	            ),
	            _react2.default.createElement(_FormInput2.default, {
	              name: fields.title,
	              placeholder: 'Role',
	              stretch: 'medium',
	              type: 'text'
	            })
	          ),
	          _react2.default.createElement(
	            _FormRow2.default,
	            null,
	            _react2.default.createElement(
	              _FormLabel2.default,
	              { htmlFor: fields.company },
	              'Company'
	            ),
	            _react2.default.createElement(_FormInput2.default, {
	              name: fields.company,
	              placeholder: 'Company',
	              stretch: 'small',
	              type: 'text'
	            })
	          ),
	          _react2.default.createElement(
	            _FormRow2.default,
	            null,
	            _react2.default.createElement(
	              _FormLabel2.default,
	              { htmlFor: fields.email },
	              'Email'
	            ),
	            _react2.default.createElement(_FormInput2.default, {
	              name: fields.email,
	              placeholder: 'name@company.com',
	              stretch: 'medium',
	              type: 'email'
	            })
	          ),
	          _react2.default.createElement(
	            _FormRow2.default,
	            null,
	            _react2.default.createElement(
	              _FormLabel2.default,
	              { htmlFor: fields.phone },
	              'Phone'
	            ),
	            _react2.default.createElement(_FormInput2.default, {
	              name: fields.phone,
	              placeholder: '+1-555-555-5555',
	              stretch: 'small',
	              type: 'tel'
	            })
	          ),
	          _react2.default.createElement(
	            _FormRow2.default,
	            null,
	            _react2.default.createElement(
	              _FormLabel2.default,
	              { htmlFor: fields.content },
	              'How can we help?'
	            ),
	            _react2.default.createElement(_FormTextArea2.default, {
	              name: fields.content,
	              placeholder: 'Comment here.'
	            })
	          ),
	          _react2.default.createElement(
	            _FormRow2.default,
	            null,
	            _react2.default.createElement(
	              _FormLabel2.default,
	              null,
	              ' '
	            ),
	            _react2.default.createElement(
	              _Button2.default,
	              { theme: 'primary', type: 'submit' },
	              'Send'
	            )
	          ),
	          _react2.default.createElement(_FormInput2.default, {
	            name: fields.idstamp,
	            type: 'hidden',
	            value: 'hwFr746QGPGzzbeOEbIcrXFmpScleWw61VTW0cdscY4='
	          })
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.emails },
	          _react2.default.createElement(
	            _DefineList2.default,
	            { direction: 'vertical' },
	            _react2.default.createElement(
	              _DefineTitle2.default,
	              null,
	              'Product Support:'
	            ),
	            _react2.default.createElement(
	              _DefineItem2.default,
	              null,
	              _react2.default.createElement(
	                _TextLink2.default,
	                { to: `mailto:${ contact.email.support }` },
	                contact.email.support
	              )
	            ),
	            _react2.default.createElement(
	              _DefineTitle2.default,
	              null,
	              'Press Contact:'
	            ),
	            _react2.default.createElement(
	              _DefineItem2.default,
	              null,
	              _react2.default.createElement(
	                _TextLink2.default,
	                { to: `mailto:${ contact.email.press }` },
	                contact.email.press
	              )
	            ),
	            _react2.default.createElement(
	              _DefineTitle2.default,
	              null,
	              'Licensing Inquiries:'
	            ),
	            _react2.default.createElement(
	              _DefineItem2.default,
	              null,
	              _react2.default.createElement(
	                _TextLink2.default,
	                { to: `mailto:${ contact.email.sales }` },
	                contact.email.sales
	              )
	            )
	          )
	        )
	      )
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(_Anchor2.default, { name: 'office' }),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 3 },
	          'Office'
	        ),
	        _react2.default.createElement(
	          _Table2.default,
	          null,
	          _react2.default.createElement(
	            _TableBody2.default,
	            null,
	            _react2.default.createElement(
	              _TableRow2.default,
	              null,
	              _react2.default.createElement(
	                _TableCell2.default,
	                null,
	                _react2.default.createElement(
	                  _Strong2.default,
	                  null,
	                  'Phone'
	                )
	              ),
	              _react2.default.createElement(
	                _TableCell2.default,
	                null,
	                _react2.default.createElement(
	                  _TextLink2.default,
	                  { to: `tel:${ contact.phone.tel }` },
	                  contact.phone.tel
	                )
	              )
	            ),
	            _react2.default.createElement(
	              _TableRow2.default,
	              null,
	              _react2.default.createElement(
	                _TableCell2.default,
	                null,
	                _react2.default.createElement(
	                  _Strong2.default,
	                  null,
	                  'Fax'
	                )
	              ),
	              _react2.default.createElement(
	                _TableCell2.default,
	                null,
	                contact.phone.fax
	              )
	            ),
	            _react2.default.createElement(
	              _TableRow2.default,
	              null,
	              _react2.default.createElement(
	                _TableCell2.default,
	                null,
	                _react2.default.createElement(
	                  _Strong2.default,
	                  null,
	                  'Address'
	                )
	              ),
	              _react2.default.createElement(
	                _TableCell2.default,
	                null,
	                _react2.default.createElement(
	                  'address',
	                  { className: _index2.default.address },
	                  '791 Middlefield Road ',
	                  _react2.default.createElement('br', null),
	                  'Redwood City, CA 94063'
	                )
	              )
	            ),
	            _react2.default.createElement(
	              _TableRow2.default,
	              null,
	              _react2.default.createElement(
	                _TableCell2.default,
	                null,
	                _react2.default.createElement(
	                  _Strong2.default,
	                  null,
	                  'Map'
	                )
	              ),
	              _react2.default.createElement(
	                _TableCell2.default,
	                null,
	                _react2.default.createElement(
	                  _TextLink2.default,
	                  { to: links.out.map },
	                  'Google Maps Link'
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.office },
	          _react2.default.createElement(
	            _List2.default,
	            { marker: 'disc' },
	            _react2.default.createElement(
	              _ListItem2.default,
	              null,
	              'Reception is on the second floor on the left'
	            ),
	            _react2.default.createElement(
	              _ListItem2.default,
	              null,
	              'Street parking is available on surrounding streets'
	            ),
	            _react2.default.createElement(
	              _ListItem2.default,
	              null,
	              'The Jefferson Avenue Garage is the nearest parking structure'
	            )
	          )
	        ),
	        _react2.default.createElement(_Anchor2.default, { name: 'follow' }),
	        _react2.default.createElement(
	          _SubTitle2.default,
	          { level: 3 },
	          'Follow'
	        ),
	        _react2.default.createElement(_SocialMedia2.default, null)
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.asideCenter },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.out.map },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'Map to Numenta Office',
	            shadow: false,
	            respond: 'mw',
	            src: _map2.default
	          })
	        )
	      )
	    )
	  );
	};
	
	SectionCareers.contextTypes = {
	  config: _react2.default.PropTypes.object,
	  route: _react2.default.PropTypes.object
	};
	
	exports.default = SectionCareers;
	module.exports = exports['default'];

/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(631);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const FormRow = ({ children }) => _react2.default.createElement(
	  'div',
	  { className: _index2.default.formRow },
	  children
	);
	
	FormRow.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired
	};
	
	exports.default = FormRow;
	module.exports = exports['default'];

/***/ },
/* 631 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"formRow":"index_formRow_Dre tachyons_cb_1nJ tachyons_cf_g7R tachyons_flex_22H tachyons_mb2_1U4 tachyons_mr4_16Z"};

/***/ },
/* 632 */,
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(634);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const FormTextArea = ({ children, name, placeholder }) => _react2.default.createElement(
	  'textarea',
	  {
	    className: _index2.default.formTextArea,
	    id: name,
	    name: name,
	    placeholder: placeholder
	  },
	  children
	);
	
	FormTextArea.propTypes = {
	  children: _react2.default.PropTypes.any,
	  name: _react2.default.PropTypes.string.isRequired,
	  placeholder: _react2.default.PropTypes.string.isRequired
	};
	
	exports.default = FormTextArea;
	module.exports = exports['default'];

/***/ },
/* 634 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_focus":"index__focus_2PQ","formTextArea":"index_formTextArea_38M tachyons_ba_1NL tachyons_b--black-20_1zc tachyons_br2_rOa tachyons_f5_2mB tachyons_flex-auto_1Fv tachyons_fw3_3xI tachyons_h4_923 tachyons_input-reset_3Az tachyons_pb1_2R8 tachyons_ph2_2up tachyons_pt2_3ym tachyons_silver_3lN index__focus_2PQ"};

/***/ },
/* 635 */,
/* 636 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _facebook = __webpack_require__(637);
	
	var _facebook2 = _interopRequireDefault(_facebook);
	
	var _linkedin = __webpack_require__(638);
	
	var _linkedin2 = _interopRequireDefault(_linkedin);
	
	var _twitter = __webpack_require__(639);
	
	var _twitter2 = _interopRequireDefault(_twitter);
	
	var _youtube = __webpack_require__(640);
	
	var _youtube2 = _interopRequireDefault(_youtube);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ImageLink = __webpack_require__(400);
	
	var _ImageLink2 = _interopRequireDefault(_ImageLink);
	
	var _index = __webpack_require__(641);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const SocialMedia = (props, { config }) => {
	  const { links } = config;
	  const sites = {
	    [links.out.facebook]: _facebook2.default,
	    [links.out.twitter]: _twitter2.default,
	    [links.out.youtube]: _youtube2.default,
	    [links.out.linkedin]: _linkedin2.default
	  };
	  const socials = [];
	
	  for (let site in sites) {
	    if (sites.hasOwnProperty(site)) {
	      const Component = sites[site];
	      const title = Component.name.replace(/^Fa/, '');
	      socials.push(_react2.default.createElement(
	        'span',
	        { className: _index2.default.spread, key: title },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { title: title, to: site },
	          _react2.default.createElement(Component, { color: 'inherit' })
	        )
	      ));
	    }
	  }
	
	  return _react2.default.createElement(
	    'div',
	    { className: _index2.default.social },
	    socials
	  );
	};
	
	SocialMedia.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SocialMedia;
	module.exports = exports['default'];

/***/ },
/* 637 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaFacebook = function (_React$Component) {
	    _inherits(FaFacebook, _React$Component);
	
	    function FaFacebook() {
	        _classCallCheck(this, FaFacebook);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaFacebook).apply(this, arguments));
	    }
	
	    _createClass(FaFacebook, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm29.4 0.3v5.9h-3.5q-1.9 0-2.6 0.8t-0.7 2.4v4.2h6.6l-0.9 6.6h-5.7v16.9h-6.8v-16.9h-5.7v-6.6h5.7v-4.9q0-4.1 2.3-6.4t6.2-2.3q3.3 0 5.1 0.3z' })
	                )
	            );
	        }
	    }]);
	
	    return FaFacebook;
	}(React.Component);
	
	exports.default = FaFacebook;
	module.exports = exports['default'];

/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaLinkedin = function (_React$Component) {
	    _inherits(FaLinkedin, _React$Component);
	
	    function FaLinkedin() {
	        _classCallCheck(this, FaLinkedin);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaLinkedin).apply(this, arguments));
	    }
	
	    _createClass(FaLinkedin, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm10.8 13.9v22.2h-7.4v-22.1h7.4z m0.5-6.8q0 1.7-1.2 2.7t-3 1.1h0q-1.9 0-3-1.1t-1.1-2.7q0-1.6 1.2-2.7t3-1.1 2.9 1.1 1.2 2.7z m26 16.3v12.7h-7.4v-11.9q0-2.3-0.9-3.6t-2.8-1.4q-1.4 0-2.3 0.8t-1.5 1.9q-0.2 0.7-0.2 1.8v12.4h-7.3q0-8.9 0-14.5t0-6.6l0-1h7.3v3.2h-0.1q0.5-0.7 1-1.3t1.2-1.1 2-1 2.5-0.4q3.8 0 6.2 2.6t2.3 7.4z' })
	                )
	            );
	        }
	    }]);
	
	    return FaLinkedin;
	}(React.Component);
	
	exports.default = FaLinkedin;
	module.exports = exports['default'];

/***/ },
/* 639 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaTwitter = function (_React$Component) {
	    _inherits(FaTwitter, _React$Component);
	
	    function FaTwitter() {
	        _classCallCheck(this, FaTwitter);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaTwitter).apply(this, arguments));
	    }
	
	    _createClass(FaTwitter, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm37.7 9.1q-1.5 2.2-3.7 3.7 0.1 0.3 0.1 1 0 2.9-0.9 5.8t-2.6 5.5-4.1 4.7-5.7 3.3-7.2 1.2q-6.1 0-11.1-3.3 0.8 0.1 1.7 0.1 5 0 9-3-2.4-0.1-4.2-1.5t-2.6-3.5q0.8 0.1 1.4 0.1 1 0 1.9-0.3-2.5-0.5-4.1-2.5t-1.7-4.6v0q1.5 0.8 3.3 0.9-1.5-1-2.4-2.6t-0.8-3.4q0-2 0.9-3.7 2.7 3.4 6.6 5.4t8.3 2.2q-0.2-0.9-0.2-1.7 0-3 2.1-5.1t5.1-2.1q3.2 0 5.3 2.3 2.4-0.5 4.6-1.7-0.8 2.5-3.2 3.9 2.1-0.2 4.2-1.1z' })
	                )
	            );
	        }
	    }]);
	
	    return FaTwitter;
	}(React.Component);
	
	exports.default = FaTwitter;
	module.exports = exports['default'];

/***/ },
/* 640 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaYoutube = function (_React$Component) {
	    _inherits(FaYoutube, _React$Component);
	
	    function FaYoutube() {
	        _classCallCheck(this, FaYoutube);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaYoutube).apply(this, arguments));
	    }
	
	    _createClass(FaYoutube, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm24.7 27.8v4.7q0 1.5-0.9 1.5-0.5 0-1-0.5v-6.7q0.5-0.5 1-0.5 0.9 0 0.9 1.5z m7.5 0v1h-2v-1q0-1.5 1-1.5t1 1.5z m-21.5-4.9h2.3v-2.1h-6.9v2.1h2.3v12.7h2.3v-12.7z m6.4 12.7h2v-11h-2v8.4q-0.7 1-1.3 1-0.4 0-0.5-0.5 0-0.1 0-0.8v-8.1h-2v8.7q0 1.1 0.2 1.7 0.3 0.8 1.3 0.8 1.1 0 2.3-1.4v1.2z m9.6-3.3v-4.4q0-1.6-0.2-2.2-0.4-1.2-1.6-1.2-1.1 0-2.1 1.2v-4.9h-2v14.8h2v-1q1 1.2 2.1 1.2 1.2 0 1.6-1.2 0.2-0.6 0.2-2.3z m7.5-0.2v-0.3h-2q0 1.1-0.1 1.4-0.1 0.8-0.9 0.8-1 0-1-1.6v-1.9h4v-2.3q0-1.8-0.6-2.6-0.9-1.1-2.4-1.1-1.5 0-2.4 1.1-0.6 0.8-0.6 2.6v3.9q0 1.7 0.7 2.5 0.8 1.2 2.4 1.2 1.6 0 2.4-1.2 0.4-0.6 0.5-1.2 0-0.2 0-1.3z m-13.6-20.4v-4.7q0-1.5-0.9-1.5t-1 1.5v4.7q0 1.6 1 1.6t0.9-1.6z m16.1 16.8q0 5.2-0.6 7.8-0.3 1.3-1.3 2.2t-2.3 1q-4.1 0.5-12.4 0.5t-12.3-0.5q-1.3-0.1-2.3-1t-1.3-2.2q-0.6-2.5-0.6-7.8 0-5.2 0.6-7.8 0.3-1.3 1.3-2.2t2.3-1.1q4.1-0.4 12.3-0.4t12.4 0.4q1.3 0.2 2.3 1.1t1.3 2.2q0.6 2.5 0.6 7.8z m-22.3-28.5h2.3l-2.7 8.9v6.1h-2.2v-6.1q-0.4-1.6-1.4-4.7-0.8-2.3-1.5-4.2h2.4l1.6 5.9z m8.3 7.4v3.9q0 1.8-0.7 2.7-0.8 1.1-2.3 1.1-1.5 0-2.4-1.1-0.6-0.9-0.6-2.7v-3.9q0-1.8 0.6-2.6 0.9-1.1 2.4-1.1 1.5 0 2.3 1.1 0.7 0.8 0.7 2.6z m7.4-3.6v11.2h-2v-1.3q-1.2 1.4-2.3 1.4-1 0-1.3-0.8-0.2-0.5-0.2-1.7v-8.8h2v8.2q0 0.7 0.1 0.8 0 0.5 0.4 0.5 0.6 0 1.3-1v-8.5h2z' })
	                )
	            );
	        }
	    }]);
	
	    return FaYoutube;
	}(React.Component);
	
	exports.default = FaYoutube;
	module.exports = exports['default'];

/***/ },
/* 641 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"spread":"index_spread_1iI tachyons_ph3_Qxl","social":"index_social_271 tachyons_f2_ipM tachyons_mb4_3KK tachyons_mt3_11A"};

/***/ },
/* 642 */,
/* 643 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5cbd96a017881938ee40712e1ef50342.png";

/***/ },
/* 644 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3d1ed8252fbee734ca1c880cba0b1270.jpg";

/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b7776ddbbeba361fdba7906ad07b012f.jpg";

/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "628cdb3e510623780fea05b4f848deb9.jpg";

/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a4c3355c774d2547d70bb34d8c1ed549.jpg";

/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "aa0e50831f86b3918f88bd27665d00df.jpg";

/***/ },
/* 649 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b8e60076ee828720b68172e556dc0cd4.png";

/***/ },
/* 650 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f7145bbf2137b9927c4b8b5a80e73b55.jpg";

/***/ },
/* 651 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1ffa9e4c57f51359061d0c21b116ecc7.jpg";

/***/ },
/* 652 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"columns":"index_columns_3o2 theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_1JA theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_29G theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN","asideCenter":"index_asideCenter_1t7 tachyons_mt2_3dR tachyons_tc_3ab index_aside_29G theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN","emails":"index_emails_8en tachyons_bg-near-white_1Oi tachyons_center_iwf tachyons_f6_14U tachyons_mt4_3dV tachyons_pb3_9S8 tachyons_ph4_-u9 tachyons_pt4_3TE tachyons_tl_3s2 tachyons_w5_2u9","office":"index_office_27C tachyons_f5_2mB tachyons_mb4_3KK tachyons_mt2_3dR","address":"index_address_xqM tachyons_fs-normal_34f"};

/***/ },
/* 653 */,
/* 654 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Anchor = __webpack_require__(544);
	
	var _Anchor2 = _interopRequireDefault(_Anchor);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _ListOrder = __webpack_require__(605);
	
	var _ListOrder2 = _interopRequireDefault(_ListOrder);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _Strong = __webpack_require__(523);
	
	var _Strong2 = _interopRequireDefault(_Strong);
	
	var _SubTitle = __webpack_require__(535);
	
	var _SubTitle2 = _interopRequireDefault(_SubTitle);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _brain = __webpack_require__(655);
	
	var _brain2 = _interopRequireDefault(_brain);
	
	var _timeline = __webpack_require__(656);
	
	var _timeline2 = _interopRequireDefault(_timeline);
	
	var _index = __webpack_require__(657);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionMission = (props, { config }) => {
	  const { links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(_Anchor2.default, { name: 'mission' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Mission'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          { lead: true },
	          'Numenta’s mission is to be a leader in the new era of machine intelligence.  We believe the brain is the best example of an intelligent system, providing a roadmap for building intelligent machines. The brain’s center of intelligence, the neocortex, controls a wide range of functions using a common set of principles. We have made significant progress discovering these principles and using them to create the Hierarchical Temporal Memory (HTM) learning algorithms.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Because today’s computers are programmed, they can only do exactly as they are told. In stark contrast, intelligent machines continuously and automatically learn patterns in their environment without being programmed, enabling them to tackle problems in entirely new ways. Intelligent machines that learn and act will have an enormous beneficial impact in the coming decades.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'We have made significant progress in understanding the neocortex and building software based on those principles. We have demonstrated in multiple applications across many industries that the HTM learning algorithms can automatically model data streams, make predictions, find anomalies and classify results. We have a strong roadmap that continues to advance the technology, enabling broader uses over time. We remain committed to our open source project and encourage others to join us in building a community. From a commercial point of view, we ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.license },
	            'license our technology and intellectual property.'
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(_Image2.default, {
	          alt: 'Stylized Brain Artwork',
	          respond: 'mw',
	          shadow: false,
	          src: _brain2.default
	        })
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'history' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'History'
	    ),
	    _react2.default.createElement(_Image2.default, {
	      alt: 'Numenta Historical Timeline',
	      respond: 'mw',
	      shadow: false,
	      src: _timeline2.default
	    }),
	    _react2.default.createElement(
	      _Paragraph2.default,
	      null,
	      'Numenta was established in 2005 in Redwood City, CA.  Our progress can be categorized by three distinct phases:'
	    ),
	    _react2.default.createElement(
	      _ListOrder2.default,
	      { marker: 'decimal' },
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _Strong2.default,
	          null,
	          'Testing the HTM theory and developing first generation algorithms.'
	        ),
	        ' ',
	        ' ',
	        'During this phase, vision was a main application focus area.'
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _Strong2.default,
	          null,
	          'Developing a second generation of HTM Learning algorithms with stronger biological correlation and a roadmap for future work.'
	        ),
	        ' ',
	        ' ',
	        'During this phase, we continued to explore applications, built a prediction engine, and started our open source project.'
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        _react2.default.createElement(
	          _Strong2.default,
	          null,
	          'Researching the third generation of HTM Learning algorithms.'
	        ),
	        ' ',
	        ' ',
	        'We are currently focusing on sensorimotor integration.'
	      )
	    )
	  );
	};
	
	SectionMission.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SectionMission;
	module.exports = exports['default'];

/***/ },
/* 655 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a4379c4d5b4b4d15d68b9289d29ad58f.svg";

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "36c7a95281bf15f9f9be260eb2ac34a1.png";

/***/ },
/* 657 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"columns":"index_columns_1eH theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_2Oz theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_1mY tachyons_mt4_3dV tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN"};

/***/ },
/* 658 */,
/* 659 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _github = __webpack_require__(660);
	
	var _github2 = _interopRequireDefault(_github);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _index = __webpack_require__(661);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionOpensource = (props, { config }) => {
	  const { links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    { className: _index2.default.columns },
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.content },
	      _react2.default.createElement(
	        _Paragraph2.default,
	        { lead: true },
	        'Because we want our technology to be broadly adopted, we make it broadly accessible as well. We are committed to transparency of our ideas, technology and research.  We have developed an open source project called NuPIC (Numenta Platform for Intelligent Computing), where you’ll find all of our algorithms and daily research code documented. NuPIC comprises a community of researchers, data scientists and developers working on our Hierarchical Temporal Memory technology.'
	      ),
	      _react2.default.createElement(
	        _Paragraph2.default,
	        null,
	        'NuPIC includes a discussion forum covering a variety of topics, including HTM theory, research on extending HTM, and source code for complete applications based on HTM. If you are interested in seeing, developing or working with our technology, we invite you to participate at ',
	        ' ',
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.out.org },
	          links.out.org
	        ),
	        '.'
	      ),
	      _react2.default.createElement(
	        _Paragraph2.default,
	        null,
	        'Our technology is available for free through the ',
	        ' ',
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.out.license },
	          'AGPLv3 open source license.'
	        ),
	        ' ',
	        ' ',
	        'In addition, we have created a separate, ',
	        ' ',
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.out.trial },
	          'trial license without commercial rights'
	        ),
	        ' ',
	        ' ',
	        'for those individuals or organizations who are unable to use the AGPLv3 license. For more on our licenses, see the ',
	        ' ',
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: links.in.business },
	          'Business Strategy & IP'
	        ),
	        ' ',
	        ' ',
	        'section.'
	      )
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.aside },
	      _react2.default.createElement(_github2.default, { className: _index2.default.icon })
	    )
	  );
	};
	
	SectionOpensource.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SectionOpensource;
	module.exports = exports['default'];

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaGithub = function (_React$Component) {
	    _inherits(FaGithub, _React$Component);
	
	    function FaGithub() {
	        _classCallCheck(this, FaGithub);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaGithub).apply(this, arguments));
	    }
	
	    _createClass(FaGithub, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm20.1 2.9q4.7 0 8.6 2.3t6.3 6.2 2.3 8.6q0 5.6-3.3 10.1t-8.4 6.2q-0.6 0.1-0.9-0.2t-0.3-0.7q0 0 0-1.7t0-3q0-2.1-1.2-3.1 1.3-0.2 2.3-0.4t2.1-0.9 1.8-1.5 1.2-2.3 0.5-3.4q0-2.7-1.8-4.6 0.8-2-0.2-4.5-0.6-0.2-1.8 0.2t-2 1l-0.9 0.5q-2-0.6-4.3-0.6t-4.2 0.6q-0.4-0.2-1-0.6t-1.9-0.8-1.9-0.3q-1 2.5-0.1 4.5-1.8 1.9-1.8 4.6 0 1.9 0.5 3.4t1.1 2.3 1.8 1.5 2.1 0.9 2.3 0.4q-0.9 0.8-1.1 2.3-0.4 0.2-1 0.3t-1.3 0.1-1.4-0.5-1.3-1.4q-0.4-0.7-1-1.1t-1.1-0.6l-0.5 0q-0.5 0-0.6 0.1t-0.1 0.2 0.2 0.3 0.2 0.3l0.2 0.1q0.5 0.2 1 0.9t0.7 1.1l0.2 0.5q0.3 0.9 1 1.4t1.5 0.7 1.5 0.1 1.3-0.1l0.5 0q0 0.8 0 1.9t0 1.2q0 0.5-0.3 0.7t-0.9 0.2q-5.2-1.7-8.4-6.2t-3.3-10.1q0-4.7 2.3-8.6t6.2-6.2 8.6-2.3z m-10.6 24.6q0.1-0.2-0.2-0.3-0.2-0.1-0.2 0.1-0.1 0.1 0.1 0.2 0.2 0.2 0.3 0z m0.7 0.7q0.1-0.1-0.1-0.3-0.2-0.2-0.3-0.1-0.2 0.1 0 0.4 0.3 0.2 0.4 0z m0.7 1q0.2-0.1 0-0.4-0.2-0.3-0.4-0.1-0.2 0.1 0 0.4t0.4 0.1z m0.9 1q0.2-0.2-0.1-0.4-0.3-0.3-0.4-0.1-0.2 0.2 0 0.4 0.3 0.3 0.5 0.1z m1.3 0.5q0-0.2-0.3-0.3-0.4-0.1-0.4 0.1t0.2 0.4q0.4 0.1 0.5-0.2z m1.4 0.1q0-0.2-0.4-0.2-0.4 0-0.4 0.2 0 0.3 0.4 0.3 0.4 0 0.4-0.3z m1.3-0.2q-0.1-0.2-0.4-0.2-0.4 0.1-0.3 0.4t0.4 0.1 0.3-0.3z' })
	                )
	            );
	        }
	    }]);
	
	    return FaGithub;
	}(React.Component);
	
	exports.default = FaGithub;
	module.exports = exports['default'];

/***/ },
/* 661 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"columns":"index_columns_Zrd theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_lhd theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_2ZG tachyons_mt3_11A tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN","icon":"index_icon_4Rt theme_layout-aside-icon_102 theme_color-blue-mute_20f"};

/***/ },
/* 662 */,
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _index = __webpack_require__(664);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionPapers = () => _react2.default.createElement(
	  'div',
	  { className: _index2.default.columns },
	  _react2.default.createElement(
	    'div',
	    { className: _index2.default.content },
	    _react2.default.createElement(
	      _Paragraph2.default,
	      { lead: true },
	      'Coming Soon.'
	    )
	  ),
	  _react2.default.createElement('div', { className: _index2.default.aside })
	);
	
	exports.default = SectionPapers;
	module.exports = exports['default'];

/***/ },
/* 664 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"columns":"index_columns_1or theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_1ib theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_16h tachyons_mt2_3dR tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN"};

/***/ },
/* 665 */,
/* 666 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Anchor = __webpack_require__(544);
	
	var _Anchor2 = _interopRequireDefault(_Anchor);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _ImageLink = __webpack_require__(400);
	
	var _ImageLink2 = _interopRequireDefault(_ImageLink);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _LogoMark = __webpack_require__(378);
	
	var _LogoMark2 = _interopRequireDefault(_LogoMark);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _SubTitle = __webpack_require__(535);
	
	var _SubTitle2 = _interopRequireDefault(_SubTitle);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _cortical = __webpack_require__(667);
	
	var _cortical2 = _interopRequireDefault(_cortical);
	
	var _grokstream = __webpack_require__(668);
	
	var _grokstream2 = _interopRequireDefault(_grokstream);
	
	var _index = __webpack_require__(669);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionPartners = (props, { config }) => {
	  const { contact, links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          { lead: true },
	          'Numenta works with strategic partners to bring the power of HTM technology to the market. While we focus on the science and the core technology, we select application partners who have deep domain knowledge and are able to add an application layer tuned to market needs.'
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'We are flexible in structuring these relationships in a way that works for both parties. If you are interested in becoming a partner, please ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: links.out.license },
	            'review our license guide,'
	          ),
	          ' ',
	          ' ',
	          'and email us at ',
	          ' ',
	          _react2.default.createElement(
	            _TextLink2.default,
	            { to: `mailto:${ contact.email.sales }` },
	            contact.email.sales,
	            '.'
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.logomark },
	          _react2.default.createElement(_LogoMark2.default, null)
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'cortical' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Cortical.io'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Cortical.io is leading the next generation of natural language processing: language intelligence. Founded on core principles of HTM, Cortical.io’s Semantic Folding technology translates text into sparse distributed representations. This enables a host of exciting applications that have challenged computer scientists for decades including sentiment analysis, automatic summarization, semantic search and conversational dialogue systems.'
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.cortical },
	              'Cortical.io'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: 'http://www.cortical.io/static/downloads/semantic-folding-theory-white-paper.pdf' },
	              'Whitepaper: Semantic Folding'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: 'http://numenta.com/press/numenta-and-cortical-io-form-strategic-partnership.html' },
	              'Press Release'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: 'http://numenta.com/newsletters/announcing-relationship-with-cortical-io.html' },
	              'Newsletter'
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.out.cortical },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'Cortical.io logo',
	            respond: 'mw',
	            shadow: false,
	            src: _cortical2.default
	          })
	        )
	      )
	    ),
	    _react2.default.createElement(_Anchor2.default, { name: 'grok' }),
	    _react2.default.createElement(
	      _SubTitle2.default,
	      null,
	      'Grok'
	    ),
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          'Grok is using HTM technology for advanced IT anomaly detection. Grok applies Numenta\'s breakthrough technology to solving the IT department’s hardest problems, with a complete enterprise solution. Its modern user interface makes it easy to drill down to important anomalies and take action before a problem worsens.'
	        ),
	        _react2.default.createElement(
	          _List2.default,
	          { marker: 'disc' },
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: links.out.grok },
	              'Grok'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: 'http://numenta.com/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html' },
	              'Press Release'
	            )
	          ),
	          _react2.default.createElement(
	            _ListItem2.default,
	            null,
	            _react2.default.createElement(
	              _TextLink2.default,
	              { to: 'http://numenta.com/newsletters/partnership-between-numenta-and-avik-partners-on-grok-for-it-analytics.html' },
	              'Newsletter'
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          _ImageLink2.default,
	          { to: links.out.grok },
	          _react2.default.createElement(_Image2.default, {
	            alt: 'Grok Stream logo',
	            respond: 'mw',
	            shadow: false,
	            src: _grokstream2.default
	          })
	        )
	      )
	    )
	  );
	};
	
	SectionPartners.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SectionPartners;
	module.exports = exports['default'];

/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "816188988e9b01dda6f946c19d80c499.png";

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7ef47ce13b749d8026e65a7282b41087.png";

/***/ },
/* 669 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"columns":"index_columns_2Dv theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_8ih theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_hgE tachyons_mt4_3dV tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN","logomark":"index_logomark_2FO tachyons_center_iwf tachyons_w4_3jJ"};

/***/ },
/* 670 */,
/* 671 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _Video = __webpack_require__(547);
	
	var _Video2 = _interopRequireDefault(_Video);
	
	var _videoTech = __webpack_require__(672);
	
	var _videoTech2 = _interopRequireDefault(_videoTech);
	
	var _index = __webpack_require__(673);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const SectionTechnology = () => _react2.default.createElement(
	  'div',
	  { className: _index2.default.columns },
	  _react2.default.createElement(
	    'div',
	    { className: _index2.default.content },
	    _react2.default.createElement(
	      _Paragraph2.default,
	      { lead: true },
	      'Based on a wealth of neuroscience evidence we have created a technology called HTM (Hierarchical Temporal Memory) that models key aspects of neocortical learning. HTM is well suited for prediction, anomaly detection, classification and ultimately sensori-motor applications.'
	    ),
	    _react2.default.createElement(
	      _Paragraph2.default,
	      null,
	      'At the core of HTM are time-based learning algorithms that can store, learn, infer and recall high-order sequences. Unlike most other machine learning methods, HTM learns time-based patterns in data on a continuous basis. HTM is extremely high capacity, meaning that it can learn multiple patterns simultaneously.  It is also robust to noise and can learn continuously from unlabeled data.'
	    ),
	    _react2.default.createElement(
	      _Paragraph2.default,
	      null,
	      'HTM works best with data that meets the following characteristics:'
	    ),
	    _react2.default.createElement(
	      _List2.default,
	      { marker: 'disc' },
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        'Streaming data rather than batch data files'
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        'Underlying patterns in the data that change over time'
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        'Many individual data sources where hand crafting separate models is impractical'
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        'Subtle patterns that can’t always be seen by humans'
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        'Data with time-based patterns'
	      ),
	      _react2.default.createElement(
	        _ListItem2.default,
	        null,
	        'Data for which simple techniques such as thresholds yield substantial false positives and false negatives'
	      )
	    ),
	    _react2.default.createElement(
	      _Paragraph2.default,
	      null,
	      'Our technology has been tested and implemented in software, all of which is developed with best practices and suitable for deploying in commercial applications.'
	    )
	  ),
	  _react2.default.createElement(
	    'div',
	    { className: _index2.default.aside },
	    _react2.default.createElement(_Video2.default, {
	      image: _videoTech2.default,
	      respond: 'mw',
	      time: '02:23',
	      title: 'Intro to our Technology',
	      type: 'youtube',
	      videoId: 'v-VvFRar5TY'
	    })
	  )
	);
	
	exports.default = SectionTechnology;
	module.exports = exports['default'];

/***/ },
/* 672 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "95808d84b4e5692bf0c0546f1ca0a9c7.png";

/***/ },
/* 673 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"columns":"index_columns_1dD theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_1AA theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_1xj tachyons_mt3_11A tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN"};

/***/ },
/* 674 */,
/* 675 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _angleUp = __webpack_require__(676);
	
	var _angleUp2 = _interopRequireDefault(_angleUp);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _SectionTitle = __webpack_require__(677);
	
	var _SectionTitle2 = _interopRequireDefault(_SectionTitle);
	
	var _index = __webpack_require__(684);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class Section extends _react2.default.Component {
	
	  constructor(props) {
	    super(props);
	
	    this.state = {
	      open: props.open || false
	    };
	  }
	
	  _toggle() {
	    // const {url} = this.props
	    // const {router} = this.context
	    const open = !this.state.open;
	    // let page
	
	    // if (open) page = url
	    // else page = '/'
	
	    // router.push(page)
	    this.setState({ open });
	  }
	
	  render() {
	    const { children, headline, title } = this.props;
	    const { open } = this.state;
	    const isHeadline = headline === true;
	    const isOpen = open === true;
	    const articleClasses = [_index2.default.article, _index2.default.closed];
	    let close;
	
	    if (isOpen) articleClasses.pop();
	
	    if (!isHeadline) {
	      close = _react2.default.createElement(
	        'div',
	        {
	          className: _index2.default.closeButton,
	          onClick: this._toggle.bind(this)
	        },
	        _react2.default.createElement(_angleUp2.default, { className: _index2.default.closeIcon, color: 'inherit' }),
	        'Close Section'
	      );
	    }
	
	    return _react2.default.createElement(
	      'section',
	      { className: _index2.default.section },
	      _react2.default.createElement(
	        _SectionTitle2.default,
	        {
	          clickHandle: this._toggle.bind(this),
	          headline: headline,
	          open: open
	        },
	        title
	      ),
	      _react2.default.createElement(
	        'article',
	        { className: (0, _classnames2.default)(...articleClasses) },
	        children,
	        close
	      )
	    );
	  }
	
	}
	
	Section.contextTypes = {
	  config: _react2.default.PropTypes.object,
	  router: _react2.default.PropTypes.object
	};
	Section.defaultProps = {
	  headline: false,
	  open: false
	};
	Section.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  headline: _react2.default.PropTypes.bool.isRequired,
	  open: _react2.default.PropTypes.bool.isRequired,
	  title: _react2.default.PropTypes.string.isRequired,
	  url: _react2.default.PropTypes.string
	};
	exports.default = Section;
	module.exports = exports['default'];

/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaAngleUp = function (_React$Component) {
	    _inherits(FaAngleUp, _React$Component);
	
	    function FaAngleUp() {
	        _classCallCheck(this, FaAngleUp);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaAngleUp).apply(this, arguments));
	    }
	
	    _createClass(FaAngleUp, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm31 26.4q0 0.3-0.2 0.5l-1.1 1.2q-0.3 0.2-0.6 0.2t-0.5-0.2l-8.7-8.8-8.8 8.8q-0.2 0.2-0.5 0.2t-0.5-0.2l-1.2-1.2q-0.2-0.2-0.2-0.5t0.2-0.5l10.4-10.4q0.3-0.2 0.6-0.2t0.5 0.2l10.4 10.4q0.2 0.2 0.2 0.5z' })
	                )
	            );
	        }
	    }]);
	
	    return FaAngleUp;
	}(React.Component);
	
	exports.default = FaAngleUp;
	module.exports = exports['default'];

/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classnames = __webpack_require__(380);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _angleDown = __webpack_require__(678);
	
	var _angleDown2 = _interopRequireDefault(_angleDown);
	
	var _angleUp = __webpack_require__(676);
	
	var _angleUp2 = _interopRequireDefault(_angleUp);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Title = __webpack_require__(679);
	
	var _Title2 = _interopRequireDefault(_Title);
	
	var _index = __webpack_require__(682);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const SectionTitle = ({ children, clickHandle, headline, open }) => {
	  const isHeadline = headline === true;
	  const isOpen = open === true && !isHeadline;
	  const IconAngle = isOpen ? _angleUp2.default : _angleDown2.default;
	  const titleClasses = [_index2.default.title];
	  let sectionTitle = _react2.default.createElement(
	    _Title2.default,
	    { headline: headline },
	    children
	  );
	
	  if (!isHeadline) {
	    if (isOpen) titleClasses.push(_index2.default.open);
	
	    sectionTitle = _react2.default.createElement(
	      'nav',
	      { className: (0, _classnames2.default)(...titleClasses), onClick: clickHandle },
	      _react2.default.createElement(IconAngle, { className: _index2.default.toggle }),
	      sectionTitle
	    );
	  }
	
	  return sectionTitle;
	};
	
	SectionTitle.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  clickHandle: _react2.default.PropTypes.func.isRequired,
	  headline: _react2.default.PropTypes.bool.isRequired
	};
	
	SectionTitle.defaultProps = {
	  headline: false
	};
	
	exports.default = SectionTitle;
	module.exports = exports['default'];

/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var IconBase = __webpack_require__(409);
	
	var FaAngleDown = function (_React$Component) {
	    _inherits(FaAngleDown, _React$Component);
	
	    function FaAngleDown() {
	        _classCallCheck(this, FaAngleDown);
	
	        return _possibleConstructorReturn(this, Object.getPrototypeOf(FaAngleDown).apply(this, arguments));
	    }
	
	    _createClass(FaAngleDown, [{
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                IconBase,
	                _extends({ viewBox: '0 0 40 40' }, this.props),
	                React.createElement(
	                    'g',
	                    null,
	                    React.createElement('path', { d: 'm31 16.4q0 0.3-0.2 0.5l-10.4 10.4q-0.3 0.3-0.5 0.3t-0.6-0.3l-10.4-10.4q-0.2-0.2-0.2-0.5t0.2-0.5l1.2-1.1q0.2-0.2 0.5-0.2t0.5 0.2l8.8 8.8 8.7-8.8q0.3-0.2 0.5-0.2t0.6 0.2l1.1 1.1q0.2 0.2 0.2 0.5z' })
	                )
	            );
	        }
	    }]);
	
	    return FaAngleDown;
	}(React.Component);
	
	exports.default = FaAngleDown;
	module.exports = exports['default'];

/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(680);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Title = ({ children, headline }) => {
	  const isHeadline = headline === true;
	  const className = isHeadline ? _index2.default.headline : _index2.default.title;
	
	  return _react2.default.createElement(
	    'h1',
	    { className: className },
	    children
	  );
	};
	
	Title.propTypes = {
	  children: _react2.default.PropTypes.any.isRequired,
	  headline: _react2.default.PropTypes.bool.isRequired
	};
	
	Title.defaultProps = {
	  headline: false
	};
	
	exports.default = Title;
	module.exports = exports['default'];

/***/ },
/* 680 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"_base":"index__base_3qa tachyons_black_2yD tachyons_fw6_1NV tachyons_lh-title_1xo tachyons_mv1_3WP tachyons_pa0_RbR","headline":"index_headline_36i tachyons_f2_ipM index__base_3qa tachyons_black_2yD tachyons_fw6_1NV tachyons_lh-title_1xo tachyons_mv1_3WP tachyons_pa0_RbR","title":"index_title_1WP tachyons_f3_2mk index__base_3qa tachyons_black_2yD tachyons_fw6_1NV tachyons_lh-title_1xo tachyons_mv1_3WP tachyons_pa0_RbR"};

/***/ },
/* 681 */,
/* 682 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"open":"index_open_MaQ tachyons_b--black-40_1nX tachyons_bg-near-white_1Oi tachyons_hover-bg-light-gray_17W","title":"index_title_10b tachyons_b--black-20_1zc tachyons_bb_GPu tachyons_dim_1n1 tachyons_hover-bg-near-white_1_V tachyons_ma0_2xh tachyons_pb1_2R8 tachyons_pointer_25K tachyons_pt2_3ym","toggle":"index_toggle_3f9 tachyons_f3_2mk tachyons_fl_wJK tachyons_ma0_2xh tachyons_ph2_2up tachyons_pointer_25K tachyons_relative_1fO theme_color-blue-dark_2u0"};

/***/ },
/* 683 */,
/* 684 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"section":"index_section_3GC","article":"index_article_2RF tachyons_mb1_2-H tachyons_mt3_11A","closed":"index_closed_1zA tachyons_dn_1fa","closeButton":"index_closeButton_1hs tachyons_br2_rOa tachyons_center_iwf tachyons_dim_1n1 tachyons_hover-bg-light-gray_17W tachyons_light-silver_kiI tachyons_f6_14U tachyons_mb3_1mV tachyons_pointer_25K tachyons_pr2_2Fq tachyons_pt1_3H7 tachyons_tc_3ab tachyons_w4_3jJ","closeIcon":"index_closeIcon_1iB tachyons_f4_1Zt tachyons_relative_1fO"};

/***/ },
/* 685 */,
/* 686 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e1ccbf4b903f6af4db777c66bfc5776e.png";

/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6bdca020f3c7dae41305e53cb6bf1634.png";

/***/ },
/* 688 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7969c896491083fc08c69dc30aa91795.png";

/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "205200d66aa0c823f78a543b61c632cc.png";

/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "212c6cf1d2e3124800c9137ee06a21c9.png";

/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "267ef6d35554116e334d72473992bf61.png";

/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0c8fbaa85070c92d43279787d04240df.png";

/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(543);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class ApplicationsPage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Applications' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	}
	
	exports.default = ApplicationsPage;
	module.exports = exports['default'];

/***/ },
/* 694 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d07c46aec9ae6c61ff64435175fba49d.png";

/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0cf41283e4c75f4251210c73d07df52b.png";

/***/ },
/* 696 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "bc09ceae51ecbbf0ac4bb26020a7205c.jpg";

/***/ },
/* 697 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"Today we hear so much about \"big data\" and the database tools you can use to sort through large amounts of data. However at Numenta we see a different future.","date":"2012/05/23","featured":false,"image":"../images/image.png","org":"Founder","title":"Streams and Lakes","tags":"Machine Learning, Data, Neuroscience","body":"<p>Two weeks ago I attended a workshop at U.C. Berkeley titled, <a href=\"http://lyra.berkeley.edu/CDIConf/\">“From Data to\nKnowledge: Machine-Learning with Real-time and Streaming\nApplications.”</a></p>\n<p>This was a remarkable workshop, not just because of who presented or its\nlocation, but simply because it was a workshop on streaming analytics.  Today we\nhear so much about “big data” and the database tools you can use to sort through\nlarge amounts of data.  However at Numenta we see a different future.  The\nfuture we see is one with billions of data sources streaming data.  Every\nbuilding, server, machine, and windmill will be equipped with multiple sensors.\nData from these sensors will flow directly to predictive models, which will make\npredictions and detect anomalies.  Through these models we will take immediate\naction.  This future is about billions of data streams flowing to hundreds of\nmillions of predictive models, not petabytes of data sitting in hard drives to\nbe looked at later, hence Streams and Lakes.</p>\n<p>This isn’t an either or situation.  There is plenty of opportunity mining big\ndata repositories, but we believe the growth will occur mostly in the\nproliferation of data sources and the ability to act on data as soon as it is\ncreated.  For example, imagine a building adjusting its energy consumption\nminute-by-minute based on predictions of price and demand several hours in the\nfuture.  If the price of electricity is predicted to go up later in the day, the\nbuilding lowers its temperature now and so it can turn off the cooling later,\nsaving money.  Today we may do this for a campus or building, tomorrow your\nrefrigerator will do the same.</p>\n<p>Predictive models for streaming data are fundamentally different than models\nused on stored data.</p>\n<p>In my talk at the Berkeley workshop, titled “Modeling Data Streams Using Sparse\nDistributed Representations,” I focused on two essential and unique attributes\nof streaming models.  First, they must be “online.”  This means that the models\nhave to learn with each new record.  Online models automatically adjust, record\nby record, as the patterns in the data change.  Second, streaming models also\nmust be “variable order” temporal models.  To make good predictions, a model\nmight need to take into account what happened two steps ago, four steps ago, or\nten steps ago.  Patterns over time, like a melody, are usually more important\nthan what is happening now.</p>\n<p>At the heart of our product Grok is a novel learning algorithm that is\ninherently online and variable order.  This isn’t surprising because it models a\nslice of the neocortex, which is also online and variable order.  Although much\nof the detail in how these algorithms work is explained in the\n<a href=\"http://numenta.org/cla-white-paper.html\">white paper</a> on our website, my\n25-minute talk at Berkeley covered the essentials, yet is simpler and easier to\nunderstand.  The workshop organizers recorded my talk and\n<a href=\"http://www.youtube.com/watch?v=nfUT3UbYhjM\">posted it online,</a> but the audio is\nseparate from the visuals.  We decided to re-record it as a\n<a href=\"http://youtu.be/iNMbsvK8Q8Y\">screencast.</a></p>\n<p>By the way, I believe the algorithms we use in Grok are key components of\nmachine intelligence.  I will be talking about that during my\n<a href=\"http://isca2012.ittc.ku.edu/index.php?option=com_content&amp;view=article&amp;id=65&amp;Itemid=57\">keynote speech</a>\non June 11 at the\n<a href=\"http://isca2012.ittc.ku.edu/\">International Symposium on Computer Architecture.</a>\nMore on that in a later blog post.</p>\n"}

/***/ },
/* 698 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"There is a well known truism in machine learning, the \"No Free Lunch Theorem,\" which states that no algorithm is inherently better than any other algorithm.","date":"2012/06/04","featured":false,"image":"../images/image.png","org":"VP Research","tags":"Machine Learning","title":"How is Grok's algorithm different?","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>A question we get all the time from machine learning fans is: “How does\nNumenta’s <a href=\"http://numenta.org/cla.html\">Cortical Learning Algorithm</a> (the CLA)\ncompare to traditional machine learning algorithms?” There are many ways to\nanswer this question. In this blog entry, I will focus on one specific\ndifference, perhaps the most fundamental one.</p>\n<p>First a bit of background: There is a well known truism in machine learning, the\n&quot;No Free Lunch Theorem,&quot; which states that no algorithm is inherently better\nthan any other algorithm. What distinguishes one algorithm from the next are the\ninherent assumptions and how well those assumptions fit the problem domain. For\nexample, if you are predicting data that lies on a straight line, nothing is\ngoing to beat linear fitting. If the data lies on a circle, it’s hard to imagine\na worse technique.</p>\n<p>By far the most common assumption made in machine learning is the &quot;i.i.d&quot;\nassumption. In statistics, i.i.d. stands for\n<a href=\"http://en.wikipedia.org/wiki/Independent_and_identically_distributed_random_variables\">independently and identically distributed</a>,\nwhich states that every input record comes from the same probability\ndistribution and is statistically independent of previous and future records.\nThis is a very useful assumption - it makes the math easier, leads to\nthe Central Limit Theorem, allows you to derive accuracy bounds, etc. Just about\nevery popular technique, such as regression, support vector machines, neural\nnetworks, Bayesian networks, random forests, and decision trees rely on this\nassumption.</p>\n<p>Unfortunately, when you think about the real world of streaming data, this\nassumption is just plain wrong. Your weekly revenue numbers are not i.i.d. Last\nweek’s numbers are a better predictor than the numbers from 13 weeks ago.\nYesterday’s weather is correlated with today’s. The web log for a customer\nnavigating an e-commerce website is likely to follow specific sequences. Your\nGPS coordinates from 5 minutes ago are an excellent predictor of your current\nlocation. The list is endless. Streaming temporal patterns are the very\nantithesis of i.i.d.</p>\n<p>The CLA is an inherently temporal learning algorithm, and doesn’t care about\ni.i.d. It greedily constructs sequences and does not assume independence. If you\nsaw a particular revenue pattern the last two weeks, it assumes you are more\nlikely to see it this week. If you haven’t seen a pattern for several years, it\nwill likely forget it. Also, CLA assumes that the underlying distribution can\nchange. This is what makes it online or adaptive. If your revenue jumps because\nyou just added an important customer, it will adapt. It inherently assumes your\ndata stream contains sequences and is constantly changing. We didn’t invent this</p>\n<ul>\n<li>the core ideas are inherent in the neocortex of the brain and lend themselves\nwell to streaming data analytics.</li>\n</ul>\n<p>CLA is not the only technique to break the i.i.d. assumption. Other algorithms,\nsuch as Hidden Markov Models and many time series algorithms, also relax that\nassumption. So, how is CLA different from HMMs? Good question. I guess we’ll\njust have to tackle that in another blog entry…stay tuned!</p>\n"}

/***/ },
/* 699 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fdb1a30b918e2fc84ddccde8b4e81222.png";

/***/ },
/* 700 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8eab4399bfe964a2be071a866c75a99e.png";

/***/ },
/* 701 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b78ed447b770f0be762ef864b9cb555f.jpg";

/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e66bf22834bbedb5970a201fbd8cb179.png";

/***/ },
/* 703 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d9551d4bfed9a47c36bfa0daf30d2b98.png";

/***/ },
/* 704 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "91ae5e1e3392685456de00f2a1c82453.jpg";

/***/ },
/* 705 */
/***/ function(module, exports) {

	module.exports = {"author":"Rob Haitani","brief":"Years ago, a retiring artificial intelligence researcher told Jeff Hawkins that \"one of biggest problems in AI--no, the only problem in AI--is the problem of representation.\" If the meaning of that statement isn't intuitively obvious","date":"2012/08/27","featured":false,"image":"../images/image.png","org":"Marketing","title":"The Problem of Representation","tags":"Neuroscience, Machine Learning","body":"<p>Years ago, a retiring artificial intelligence researcher told Jeff Hawkins that\n&quot;one of biggest problems in AI–no, the only problem in AI–is the problem of\nrepresentation.&quot;  If the meaning of that statement isn’t intuitively obvious to\nyou, don’t worry. It wasn’t immediately clear to Jeff either.</p>\n<p>Jeff explained how he came to understand and address this problem in a recent\nkeynote address at the International Symposium on Computer Architecture.  We\nposted a <a href=\"https://www.youtube.com/user/numenta\">video of the keynote on YouTube</a>.\nIn this talk, Jeff describes the brain as a predictive modeling system that\ntakes streams of input from the senses and learns sequences in real time. The\nbrain represents its inputs and the state of its world via the activity of\nneurons.  At any point in time most of the neurons are inactive and a few\nactive, thus the brain’s representations are “sparse.”  Consequently we call\nthese &quot;Sparse Distributed Representations” (SDRs) in our algorithms.   SDRs\nexhibit unique properties that enable benefits such as semantic generalization\nand robustness to errors. These properties, in turn, allow the brain to learn\nabout objects and how they relate to each other holistically, without the\nprogrammatically defined data structures used in computers.  By applying these\nprinciples in products like Grok, we can finally address the problem of\nrepresentation.</p>\n<p>The talk ends with Jeff’s speculation on how the technology will evolve. Grok\nitself is merely the first iteration of this technology.  Unlocking the\noperating principles of the neocortex will not necessarily culminate in\nsolutions addressing the “classic” AI problems of vision, language and speech.\nThe history of technology suggests that truly revolutionary technological\nadvancements develop in ways that even its inventors could never imagine.   I’m\nreminded of Alexander Graham Bell’s prediction, “One day there will be a\ntelephone in every major city in the USA.”</p>\n<p>If you’d like to know more, make sure to\n<a href=\"http://youtu.be/A8sHMcCk0lU\">watch the video</a>.</p>\n"}

/***/ },
/* 706 */
/***/ function(module, exports) {

	module.exports = {"author":"Rob Haitani","brief":"But a major shift is underway. \"The arrival of the Internet and web has added a new dimension, bringing in an era of entirely digital business. Customer","date":"2012/09/06","featured":false,"image":"../images/image.png","org":"Marketing","tags":"Data","title":"Big Data's Digital Nervous System","body":"<p>In a\n<a href=\"http://www.forbes.com/sites/oreillymedia/2012/09/04/big-data-is-creating-a-digital-nervous-system/\">recent Forbes post</a>,\nEd Dumbill describes how\ncomputers have traditionally been used to digitize real-world business\noperations, for use in siloed computer applications.  He refers to this as a\n&quot;digital exoskeleton&quot; that served as a support system for processes like\npayroll or inventory management.</p>\n<p>But a major shift is underway.  “The arrival of the Internet and web has added a\nnew dimension, bringing in an era of entirely digital business. Customer\ninteraction, payments and often product delivery can exist entirely within\ncomputer systems.”  In this new world, data isn’t simply stored  inside the\nexoskeleton.  “The key trait is to make an organization’s feedback loop entirely\ndigital. That is, a direct connection from sensing and monitoring inputs through\nto product outputs.”  These are the hallmarks of the digital nervous system.</p>\n<p>Dumbill concludes by saying we will need more sophisticated approaches to handle\nthe “challenges of massive data flows.”  It’s easy to be intimidated by this\nvision if you are thinking in terms of conventional analytics. But it’s only\ninformation overload if your method of processing the data is a bottleneck.  If\nI had to sit down every night and analyze the entire day’s input of sensory data\nto my brain, I would be overwhelmed. That’s no way to run a nervous system.\nFortunately, your brain processes sensory information in real time, and\ninitiates action in response. So when you put your hand on a hot stovetop, you\nreact immediately rather than waiting to build a regression model to incorporate\nwhen you detect sudden spikes in temperature.  In fact, with visual input, you\ncan predict you will burn your hand and avoid putting it on the stovetop\naltogether.</p>\n<p>This is where the nervous system metaphor enters the realm of the literal. As\n<a href=\"./the-problem-of-representation.html\">posted previously</a>, Grok’s algorithms are\ndesigned to replicate the learning and memory processes conducted by the\nneocortex.  Grok learns patterns and makes predictions to drive action in the\nsame way that your brain does. Modeling the neocortex may not be the only way of\ncreating a learning and adaptive prediction engine, but the requirements of the\n“digital nervous system” referred to by Dumbill match perfectly with the\ncapabilities of the neocortex.</p>\n<p>As the age of the digital nervous system dawns, Grok represents the type of\ntechnology that will convert massive data flows into value.</p>\n"}

/***/ },
/* 707 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2c68d32847eda642f844e527b11feb28.png";

/***/ },
/* 708 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b0268369b0e85a43a60332d8349f0caf.png";

/***/ },
/* 709 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1b561931ce83033fd9f37fd2c622e3a5.jpg";

/***/ },
/* 710 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "74325596dd44a2f0afa5cfa52104bf1f.png";

/***/ },
/* 711 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0339cfe3c1ce54012dab258be240aaf3.jpg";

/***/ },
/* 712 */
/***/ function(module, exports) {

	module.exports = {"author":"Rob Haitani","brief":"This week Jeff Hawkins will present two talks in the prestigious Berkeley Hitchcock Lectures series. We're proud of the recognition that Jeff's work has received in the academic community.","date":"2012/10/01","featured":false,"image":"../images/image.png","org":"Marketing","tags":"Neuroscience, Machine Learning","title":"Jeff Hawkins speaks this week at Berkeley","body":"<p>This week Jeff Hawkins will present two talks in the prestigious Berkeley\nHitchcock Lectures series.\n<a href=\"http://grad.berkeley.edu/lectures/list_series.php?serieslookup=Hitchcock&amp;query=alt_date&amp;order=desc\">Past lecturers</a>\ninclude Niels Bohr, Edwin Hubble, Stephen Hawking, Richard Dawkins, and Noam\nChomsky. We’re proud of the recognition that Jeff’s work has received in the\nacademic community.</p>\n<p>The first lecture, on Tuesday October 2, is called “Intelligence and the Brain:\nRecent Advances in Understanding How the Brain Works.” Jeff will present the big\npicture of what we know so far, and then describe recent progress in a core\nissue: why neurons are arranged as they are in the neocortex, how this\narrangement builds models of the world, and how these models make predictions\nand generate actions.</p>\n<p>On Wednesday October 3, Jeff will present his second lecture,  “Intelligence and\nMachines: Creating Intelligent Machines by Modeling the Brain.”  In this talk,\nJeff tackles the question of whether intelligent machines are possible.\n(Spoiler alert: his answer is yes.)  Jeff will argue that we can’t treat the\nbrain like a black box; the only way to build meaningful machine intelligence is\nto understand how the brain works, and build technology based on those\nprinciples. He will present his vision of how this technology will develop, and\nyou may be surprised by what he has to say.</p>\n<p>On a personal note, I have been watching Jeff make presentations about his brain\nresearch since the early 90s, when I worked at Palm.  Jeff used to give “brown\nbag” talks for the company at lunch called “Brains 101,” describing his theories\nas they developed.  At that time, I didn’t know an axon from a hole in the\nground, but his passion was as obvious as it was contagious. If you have the\nchance to see Jeff speak live, I’d highly recommend it!</p>\n<p>The lectures are open to the public, both starting at 4:10 pm at the\n<a href=\"http://grad.berkeley.edu/lectures/info.php?id=1\">International House Auditorium, 2299 Piedmont Avenue, Berkeley</a>.\nMore information can be found at the\n<a href=\"http://grad.berkeley.edu/lectures/event.php?id=761&amp;lecturer=492\">Berkeley Graduate Council Lectures website</a>.\nIf you can’t make it, we will post links to the videos of the lectures.</p>\n"}

/***/ },
/* 713 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f57ba76dd996cc3aa05987c79533d679.jpg";

/***/ },
/* 714 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "36257e62d57c974944ed5c28612f119a.jpg";

/***/ },
/* 715 */
/***/ function(module, exports) {

	module.exports = {"author":"Ian Danforth","brief":"This insightful tweet came from the Strangeloop keynote after Jeff Hawkins described Sparse Distributed Representations (SDRs). This isn't the first time","date":"2012/10/07","featured":false,"image":"../images/bloom-thumb.jpg","org":"Engineering","tags":"Neuroscience","title":"Wait, the brain is a Bloom filter? - @petrillic","body":"<p>This insightful tweet came from the Strangeloop keynote after Jeff Hawkins\ndescribed Sparse Distributed Representations (SDRs). This isn’t the first time\nsomeone has noticed that SDRs and Bloom filters use similar data structures, so\nwe’d like to describe the significant differences in their implementation and\ncapabilities.</p>\n<p>Bloom filters are a fast and memory-efficient way to tell if you’ve seen\nsomething before. They can tell you with 100% confidence that something is new,\nthough they can’t tell you for sure if an input has been seen before. (See this\n<a href=\"http://billmill.org/bloomfilter-tutorial/\">excellent visualization by Bill Mill</a>).</p>\n<p>SDRs, core to Numenta’s Cortical Learning Algorithm, are the way we represent\nand recognize inputs in a system like Grok:</p>\n<p>&quot;The concept of SDRs comes from neuroscience, where sometimes it is called\n&quot;sparse coding. SDRs are the language of brains in the same way that bytes and\n&quot;words are the language of digital computers.  Sparse distributed\n&quot;representations have several desirable properties including high capacity,\n&quot;graceful degradation, tolerance to errors, and the ability to simultaneously\n&quot;represent multiple values in one representation.</p>\n<p>Both Bloom filters and SDRs store information in data structures called bit\narrays (or vectors), long strings where each character is either a one or a\nzero. When encountering a new input, both create a representation of that input\nby selecting a set of those bits to set as ones, or as we say “turn on.” Because\nboth choose a small subset of the bits to turn on, these representations can\nboth be considered “sparse.” Both, depending on the size of the array, have a\nhigh capacity to store many inputs, and both can represent multiple inputs\nsimultaneously.</p>\n<p>We need a bit more detail about Bloom filters to understand how they differ\nfundamentally from SDRs.</p>\n<p><img src=\"../images/bloom-thumb.jpg\" alt=\"Bloom Filter\" title=\"Bloom filter image\"></p>\n<p>(Click image to enlarge.)</p>\n<p>To create a Bloom filter, you select one or more hashes. These are functions\nthat take an input and select which small set of bits to turn on in the bit\narray.</p>\n<p>Three key properties determine the efficient and predictable nature of Bloom\nfilters. Take, for example, a Bloom filter with three inputs: “Monday”,\n“Thursday”, “Friday.” In a Bloom filter, the output bits representing these\ninputs are uniformly distributed across the bit array.  The representation of\nthese outputs are independent of any similarities from the inputs.  And each\ninput always maps to the same output representations.</p>\n<p>SDRs, on the other hand, assume the exact opposite!</p>\n<p>Modeled after the brain, SDRs care about <em>semantic</em> relationships. We care that\ninputs with similar meanings are stored in similar ways.  Because Thursday is\nmuch closer to Friday than it is to Monday, SDR representations of the inputs\n&quot;Thursday&quot; and “Friday” are similar!</p>\n<p>Semantic relationships allow an SDR to answer not only the question, “Have you\never seen this?” but also the question “Have you ever seen something <em>like</em>\nthis?”   Today we store inputs in a bit array that is 2000 bits long. Each new\ninput turns on 40 of those bits. If two inputs are very similar they may share a\ngood number of bits that get turned on (violating the independence assumption of\nBloom filters) and if they are very different they will almost certainly have a\nvery different set.</p>\n<p>Going back to our example, let’s show a Bloom filter and an SDR the input\n&quot;Saturday.&quot; If “Saturday” contains a single bit that is not on in the filter,\nthe Bloom filter confidently tells us it has never seen that before. An SDR, on\nthe other hand, would say, “Wait a minute, I’ve seen something close to that,\nhow about “Friday”?” An SDR is <em>robust</em> to some variations in input and is able\nto <em>generalize</em> based on semantic closeness of inputs to previously seen values.\nThese properties are crucial in allowing Grok to correctly identify the same\nobject in different circumstances.</p>\n<p>Similar inputs get blended, or, as we say, “pooled” together. When we retrieve\nvalues from our data structure even a small overlap on the input will generate\nsome output. You could say our false positive rate is much higher than a Bloom\nfilter. However, overlapping inputs allow us to group similar things together.\nAlso because SDRs produce output when there are partial matches, they are\ntolerant of noise. We can recognize two similar inputs even if they are\nobscured, just like a human can recognize a loved-one’s face even through the\nbranches of a tree, or a familiar voice in a noisy room.</p>\n<p>A false positive for a Bloom filter, in contrast, doesn’t mean anything. It’s\ngoverned by chance, not semantic closeness. Bloom filters  throw away\nsimilarities in inputs, whereas  SDRs take advantage of them.</p>\n<p>SDRs also differ by having dynamic representations. They change over time. The\nsame input doesn’t always map to the same representation. When learning new\nthings, which representation you end up with in the SDR depends on what the\nsystem has seen before. In addition if you haven’t seen an input for a while its\nrepresentation may have degraded somewhat. Because SDRs retain representations\nstrongly that are regularly reinforced and forget ones that are not, SDRs learn\nand retain the most important inputs without getting “filled up” by noise. A\nBloom filter is static and will continue to get filled up for as long as it\ncontinues to see new inputs. But then again, a Bloom filter that &quot;forgot&quot;\nwouldn’t be very useful.</p>\n<p>As you can see,  combining values and storing them in a bit array is a powerful\nidea. You can end up with a memory-efficient test like the Bloom filter, or a\nlearning system that is general purpose, robust, adaptive, and high capacity\nlike SDRs.  There’s actually much more to SDRs. I’ve only described the use of\nSDRs in a component of our system called the Spatial Pooler. There’s a whole\nother set of representations in our Temporal Pooler that we don’t have time to\ngo into here.</p>\n<p>You can find more information on SDRs, their properties and how they relate to\nthe brain, in <a href=\"http://youtu.be/A8sHMcCk0lU\">another recent keynote</a> by Jeff\nHawkins.</p>\n<p>For more information on Bloom filters,\n<a href=\"http://en.wikipedia.org/wiki/Bloom_filter\">the wikipedia article</a> is\n<em>reasonably</em> accessible.</p>\n"}

/***/ },
/* 716 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "de4206d5b52744cd21648b51361ef1fc.png";

/***/ },
/* 717 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0a5ff26d7d46fd446766626b56697fd5.png";

/***/ },
/* 718 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5ba98f4b599be4ad624c981c03ce337d.jpg";

/***/ },
/* 719 */
/***/ function(module, exports) {

	module.exports = {"author":"Rob Haitani","brief":"Jeff Hawkins recently gave a keynote address at Strange Loop 2012, a conference on diverse topics like emerging languages, alternative databases, concurrency and distributed systems.","date":"2012/10/22","featured":false,"image":"../images/image.png","org":"Marketing","tags":"Neuroscience, Machine Learning","title":"Jeff Hawkins at Strange Loop","body":"<p>Jeff Hawkins recently gave a keynote address at\n<a href=\"https://thestrangeloop.com/\">Strange Loop 2012</a>, a multi-disciplinary\nconference on diverse\ntopics like emerging languages, alternative databases, concurrency and\ndistributed systems.</p>\n<p>This talk was similar to the keynote speech Jeff gave at the recent\n<a href=\"http://isca2012.ittc.ku.edu/\">ISCA Conference</a>, providing a good overview of\nthe neuroscience and technology behind Grok (e.g.,sparse distributed\nrepresentations and sequence memory). In this version, Jeff shows an example of\nhow Grok adapts to unexpected change when predicting energy consumption in a\nbuilding. At first, Grok learns a weekly pattern: energy usage climbs during the\nday, but drops at night and on weekends, when the building is closed. One week,\nhowever, Thursday and Friday are holidays, so the building is closed. Grok\npredicts that energy will rise on Thursday morning, only to see that its\npredictions are inaccurate, because energy consumption remains flat in the empty\nbuilding. Instead of blindly forging ahead with the rest of the regular Thursday\npattern, however, Grok adapts automatically and shifts its forecast to predict\nflat levels.  Grok was not trained with data for holidays, but it recognizes\nthat the pattern has changed and adapts accordingly.</p>\n<p>Jeff also spends a little more time talking about the future of the technology,\nincluding the somewhat contrarian opinion that “The goal here is not to build\n…human-like things, it’s not to pass the Turing Test. I have no interest in\nthat whatsoever. I want to build machines that are useful for humans.”  The real\npotential of the technology lies in machines that can think millions of times\nfaster than humans. These machines could have memory systems much larger than\nthe human brain, with creative sensor arrays detecting patterns outside the\nrealm of what humans can perceive intuitively. But they wouldn’t get tired and\nwould have neither desires nor sentience. These will be tools that enhance\nknowledge discovery; they could be the machines that we can send out to explore\nthe universe.</p>\n<p>You can watch the video\n<a href=\"http://www.infoq.com/presentations/Brain-Computing\">here</a>.</p>\n"}

/***/ },
/* 720 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6bbc902d142f69efcc0fde0926049755.png";

/***/ },
/* 721 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "02ccdc14316ac5a5f9aa07ee7f8183e5.png";

/***/ },
/* 722 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d772e4fbc43a71f516564be832df809c.jpg";

/***/ },
/* 723 */
/***/ function(module, exports) {

	module.exports = {"author":"Rob Haitani","brief":"Will the future of machine intelligence lead to evil robots and a dystopian apocalypse?  Or robotic butlers and immortal carriers of our memories?  Berkeley","date":"2012/12/13","featured":false,"image":"../images/image.png","org":"Marketing","tags":"Machine Learning, Neuroscience","title":"Jeff Hawkins on Skynet vs. C3PO","body":"<p>Will the future of machine intelligence lead to evil robots and a dystopian\napocalypse?  Or robotic butlers and immortal carriers of our memories?  Berkeley\nrecently uploaded a <a href=\"https://www.youtube.com/user/numenta\">video</a> of a talk by\nJeff Hawkins that concludes with his thoughts about the future of intelligent\nmachines.</p>\n<p>Most people assume that intelligent machines will be like humans. Instead, Jeff\nstarts by defining what intelligence is, then removing humans from the equation\nand asking what would happen if we applied these principles.  This doesn’t\nnecessarily lead us to C3PO.</p>\n<p>In the Berkeley lecture, Jeff states his opinions on whether or not certain\ntechnical advances will happen.   First, it seems inevitable that intelligent\nmachines will reap the benefits of removing biological constraints.  Our brains\nare very slow, and limited in capacity due to the size of the birth canal\n(“Nature might want to make bigger brains, but they don’t come out,” Jeff\njokes.)  Intelligent machines will be millions of times faster and with much\nlarger memory capacity than human brains.  In addition, these machines will not\nbe limited by human senses.  “Everything a human has to understand we have to\nput into something that runs at our speed and through our senses.”  Imagine\nfeeding into intelligent machines input from huge arrays of distributed sensors,\nor nano-sensors, or higher-dimensional sensors.  “If I had sensors that really\ncould live in that world, they could think in that world.”</p>\n<p>On the other hand, Jeff is skeptical that you will ever be able to upload your\nbrain to a machine and live forever.  And even if you could, it would be “a very\nunsatisfactory experience,” at least from the mortal biological perspective\n(i.e., yours).  It would probably be more like the Twilight Zone episode where\nyou are replaced by an exact duplicate.</p>\n<p>Jeff also doesn’t believe that evil robots will emerge, at least not as an\nunintended byproduct. There are simply too many obstacles to overcome even if\nevil robots were your intended output.  But he doesn’t kid himself into thinking\nthat intelligent machines will only be used for benign purposes. Any powerful\ntechnology can be used for malevolent purposes.</p>\n<p>In closing, Jeff argues that intelligent machines will be “essential for the\nsurvival of our species, and…our mission as a species.”  Not only will\nintelligent machines provide net benefits to the world in the same way that\ncomputers have, but they will also enable us to discover more about the\nuniverse. For example, Jeff doubts humans will ever explore deep space, but\nintelligent machines could.  The Bradbury fan in me hopes this is not true.  But\nthe point is that even if we did figure out how to send humans into deep space,\nit will always be easier and cheaper to send our machines.</p>\n<p>Ultimately it boils down to the fact that “we want to know more about things,”\nand  “today our brains are how we figure out more.”   Therefore, it’s logical to\nconclude that an exponential expansion of (machine) intelligence will lead to an\nexponential expansion in knowledge.  That’s a long way in the future, but here\nat Numenta we’re passionate about setting humanity on that path.</p>\n"}

/***/ },
/* 724 */
699,
/* 725 */
700,
/* 726 */
/***/ function(module, exports) {

	module.exports = {"author":"Rob Haitani","brief":"We modeled Grok after the human brain because the brain is a predictive modeling system.  This is the first post in a series describing what this","date":"2013/01/03","featured":false,"image":"../images/image.png","org":"Marketing","tags":"Neuroscience","title":"The Neuroscience Behind Grok, Part 1","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>We modeled Grok after the human brain because the brain is a <em>predictive\nmodeling system</em>.  This is the first post in a series describing what this\nmeans: how the brain works, and how this benefits Grok.  The content is based on\nlectures given by Jeff Hawkins describing his detailed, biologically accurate\nmodel of a layer of cells in the neocortex, called the Cortical Learning\nAlgorithm (CLA).</p>\n<p>Contrary to popular opinion, the brain does not compute.  Neural activity bears\nlittle resemblance to how computers (or neural networks, for that matter)\noperate.  For example, an outfielder does not catch a pop fly by computing a\nprojectile trajectory equation. Instead, she predicts where the ball will fall\nbased on sensory input, starting with the crack of the bat. She makes rapid\nadjustments in speed and direction, reconciling predictions with the stream of\nsensory input received as the ball approaches.</p>\n<p>It turns out this predictive capability is a fundamental principle of\nintelligence.  You constantly make small predictions of what you will see, feel\nor hear. When you drink coffee, you make a series of predictions about the\nsensory feedback you’ll receive as you bring the cup to your mouth.  You’re\nusually unaware of these predictions unless they are violated.  For example if\nthe coffee is cold, or you accidentally grabbed a cup of pens, you are\nsurprised.  Detecting such anomalies is the flip side of making predictions, and\nthe brain uses both to drive behavior.</p>\n<p>This activity occurs in the neocortex, the wrinkled outer part of your brain.\nWhen you are born, your brain is essentially an empty vessel with structure but\nno content.  As you are continuously bombarded with input from your senses, you\nbegin to build a model of the world, based on the recurring patterns that you\nsee.</p>\n<p>And “bombarded” is an understatement.  Vision alone consists of an array of a\nmillion fibers on your optic nerve, flipping on and off in milliseconds. What\nyou see is not “projected” inside your head.  Instead, the input from your eyes\nare electrical impulses transmitted at an\n<a href=\"http://www.uphs.upenn.edu/news/News_Releases/jul06/retinput.htm\">estimated 10 million bits per second</a>,\ntranslated in the darkness of your skull into our perception of images.</p>\n<p>In sum, you take massive streams of input, learn patterns to make models of\neverything in your world, and make predictions to generate action: a predictive\nmodeling memory system. Your brain is actually far superior to computers at the\ngeneralized tasks of learning and pattern recognition (although obviously we\ncan’t compete with computers at executing tasks quickly and accurately).  Grok’s\ngoal is to combine the best of both worlds.  Future posts will summarize three\nkey attributes of human intelligence that we implemented in Grok: Sparse\nDistributed Representations (SDRs), sequence memory and adaptive learning. For\nfurther reading: the basic principles of intelligence are described in Jeff\nHawkins’ book, <em>On Intelligence</em>. His theories of sparse distributed\nrepresentations were developed after the book was published, and are described\nin a\n<a href=\"http://numenta.org/cla-white-paper.html\">white paper about the Cortical Learning Algorithm</a>.</p>\n"}

/***/ },
/* 727 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1eb24bf6c3a567a49dcc0b4237dbe7a7.jpg";

/***/ },
/* 728 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"Did you ever think the Super Bowl could help you understand how your brain works? Numenta's core algorithm, the Cortical Learning Algorithmm (CLA) relies on the","date":"2013/01/27","featured":false,"image":"../images/image.jpg","org":"VP Research","tags":"Neuroscience, Machine Learning","title":"Introducing the first ever Sparse Football Pool!","body":"<h4>Win a Kindle Paperwhite and a copy of <em>On Intelligence</em></h4>\n<p>Did you ever think the Super Bowl could help you understand how your brain\nworks? Well, it can!</p>\n<p>Numenta’s core algorithm, the\n<a href=\"http://numenta.org/cla.html\">Cortical Learning Algorithmm</a> (CLA),\nrelies on the properties of Sparse Distributed Representations. SDRs are the\nfundamental way our brain represents information. The concepts behind SDR are\ndeep and thought provoking. We get a lot of questions around this and were\nwondering how to explain it all in a fun simple way.</p>\n<p>Enter the Sparse Football Pool. We came up with a simple Super Bowl quiz with\nrules that closely mimic some operations in the CLA. We hope the quiz will be\nfun and at the same time illustrate some deep principles behind the SDR.</p>\n<p>The rules are extremely simple.   How exactly do they relate to SDRs? We’ll\nexplain it all when we post the winner after the game, but for now here are two\ntidbits: 1) computing overlap is a fundamental operation with SDRs, and 2) when\nthere are 30 questions and you choose 9, there are 14,307,150\n<a href=\"http://www.calculatorsoup.com/calculators/discretemathematics/combinations.php\">possible combinations</a>\nof entries!</p>\n<p>Also, in order to have more people participate, we’re also offering a cool\nprize. The winner will receive a digital copy of\n<em><a href=\"http://www.amazon.com/On-Intelligence-ebook/dp/B003J4VE5Y/ref=sr_1_1?s=digital-text&amp;ie=UTF8&amp;qid=1359401193&amp;sr=1-1&amp;keywords=on+intelligence\">On Intelligence</a></em>\nas well as an Amazon\n<a href=\"http://www.amazon.com/gp/product/B007OZNZG0/ref=s9_simh_gw_p349_d2_i1?pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_s=center-2&amp;pf_rd_r=01F8XD1MTXSPHDJF52RD&amp;pf_rd_t=101&amp;pf_rd_p=1389517282&amp;pf_rd_i=507846\">Paperwhite Kindle</a>.</p>\n<h4>The Three Rules:</h4>\n<ol>\n<li>\n<p>Answer TRUE or FALSE for each answer.</p>\n</li>\n<li>\n<p>You cannot have more than 9 TRUE answers. If you enter more than 9 TRUE\nanswers, we will take the first 9 only.</p>\n</li>\n<li>\n<p>To figure out the winner, we will compute the overlap score between the\nactual answers and your answer.  The person with the highest overlap score\nwill win.</p>\n</li>\n</ol>\n<h4>Computing Overlap Score</h4>\n<p>The overlap score simply gives you one point for every answer where you answered\nTRUE and the correct answer was TRUE.   For example, if the answer to question 3\nis True and you answered True, you get a point.    In all other cases you don’t\nget a point for question 3. Note that since you can only put down 9 TRUE’s, the\nmaximum overlap score you can get is 9.</p>\n<p>In case of ties, the earliest entry will win.  (Also, if you submit more than\none entry, only the last entry will count.) Full details are explained in the\n<a href=\"/legal/rules/sparse-football-pool-i-2013.html\">contest rules page</a>.\nOr feel free to post questions in the comment section below this blog post.</p>\n<h4>And Now, The Questions</h4>\n<p>To enter, go to our\n<a href=\"http://numenta.wufoo.com/forms/s7x2z7/\">online submission form</a>.\nYou will be asked to answer the following questions. They are repeated here for\nreference to help you plan out your answers ahead of time (responses will only\nbe accepted through the online submission form).</p>\n<p>The Baltimore Ravens will win the coin toss</p>\n<p>There will be a lead change in the first half</p>\n<p>There will be three lead changes in the game</p>\n<p>There will be no lead changes in the game</p>\n<p>The team leading at the end of the first half will lose the game</p>\n<p>Colin Kaepernick will have at least one run greater than 20 yards</p>\n<p>Joe Flacco will have at least one pass greater than 40 yards</p>\n<p>Ray Lewis will get more tackles than Patrick Willis (solo + assisted)</p>\n<p>Patric Willis will get more tackles than Ray Lewis (solo + assisted)</p>\n<p>Aldon Smith will finally get a sack in the playoffs</p>\n<p>Frank Gore will rush for more yards than Ray Rice</p>\n<p>Ray Rice will rush for more yards than Frank Gore</p>\n<p>There will be a scoreless quarter</p>\n<p>There will be more than 10 total points in the first half</p>\n<p>Baltimore will score first</p>\n<p>San Francisco will score first</p>\n<p>There will be a punt or kickoff return that is greater than 40 yards</p>\n<p>Joe Flacco will have a higher QB Rating than Colin Kaepernick</p>\n<p>Colin Kaepernick will have a higher QB Rating than Joe Flacco</p>\n<p>The longest field goal will be more yards than the longest offensive play</p>\n<p>There will be a score in the final 2 minutes of the first half</p>\n<p>There will be a score in the final 2 minutes of regulation</p>\n<p>Frank Gore will score the first touchdown</p>\n<p>Vernon Davis will score a touchdown</p>\n<p>Ray Rice will score a touchdown</p>\n<p>The San Francisco Forty Niners claim their 6th Superbowl Trophy!</p>\n<p>The Baltimore Ravens claim their 2nd Superbowl Trophy!</p>\n<p>The color of the Gatorade dumped on the winning coach will be orange</p>\n<p>JZ will join Beyonce on stage at some point during the halftime show</p>\n<p>There will be a Beyonce lip-sync controversy reported on <a href=\"http://ESPN.com\">ESPN.com</a> within an hour\nafter the game ends.</p>\n<p>Once again, here’s the link to the <a href=\"http://numenta.wufoo.com/forms/s7x2z7/\">online submission\nform</a>.</p>\n"}

/***/ },
/* 729 */
727,
/* 730 */
/***/ function(module, exports) {

	module.exports = {"author":"Rob Haitani","brief":"Thanks to everyone for participating in the Sparse Football Pool!  It was a tight race that, given the game, went down to the wire.  The winner had a total","date":"2013/01/29","featured":false,"image":"../images/image.jpg","org":"Marketing","tags":"Neuroscience, Machine Learning","title":"Sparse Football Pool Winner","body":"<p>Thanks to everyone for participating in the Sparse Football Pool!  It was a\ntight race that, given the game, went down to the wire.  The winner had a total\nof 7 correct responses, which is impressive given that you were only allowed to\nselect 9.</p>\n<p>In fact, there were two entries with the highest score. But given the rules of\nthe contest, the first entry wins the Kindle and copy of <em>On Intelligence</em>.  And\nthat winner is:</p>\n<p>Ryan McCall!</p>\n<p>Congratulations!  Ryan also beat the best entry from Numenta (we were not\nallowed to win the public prize but wanted to see how we’d do, since our\nparticipation wouldn’t affect the public winner’s chances). The top two Numenta\nentries had 6 correct answers.</p>\n<p>To see how you did, you can\n<a href=\"/legal/results/sparse-football-pool-i-2013.html\">check out the results page</a>.</p>\n<p>We will follow up with a blog post describing how this pool relates to the way\nthe brain stores data. But in the meantime, thank to everyone for participating,\nand congratulations again Ryan!</p>\n<p>If only the Niners had won the game… ;^)</p>\n"}

/***/ },
/* 731 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "080495533b6f2518eb8f067d5a7436f0.png";

/***/ },
/* 732 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "346ef4bb27be399d4cc101661f069eab.png";

/***/ },
/* 733 */
727,
/* 734 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"We promised to explain how the Sparse Football Pool relates to the brain, the CLA (Numenta's Cortical Learning Algorithm) and Intelligence.  The CLA relies on","date":"2013/02/11","featured":false,"image":"../images/image.png","org":"VP Research","tags":"Neuroscience, Machine Learning","title":"Super Bowl Neuroscience","body":"<p>I’m slowly recovering from the disappointing 49er loss to the Ravens in the\nSuperbowl. For those who watched it, it was a tremendously exciting game. In\nfact the events of the last few minutes had a significant effect on our Sparse\nPool result!</p>\n<p>We promised to explain how the Sparse Football Pool relates to the brain, the\nCLA (Numenta’s Cortical Learning Algorithm) and Intelligence.  The CLA relies on\nSparse Distributed Representations, a form of information representation where\nyou have a bunch of 0s and 1s.  Most of the numbers are 0s and a few of them\nare 1s (hence the term “Sparse”).  In fact, each entry to the pool was an\nSDR—nine 1s and twenty-one 0s. SDRs are also the fundamental way our\nbrain represents information. At any point in time, most of the neurons in our\nbrain are quiet and a small percentage of them are firing. It turns out that\nthis form of representation can have some really interesting properties.\nI constructed the Football Pool specifically so I could highlight some of\nthese points. In the brain the numbers are, of course, far larger and the\nsituation is a lot more complex, but we can illustrate the basic concepts\nusing the Pool.</p>\n<h4>Numerical Properties Of SDRs</h4>\n<p>Even though there are only a small number of 1s, systems using SDRs can uniquely\nrepresent a massive number of patterns.  Let’s ask the following question: given\nthat you can only select 9 True answers out of 30, how many unique entries are\nthere?  The answer turns out to be larger than you might guess: there are\n14,307,150 possible unique entries! (I know that sounds like a lot—it’s\nbased on a concept called\n<a href=\"http://en.wikipedia.org/wiki/Binomial_coefficients#Computing_the_value_of_binomial_coefficients\">&quot;binomial coefficients&quot;</a>).\nIn Grok our patterns have 40 bits on out of 2048.  The number of unique patterns\nis an unimaginably large 2.37 x 10^84! Give or take 10^80.</p>\n<p>What is the chance someone else can have the exact same answer as you? Assuming\neverything is random, that’s just the flip side of the above question: it is 1\nin 14,307,150. Even your identical twin would have a hard time guessing your\nanswer.</p>\n<p>What is the chance of someone getting a perfect score?  There were 12 Trues in\nthe final answer. Picking any 9 out of those 12 would be fine. There are 220\npossible perfect answers, so again, if everything was random, the chance of\ngetting a perfect score is about 220/14,307,150, or about 1 in 65,032.</p>\n<p>OK, even if you don’t get a perfect score, what is a good score?  The chance of\ngetting a score of 8 is 1 in 28,903. The chance of getting a 7 is still very\nrare: only 1 in 18,065.    Now, here’s a puzzler: we had less than 150 entries\nyet two people had a score of 7. How is this possible? Either the constellations\nwere lined up perfectly, or there is something else going on. Turns out we can\nignore astrology—there is another answer. The fact that a highly\nimprobable event occurred tells us that there is something really non-random\nhappening.</p>\n<h4>Semantic Properties Of SDRs</h4>\n<p>The world is not random, and neither were the questions. The questions were\ngrouped into similar semantic categories and the SDR corresponding to each entry\nrepresents these semantics.  Here are four aspects of this:</p>\n<p><strong>SDRs can represent specific information:</strong>  Each person’s answer reveals\nsomething about the way they thought about the game.  This could be very\nspecific. Suppose you answered True to Question 11 (Frank Gore will rush for\nmore yards than Ray Rice). That tells us you predicted Frank Gore would do well.</p>\n<p><strong>SDRs can represent complex information:</strong>  Suppose you answered True to\nquestions 2, 3, 5, 14, 17, 21, and 22 (Question Group 1 below). This probably\nmeans you predicted it would be an exciting game.   On the other hand if you\nanswered True to questions 6, 9, 10, 11, 16, 19, 23, 24, and 26 (Question Group\n2 below) it means you predicted the 49ers were going to dominate the Ravens.\nSo, SDRs can represent something specific but can also implicitly represent\ncomplex high level information. Isn’t that a key to intelligence and intelligent\nrepresentations?</p>\n<p><strong>SDRs represent subtle variations using a distributed code:</strong>  The questions\nare “overlapping” and so the information is distributed. For example, questions\n2, 3, and 5 in Group 1 have a lot in common. This means you don’t have to answer\nTrue to all the questions in Group 1. Even answering True to, say, any 3 or 4 of\nthem would be sufficient to tell us you thought the game was going to be\nexciting. You can convey more or less subtlety by choosing exactly which ones\nyou answer as True.  A partial answer tells us something about your thoughts and\nno particular answer is critical. This is exactly analogous to the brain: a\nsparse set of active neurons can represent lots of subtlety and complexity.</p>\n<p><strong>SDRs can simultaneously represent multiple independent concepts:</strong>  If you\nanswered True to, say, any 4 of the first set, and any 5 from the second set it\nmeans you believed both propositions: the game was going to be exciting, but in\nthe end the 49ers were going to beat the Ravens. The ability to simultaneously\nrepresent independent concepts is another property of SDRs.  It is particularly\nimportant when you are making predictions. Grok’s algorithms (and neurons) use\nthis property to make simultaneous predictions about the future in a single\nstep.</p>\n<p>Can we use all this to say something about our winners? If you look at our\nwinner, Ryan, it looks like he basically guessed that the game would be pretty\nexciting and that the 49er stars would have a good statistical game. Our second\nplace entry (also with a score of 7) guessed that the game would be exciting and\nthat the Ravens would win. Their guesses weren’t perfect, but their basic\nhunches ended up being correct and hence they had a high overlap score.  This\ncould only have happened in a non-random world, with meaningful SDRs.\nConversely, if you answered the questions randomly, you probably didn’t do too\nwell!</p>\n<p>We have touched on a few properties of SDRs, some of them subtle. You can\nrepresent semantic properties and concepts.  You can represent both very\nspecific and very subtle concepts.  You can represent multiple concepts\nsimultaneously and this can be used in prediction. Grok (and our brain) relies\non all of these properties and more.   Of course, there are many other aspects\nof Grok (such as learning SDRs) that we didn’t cover here.</p>\n<p>To wrap up, I hope you gained some insight into the power of SDRs and how our\nbrains represent information. Most importantly, I hope you had fun with this as\nI did. Next time your spouse complains you are watching too much football, let\nthem know you are actually involved in the greatest possible scientific quest:\nunderstanding human intelligence. Go Niners!</p>\n<p>Check out all of the questions and answers\n<a href=\"/legal/results/sparse-football-pool-i-2013.html\">here</a>.</p>\n<h4>Question Group 1 - Overall Game Excitement</h4>\n<ol start=\"2\">\n<li>There will be a lead change in the first half</li>\n<li>There will be three lead changes in the game</li>\n<li>The team leading at the end of the first half will lose the game</li>\n<li>There will be more than 10 total points in the first half</li>\n<li>There will be a punt or kickoff return that is greater than 40 yards</li>\n<li>There will be a score in the final 2 minutes of the first half</li>\n<li>There will be a score in the final 2 minutes of regulation time</li>\n</ol>\n<h4>Question Group 2 - 49er Domination</h4>\n<ol start=\"6\">\n<li>Colin Kaepernick will have at least one run greater than 20 yards</li>\n<li>Patric Willis will get more tackles than Ray Lewis (solo + assisted)</li>\n<li>Aldon Smith will finally get a sack in the playoffs</li>\n<li>Frank Gore will rush for more yards than Ray Rice</li>\n<li>San Francisco will score first</li>\n<li>Colin Kaepernick will have a higher QB Rating than Joe Flacco</li>\n<li>Frank Gore will score the first touchdown</li>\n<li>Vernon Davis will score a touchdown.</li>\n<li>The San Francisco Forty Niners claim their 6th Superbowl Trophy!</li>\n</ol>\n"}

/***/ },
/* 735 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "53efb48567e45da46fea8636dcae8996.jpg";

/***/ },
/* 736 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"I am often asked, \"Is Numenta’s Cortical Learning Algorithm a neural network?\" The short answer to this question is \"Yes,\" but the problem with this short","date":"2013/02/19","featured":false,"image":"../images/main.jpg","org":"Founder","tags":"Machine Learning, Neuroscience","title":"Not Your Father's Neural Network","body":"<p><img src=\"../images/main.jpg\" alt=\"Image\" title=\"CLA Neuron\"></p>\n<p>I am often asked, “Is Numenta’s\n<a href=\"http://numenta.org/cla.html\">Cortical Learning Algorithm</a> a\n<a href=\"http://en.wikipedia.org/wiki/Neural_network\">neural network</a>?”\n(For those who don’t know, the Cortical Learning Algorithm, or CLA, is the\nheart of Grok our streaming data product.)</p>\n<p>The short answer to this question is “Yes,” but the problem with this short\nanswer is that the Cortical Learning Algorithm is quite different than what most\npeople think of as a neural network.</p>\n<p>The history of artificial neural networks starts with\n<a href=\"http://en.wikipedia.org/wiki/Warren_McCulloch\">Warren McCulloch</a> and\n<a href=\"http://en.wikipedia.org/wiki/Walter_Pitts\">Walter Pitts</a>.  In 1943 they were\nthe first to propose creating networks of\n<a href=\"http://en.wikipedia.org/wiki/Artificial_neuron\">artificial neurons</a>. They\nshowed that artificial neurons could act like logic gates (AND, OR, etc.) and by\nconnecting them in precise ways we could implement any digital logic. It was\nground breaking work but biologically unrealistic.</p>\n<p>Neural networks remained a minor research area for many years until they\nresurfaced in a big way in the 1980s.  This was partly due to the rediscovery of\n<a href=\"http://en.wikipedia.org/wiki/Backpropagation\">back propagation</a>, which is a\nmethod of training simple neural networks, and it was partly due to a two volume\nbook called\n<em><a href=\"http://mitpress.mit.edu/books/parallel-distributed-processing\">Parallel Distributed Processing</a>.</em>\nThe PDP books ignited interest in the field.  At this time I was already\nconvinced that the path to machine intelligence required understanding how the\nbrain works so I welcomed the new interest in neural networks.  Up to that\npoint in time, symbolic and engineered approaches to A.I. were the dominant\napproaches to machine intelligence.</p>\n<p>However, I quickly became disillusioned with the new neural networks.  The\nbiggest problem was they ignored time.  Brains process flowing streams of\nsensory data.  All inference, prediction, and motor behavior in a brain is built\nupon memory of sequences of patterns.\nThe vast majority of artificial neural networks completely ignored time and\nhence were unable to process changing inputs or generate behavior.  Without\nembracing temporal patterns I felt we would not get close to capturing\nintelligence.</p>\n<p>There were other problems with the simplistic neural networks of the 1980s.\nBiological neurons have thousands or tens of thousands of synapses arranged on\ndendrites which have non-linear properties; artificial neurons typically had\njust a few synapses on a cell body and ignored dendrite properties.  Biological\nneural networks have detailed prototypical architectures; artificial neural\nnetworks ignored these architectures. Neuroscience was starting to develop\noverall theories of brain function but artificial neural networks were simple\nclassifiers that didn’t fit within an overall theory.  Basically, for many years\nmost artificial neural network research ignored neurobiology and their\napplications remained limited to simple classification.  When most people think\nof artificial neural networks they think about the type of neural networks\nexplored in the 1980s.</p>\n<p>Today the term “artificial neural network” can refer to many different types of\nnetworks.  Some strive for biological realism and some don’t.  So when I am\nasked if Numenta’s Cortical Learning Algorithm is a neural network, I reply\n&quot;Yes, but there many types of neural networks.  If you want to compare the CLA\nto other neural networks, ask do those other networks learn sequences, do they\nlearn in an on-line fashion, do they incorporate neurons that have non-linear\ndendrites, do they form thousands of connections, does the architecture of the\nnetwork reflect the known architecture of any part of the brain, and does the\nnetwork fit within a larger theory of brain function?&quot;  The number of artificial\nneural networks that fit these criteria is small.  The CLA is one of them.</p>\n<p>BTW, there is one type of early artificial neural network that was applied to\nsequences.  These are called auto-associative memories.  In another blog post I\nwill describe how the CLA and auto-associative memories are related.</p>\n<blockquote>\n<p>Jeff Hawkins</p>\n</blockquote>\n"}

/***/ },
/* 737 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"Last month the Obama administration announced a new ten year $3B science initiative called the \"Brain Activity Map Project\" (BAM). The ultimate goal is","date":"2013/03/04","featured":false,"image":"../images/image.png","org":"Founder","tags":"Neuroscience","title":"BAM! The Brain Activity Map Project arrives","body":"<p>Last month the Obama administration announced a new ten year $3B science\ninitiative called the “Brain Activity Map Project” (BAM).  The ultimate goal is\nto map all the connections in the brain and simultaneously record the activity\nof all the brain’s neurons.</p>\n<p>What will BAM do for those of us interested in understanding how the brain works\nand building intelligent machines?</p>\n<p>The fact that brain research is national news promoted by the U.S. President is\ngreat.  Reverse engineering the brain is arguably the most important scientific\nchallenge of all time and one we are close to solving.  History will mark\nhumanity in two epochs, before and after understanding how brains work, or\nbefore and after machine intelligence.  National focus and money on this\nimportant problem makes sense and will accelerate progress.</p>\n<p><img src=\"../images/main.jpg\" alt=\"Brain Image\"></p>\n<p>BAM is modeled after the\n<a href=\"http://www.ornl.gov/sci/techresources/Human_Genome/home.shtml\">Human Genome Project</a>.\nThis was a decade long federally funded effort to map the genome.  It was a\nsuccess. But mapping the brain’s activities is not a singular thing like mapping\nthe human genome.  People don’t agree on what it means to map the brain or what\nsuccess looks like.  At the moment it isn’t clear exactly what BAM will try to\nachieve.  Regardless, we can be confident that the BAM initiative will\naccelerate our understanding of brains.  But there are several ways this can go.</p>\n<p>The <a href=\"http://www.nih.gov/\">NIH (National Institutes of Health)</a> will likely to do\nmost of the funding for BAM as it did for the Human Genome Project.  Since the\nNIH focuses almost exclusively on diseases, BAM research will be pushed in\ndirections that may not be best for reverse engineering the brain and building\nintelligent machines.  For example, there is a split in the neuroscience world\nbetween scientists who study relatively simple nervous systems (such as worms\nand slugs) and those who study the neocortex which is what makes humans\nintelligent.   The BAM initiative has stated they will start with invertebrates.\nUnderstanding invertebrate nervous systems may lead to a better understanding of\nhow brains grow or how neurons work and fail, but it is less likely to lead to a\nbetter understanding of intelligence.  For that you have to study the neocortex\nwhich only exists in mammals.</p>\n<p>On the other hand,\n<a href=\"http://www.darpa.mil/\">DARPA (the Defense Advanced Research Projects Administration)</a>\nis also part of BAM.  DARPA is interested in machine intelligence and robotics.\nBAM dollars that get allocated through DARPA are more likely to advance our\nunderstanding of intelligence and more likely to lead to advances in\npractical hardware for machine intelligence.</p>\n<p>National research agendas such as BAM sometimes don’t succeed.  In the 1980’s\nJapan created the\n<a href=\"http://en.wikipedia.org/wiki/Fifth_generation_computer\">Fifth Generation Computer Systems Project</a>,\na bold plan to leapfrog the rest of the world in computer science and artificial\nintelligence. It failed despite concerted effort and hundreds of millions of\ndollars of funding.  Will BAM be a success like the Human Genome Project or a\nfailure like the Fifth Generation Computer Systems Project?  Will BAM accelerate\nbrain theory and machine intelligence or just lead to better understanding of\ndisease?  It is too early to answer these questions.  It depends on what goals\nare chosen and who allocates the funds.</p>\n<p>I am optimistic that good things will emerge from BAM but I don’t expect it will\nachieve the stated goals.  Mapping the human genome is a far easier problem than\nrecording from and mapping every neuron in a brain.  Mapping the genome is like\nreading letters on a very long tape.  You can make millions of copies of the\ntape and divide up the mapping task among thousands of tape reading machines.\nMapping a brain is like finding the personal relationships of every human on\nEarth and keeping track of what each person is doing at every moment in time.\nThe size of the problem is daunting but the biggest difficulty is that the\nconnections between neurons, like our relationships, are unique and constantly\nchanging.  When it comes to the human neocortex, there is no singular map.  We\ncan take analogies like this only so far, my point is that mapping the human\nbrain is qualitatively harder than mapping the genome.  Even if BAM does\nsucceed, a complete map of a brain is not going to tell us how it works or what\ncauses mental diseases.</p>\n<p>The activity and connection maps envisioned by BAM will be useful, but brain\ntheorists today are not lacking in empirical data.  We haven’t come close to\nunderstanding the tremendous amount of data we already have.  If we want to\nunderstand how brains work, then a better direction is to focus on brain theory,\nnot brain mapping.  We should set goals for brain theory and goals for machine\nintelligence tasks based on those theories.  That is what we do at Numenta.  For\nexample, we set goals to understand how neurons in the neocortex form sparse\ndistributed representations and then how they learn to predict future events.\nThis resulted in\n<a href=\"http://numenta.org/cla.html\">Cortical Learning Algorithm (CLA)</a> which is the\nheart of our Grok streaming prediction engine.  The next big theoretical\nchallenge we are working on is how the cortex generates behaviors from\npredictions, what is sometimes called the sensory-motor integration problem.</p>\n<p>Those of us who are interested in brain theory and machine intelligence should\nbe happy about BAM regardless of how it plays out.  But we shouldn’t rely on it\nto advance brain theory or machine intelligence any time soon.  I am working on\na set of brain theory goals that will accelerate progress in machine\nintelligence.  I hope to discuss these in a future blog post.</p>\n"}

/***/ },
/* 738 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ef8935f4eeb21c1b4dfd828075f6f424.png";

/***/ },
/* 739 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cfe8dda896ed51feec7f96d7c49e53e9.png";

/***/ },
/* 740 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4be0fab98faa7fb4d5ba80433962d122.jpg";

/***/ },
/* 741 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c7e349d46f23b186f7e14fd8f143fb9d.jpg";

/***/ },
/* 742 */
741,
/* 743 */
714,
/* 744 */
/***/ function(module, exports) {

	module.exports = {"author":"Joe Hayashi","brief":"A question we get from time to time is, “How is Grok different from complex event processing systems?”  Like Grok, CEP systems are all about streaming data","date":"2013/04/02","featured":false,"image":"../images/image.jpg","org":"Marketing","tags":"Company, Data","title":"Numenta and Complex Event Processing","body":"<p>A question we get from time to time is, “How is Grok different from complex\nevent processing systems?”  Like Grok, CEP systems are all about streaming data,\nbut Numenta and CEP systems use this data in different ways. We think Numenta\nand CEP are highly complementary and I wanted to take a moment to explain why.</p>\n<p>A key capability of CEP systems is that they can perform database-like\noperations on streaming data - queries, joins, aggregations, mathematical\noperations, etc.  As data comes in, the results of these operations are\ncontinuously updated. Need an instantaneous summary of your firm’s market\npositions? Need to know what the current load is on your cell sites? CEP systems\nare built to answer these types of questions and to do it continuously.</p>\n<p>The second hallmark of CEP systems is triggering action. Knowing that your house\nis on fire is certainly important, but you really want to take action to put out\nthe fire. CEP systems also allow you to create business logic around streaming\ndata and then drive action from it.  If a real-time key performance indicator is\nexceeded, logic can be written in the CEP system to trigger a response and take\naction.</p>\n<p>This combination of capabilities - working with real-time data and creating a\nframework of logic around it - enable many companies to set aside legacy code\nbases for more flexible CEP environments.  Because of this flexibility, you\noften find CEP systems at the heart of many real-time operational systems.</p>\n<h4>Grok extends CEP into the future</h4>\n<p>As we implement pilot projects with customers who use CEP, we’ve come to\nappreciate how Grok can be a powerful and valuable extension to their CEP\ndeployments.</p>\n<p>In a nutshell, Grok makes it easy to get predictions from and find anomalies in\ndata streams. It’s certainly helpful to know what is happening now, but the next\nlogical question to ask is, “what will happen next?”</p>\n<p><img src=\"../images/cep-arrow.jpg\" alt=\"Image\" title=\"Numenta and CEP Systems\"></p>\n<p>The simple view is that business intelligence systems are focused on historical\ndata, CEP systems focus on what is happening right now, and Grok is focused on\nwhat is most likely to happen in the future.</p>\n<h4>Real-time prediction</h4>\n<p>One of the pillars of Grok is its ability to develop high quality predictive\nmodels automatically.  Data streams being used by a CEP system can be trivially\nrepurposed to build predictive models of the data.  The predictions from the\nGrok models can then be easily brought back into the CEP environment.</p>\n<p>No doubt you’ve heard that building good enterprise scale predictive models can\nbe hard for us humans.  When you have thousands of data streams and you want to\nalways use the latest information, it becomes even more challenging. Grok can\nbuild custom models for each data stream and do it automatically in a way that\nis always up to date.</p>\n<p>Grok can provide customers with CEP systems with high quality predictions about\nwhat is most likely to happen and this information can be added to the mix of\noperational information to make the best decision and take the most appropriate\nactions.</p>\n<h4>Move from hand-built triggers to adaptive modelling</h4>\n<p>In addition to modelling many data streams automatically, Grok can also make the\nbusiness logic that drives the action from CEP systems much more flexible and\nadaptive.</p>\n<p>Many CEP applications look at thresholds of real time data and when these\nthresholds are violated, actions are triggered. One problem is that it can be a\ntedious and error prone task to configure these thresholds. But the real problem\nwith thresholds (even moving thresholds) is what what was “normal” yesterday\nisn’t normal today. Businesses operate in a world that is constantly evolving\nand your systems can’t be hard-coded to the past.</p>\n<p>Grok models learn continuously from data. Even when Grok is looking for\nanomalies, its models can adapt to find the “new normal” in your data, while\nstill recognizing important historical anomalies.  This adaptive behavior, when\npaired with CEP’s ability to act on data, is required if you want to drive\nintelligent action from your operational data.</p>\n<p>With Grok’s focus on streaming data, automated model building, and continuous\nlearning, we believe that Grok is an ideal match for CEP applications in\nfinance, energy, and telecommunications.</p>\n<p>I should mention that there are a number of excellent CEP system on the market,\nproducts like <a href=\"http://bit.ly/13P4QF6\">Oracle OEP</a>,\n<a href=\"http://bit.ly/14CJutu\">Sybase ESP</a>,\n<a href=\"http://ibm.co/12dbr7a\">IBM InfoSphere Streams</a>, and others.  We’ll be talking\nmore about Grok’s fit with these and other products in the coming weeks.</p>\n"}

/***/ },
/* 745 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1245cb44dcd46782354cfc8cb512c3b3.png";

/***/ },
/* 746 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8e27c43ad925250d906537a4c8d4110a.png";

/***/ },
/* 747 */
/***/ function(module, exports) {

	module.exports = {"author":"Rahul Agarwal","brief":"Streaming data is the future of data. Businesses need real-time solutions that can keep up with the accelerating pace and scale of information they are","date":"2013/04/11","featured":false,"image":"../images/image.png","org":"Engineering","tags":"Machine Learning, Data","title":"The Online Learning Advantage","body":"<p>Streaming data is the future of data. Businesses need real-time solutions that\ncan keep up with the accelerating pace and scale of information they are\ncollecting. This is why one of the key features that Grok models incorporate is\n<strong>online learning</strong> (a technical term our marketing department has\naffectionately changed to “continuous learning”). In this post, I’ll talk a\nlittle bit about online learning and why we think it is so important for solving\nthe types of problems that Grok tackles.</p>\n<h4>What is online learning?</h4>\n<p>Most machine learning systems are what are called <strong>batch learning systems</strong>.\nThis means that they are trained once on a static set of data, called the\n<strong>training dataset</strong>. The model that is learned from this training set is then\nused to make predictions for additional data, called the <strong>test dataset</strong>. This\napproach assumes that the data is stationary, i.e. that the statistical patterns\nin the data do not change over time. By contrast, in an online learning system\nthere is no distinction between training and test data. Every record updates the\nmodel with new information. Therefore, an online learning model never stops\nlearning and always uses the most recent information. Online learning systems do\nnot assume any stationarity in the data. As patterns in the data change, the\nmodel adapts and learns these new patterns.</p>\n<p>You might be thinking, “But Rahul, can’t you just take a batch learning system\nand retrain it periodically? Wouldn’t that also allow the model to adapt?” To\nthis I would say two things, “1) How did you know my name? 2) Yes you can.”\nHowever, as I will discuss below, this approach is often suboptimal or not\nfeasible for real-time streaming data problems</p>\n<h4>What are streaming data problems?</h4>\n<p>Grok builds models to make predictions on <strong>real-time streaming data</strong>. This is\nhigh frequency, usually machine-generated data. These data streams measure the\nchange in one or many variables as they change over time. An example of\nstreaming data is measurements from temperature sensors placed on a piece of\nindustrial equipment, such as a wind turbine. Another example could be the CPU\nand memory usage of a server in a server farm. Recent data is exponentially more\nvaluable than old data. Our founder, Jeff Hawkins, talks about this idea as the\n“half-life” of data. For example, a web company may release a new feature that\ndramatically increases traffic to its servers. Any external factors make\nstreaming data inherently non-stationary, indicating that online learning or\nretraining is a necessity. Therefore, being able to incorporate the latest data\ninto a model as soon as possible offers a huge advantage.</p>\n<h4>Why online learning helps: Fast Data</h4>\n<p>One issue with retraining batch systems is that it is often too slow to be\nfeasible. Many batch machine learning algorithms are optimized to have long,\ncomputationally expensive training phases in order to be faster during testing.\nThis is because training is assumed to happen rarely, often only once.</p>\n<p>One of the reasons many popular batch learning algorithms are slow is that they\nrely on iterative optimization techniques as a subroutine for learning. This\nmeans that they perform the same computation over the training set for many\niterations until the parameters of the model converge (given some convergence\ncriteria). These iterative algorithms can potentially take a long time to run\ndepending on how quickly the model converges. Take the popular sequence learning\nalgorithm, Hidden Markov Models (HMMs). The algorithm to train a full HMM from\nunlabeled data, called the <strong>Baum-Welch algorithm</strong>, is an iterative algorithm\nwhere <em>each step</em> has complexity <strong>O(K^2N)</strong>, where <strong>K</strong> is the number of\nstates in the model, and <strong>N</strong> is the number of records in the training set.\nThis means, even for a moderate number of states, each iteration of the\noptimization process could take a significant amount of time. Even algorithms\nthat are generally considered more efficient, such as Support Vector Machines\n(SVMs), still require iterative algorithms during training, introducing an\nindeterminate, potentially large amount of computation. For streaming data\nproblems, it would be infeasible to retrain models on every record because the\ntraining process would be too slow to keep up with the data. Even worse, for\nvery high frequency cases, the data might be coming in so fast that the model is\nobsolete by the time it is retrained! In an on-line training system such as Grok\neach new data point is presented just once an Grok can update its model in a few\ntens of milliseconds.</p>\n<h4>Why online learning helps: Many Models</h4>\n<p>In addition to speed, another advantage of Grok is that it allows you to easily\ntrain and deploy hundreds and thousands of models. That means you can deploy a\nseparate model for each turbine in your wind farm, or for each node in your data\ncenter. At this scale, it becomes costly to store the large amounts of data for\neach model in order to retrain them. Instead, online models allow you to “fire-\nand-forget” your data. An online learning algorithm learns as soon as a new\nrecord is fed to it. After that, there is no need to keep the original record,\nas the model has already incorporated the new information by updating it’s own\nparameters.</p>\n<p>Even if you can find enough storage for these records, you still have to make a\nfundamental decision: how often do you retrain? This is not a trivial decision,\nand it requires the modeler to make certain assumptions about how long the\nsequential patterns are in the data. There is also a tradeoff between the size\nof each training batch. Smaller batches allow you to update the models more\nfrequently, but can lead to issues with data sparsity and overfitting, which\nmeans that the model doesn’t learn all the different patterns that are present\nin the data. On the other hand, larger batches will take longer to train on, and\nit will take longer for models to incorporate the most recent data. In the case\nof thousands of models, it will not be feasible to customize the batch size for\neach model, so some assumption must be made to suit all models. Although online\nlearning algorithms, such as our Cortical Learning Algorithm (CLA), generally\nhave some analogous “learning rate” parameter, Grok automatically determines the\nbest value for each model during the swarming process, removing the need for the\ndata scientist to select a value.</p>\n<h4>Conclusion</h4>\n<p>While batch learning make sense for certain problem domains, online learning is\nessential for high velocity streaming intelligence applications. While it is\npossible to munge batch systems into online learning systems, it’s like fitting\na square peg into a pentagonal hole. This is why Grok’s core technology\nincorporates online learning from the start.  In fact, we think that for the\nfuture of data (i.e. <em>streaming data</em>, if you were paying attention) online\nlearning is a must-have feature.</p>\n"}

/***/ },
/* 748 */
699,
/* 749 */
700,
/* 750 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1ff2020454149a74a38ff3573f454f42.jpg";

/***/ },
/* 751 */
/***/ function(module, exports) {

	module.exports = {"author":"Rob Haitani","brief":"Representations are patterns in a computer or a brain that represent something in the real world. They are building blocks to understanding our world, that","date":"2013/05/01","featured":false,"image":"../images/image.png","org":"Marketing","tags":"Neuroscience","title":"The Neuroscience Behind Grok, Part 2","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p><strong>This is the second post in a series describing how the brain works, and how\nthis benefits Grok. The content is based on lectures given by Jeff Hawkins\ndescribing Grok’s detailed model of a layer of cells in the neocortex, called\nthe Cortical Learning Algorithm (CLA).</strong></p>\n<p><a href=\"./the-neuroscience-behind-grok.html\">Previously</a>  we quoted an AI expert who\nsaid, “one of biggest problems in AI—no, the  only problem in AI—is\nthe problem of representation.”   What exactly are “representations,” and why do\nwe say that “Sparse Distributed Representations” (SDRs) are critical to modeling\nhuman intelligence?</p>\n<p>Representations are patterns in a computer or a brain that represent something\nin the real world. They are building blocks to understanding our world, that\nallow us to answer questions such as, “what is this?” and “what does this do?”</p>\n<p><img src=\"../images/main.jpg\" alt=\"Grok Logo\"></p>\n<p>That doesn’t sound so complicated. Computer programs use bytes and words to\nrepresent everything from your age, to the color of a car, to the features of a\nproduct.  This works well when all you want your computer to do is keep track of\nthings.  But how do you represent the relationship of things in the real world?\nComing up with a label called “car” is easy; knowing a car is similar to a truck\nor that it can be used for transportation is hard.  A car might be related to\nhundreds of other objects in complicated ways.  This type of knowledge is\nsurprisingly difficult to capture in the precise realm of computers.</p>\n<p>Your brain also forms representations.  The brain’s representations consist of\nthe activity of neurons, which ultimately derive from the inputs from your\nsenses.   The set of neurons representing “car” are fired when you see any car\nfrom any direction, in any lighting condition, even if a door is open or the car\nis crumpled. To manage this complexity, you’d think that all of your neurons\nmust be firing all the time, in a dense cacophony of activity.</p>\n<p>You’d think.  But you’d be wrong.</p>\n<p>No matter how furiously your brain is working, only a small percentage of\nneurons are active at any given time. Most are silent, and the neurons that fire\nactually inhibit other neurons nearby from firing. How can this be?</p>\n<p>Let’s start by looking more closely at how computers represent data, which is\nsometimes called “dense” representations.  In a computer representation there\nare a relatively small number of bits, and all combinations of ones and zeroes\nare used.  In ASCII code, for example, the string “01101101” represents the\nletter “m.” The individual 1s and 0s mean nothing. The bits only have meaning as\na group, and a programmer assigns the actual representations. This makes them\ninflexible: if one bit is missing or changed, then the entire meaning changes or\nis incomprehensible.  And an ASCII representation doesn’t tell you anything\nabout the properties of the letter “m” it represents.</p>\n<p>Sparse Distributed Representations, by contrast, consist of very long strings\nthat are mostly 0s.  Grok representations usually have 2,000 digits, of which\nonly 2% (or about 40) are 1s. This emulates the sparsity in the brain, where\nonly a few cells are active at any time.  However, each of the 1s has meaning.\nImagine a game similar to Twenty Questions, except that you can ask 2,000\nquestions.  It turns out you can build a system where any given word has a &quot;Yes&quot;\nanswer to about 40 of those questions, and “No” for everything else.  Note that\nif any two words share a “Yes” for the same question, they have something in\ncommon.  For example, both might be people, or both might be bigger than a\nbreadbox.  Also, the questions and answers are not assigned, but are learned\nthrough repeated observation.</p>\n<p>Continuing the analogy, let’s say you want to store this information. You don’t\nhave to record the answers to all 2,000 questions. You can store the numbers of\nthe 40 questions that had “Yes” answers (in computer terms, you can store an\nindex of active bits).  You can even take a random sample of 10 “Yes” answers,\nand still confidently identify your word.  This is more like Name That\nTune—I can name that word in ten “Yes” answers. If you do the math, it\nturns out that it is extremely unlikely that you will guess the wrong word if\nyou know ten of the correct “Yes” answers. But even if you did, it would still\nshare ten common attributes, so your mistake would represent something else that\nwas similar.  This principle of “semantic generalization” is a critical\ndifferentiating factor between flexible brains and “brittle” artificial\nintelligence.  Humans effortlessly use synonyms: “car,” “Prius,” &quot;automobile,&quot;\netc.  And our perception also degrades gracefully.  If you only see the hood of\na car, or a car with someone in front of it, or read the letters &quot;autmobile,&quot;\nyou filter out the noise and extract the essence of “car” from the partial\npattern you see.</p>\n<p>To summarize, SDRs are very long strings of mostly 0s that represent knowledge\nand meaning, and form the “language” of the brain. The principles of SDRs enable\nflexible recognition of similar patterns, and graceful degradation of noisy\ninput. As a result, it is difficult to imagine how to build machine intelligence\nwithout SDRs. The next post in this series will discuss how SDRs are used to\nlearn patterns.</p>\n<p>Further information:</p>\n<ul>\n<li><a href=\"http://numenta.org/cla-white-paper.html\">CLA white paper</a>. This paper discusses the Cortical Learning Algorithm in detail. It precedes Grok and therefore does not describe how CLA applies to Grok.</li>\n<li><a href=\"http://youtu.be/t6NcTdXxVeo\">Video on SDRs</a>.  This talk by Jeff Hawkins goes into more detail, including the SDR property of “union,” which makes it easy to determine if a new pattern has been seen before. This, in turn, forms the basis of Grok’s anomaly detection algorithms.</li>\n<li><a href=\"./introducing-the-first-ever-sparse-football-pool.html\">Introducing the first ever Sparse Football Pool!</a> and <a href=\"./super-bowl-neuroscience.html\">Super Bowl Neuroscience</a>. These blog posts describe a fun example of the principles of sparsity applied to a poll on a football game.</li>\n<li><a href=\"./the-neuroscience-behind-grok.html\">The Neuroscience Behind Grok, Part 1</a>. This is the first part of this series, providing an overview of how the brain is a predictive modeling memory system.</li>\n</ul>\n"}

/***/ },
/* 752 */
699,
/* 753 */
700,
/* 754 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"For a company that is launching its first product, we have an unusual number of terms and names, including Numenta, Grok, HTM, and NuPIC. This abundance of names reflects our unusual mission.","date":"2014/03/17","featured":false,"image":"../images/image.png","org":"CEO","tags":"numenta, name, change, grok","title":"Navigating Names at Numenta","body":"<p>For a company that is launching its first product, we have an unusual number of\nterms and names, including Numenta, Grok, HTM, and NuPIC. This abundance of\nnames reflects our unusual mission. I’m writing this blog post to explain how\nall these names fit together.</p>\n<p>Our company was founded over nine years ago as Numenta, and we are returning to\nusing this as our company name. Numenta’s mission is to <strong>lead the new era of\nmachine intelligence</strong>. This mission is ambitious, but it’s one that we are proud\nof and deeply committed to, and we have made real progress towards its\nachievement. The origin of the word is from the Latin “mentis”, meaning “mind”,\nso a “new mind”.</p>\n<p>In order to understand and make practical our machine intelligence technology,\nwe now are building products on top of it. Consequently, Numenta is both a\ntechnology and a product company. We are using the name Grok for our first\ncommercial product. We just launched Grok for IT Analytics on AWS (Amazon Web\nServices). We anticipate creating a variety of Grok products over time, all of\nwhich will use our core machine intelligence technology, but include additional\nfunctionality targeted at specific customer problems or domains. Our goal with\nGrok and other products is to become the leading platform for machine\nintelligence.</p>\n<p>Once you look deeper into the technology behind Grok and our other applications,\nyou will want to understand where the acronyms fit in. The broad theory\ndescribed by Jeff Hawkins in his book, On Intelligence, is called Hierarchical\nTemporal Memory (HTM). HTM is a theory about key characteristics of neocortex,\ndescribing learning as a memory-prediction system operating on spatio-temporal\ndata. HTM forms the theoretical underpinnings for our work. The learning\nalgorithms within HTM learn sequences and find patterns in temporal data. These\nHTM learning algorithms are modeled very closely after biological principles,\nand can be mapped to a single layer of neurons in the cortex.</p>\n<p>In 2013, we created an open source project implementing HTM in order to further\nour mission of being a leader in the new era of machine intelligence. We refer\nto the open source project as NuPIC (Numenta Platform for Intelligent\nComputing), and it is hosted at <a href=\"http://numenta.org\">http://numenta.org</a>.</p>\n<p>So, that’s all there is to it! In brief:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Numenta, Inc.</td>\n<td>Company name, including both technology and products</td>\n</tr>\n<tr>\n<td>Grok</td>\n<td>Name for first commercial product, Grok for IT Analytics</td>\n</tr>\n<tr>\n<td>Hierarchical Temporal Memory (HTM)</td>\n<td>Theory of neocortex described by Jeff Hawkins in On Intelligence.  Includes learning algorithms that find patterns in streaming data, predict next steps, and find anomalies; a core building block for HTM.</td>\n</tr>\n<tr>\n<td>NuPIC (Numenta Platform for Intelligent Computing)</td>\n<td>Open source project where HTM is being explored and advanced by the developer community</td>\n</tr>\n<tr>\n<td><a href=\"http://numenta.org\">http://numenta.org</a></td>\n<td>The home for NuPIC, the open source project</td>\n</tr>\n<tr>\n<td><a href=\"http://numenta.com\">http://numenta.com</a></td>\n<td>The home for Numenta, the company, and the Grok product</td>\n</tr>\n</tbody>\n</table>\n<p>As I said up front, Numenta is an unusual company. We work with scientists who\nare mainly interested in the HTM theory. We work with developers who are mainly\ninterested in our open source project using HTM. And we work with customers who\nare mainly interested in the Grok product built on top of these technologies,\nand prefer to think of the underlying technology as a black box. By using\nterminology to differentiate these audiences, it makes life a bit more complex\nfor us, but we believe that it makes our work and our direction far more clear.</p>\n"}

/***/ },
/* 755 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "027afae06fcb829fdcff483f0f3ddef1.png";

/***/ },
/* 756 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "59fa129d29a5108980650c2e24c89743.png";

/***/ },
/* 757 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"I’ve written a paper that explains how we have applied the science of the CLA to the technology of anomaly detection.  It illustrates how a simple-to-use product","date":"2014/03/20","featured":false,"image":"../images/image.png","org":"Founder","tags":"science, anomaly, detection, grok","title":"The Science of Anomaly Detection","body":"<p>I just finished writing a new\n[whitepaper](/assets/pdf/whitepapers/Numenta White Paper - Science of Anomaly Detection.pdf).\nIt is about the science of detecting anomalies.</p>\n<p>As followers of Numenta know, we have worked for many years to understand how\nthe neocortex works.  As I described in <em>On Intelligence</em>, the brain is a\nprediction machine, one that builds models from streaming data and constantly\nmakes predictions.  A large part of our research has been to understand exactly\nhow the neocortex learns and makes predictions. The Cortical Learning Algorithm\n(CLA), included in our NuPIC open source project, was a major advance in that\ndirection.</p>\n<p>We also feel it is imperative to find valuable applications for brain-based\ntechnology today.  So for the past two years we built a prediction engine based\non the CLA and started the process of investigating commercial applications.\nAlthough we found applications for prediction in many industries, and the CLA\nworked well in those applications, there were substantial barriers to being able\nto act on predictions within existing business processes.  Further, we learned\nthat there was equal or greater interest in anomaly detection, the “flip side”\nof prediction.</p>\n<p>With this knowledge we looked at the state-of-the-art in anomaly detection\ntechnology.  We also interviewed many people who use anomaly detection products\nin their daily routines.  We quickly learned two things.  One is that simple-to-\nuse products, ones that don’t require machine learning experts, didn’t perform\nwell.  Every person we talked to told us about getting too many false positives\nand/or too many false negatives.  The second thing we learned is that existing\ntools are designed to be used in data centers, but they caused frustration when\npeople were away from the data center or away from the office.  A surprising\nnumber of people we interviewed told us that they turned off alerts altogether.</p>\n<p>We realized that by using the CLA and applying our understanding of\nneuroscience, we could take a fresh approach, and create a substantially better\nanomaly detection engine.  We also felt we could reinvent how anomalous events\nare reported and explored, by creating a new type of mobile interface.  Our\nproduct, Grok, is the result.  Grok advances the state-of-the-art in anomaly\ndetection technology and it replaces SMS’s, and email alerts with a fun and\npowerful mobile application.  In just a few seconds on your mobile phone you can\nsee which of your applications and servers are acting unusually and if they need\nfurther attention.</p>\n<p>I’ve written a paper that explains how we have applied the science of the CLA to\nthe technology of anomaly detection.  It illustrates how a simple-to-use product\ncan detect anomalies with subtlety and sophistication by using cortical models.\nI hope you’ll read it and see why I’m so excited.  In my view, this is one of\nthe first products based on neocortical principles, a system that learns\npatterns from its temporal data stream, makes predictions, and identifies\nanomalies.  Just what your brain does every moment of every day.</p>\n"}

/***/ },
/* 758 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"My smartphone buzzed: Grok had sent an alert. I know that with Grok it just takes a few seconds to check things out, so I clicked on the notification graph","date":"2014/04/04","featured":false,"image":"../images/image.png","org":"VP Research","tags":"science, anomaly, detection, grok, aws","title":"Anomaly of the Week","body":"<p>It was Thursday night, March 20th, at 8pm. I was cleaning up the kitchen and\ngetting ready to wind down when my smartphone buzzed: Grok had sent an alert.\nI know that with Grok it just takes a few seconds to check things out, kind of\nlike text messages.  So I clicked on the notification and looked at the graph.\nWhat followed was interesting and eye opening!</p>\n<p>It turns out that on that night Amazon’s East coast datacenter, US-East-1, had\nsome problems. AWS API call latencies slowly increased. Eventually by about 8:40\nPM API calls were so slow as to be practically unusable.   Any applications on\nthose servers relying on the AWS API were unusable.</p>\n<p>Below are two screen shots from the Grok mobile application showing the Hourly\nview and the Day view for that time period.</p>\n<p><img src=\"../images/1.png\" alt=\"Grok Screenshot\" title=\"Grok Screenshot\"></p>\n<p><img src=\"../images/2.png\" alt=\"Grok Screenshot\" title=\"Grok Screenshot\"></p>\n<p>Notice that Grok flagged unusual behavior at 8pm, 35 minutes before Amazon’s API\nbecame completely unresponsive on the East Coast.</p>\n<p>To understand this better, here’s a bit of information about this server.\n“test02” is a test server running an instance of Grok.  We have servers in\nmultiple regions but this particular server sits in US-East-1 and was affected\nby the incident.  Our servers make lots of outgoing API calls as is typical for\nAWS applications.   The blue line shows CPU load on test02. As API calls slowed\ndown, retries and lags increased and the CPU load started became a bit wonky.\nEventually Cloudwatch became unresponsive and the data stopped coming in. The\nreally cool thing is that the alert happened 35 minutes before that point.\nLuckily test02 is just a test server. We keep most of our production stuff in\nUS-West so this didn’t directly affect us. However I do know that plenty of US-\nEast users were affected and could have benefited greatly from an early warning.</p>\n<p>It is useful to think about whether this could have been caught by some other\nmechanism. First, any threshold based alerting system would NOT have caught the\nanomaly. CPU load of 66% is not unusual at all for this server.  In fact there\nare times when the CPU goes close to 100% when this server trains new models so\nthat’s out. A system looking at our service latencies would not have detected\nanything either – our web server was actually perfectly responsive the entire\ntime. An anomaly detection scheme that relies on averages and standard\ndeviations would not have worked. The incident happened too fast, within just a\nfew 5-minute samples. A statistical technique that made a decision that fast\nwould lead to tons of false positives on noisy data (including normal usage when\nCPU jumps to 100%!).  You can see in the hour view how fast Grok turned red –\nGrok uses temporal sequences to detect unusual behavior. A more sophisticated\ntraining mechanism that relies on classifying known patterns also wouldn’t have\nworked. I have never seen this behavior before and would not have been able to\npredict it.</p>\n<p>Isn’t that the whole point though? We need a system that automatically detects\nthe unknown unknowns.</p>\n<p>The above are actual snapshots from my smartphone for our server and this is an\nactual incident (I admit I dramatized the first paragraph – let’s blame\nmarketing for that :-). For the record, below is a snapshot of the AWS status\npage. Amazon states that no instances were affected and this is true – we can\nattest that our machines kept running fine. On the other hand, any code that\nrelied on the AWS API was drastically affected by this incident.</p>\n<p><img src=\"../images/3.png\" alt=\"AWS Screenshot\" title=\"AWS Screenshot\"></p>\n<p>In general AWS does an amazing job of keeping their infrastructure up and\nrunning but occasional incidents do happen. These incidents are unpredictable\nand they are unavoidable. It is comforting to know that Grok can give me a heads\nup and some lead-time to investigate and figure out what to do. In a production\ncontext I would have had plenty of time to spin up servers in another region and\nredirect my traffic there.</p>\n"}

/***/ },
/* 759 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8c6cfcc623aea4deec25abdfb3a5a719.png";

/***/ },
/* 760 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2744b9665e65a762619fad8f30e11618.png";

/***/ },
/* 761 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "21d63de3d3d61b29390d144200d65bc2.png";

/***/ },
/* 762 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "79f0319bfa664221750c186f29cf48c9.png";

/***/ },
/* 763 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b9abfa77bcb4719586ff3f05fa5e7e15.jpg";

/***/ },
/* 764 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6558aadf8d56f345e1748dbcf710da65.jpg";

/***/ },
/* 765 */
/***/ function(module, exports) {

	module.exports = {"author":"Jared Casner","brief":"Like most engineering managers, I like to know when someone is manually touching one of our servers. That’s especially true for production systems, but also","date":"2014/04/22","featured":false,"image":"../images/image.png","org":"Director, Product Development","tags":"science, anomaly, detection, grok, aws","title":"Caught Red Handed","body":"<p>Like most engineering managers, I like to know when someone is manually touching\none of our servers.  That’s especially true for production systems, but also\napplies to QA servers.  So, imagine my chagrin when Grok caught me red handed,\nnot just once, but twice this week!</p>\n<p><img src=\"../images/1.png\" alt=\"Grok Screenshot\" title=\"Grok Screenshot\"></p>\n<p><img src=\"../images/2.png\" alt=\"Grok Screenshot\" title=\"Grok Screenshot\"></p>\n<p>This first example was when I upgraded one of our QA servers to Grok 1.3\n(shameless plug – that’s available now in the <a href=\"/grok/#get\">AWS marketplace</a> !)\nIn this example, you can see a very slight increase in the number of bytes\nreceived by the server, which was flagged very quickly.  At the same time, the\nCPU utilization starts to drop slightly, which Grok marked as yellow. Notice\nthat Grok picked up the update on 2 metrics at the same time, both right as the\nprocess starts, before the metrics get into ranges that could be identified as\nabnormal by most statistical techniques!  Having a leading indicator – even by a\nfew minutes – that things are starting to behave atypically is a huge advantage!</p>\n<p>Luckily for us, this was a totally innocuous change.  And, investigation was\neven easier because when I got the alert about the anomaly, I was still in the\nmiddle of the update.</p>\n<p>The second example from this week was when I decided doing some recovery testing\nwould be a good idea.  I manually stopped all of the services on the QA server\nand watched the CPU load drop rapidly again.  This time, Grok picked up the\nchange very rapidly.  But, notice that the new pattern also stabilizes very\nquickly at ~20% CPU load, with the Grok anomaly score dropping back into the\ngreen quickly.  Grok then flags an anomaly around 12 hours later when I turned\nthe services back on and the CPU jumped back up to the ~85% mark.  Now, if\nyou’re like me, you’ll have noticed a 3rd anomaly in the chart on the left,\nright around 10PM.  I drilled into that one and noticed that, sure enough, the\npattern is just slightly different at 10PM than it is at 9PM.  It’s a visibly\nsubtle difference, but important nonetheless.</p>\n<p><img src=\"../images/3.png\" alt=\"Grok Screenshot\" title=\"Grok Screenshot\"></p>\n<p><img src=\"../images/4.png\" alt=\"Grok Screenshot\" title=\"Grok Screenshot\"></p>\n<p>Stay tuned for our next “Anomaly of the Week”!</p>\n"}

/***/ },
/* 766 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5c27297c5281232941d146377fb46df1.png";

/***/ },
/* 767 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c343d92bfda3b4c759a013a4a08d1a4a.png";

/***/ },
/* 768 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "979db542ffb1331859bd359b524c12ee.png";

/***/ },
/* 769 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7f0f4be62ee31cb032f5b30f2c76e5c6.png";

/***/ },
/* 770 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8fe109c0a582cda62b9444bf6a429938.png";

/***/ },
/* 771 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "93d27fd4af29b1daa960a54f5d22b1b6.jpg";

/***/ },
/* 772 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7a729996a8cae13fb45c3d84dc6613c3.jpg";

/***/ },
/* 773 */
/***/ function(module, exports) {

	module.exports = {"author":"Viraj Sinha","brief":"I decided to apply Grok and the Cortical Learning Algorithm to stock data: have the CLA learn patterns and alert me to anomalies. I decided to monitor volume","date":"2014/07/15","featured":false,"image":"../images/image.png","org":"Summer Intern, Engineering","tags":"anomaly, detection, stock, finance, volume","title":"Detecting Anomalies in Stock Volumes","body":"<p>In the film Pi, a mathematician by the name of Maximllian Cohen derives the\nmathematics for universal prediction pattern in stock data (using, as the\nmovie’s namesake may suggest, the number Pi). With his math, Max is able to\npredict the precise activity of the market, in real time. The movie takes a turn\nfor the cerebral (and is worth a watch), but the idea of predicting stock data\nstuck with me. Rather than using Max’s math, I decided to apply Grok and the\nCortical Learning Algorithm to stock data: have the CLA learn patterns and alert\nme to anomalies.</p>\n<p>I decided to primarily monitor stock volume, which can be an interesting\nindicator of a share’s performance. Usually, a drastic event in volume indicates\na change in the recent trend of a given share: a volume spike signifies interest\nby investors (or trading algorithms), often related to buy orders when the price\nis significantly low, or sell orders when the price is high. By using Grok to\nmonitor volume anomalies, I can get a notification on my phone when a given\nshare is being traded in an unusual way.</p>\n<p>Trade volume often peaks towards the beginnings and ends of the day, as after-\nhours orders are filled in the mornings, or as close-price orders are filled in\nthe evening. Since Grok actually learns the patterns rather than being a simple\nthreshold-based system, it does very well learning patterns and filtering the\nsignal from the noise.</p>\n<p><img src=\"../images/1.png\" alt=\"Google Finance Graph\" title=\"Google Finance Graph\"></p>\n<p>Here’s a real life example from the ticker for 3D Systems Corporation (DDD). 3D\nSystems Corporation builds and sells 3D printers and scanners, as well as sells\n3D printed parts to everyone from the automotive to the dental and healthcare\nindustries. In the first image (taken directly from Google Finance), we can see\na trade volume spike on July 1st just moments before a huge increase in price\n(and a continued increase in trade volume). In the second (taken from Grok), we\nsee an anomaly detected with the volume spike! When this happened, I got a\nnotification sent to my phone, telling me to check out DDD’s anomalous behavior.\nI quickly got online and watched the action live, as the price skyrocketed and\nthen dropped back down. If I’d actually had DDD in my portfolio, I would’ve\nknown that the price spiked, and would’ve seen it drop back down by the end of\nthe day. It’s very convenient to be told when a share is doing something like\nthis, rather than having to watch multiple prices during the day.</p>\n<p><img src=\"../images/2.png\" alt=\"Grok Anomaly Chart\" title=\"Grok Anomaly Chart\"></p>\n<p>Interestingly, we don’t see any anomalies after the first red peak on the\nanomaly chart. This is because Grok, by default, suppresses additional anomalies\nfor an hour after an initial detection—the red peak on the chart is synonymous\nwith a detected anomaly. Since Grok fires off a cell phone notification every\ntime it sees an anomaly, we decided we didn’t want to spam the user with\nmultiple notifications within a certain time period. If you look closely at the\ngraph, you can even see the perfectly flat section for about 1 hour after the\ninitial red anomaly. If we didn’t have this suppression turned on, we’d expect\nto see additional anomalies detected around 8:40 and 9:05 that day.</p>\n<p>I’m writing this post a week after this event, and the press has had some time\nto catch up. There are a few speculative reasons for this price spike, including\na change in management [1], the launch of a new 3d scanner for the iPad [2], and\nnews of recent advancements in medical-grade 3D printing which will allow for\nantibiotic-infused implants [3]. This is pretty exciting news, all of which I likely\nwouldn’t have noticed if it weren’t for Grok.</p>\n<p>[1] <a href=\"http://www.marketnewscall.com/volume-buzzers-3d-systems-corporation-nyseddd-ezchip-semiconductor-ltd-nasdaqezch/1231261/\">http://www.marketnewscall.com/volume-buzzers-3d-systems-corporation-nyseddd-ezchip-semiconductor-ltd-nasdaqezch/1231261/</a></p>\n<p>[2] <a href=\"http://www.gaininggreen.com/computer-peripherals-3d-systems-corporation-nyseddd-logitech-international-sa-nasdaqlogi-electronics-for-imaging-nasdaqefii-universal-display-corporation-nasdaqoled-transact-technolog/1239893/\">http://www.gaininggreen.com/computer-peripherals-3d-systems-corporation-nyseddd-logitech-international-sa-nasdaqlogi-electronics-for-imaging-nasdaqefii-universal-display-corporation-nasdaqoled-transact-technolog/1239893/</a></p>\n<p>[3] <a href=\"http://3dprint.com/7793/3d-print-antibiotics-implants/\">http://3dprint.com/7793/3d-print-antibiotics-implants/</a></p>\n"}

/***/ },
/* 774 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c7507a154472a6135db7f5f6d450c9ec.png";

/***/ },
/* 775 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e79817bb70676fb00140ad523b4f15b9.png";

/***/ },
/* 776 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0385e5e059ad7b8888e9bf3e3b7ab653.png";

/***/ },
/* 777 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ae4f26fae66012e7700dbda9e7c2434d.jpg";

/***/ },
/* 778 */
/***/ function(module, exports) {

	module.exports = {"author":"Joe Block","brief":"I saw a notification from Grok that our web server auto scaling group (ASG) was acting anomalously. At first I thought it was only because we were heavier","date":"2014/07/22","featured":false,"image":"../images/image.png","org":"Site Reliability Engineer","tags":"science, anomaly, detection, grok, aws","title":"Cleanup on ASG 3","body":"<p>I was at the AWS summit in NYC, and when I got back to California, I saw a\nnotification from Grok that our web server auto scaling group (ASG) was acting\nanomalously. At first I thought it was only because we were seeing heavier than\nusual traffic since we were mentioned in Information Week and VentureBeat, but\nwhen I checked it out in Grok’s mobile app, I noticed a couple of odd and\ninteresting things.</p>\n<p>First, I saw an odd pattern in the NetworkIn graph - instead of a flattish line\nwith minor variation and different sized rough edged spikes I’d expect from\nregular web requests, or a line trending upward as the web traffic went up from\nthe media mentions, what I was seeing was a stable line with very high, very\nsharp spikes at regular intervals. On closer examination, the peak spikes were\neven more suspicious - they were all very nearly the same size.</p>\n<p>Secondly, Grok had also flagged the group’s CPU metric, and when I looked at it,\nthe graph was very atypical. This ASG normally has a CPU load that hovers around\n20%, and what I was seeing was hovering around 40-45% with surges to 100%. The\nsurges were not as sharply edged as the network spikes, but there were still\nsurges in load.</p>\n<p>Finally, even though the CPU was staying above the level we’d configured our ASG\nto add instances at, when I took a look at the ASG instance count it was still\nhovering around the lower bound of the ASG’s size limit.</p>\n<p>After staring at the individual graphs on the phone for a bit, I pulled up the\nGrok web chart page so I could compare them to each other - sometimes I prefer\nusing the web chart because it allows me to view more than one of an instance or\nASG’s underlying metric graphs’ raw data charts at once, and also because by\nviewing them on a 15 inch MacBook Pro screen instead of a phone, I can see a\nbigger picture of what is going on. Sure enough, once I expanded the CPU and\nNetworkIn underlying charts on my laptop I could see that the surges in CPU were\nlagging behind the spikes in network, and I immediately got an idea of what was\ngoing on, and a quick look at the ASG’s scaling history and the logs on a\nfreshly started web server instance confirmed my suspicions.</p>\n<p><img src=\"../images/ASG-failing.png\" alt=\"Grok Screenshot\" title=\"Grok Screenshot\"></p>\n<p>Here’s a little background about our web server back end auto scaling group. The\nNumenta web site itself is stored in a git repository and uses a combination of\ndocpad, nodejs and some custom scripts to render the static pages of the site\nfrom various source assets. Each web server updates the local copy of the git\nrepository every fifteen minutes, and if the master branch has changed, it\nrenders the site and swaps the new rendered document directory tree into place.\nThat’s the normal process, and because we’re using git we only have to download\nthe changes in the source files since the last site update.</p>\n<p>What was happening in this case though, was that the site renders were failing\non fresh instances. So the ASG would spin up a new instance, the new instance\nwould have to download the entire git repository, it would attempt to run the\nbuild process and the build would fail. Then the health check script would run,\nsee that the web server didn’t have a valid document root, report the instance\nas unhealthy to the ASG, and the ASG would terminate the instance. Once the cool\ndown expired, we’d lather, rinse and repeat. If all the old instances had gotten\nterminated in the ASG, we’d have had downtime on the website since new instances\nwere failing to become healthy and get added to the load balancer.</p>\n<p>The reason the problem was only showing up on new instances was because the\nsupport script was just checking that a particular component was installed, not\nthat it was a specific version. When the upstream source for that component\nupdated to a new version, it wasn’t compatible with our build process, so new\ninstances would fail to build. The identically sized NetworkIn spikes were when\na new instance started up and did the initial git clone of the website\nrepository, and the wider CPU spikes were when the new instance would attempt to\nrender the website’s static assets.</p>\n<p>We resolved the issue in two ways. In the short term, we updated the build\nscript so that it specified exact versions for all of its dependencies. This\nstopped the new instance churn right away. In the long term, we stopped\nrendering the site on the web servers - we had initially decided to build the\nstatic site on the web server to eliminate machine-generated files from the\nrepository, but now we pre-render everything and check the static site into the\nrepository. It can be served immediately after a git pull and the web servers\ndon’t have to do anything else when we update the web site content.</p>\n<p>Here’s an example of the new, normal curves after all the fixes were put in\nplace:</p>\n<p><img src=\"../images/ASG-healthy.png\" alt=\"Grok Screenshot\" title=\"Grok Screenshot\"></p>\n<p>I could have figured this out without Grok, but I would have had to look at\nevery metric for the ASG, then scrubbed through them to find where the anomalous\nbehavior began, then rummaged through the log files, but, and this is an\nimportant but, I wouldn’t have started looking until the last good web server\nbackend failed and I got an alert that the website was down. Thresholds on the\nCPU load or NetworkIn wouldn’t have helped me - the spikes I saw were what I\nwould have expected to see when a new instance was added to the ASG, what made\nthem unusual was how rapidly the instances were getting added and dropped.\nInstead, Grok notified me when the anomalous behavior started, highlighted\nexactly which metrics were showing the strange behavior, and let me compare them\nto each other immediately so I could get good picture of the situation before I\nstarted looking in my logs, and before the website actually went offline.</p>\n"}

/***/ },
/* 779 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "66e9f55fe31fd13150e4de1906e6fdeb.png";

/***/ },
/* 780 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5424252a313a83348200d69aa60e9bb8.png";

/***/ },
/* 781 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cac1600f63fb45a7a100e7661ab20e65.png";

/***/ },
/* 782 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4fa9b91d52f06ed85797939a15837b4d.png";

/***/ },
/* 783 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "01b65b9ef816454107b105ffb0071b03.png";

/***/ },
/* 784 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "78569420a5d443c25328e64784f8baea.png";

/***/ },
/* 785 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a05824a7303265322a5dc56c7fb4f162.png";

/***/ },
/* 786 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9c6f11195a1cd4d6df485cde5119bef5.png";

/***/ },
/* 787 */
/***/ function(module, exports) {

	module.exports = {"author":"Nick DeFalco","brief":"On the other hand, HTM machine intelligence – like your brain – comprises a single underlying processing method that is extensible across a wide range of applications. Over the course of this summer alone, we have used our underlying","date":"2014/08/11","featured":false,"image":"../images/image.png","org":"Marketing Intern","tags":"summer internships hierarchical temporal memory htm extensible","title":"Summer Internships and the Extensibility of HTM","body":"<p>I recently had a conversation with a friend where the subject of our summer\ninternships came up. My friend is interning at a financial institution and she\nhad great things to say about her company and the people she worked with.\nHowever, her one major complaint was that the work she did was very specialized\nand narrowly focused. She worried that if she ultimately decided to pursue a\ncareer outside of finance, the skills she had sharpened during her internship\nwouldn’t be widely applicable.</p>\n<p>To me, this sounded like the opposite of what I felt about my time with Numenta.\nAs more than one of my old bosses used to say, “working in a startup is like\nbuilding the airplane as you’re heading down the runway.” In a situation like\nthis, roles are somewhat amorphous, projects are fast paced, and coworkers\ncontribute wherever they can. Furthermore, the skills and mindset developed in\nthis type of environment are relevant across a wide range of functions.</p>\n<p>As I think back on the conversation I had with my friend, I realize that the\ndifferences between her internship experience and my own also provide a strong\nmetaphor for comparing the Hierarchical Temporal Memory (HTM) machine\nintelligence technologies we are developing at Numenta against the typical\nprogrammed tools we are all familiar with today. Almost all of the software we\nuse today has been programmed to do one specific set of tasks. This enables each\nindividual program to perform the jobs it was designed for extremely well, but\nlimits the usefulness of each tool to a very limited range of use cases. That’s\nwhy you only need one brain, but your smart phone would be pretty dumb if you\nonly had one app.</p>\n<p>On the other hand, HTM machine intelligence – like your brain – comprises a\nsingle underlying processing method that is extensible across a wide range of\napplications. Over the course of this summer alone, we have used our underlying\nmachine intelligence technology to deliver interesting new capabilities across a\nwide variety of potential applications and data sets. Here are a few of the\napplications that we have been working on this summer to demonstrate the\nextensibility of HTM:</p>\n<h4>Rogue Behavior Detection</h4>\n<p>Using the data generated by human actions to alert to abnormal employee actions\nand detect when computers or other devices are accessed by unauthorized users.</p>\n<p><img src=\"../images/rogue.png\" alt=\"Screenshot\" title=\"Screenshot\"></p>\n<h4>Geospatial Tracking</h4>\n<p>Using streaming GPS and speed data to automatically model location and travel\npatterns, then use this model to identify subsequent irregularities in speed,\nlocation and route pattern.</p>\n<p><img src=\"../images/geo.png\" alt=\"Screenshot\" title=\"Screenshot\"></p>\n<h4>Natural Language Processing</h4>\n<p>Improving the ability of machines to understand the semantic meaning and context\nof natural language.</p>\n<p><img src=\"../images/nlp.png\" alt=\"Screenshot\" title=\"Screenshot\"></p>\n<h4>Sensorimotor Learning and Prediction</h4>\n<p>Actively exploring an environment to:</p>\n<ol>\n<li>Predict the results of motor actions and control signals, and</li>\n<li>Form stable and discriminative representations of each environment</li>\n</ol>\n<p><img src=\"../images/motor.png\" alt=\"Screenshot\" title=\"Screenshot\"></p>\n<p>Just as the tools used during an internship only represent a few of the gadgets\nwe each hold in our tool bags, the applications shown above only demonstrate a\nthin slice of the potential that HTM machine intelligence holds. As such, I’m\nreally excited to see how HTM will continue to grow over the next few years to\ndeepen its capabilities and broaden the ways in which it impacts our world.</p>\n"}

/***/ },
/* 788 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c79c6af494c210d270932d478a1aa4f0.png";

/***/ },
/* 789 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fc52e9d1e5af9bea5532f5d95f4ca8c2.png";

/***/ },
/* 790 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"Late last year we shipped our first product, Grok for IT Analytics on AWS. Since then, we’ve released several enhancements for the product, including the recent version 1.5 with a new web charting feature.","date":"2014/08/18","featured":false,"image":"../images/image.png","org":"CEO","tags":"progress numenta grok htm aws it analytics anomaly detection streaming data","title":"Progress at Numenta","body":"<p>You will notice some substantial changes in our web site this week.  I’d like to\ntake a moment to explain what’s going on.</p>\n<p>Late last year we shipped our first product, <a href=\"http://grokstream.com\">Grok for IT Analytics</a>\non AWS. Since then, we’ve released several enhancements for the product,\nincluding the recent version 1.5 with a new web charting feature.</p>\n<p>Some customers using our product have told us that they have found problems in\ntheir AWS environments that other methods haven’t caught, while others have\nfound problems hours earlier than they would have otherwise.  These results have\ndemonstrated that our HTM (Hierarchical Temporal Memory) learning algorithms are\nperforming as we had hoped.  We are automatically learning the patterns in the\nstreaming data of each individual server, and then finding when the input\ndiffers from that expected, thus detecting an anomaly.  Other customers are also\nusing Grok to analyze non-IT data using our\n<a href=\"/assets/pdf/grok/resources/1.3/Grok-Custom-Metrics.pdf\">custom metrics feature</a> -\nwith interesting results.  We encourage you to explore this option and would\nlove to hear about your results.</p>\n<p>While we will continue to evolve the Grok for IT Analytics product, we are\nequally excited about myriad opportunities to apply this technology to other\ndomains.  As a result, over the past few months we have turned our attention\ntowards creating demonstration applications that show how to potentially apply\nour HTM technology to a variety of other problems.</p>\n<p>We have restructured our web site to better communicate the breadth of our\ntechnology.  Detailed information on <a href=\"http://grokstream.com\">Grok for IT Analytics</a>\nis still available, but now if you come to visit Numenta, you first will see\ninformation on Numenta technology, before diving deeper to learn more about Grok\nand other applications.</p>\n<p>As part of the evolution of our web site, we have created some new material that\nwe hope you will read:</p>\n<ul>\n<li><a href=\"/assets/pdf/whitepapers/Rogue%20Behavior%20Detection%20White%20Paper.pdf\">Whitepaper: HTM for Rogue Behavior</a></li>\n<li><a href=\"/assets/pdf/whitepapers/Geospatial%20Tracking%20White%20Paper.pdf\">Whitepaper: HTM for Geospatial Tracking</a></li>\n</ul>\n<p>These whitepapers show how the same core technology that finds anomalies in\nGrok for IT also finds anomalies in other, very different, streams of data.  In\neach case, our HTM learning algorithms are automatically modelling different\ntypes of streaming data, learning the patterns, predicting what should come\nnext, and then highlighting inputs that differ from those predicted.  In other\nwords, our algorithms are doing what your brain does, day in and day out.</p>\n<p>We hope you’ll enjoy our new look and refreshed content and look forward to your\nfeedback.</p>\n"}

/***/ },
/* 791 */
/***/ function(module, exports) {

	module.exports = {"author":"Jared Weiss","brief":"Using Grok's custom metrics, I sampled and fed AWS burnrate statistics into Grok for regional burnrates as well as instance counts. Since AWS instances vary in pricing, spinning up one EC2 I2-8xlarge instance could be just as much of a","date":"2014/08/29","featured":false,"image":"../images/image.png","org":"Engineering Intern","tags":"grok numenta managing aws amazon web services cost anomalies burn rate","title":"Grok for Managing AWS Cost Anomalies","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>While the forefront issue in an engineer’s mind might be that builds are\nconsistently running and production servers aren’t experiencing unexpected\ndowntime, a business executive might have completely different concerns.  As an\nexperiment, I decided to address what I believed might be a primary concern of\nIT managers: ensuring that AWS costs are managed to budget and costs are\nminimized.  My approach was to feed cost data to Grok to identify any anomalies\nin spending relative to the normal pattern of spend.</p>\n<p>Using Grok’s custom metrics, I sampled and fed AWS burnrate statistics into Grok\nfor regional burnrates as well as instance counts. Since AWS instances vary in\npricing, spinning up one EC2 I2-8xlarge instance could be just as much of a\nproblem as spinning up several T2-micro instances. Therefore, even though most\nanomalies would likely be caught by both metrics, I wanted to be sure that\nunexpected corner-case anomalies would be caught too.</p>\n<p>In fact, at the beginning of my experiment, the burnrate monitor was able to\ndetect an anomaly in AWS’s us-east-1 region. For ease-of-use, most of the\nservers we use reside in the us-west-2 region, however all of our testing for\nmarketplace AMIs happens on us-east-1 servers. For that reason, early on August\n4th, Grok detected an anomaly when our QA team began testing one of our\nmarketplace candidates. Since Grok had learned the regular pattern of nightly\nAMI tests, when all of a sudden an instance was manually created, Grok quickly\nnotified me.</p>\n<h5>Grok Web UI showing Normal Pattern</h5>\n<p><img src=\"../images/1.png\" alt=\"Grok Screenshot\"></p>\n<h5>Grok Web UI showing anomaly due to launch of AMI tests</h5>\n<p><img src=\"../images/2.png\" alt=\"Grok Screenshot\"></p>\n<p>In this case because I knew the QA team was starting a new cycle of testing, I\nwas able to easily identify the cause of the anomaly.  Nevertheless, it was\nuseful that Grok identified the increased in instances and impact on costs. Had\nI not expected the anomaly, I would have been able to quickly find the source of\nthe problem, whether it be a faulty testing script that forgets to delete\nautomatically created instances on failure, or an accidentally changed limit on\nan auto-scaling group. In today’s dynamic and virtualized IT environments, it’s\ngreat to have this peace of mind that jumps in costs outside of normal patterns\ncan be identified quickly. Not only can Grok tell an engineer that a server is\noperating normally, but it can also report to a senior manager that their\ncompany isn’t incurring unexpected costs.</p>\n<p>In use cases with noisier data (such as burnrate for our us-west-2 region where\nmost of our instances are located), the burnrate monitor still excels at\ndetecting anomalous spending. Large, anomalous jumps in spending that could be\nattributed to a larger than usual instance being spun up or accidentally setting\nthe minimum instance count of an auto-scaling group to 500 instead of 50 are\nquickly recognized, enabling the proper team member to rapidly address the\nissue. Rather than receiving an enormous (and unexpected) bill at the end of the\nmonth, the cost and likelihood of a serious AWS mistake is substantially\nmitigated.   During my experiment Grok was able to identify an anomaly due to an\nerror in the configuration of our auto-scaling group, causing it to grow\nunnecessarily large.  Despite a more noisy usage pattern for this AWS region,\nGrok was able to identify it.</p>\n<h5>Grok Web UI showing anomaly due to error in auto-scaling group configuration</h5>\n<p><img src=\"../images/3.png\" alt=\"Grok Screenshot\"></p>\n<p>Grok can also learn new behaviors. When we began to spin up several more costly\ninstances for testing, Grok first detected this behavior as anomalous, but as we\ncontinued testing on the larger instances, Grok taught itself the new pattern\nand stopped flagging the increased burnrates as anomalous. Especially with\nAmazon continually announcing new instance sizes and costs, unexpected changes\nto server burnrate are inevitable, and it’s necessarily important to be able to\nlearn the new burnrate patterns.</p>\n<h5>Grok Web UI showing learning of new pattern</h5>\n<p><img src=\"../images/4.png\" alt=\"Grok Screenshot\"></p>\n"}

/***/ },
/* 792 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8eaf2beab3e3dac10e2b5eb6643e9b55.png";

/***/ },
/* 793 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c55733e6c49694372018b6aba7363c20.png";

/***/ },
/* 794 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b8f5abc0caca1abc97e6fc1aec4992ec.png";

/***/ },
/* 795 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4ba7f3030c4227cf00d2feee0607fa9f.png";

/***/ },
/* 796 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9b8a802d9abc591c9a0d8e38ad20282c.png";

/***/ },
/* 797 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3877cac0b3b621a94ebfc924f940c61b.png";

/***/ },
/* 798 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b691afddc9f1da7f43a40818b378845e.png";

/***/ },
/* 799 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"I am pleased to tell you about a change we recently made to our research process. We have made our day to day experimental code public. We've already released our commercial HTM algorithm code to the","date":"2014/09/17","featured":false,"image":"../images/image.png","org":"VP Research","tags":"increasing research transparency numenta nupic machine intelligence","title":"Increasing Research Transparency","body":"<p>I am pleased to tell you about a change we recently made to our research\nprocess. We have made our day to day experimental code public.</p>\n<p>As you may know, we already released our commercial HTM algorithm code to the\nNuPIC open source community in the form of the\n<a href=\"http://numenta.org\">NuPIC project</a>. We use that exact codebase in our product\nGrok. The <a href=\"http://numenta.org/community.html\">NuPIC open source community</a> and\nNumenta actively work together to continually maintain and improve this code\nbase.</p>\n<p>Within Numenta we continue to evolve and expand HTM theory. Our goal is to\ncreate a complete cortical theory and codebase, including such topics as\nsensorimotor integration, attention, hierarchy, and others. Our research ideas\nare constantly in flux as we tweak and experiment. To support the research we\nhave, up until today, maintained a separate internal codebase that sits on top\nof NuPIC.</p>\n<p>Interest in HTM has grown tremendously and we get many questions about our\nresearch. Over the last few months we have openly discussed fundamental ideas\naround sensorimotor inference, temporal pooling, hierarchy, etc. on the\n<a href=\"https://discourse.numenta.org/c/htm-theory\">HTM Theory Forum</a>.\nNumerous people in the NuPIC community have been actively engaged in deep\ntheoretical discussions.</p>\n<p>Given this interest we wondered whether it would be possible to be more open\nabout our work. What if we released our day-to-day research code to a public\nrepository? There are potential downsides. Research code can be very rough -\nwould people get confused? Would they become discouraged or even skeptical about\nthe theory if what they see is not yet working? We might get many questions\nabout it - would that slow us down? On the other hand, exposing our work-in-\nprogress would give members of the community visibility as to our priorities,\nhelp them understand more deeply the theory, and create an opportunity to\nsolicit their ideas and improvements.</p>\n<p>We floated the idea and discussed the tradeoffs with the NuPIC developer\ncommunity. The feedback we received gave us the confidence to proceed. I’m\nhappy to share that we just created an experimental public\n<a href=\"https://github.com/numenta/nupic.research\">nupic.research</a> repository on\nGitHub. This directory is small right now, but active. The code includes our\ncurrent prototypes and experiments around sensorimotor inference.</p>\n<p>I do want to emphasize one point; this is not code we push only after things are\nworking well. This is code as we are working on it. We make regular pull\nrequests and check-ins. We use GitHub to track our day to day tasks, and it\ncontains our internal conversations about the code. It provides an almost real\ntime view into the research being performed at Numenta.</p>\n<p>This change is an experiment in conducting research in the open. We don’t know\nhow it will turn out. If this idea works out well, over time the repository will\ngrow to contain just about all our research code. If not, well, we’ll just stop\ndoing it. It’s all in the spirit of research!</p>\n<p>P.S. There is some fine print. This code is all temporary and experimental. We\ncan’t make any guarantees about it. Currently we are not accepting pull\nrequests, though this might change down the road. However you are free to copy\nand use it under the terms of the AGPL license<sup><a href=\"#agpl\">*</a></sup>. Please see the README file on\nGitHub for more fine print and details.</p>\n<p><small id=\"agpl\" class=\"disclaimer\"><sup>*</sup> This content has been updated to reflect our <a href=\"http://numenta.org/blog/2015/08/17/licensing-update.html\">new AGPL license</a>.</small></p>\n"}

/***/ },
/* 800 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f102437f4d1d6e3d968929a40f455141.png";

/***/ },
/* 801 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e36d38e451c7530bb2d8cedc6f533564.png";

/***/ },
/* 802 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4b439a856081aa6a581db5d9d1fa3039.png";

/***/ },
/* 803 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3b490e3eb767936ea943d9c7f07c024f.png";

/***/ },
/* 804 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b025f8b066ee958ea1bede90ba34e78f.png";

/***/ },
/* 805 */
/***/ function(module, exports) {

	module.exports = {"author":"Yuwei Cui","brief":"At Numenta, we are working on a next-generation machine intelligence algorithm that learns complex patterns through active exploration. The stream of sensory inputs is actively generated by execution of a series of motor commands. We call","date":"2014/10/07","featured":false,"image":"../images/image.png","org":"Research Intern","tags":"learning through active exploration numenta nupic sensorimotor learning prediciton","title":"Learning Through Active Exploration","body":"<p>When I first arrived at Silicon Valley for my internship, the entire environment\nlooked new. It took me several weeks to get familiar with my new neighborhood.\nInterestingly, even with advanced GPS apps on my phone, the most effective way\nto learn a new environment is to walk on the street, memorizing landmarks, and\nmaking different turns at intersections. The GPS app could give me smart\ndirections, but I could not really learn the world just by staring at the map.\nKnowledge comes from practice, and we always learn something through active\nexploration. Nevertheless, most artificial intelligence techniques adopt data\nintensive machine learning approaches. Algorithms are trained to find patterns\nby observing massive amounts of data passively, usually without generating any\nactions.</p>\n<p>At Numenta, we are working on a next-generation machine intelligence algorithm\nthat learns complex patterns through active exploration. The stream of sensory\ninputs is actively generated by execution of a series of motor commands. We call\nthis new learning paradigm sensorimotor learning and prediction, or SLAP. To\nunderstand how the algorithm works, let us first think of how our brain solves\nthe same problem.</p>\n<p>We know that all our remarkable cognitive abilities, object recognition, scene\ninterpretation, reasoning and prediction, starts from data streams collected by\nour “sensors”, such as retina at the back of eyes, tactile sensors under the\nskin and auditory sensors in the cochlea. Believe it or not, most of the inputs\nto the sensors are actually generated by ourselves, rather than by changes in\nthe external world. Our eyes are constantly moving; our touch senses mostly\narise from our own body movement, and the speech we generated is also picked up\nby our auditory nerves. After we learn a new environment, we are rarely\nsurprised by the consequences of our own actions. I can predict exactly what I\nwill see after each turn on my way to work now. This prediction is based on my\ncurrent sensory input and the motor command I am going to execute. Moreover,\ndespite dramatic changes of input to my sensors, my internal perception is\nstable. These two aspects reflect two component of the algorithm. We call the\nprediction step “sensorimotor inference”, and the process of building stable\nrepresentations as “temporal pooling”.</p>\n<p><img src=\"../images/1.png\" alt=\"Neuroscience Image\"></p>\n<p>Jeff Hawkins described the basic ideas on the\n<a href=\"http://numenta.org/lists/\">NuPIC mailing list</a>. During my internship I\nimplemented and worked on several SLAP experiments using synthetic\ndatasets. In one experiment, we trained the SLAP algorithm to recognize a large\nnumber of synthetic images composed of “squares”. Each square is painted with\ndifferent color and different images share the same set of colors. Two example\nimages are shown below. A white diamond represents the portion of the image that\nlies on the fovea, and a black arrow represents the proposed motor command.</p>\n<p><img src=\"../images/2.png\" alt=\"Neuroscience Image\"></p>\n<p>The algorithm is allowed to explore each image through simulated eye-movements.\nAt each step the image under the fovea and the motor command is fed to the\nalgorithm. The first layer of the network learns to make predictions of the next\nsensory input. The algorithm also utilizes a reasonable assumption that if two\nthings are close to each other in time (temporal proximity), they tend to\noriginate from the same underlying cause, and thus should be grouped together.\nNeurons of the second layer “pool” over many neurons in the first layer, and\nform a stable representation that is unique to each pattern. During learning,\nstable representations will emerge despite changes to the input in the first\nlayer. These stable representations indicate recognition of the larger image.</p>\n<p>The figure below shows example output from a trained system while the eyes are\nmoving around two different images (10 iterations for each image). At each step,\nthe sensory input is changing drastically. However, the overall output is a\nstable and unique representation for each image.</p>\n<p><img src=\"../images/3.png\" alt=\"Neuroscience Image\"></p>\n<p>This simple example illustrates a fundamental mechanism our brain uses to create\nstable representations from a changing world. The same mechanism can also be\nused for a large variety of problems where the sensor data is actively generated\nby the system, such as robot learning, vehicle control, and complex pattern\nrecognition/detection problems.</p>\n<p>Note: Some of my implementation code is now available in the\n<a href=\"https://github.com/numenta/nupic.research\">nupic.research github repository</a>.</p>\n"}

/***/ },
/* 806 */
/***/ function(module, exports) {

	module.exports = {"author":"Joe Block","brief":"Using the burnrate custom metrics script with your Grok server","date":"2014/12/15","featured":false,"image":"../images/image.png","org":"Site Reliability Engineer","tags":"grok aws ec2 custom metrics burn rate numenta machine intelligence","title":"Monitoring AWS EC2 Burnrate with Grok","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>A few months ago, we mentioned that we’re monitoring our AWS EC2 costs with\nGrok. We developed a simple script to monitor our burnrate and ensure that when\nour spend changed, we knew about it and could take action.  Since we posted\n<a href=\"/blog/grok-for-managing-aws-cost-anomalies.html\">Grok For Managing AWS Cost Anomalies</a>,\nwe’ve had requests for more details and for access to the script.</p>\n<p>Today we’re happy to announce that the script is available on Github at\n<a href=\"https://github.com/groksolutions/grok-burnrate\">https://github.com/groksolutions/grok-burnrate</a>.\nYou can run it as a standalone script or with Docker using the Dockerfile\nthere or by pulling from the public Docker registry.</p>\n"}

/***/ },
/* 807 */
699,
/* 808 */
700,
/* 809 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d6b7826e95a3b3c67118c28be7d691ee.jpg";

/***/ },
/* 810 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Around this time of year the US goes crazy over the Super Bowl. So be it, but did you ever think the Super Bowl could help you understand how your brain works? Well, it can!","date":"2015/01/22","featured":false,"image":"../images/image.jpg","org":"Subutai Ahmad & Ryan McCall","tags":"sparse football pool ii 2015 super bowl xlix sdr sparse distributed representation htm","title":"Introducing Sparse Football Pool II","body":"<p>Around this time of year the US goes crazy over the Super Bowl. So be it, but\ndid you ever think the Super Bowl could help you understand how your brain\nworks? Well, it can!  Enter the Sparse Football Pool.</p>\n<p>Numenta’s theory of the cortex,\n<a href=\"/#technology\">Hierarchical Temporal Memory</a>,\nrelies on the properties of Sparse Distributed Representations. SDRs are the\nfundamental way our brain represents information. The concepts behind SDR are\ndeep and thought provoking. We get a lot of questions around this and were\nwondering how to explain it all in a fun simple way.</p>\n<p>We came up with a simple Super Bowl quiz with rules that closely mimic some\noperations in HTM. We hope the quiz will be fun and at the same time illustrate\nsome deep principles behind SDRs.</p>\n<p>The rules are extremely simple. How exactly do they relate to SDRs? We’ll\nexplain it all when we post the winner after the game, but for now here are two\ntidbits: 1) computing overlap is a fundamental operation with SDRs, and 2) when\nthere are 30 questions and you choose 11, there are 54,627,300 possible\ncombinations of entries. The chance of getting all 11 correct is pretty small,\nbut given how improbably the Seahawks won their game anything is possible!</p>\n<h4>WIN AN AUTOGRAPHED COPY OF ON INTELLIGENCE</h4>\n<p>We’re offering some cool prizes (US citizens 18 and over only). The top 5\nwinners will receive a Numenta T-shirt and an autographed hardcover of On\nIntelligence. In addition the winner will receive a $100 gift certificate to\nAmazon, iTunes, or Google Play (their choice).</p>\n<h4>THE THREE RULES</h4>\n<ol>\n<li>Answer TRUE or FALSE for each answer.</li>\n<li>You cannot have more than 11 TRUE answers. If you enter more than 11 TRUE\nanswers, we will take the first 11 only.</li>\n<li>To figure out the winner, we will compute the overlap score between the\nactual answers and your answer. The person with the highest overlap score\nwill win.</li>\n</ol>\n<h4>COMPUTING OVERLAP SCORE</h4>\n<p>The overlap score simply gives you one point for every answer where you answered\nTRUE and the correct answer was TRUE. For example, if the answer to question 3\nis True and you answered True, you get a point. In all other cases you don’t get\na point for question 3. Note that since you can only put down 11 TRUE’s, the\nmaximum overlap score you can get is 11.</p>\n<p>In case of ties, the earlier entries will win. (Also, if you submit more than\none entry, only the last entry will count.) Full details are explained in the\n<a href=\"/legal/rules/sparse-football-pool-ii-2015.html\">contest rules page</a>.\nOr feel free to post questions in the comment section below this blog post.</p>\n<h4>AND NOW, THE QUESTIONS</h4>\n<p>To enter, go to our\n<a href=\"https://numenta.wufoo.com/forms/entry-form-for-numenta-sparse-football-quiz-ii/\">online submission form</a>.\nYou will be asked to answer the following questions. They are repeated here for\nreference to help you plan out your answers ahead of time (responses will only\nbe accepted through the online submission form). Note that all entries must be\nreceived by 12 PM Pacific Standard Time on January 31, 2015.</p>\n<ul>\n<li>The New England Patriots will score first</li>\n<li>The Seattle Seahawks will score first</li>\n<li>There will be a lead change in the first half</li>\n<li>Russell Wilson will throw for more than 250 yards</li>\n<li>Tom Brady will throw for more than 300 yards</li>\n<li>Russell Wilson will attempt more passes than Tom Brady</li>\n<li>LeGarrette Blount will rush for more than 100 yards</li>\n<li>Marshawn Lynch will rush for more than 120 yards</li>\n<li>Jamie Collins will make the most tackles (solo plus assisted) in the game</li>\n<li>Rob Gronkowski will score a touchdown</li>\n<li>Rob Gronkowski will not score a touchdown</li>\n<li>Russell Wilson will throw at least two interceptions</li>\n<li>There will be a score in the final 2 minutes of the first half</li>\n<li>The team leading at the end of the first half will lose the game</li>\n<li>Halftime show performer Katy Perry will don more than one costume during her\nperformance</li>\n<li>Rihanna, Snoop Dogg, or Juicy J will join Katy Perry on stage during the\nhalftime show</li>\n<li>Kicker Steven Hauschka (Seahawks) will score more points than kicker Stephen\nGostkowski (Patriots)</li>\n<li>The New England Patriots will be penalized the most (in terms of yards)</li>\n<li>The Seattle Seahawks will be penalized the most (in terms of yards)</li>\n<li>There will be at least one lost fumble resulting in a change of possession in\nthe game</li>\n<li>Someone other than Russell Wilson or Tom Brady will throw a touchdown pass</li>\n<li>There will be kickoff or a punt that is returned for a touchdown (by either\nside)</li>\n<li>The game will have a “Pick Six” play where an interception is returned for a\ntouchdown</li>\n<li>There will be at least one successful coach’s challenge that will overturn a\nruling on the field made by the referees</li>\n<li>There will be a score in the final 2 minutes of regulation</li>\n<li>The combined score at the end of the game will be greater than 50</li>\n<li>The combined score at the end of the game will be less than or equal to 50</li>\n<li>The winner will win by 10 or more points</li>\n<li>The Seattle Seahawks will claim their 2nd Superbowl Trophy!</li>\n<li>The New England Patriots will claim their 4th Superbowl Trophy!</li>\n</ul>\n<p><a href=\"https://numenta.wufoo.com/forms/entry-form-for-numenta-sparse-football-quiz-ii/\">Online Contest Submission Form</a>.</p>\n"}

/***/ },
/* 811 */
731,
/* 812 */
732,
/* 813 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"This year’s Super Bowl between the New England Patriots and the Seattle Seahawks was a cliffhanger. In fact, the twists and turns in the last few minutes had a significant effect on our result","date":"2015/02/04","featured":false,"image":"../images/image.png","org":"Subutai Ahmad & Ryan McCall","tags":"super bowl xlix neuroscience 2015 machine learning numenta sparse football pool results","title":"Super Bowl Neuroscience: Sparse Football Pool 2015 Results","body":"<h3>SUPER BOWL NEUROSCIENCE: SPARSE FOOTBALL POOL 2015 RESULTS</h3>\n<p>This year’s Super Bowl between the New England Patriots and the Seattle Seahawks\nwas a cliffhanger. In fact, the twists and turns in the last few minutes had a\nsignificant effect on our result, with some of the answers determined in the\nlast five minutes of the game. (To read the original blog post,\n<a href=\"/blog/introducing-sparse-football-pool-ii-super-bowl-xlix.html\">click here</a>).\nCongratulations to our winner Glen Speckert who, out of 95 contest\nentries, tied for the top score with 8 correct answers. The other top scorer was\nour own CEO, Donna Dubinsky, who also had a score of 8 (but is ineligible to win\na prize – sorry Donna!). Check out all of the\n<a href=\"/legal/results/sparse-football-pool-ii-2015.html\">results here</a>\nand see where you ranked.</p>\n<p>So, how does the Sparse Football Pool relate to the brain, the HTM Learning\nAlgorithms and intelligence? The remainder of this blog post will explain.</p>\n<p>HTM relies on Sparse Distributed Representations (SDRs), a form of information\nrepresentation where you have a long numerical string with mainly 0’s and a few\n1’s (the degree of sparsity is determined by how few 1’s). In fact, each entry\nto the pool was an SDR — eleven 1’s and nineteen 0’s. SDRs are the fundamental\nway our brain represents information. At any point in time, most of the neurons\nin our brain are quiet and a small percentage of them are firing. We constructed\nthe Sparse Football Pool to highlight some of the special properties of SDRs. Of\ncourse, in the brain the numbers are far larger and the situation is more\ncomplex, but we can illustrate the basic concepts using the Pool.</p>\n<h4>NUMERICAL PROPERTIES OF SDRS</h4>\n<p>Even though there are only a small number of 1’s, systems using SDRs can\nuniquely represent a massive number of patterns. Let’s ask the following\nquestion: given that you could only select 11 True answers out of 30, how many\nunique entries are there? The answer is larger than you might guess: there are\n54,627,300 possible unique entries (we know that sounds like a lot—it’s based on\na concept called\n<a href=\"http://en.wikipedia.org/wiki/Binomial_coefficients#Computing_the_value_of_binomial_coefficients\">binomial coefficients</a>).\nIn Numenta’s HTM systems, our patterns typically have 40 bits “on” out of 2,048.\nThe number of unique patterns is an unimaginably large 2.37 x 10^84!</p>\n<p>What is the chance someone else would have exactly the same answer as you?\nAssuming everything is random, that’s just the flip side of the above question:\none in 54,627,300.</p>\n<p>What is the chance of someone getting a perfect score? Nine statements out of\nthe 30 actually came True. Each contestant could select up to 11 statements to\nbe True, so there was some room for error. Specifically, there are 9,405 answers\nthat could get the maximum score of 9, so again, if everything was random, the\nchance of getting a perfect score is about 9,405/54,627,300, or about 1 in\n5,808. (For more details on the math behind SDRs, see\n<a href=\"/learn/sparse-distributed-representations.html\">this talk</a>.)</p>\n<p>What is a good score? The chance of getting a score of 8 is 1 in 322, and the\nchance of getting a 7 is 1 in 37. Now, here’s a puzzler: we had less than 100\nentries yet two people had a score of 8. How is this possible? The fact that a\nhighly improbable event occurred tells us that something non-random happened,\nand it relates to the semantic properties, or the meanings, of SDRs.</p>\n<h4>SEMANTIC PROPERTIES OF SDRS</h4>\n<p>The world is not random, and neither were the statements. Certain statements\ncould be grouped into similar semantic categories. If a contestant’s entry was\ntotally random, then it wouldn’t matter. But, if a contestant had a “point of\nview”, this thinking would be evident in their entry/SDR.</p>\n<p>To be sure, the SDRs can represent very specific predictions. If you answered\nTrue to Statement 8 (Lynch will run for more than 120 yards), then you predicted\nMarshawn Lynch would do well in a very specific way.</p>\n<p>But SDRs also can represent more complex concepts. Suppose you answered True to\nstatements 3, 12, 13, 14, 20, 21, 23, 25, and 26 (Statement Group 1 below).\nThese statements are related in meaning; they all predict a wild and exciting\ngame. If your point of view was that the Super Bowl would be wild and exciting\nrather than low scoring and boring, your SDR would reflect this meaning. In\nanother example, if you answered True to statements 1, 5, 7, 9, 10, 19, 28, and\n30 (Statement Group 2 below), you predicted New England was going to dominate\nSeattle. This SDR reflects another point of view on the game. So, SDRs can\nrepresent something specific but also can simultaneously convey complex high-\nlevel information.</p>\n<p>Put another way, the “distributed” part of SDRs enable the encoding of subtle\ninformation. Looking again at Group 1 below, you didn’t need to answer True to\nall the statements for us to know that you thought the game would be exciting –\neven 3 or 4 Trues from this list would convey your point of view. You conveyed\nmore subtlety by choosing exactly which ones you answered as True. Even a\npartial answer tells us something about your thoughts; no particular answer is\ncritical. This structure is analogous to the brain: a sparse subsampling of\nactive neurons can represent lots of subtlety and complexity.</p>\n<p>Finally, SDRs can simultaneously represent multiple independent concepts. If you\nanswered True to, say, five from the first set, and five from the second set,\nyou believed both propositions – the game was going to be exciting, but in the\nend the Patriots were going to beat the Seahawks. The ability to simultaneously\nrepresent independent concepts is another property of SDRs. It is particularly\nimportant when you are making predictions. The HTM algorithms and the cortex use\nthis property to make simultaneous predictions about the future in a single\nfixed representation.</p>\n<p>How does this explanation answer the question as to why there were two winners,\nan extremely unlikely result? Both winners, Donna and Glen, guessed that New\nEngland would win in a high scoring, exciting game. They had a similar point of\nview, and they answered True or False to those statements that matched that\npoint of view. Their guesses weren’t perfect, but they weren’t random. Indeed,\nif you responded to the statements randomly, you probably didn’t do too well!</p>\n<p>We have touched on a few properties of SDRs, some of them subtle. You can\nrepresent semantic properties and concepts. You can represent both very specific\nand very subtle concepts. You can represent multiple concepts simultaneously,\nwhich can be used in prediction. The Sparse Football Pool, Numenta’s HTM\ntechnology, and our brain rely on these same concepts.</p>\n<p>We hope the Pool helped you understand the power of SDRs and how our brains\nrepresent information. Most importantly, we hope you had fun with this unusual\npool! Next time your spouse complains you are watching too much football, let\nthem know you are actually involved in the greatest possible scientific quest:\nunderstanding human intelligence.</p>\n<p>Check out all of the\n<a href=\"/legal/results/sparse-football-pool-ii-2015.html\">results here</a>\nand see where you ranked.</p>\n<h3>STATEMENT GROUPS:</h3>\n<h4>GROUP 1 - OVERALL GAME EXCITEMENT</h4>\n<ul>\n<li>3: There will be a lead change in the first half</li>\n<li>12: Russell Wilson will throw at least two interceptions</li>\n<li>13: There will be points scored in the final 2 minutes of the first half</li>\n<li>14: The team leading at the end of the first half will lose the game</li>\n<li>20: There will be at least one lost fumble resulting in a change of possession in the game</li>\n<li>21: Someone other than Russell Wilson or Tom Brady will throw a touchdown pass</li>\n<li>23: The game will have a “Pick Six” play where an interception is returned for a touchdown</li>\n<li>25: There will be points scored in the final 2 minutes of regulation</li>\n<li>26: The combined score at the end of the game will be greater than 50</li>\n</ul>\n<h4>GROUP 2 – NEW ENGLAND DOMINATION</h4>\n<ul>\n<li>1: The New England Patriots will score first</li>\n<li>5: Tom Brady will throw for more than 300 yards</li>\n<li>7: LeGarrette Blount will rush for more than 100 yards</li>\n<li>9: Jamie Collins will make the most tackles (solo plus assisted) in the game</li>\n<li>10: Rob Gronkowski will score a touchdown</li>\n<li>19: The Seattle Seahawks will be penalized the most (in terms of yards)</li>\n<li>28: The winning team will win by 10 or more points</li>\n<li>30: The New England Patriots will claim their 4th Superbowl Trophy!</li>\n</ul>\n"}

/***/ },
/* 814 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7a1dbe73b7a73bc3f577da2762be5bb4.png";

/***/ },
/* 815 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2fc4c24b963e4bfc8067e09bafc83bea.png";

/***/ },
/* 816 */
/***/ function(module, exports) {

	module.exports = {"author":"Alexander Lavin","brief":"Data is in ever-increasing supply as sensors inhabit more and more of our world. Examples abound from health data tracked by pacemakers and fitness wearables, to temperature sensors","date":"2015/06/02","featured":false,"image":"../images/graph2.png","org":"Software Engineer","tags":"nab numenta anomaly benchmark streaming data detection realtime","title":"NAB - A Benchmark for Streaming Anomaly Detection","body":"<h3>Numenta Anomaly Benchmark</h3>\n<h4>A Benchmark for Streaming Anomaly Detection</h4>\n<p>Data is in ever-increasing supply as sensors inhabit more and more of our world.\nExamples abound from health data tracked by pacemakers and fitness wearables, to\ntemperature sensors in aircraft engines and mobile phones. These sensors provide\nimportant information in real-time, streaming data. That is, time-series data,\nwhere there is a natural temporal ordering in the successive measurements made\nover a time interval.</p>\n<p>Take a look at Figure 1 below, an example of time-series data from a sensor. The\nplot shows scalar values over time for an unknown metric. Can you guess if the\nmetric is blood glucose level for a diabetes patient, stock volume for a Fortune\n500 company, or something else? It’s difficult to tell, yet it’s apparent the\nplot shows data anomalies, or deviations from the normal pattern.</p>\n<p><img src=\"../images/graph1.png\" alt=\"NAB Screenshot 1\"></p>\n<blockquote>\n<p><strong>Figure 1</strong> – An example data file from the NAB corpus; data from monitoring\nthe temperature of an internal component of a large, expensive, industrial\nmachine. The three blue regions represent anomaly windows, and the purple\nregion is the detector’s probationary period. For details on these and more\nNAB components, please explore the\n<a href=\"https://github.com/numenta/NAB/wiki\">NAB wiki</a> [1].</p>\n</blockquote>\n<p>Looking at the entire plot, these anomalies are easily recognized after-the-fact\nbut identifying anomalies long after they occur isn’t acceptable. Yet many\nanomaly detection methods run in batch mode, where the data is collected and\nprocessed after the fact. Real-time data processing, on the other hand, calls\nfor continual input, process, and output of data. A real-world anomaly detector\nshould be required to process streaming data, learn continuously, and make\naccurate detections as soon as possible.</p>\n<p>At Numenta we’ve built a robust, real-time anomaly detector using\n<a href=\"http://numenta.com/assets/pdf/whitepapers/Numenta%20White%20Paper%20-%20Science%20of%20Anomaly%20Detection.pdf\">Hierarchical Temporal Memory (HTM)</a> [2].\nOur <a href=\"http://numenta.com/grok/\">Grok application</a> is great demo of the algorithm\nin action on server metrics data [3]. Other real-time anomaly detectors are\nout there, namely at\n<a href=\"http://labs.yahoo.com/news/announcing-a-benchmark-dataset-for-time-series-anomaly-detection/\">Yahoo</a> and\n<a href=\"https://blog.twitter.com/2015/introducing-practical-and-robust-anomaly-detection-in-a-time-series\">Twitter</a>\nwho both recently announced their activities in real-time anomaly\ndetection [4], [5]. But how can one truly discern whether or not these\nalgorithms are up to the task of streaming anomaly detection? Sure HTM does\ngreat on detecting anomalies in Amazon Web Services metrics with Grok, but what\nabout the other sensory domains?</p>\n<p>Enter the <strong>Numenta Anomaly Benchmark (NAB)</strong>, an open-source benchmark we’re\ndeveloping for the evaluation of real-time anomaly detection algorithms. The NAB\ndataset contains streaming data samples, aiming to capture the difficulties of\nreal-time anomaly detection, across varying real-world domains. A detector run\non this dataset is subject to evaluation by the NAB scoring method. To score\nwell on NAB, anomaly detection algorithms should: run in unsupervised mode,\nprocess real-time data, learn continuously, reliably detect anomalies, and\ndetect them as early as possible. Detailed descriptions of all NAB components\ncan be found in the NAB whitepaper posted in the\n<a href=\"https://github.com/numenta/NAB/wiki\">wiki</a> [1]. Figure 2 below shows the\nNumenta detector on the sample data file of Figure 1, where the algorithm\naccurately detected all three anomalies with no false positives.</p>\n<p><img src=\"../images/graph2.png\" alt=\"NAB Screenshot 2\"></p>\n<blockquote>\n<p><strong>Figure 2</strong> – NAB results for the Numenta detector on a data file\nrepresenting machine component temperature readings. The detections resulted\nin all three true positives, and no false positive nor false negatives.</p>\n</blockquote>\n<p>We’re currently in a “beta” phase, working with a few select companies and\nresearchers to improve both the benchmark dataset and the scoring methods,\nbefore submitting the benchmark for publication. Our aim during this phase is to\ncollaborate with businesses that need real-time anomaly detection and\nresearchers working on novel algorithms. Part of the value of the benchmark is a\ndata set consisting of diverse sensory data streams with real labeled anomalies.\nAs such we’re particularly interested in real-world data files with actual\nanomalies to add to the dataset.</p>\n<h4>Call For Participation!</h4>\n<p>So far we’ve received some great feedback, but there’s still a ways to go. You\ncan help. Please <a href=\"https://github.com/numenta/NAB/\">check out NAB</a> for yourself [6].\nDo you have data to contribute? Great, we’d love to include it in the benchmark,\nas long as your data meets the following criteria:</p>\n<ul>\n<li>Real-world, time-series data</li>\n<li>Labeled or known anomalies</li>\n<li>Minimum 1000 records per data file (more would be ideal)</li>\n<li>Data records must be\n<ul>\n<li>from a continuously streaming source</li>\n<li>in chronological order</li>\n<li>at roughly equal time intervals</li>\n</ul>\n</li>\n<li>Scalar metric(s)</li>\n</ul>\n<p>If you have data you might be able to contribute, are interested in the\nbenchmark, or have questions, please contact us at\n<a href=\"mailto:nab@numenta.org\">nab@numenta.org</a>.</p>\n<p>No real-world anomaly detector is perfect, but which is best? Where do\nalgorithms make good and poor detections? NAB will be able to answer these\nquestions, providing the world of data analysis with a much-needed benchmark for\nthis very important class of algorithms.</p>\n<h4>References</h4>\n<ul>\n<li>[1] <a href=\"https://github.com/numenta/NAB/wiki\">https://github.com/numenta/NAB/wiki</a></li>\n<li>[2] <a href=\"http://numenta.com/assets/pdf/whitepapers/Numenta%20White%20Paper%20-%20Science%20of%20Anomaly%20Detection.pdf\">http://numenta.com/assets/pdf/whitepapers/Numenta White Paper - Science of Anomaly Detection.pdf</a></li>\n<li>[3] <a href=\"http://numenta.com/grok/\">http://numenta.com/grok/</a></li>\n<li>[4] <a href=\"http://labs.yahoo.com/news/announcing-a-benchmark-dataset-for-time-series-anomaly-detection/\">http://labs.yahoo.com/news/announcing-a-benchmark-dataset-for-time-series-anomaly-detection/</a></li>\n<li>[5] <a href=\"https://blog.twitter.com/2015/introducing-practical-and-robust-anomaly-detection-in-a-time-series\">https://blog.twitter.com/2015/introducing-practical-and-robust-anomaly-detection-in-a-time-series</a></li>\n<li>[6] <a href=\"https://github.com/numenta/NAB/\">https://github.com/numenta/NAB/</a></li>\n</ul>\n"}

/***/ },
/* 817 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "02b9f6b2c67e8ec3d2792cdf974fee3d.png";

/***/ },
/* 818 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3a7bcc3bb5c2e931070cb2aa1ea116c0.png";

/***/ },
/* 819 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"This past month, Numenta sponsored a contest at Yale University, in collaboration with the Yale Entrepreneurial Institute, for a prize to create an application using our HTM technology.","date":"2015/07/01","featured":false,"image":"../images/image.png","org":"CEO","tags":"numenta htm hierarchical temporal memory app entrepreneur contest yale university","title":"Winner of HTM Contest at Yale","body":"<h3>Winner of HTM Contest at Yale</h3>\n<p>This past month, Numenta sponsored a contest at Yale University, in\ncollaboration with the Yale Entrepreneurial Institute, for a prize to create an\napplication using our HTM technology.  We offered the winning team a $10,000\ncash prize, along with a license structure that would enable them to create a\ncompany to commercialize the application.   The contest was open to all Yale\nstudents, faculty and alumni.  Why did we hold this contest at Yale?  We wanted\nto test out the idea of an “entrepreneur contest” like this, and since I am on\nthe board of trustees at Yale and am familiar with the Yale Entrepreneurial\nInstitute, we decided this was a low friction way of conducting this experiment.\nAnd we feel the experiment was a success!</p>\n<p>We received multiple submissions for the prize with problems in such domains as\nmanaging hospital data, understanding patents and fixing inefficient event\npricing.</p>\n<p>The winning venture is called Good Day Bad Day (GDBD).  GDBD’s proposal was\ncreated by Dr. Michael Choma, of the Yale Medical School, and Zhilong Cong, MS,\na graduate student at Yale in biomedical engineering.  Choma and Cong propose to\ntake streaming data from wearable devices, such as the Apple Watch, and use it\nto improve management of chronic respiratory disease.</p>\n<p>We selected GDBD for several reasons.  First, the data meets fundamental\nstreaming requirements; there is a clear streaming data source – a wearable\nsensor – and the data stream has sufficient velocity.  Second, it seems highly\nlikely that there will be temporal patterns that can be found by the HTM\nalgorithms.  Finally, Choma and Cong as a team have both the medical knowledge\nas well as computer science skills to be able to create an application that\nmeets the needs of patients and physicians.</p>\n<p>We congratulate GDBD on their win, and look forward to seeing how their\napplication evolves. Read the Yale Entrepreneurial Institute\n<a href=\"http://yei.yale.edu/yale-professor-michael-choma-wins-10000-numenta-startup-prize\">press release</a>.</p>\n<p>We will consider sponsoring similar contests at other universities or\nincubators.  We have no doubt that HTM can be applied to a huge range of\nproblems, so we find ourselves excited at the prospect of working with multiple\nteams who have the expertise and the excitement to build HTM applications.  We\nare very open to working with early stage start-ups, and have a start-up\nfriendly licensing structure. If you would like to connect with us to run a\ncontest or to talk about a start-up idea, please email us at\n<a href=\"mailto:marketing@numenta.com\">marketing@numenta.com</a>.</p>\n"}

/***/ },
/* 820 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "eecc01b8ae49d8ebeb694a3c0eea8e98.png";

/***/ },
/* 821 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "075add8fdcc1089eb0808dd7010053f4.png";

/***/ },
/* 822 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"In this post, I’d like to tell you about some changes and updates to our open source and commercial licensing strategy. First, effective today, we will be using the AGPL open source license instead of","date":"2015/08/15","featured":false,"image":"../images/image.png","org":"CEO","tags":"numenta licensing update switch agpl agplv3 open source free software machine intelligence htm hierarchical temporal memory streaming temporal data patterns anomaly outlier detection","title":"Numenta Licensing Update and AGPLv3","body":"<h3>Numenta Licensing Update</h3>\n<p>In this post, I’d like to tell you about some changes and updates to our open\nsource and commercial licensing strategy.</p>\n<p>First, effective today, we will be using the\n<a href=\"http://www.gnu.org/licenses/agpl-3.0.en.html\">AGPL open source license</a> instead\nof the GPL open source license for all of our open source software. When we made\nthe decision to use the GPLv3 license several years ago, the GPL seemed like a\ngood fit for our needs as we were trying to promote a community that shares\ntheir work, rather than going with a more permissive style license that allows\nindividuals to keep enhancements private. The AGPL is in keeping with that\nspirit and makes clear that use in a\n<a href=\"https://en.wikipedia.org/wiki/Software_as_a_service\">SaaS</a> implementation is\nalso considered a distribution and thus must fully comply with the GPL. The\nproposed changes were discussed on our mailing lists and the NuPIC community is\nsupportive of this change.  Note that the AGPLv3 is explicitly designed to be\nthe same as the GPLv3 with the additional of the SaaS clarification, and will\nnot impact open source developers in any other way.</p>\n<p>Second, we have heard from potential customers that some companies have\nprohibitions against their engineers using either the GPL or the AGPL.\nConsequently, we have created a very simple\n<a href=\"http://numenta.org/licenses/trial/\">Trial License</a>.  The Trial License confers\nno commercial rights, but allows research and experimentation with NuPIC\nsoftware without being required to use an open source license.</p>\n<p>Finally, as you may know, we have a dual license strategy for NuPIC in that we\noffer <a href=\"http://numenta.org/blog/2013/12/16/nupic-commercial-licenses.html\">commercial licenses</a>\nin addition to our open source license.  Recently, we have had an increase in\nrequests for commercial licenses to the point where we would like to create a\nstandard licensing program.  We are in the process of documenting this program\nto be released in the next few weeks.  We plan on having two types of license,\none geared towards start-up companies formed specifically to create HTM\napplications (with no up-front payments and a delayed royalty stream), and the\nother for established companies.  We hope these will cover the majority of cases\nbut of course, we can create custom licenses as needed.</p>\n<p>I believe that these license changes will have a positive impact both for the\n<a href=\"http://numenta.org\">NuPIC</a> open source community as well as for potential\ncommercial partners.  Other than the SaaS change, there is no other change in\nthe open source license such that researchers, students, and individual\nprogrammers can continue their work as before.   Commercial participants can use\nour Trial License, and will soon be able to evaluate our new standard licenses.</p>\n<p>Thank you for your continued support.</p>\n<p>Links:</p>\n<ul>\n<li><a href=\"http://www.gnu.org/licenses/agpl-3.0.en.html\">AGPLv3 License</a></li>\n<li><a href=\"http://numenta.org/licenses/trial/\">Numenta Trial License</a></li>\n<li><a href=\"http://numenta.org/blog/2013/12/16/nupic-commercial-licenses.html\">Numenta Commercial License</a></li>\n</ul>\n"}

/***/ },
/* 823 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fa758ae2a0f7e3ef3306073c7bc83308.png";

/***/ },
/* 824 */
/***/ function(module, exports) {

	module.exports = {"author":"Matthew Taylor","brief":"Numenta has held five hackathons over the past several years to engage our community of dedicated and passionate HTM enthusiasts. It's been a great time for lots of people involved. We've grown together and created some really interesting things!","date":"2015/09/29","featured":false,"image":"../images/image.png","org":"Open Source Manager","tags":"introducing numenta htm challenge hackathon nov 2015 onsite contest judging prizes jeff hawkins","title":"Introducing the Numenta HTM Challenge","body":"<p>Numenta has held\n<a href=\"http://numenta.org/blog/2013/06/25/hackathon-outcome.html\">five</a>\n<a href=\"http://numenta.org/blog/2013/11/06/2013-fall-hackathon-outcome.html\">hackathons</a>\nover the\n<a href=\"http://numenta.org/blog/2014/05/09/2014-spring-hackathon-outcome.html\">past</a>\n<a href=\"http://numenta.org/blog/2014/10/30/2014-fall-hackathon-outcome.html\">several</a>\n<a href=\"https://www.youtube.com/playlist?list=PL3yXMgtrZmDpDhDZvixTUubv9R9cpZK4T\">years</a>\nto engage our <a href=\"http://numenta.org/#community\">community</a> of dedicated and\npassionate HTM enthusiasts. It’s been a great time for lots of people involved.\nWe’ve grown together and created some really interesting things!</p>\n<p>The one consistent complaint I’ve gotten from hackathon attendees is that there\njust <em><strong>wasn’t enough time</strong></em> to complete their projects. In response to this\nfeedback and our desire to incubate more complete HTM projects, we have\ncompletely changed the structure and format of our hackathons.</p>\n<h2>Introducting the Numenta HTM Challenge!</h2>\n<p>The <a href=\"http://htmchallenge.devpost.com/\">Numenta HTM Challenge</a> is an online\ncontest open for submissions <strong>today</strong> and running until November 14th.\nParticipants must come up with ideas for real-world applications of HTM\ntechnology and submit them for approval before starting work. This ensures the\nproblem being solved is applicable to HTM, and that the data being analyzed is\nadequate for HTM. Once a project has been approved, hackers have until\n<strong>November 6th</strong> to work on it and submit a demo video for judging.</p>\n<h3>Onsite Event Nov 14</h3>\n<p><strong>This Challenge can be completed <em>entirely</em> online</strong>, but we encourage you to\ntry to attend the\n<a href=\"http://www.meetup.com/numenta/events/224711586/\"><strong>Onsite Event</strong></a> that\nculminates the Challenge on November 14 in Redwood City, California. At this\nOnsite Event, all demonstration videos will be viewed by a judging panel and a\nlive audience. Judges will get a chance to comment and ask questions to\nsubmission authors (either live or over the phone). At the end of the event,\nwe’ll announce the winners and cash prizes will be awarded!</p>\n<h4>Sessions</h4>\n<p>In addition to judging, there will also be at least two educational sessions by\nNumenta team members <strong>Subutai Ahmad</strong> and <strong>Jeff Hawkins</strong>. They will be\ntalking about the history and evolution of HTM algorithms and some details about\nnew algorithm development, respectively.</p>\n<h5>Temporal Pooling (Jeff Hawkins)</h5>\n<blockquote>\n<p>Temporal pooling is an important aspect of HTM theory. It refers to how\nrepresentations get more stable as sensory data moves from region to region\nascending the cortical hierarchy.  It plays an important role in inference,\nfeedback, and motor control. Our understanding of how temporal works has been\nrefined a couple of times since the original HTM white paper was published. In\nthis talk I will review the basic requirements of temporal pooling and introduce\na new model for temporal pooling, one that is more robust that previous\nversions. I will also discuss how we think this new temporal pooling model is\nimplemented in neurons in the neocortex.</p>\n</blockquote>\n<h5>Temporal Memory of HTM: A Retrospective (Subutai Ahmad)</h5>\n<blockquote>\n<p>Did you realize that the development of HTM algorithms at Numenta has been\ngoing on for over 10 years? Subutai (who has seen it all) will step you through\nthe sequence of HTM developments, from our very first demos, algorithms and\nproducts, to our current research on cortical algorithms. Come and see what we\nhave learned, and how our past informs our future.</p>\n</blockquote>\n<h4><a href=\"http://www.meetup.com/numenta/events/224711586/\">RSVP for the Onsite Event here</a></h4>\n<p><strong>You don’t have to participate in the Challenge to attend the Onsite Event!</strong>\nMaybe you just want to come see the latest presentations from Numenta or watch\nthe Challenge demonstration judging. That’s great! We welcome you to mingle with\nus HTM enthusiasts.</p>\n<h3><a href=\"http://www.meetup.com/numenta/events/224711563/\">Community Meetup Nov 13</a></h3>\n<p>And as long as you’ll be in the area, there is a <strong>Community Event</strong> being\nplanned on the Friday before the Onsite Event. I hope you’ll attend just to\n<strong>meet the rest of the HTM community</strong>. This event is run <em>by</em> the NuPIC\ncommunity, <em>for</em> the NuPIC community. A schedule is in the works.</p>\n<p><strong><a href=\"http://www.meetup.com/numenta/events/224711563/\">RSVP for the Community Meetup here</a></strong></p>\n<h3>Help us build the future of Machine Intelligence!</h3>\n<p>We believe that HTM is the future of machine intelligence. This is a great\nchance for you to <strong>get involved</strong> and help us move this important technology\nforward. I hope you’ll consider being a part of this event in some way.</p>\n"}

/***/ },
/* 825 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"Earlier this month, we ran a contest for our developer community to use our algorithms on real world problems.  The contest, called the HTM Challenge, was conceived by Matt Taylor, our community flag-bearer, as a way to enable the","date":"2015/12/01","featured":false,"image":"../images/image.png","org":"CEO","tags":"numenta htm challenge 2015 results hierarchical temporal memory hackathon nupic open source project intelligent applications","title":"Numenta HTM Challenge 2015 Results","body":"<p>Earlier this month, we ran a contest for our developer community to use our\nalgorithms on real world problems.  The contest, called the HTM Challenge, was\nconceived by Matt Taylor, our community flag-bearer, as a way to enable the\ncommunity to invest more time in trying to build an application than they can in\na weekend Hackathon.</p>\n<p>Overall, we were pleased with the result, with 14 entries submitted.  Each\nentrant was required to make a short video demonstrating the application.  You\ncan see them all here:</p>\n<p><a href=\"http://htmchallenge.devpost.com/submissions\">http://htmchallenge.devpost.com/submissions</a></p>\n<p>It’s interesting to note that the #1 and #2 winners are both in the field of\ntransportation, one detecting car traffic anomalies and the other relative to\naviation anomalies, both using our geospatial encoder.</p>\n<p>To me, however, the most notable result of the contest was to realize the\nbreadth of the type of applications that can be addressed with HTM.  Although\nthese were just demonstration programs, not ready for commercialization, they\noffer support to the notion of a generalized machine intelligence approach.\nWhether the application was predicting traffic, tracking heart monitors,\nunderstanding natural language, or generating music, the exact same algorithm is\nat play, just like in your brain.</p>\n<p>We often talk about how our biologically derived technology is extremely\nflexible and applicable to many different problems. It’s nice to see this\nreinforced with the wide variety of submissions. Thank you to everyone who\nparticipated in this challenge. We look forward to seeing what future\napplications will be built on HTM.</p>\n<p>See photos from the event held in Redwood City\n<a href=\"https://www.facebook.com/media/set/?set=a.10154222101422119.1073741834.321559142118&amp;type=3\">here</a>.</p>\n"}

/***/ },
/* 826 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f166922b78d47403416dd38bfd4acee7.png";

/***/ },
/* 827 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f8606e3ccec632c49601579eaa21ca1f.png";

/***/ },
/* 828 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c10c1b1bbf8bce1b41b18526c63a3a0b.png";

/***/ },
/* 829 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b481778c72edc6500ac7f751f0dff474.png";

/***/ },
/* 830 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"We are frequently asked how we distinguish our technology from others. This task is made difficult by the fact that there is not an agreed vocabulary; everybody uses the above terms (and other associated terms) differently","date":"2016/01/11","featured":false,"image":"../images/image.png","org":"Jeff Hawkins & Donna Dubinsky","tags":"numenta machine intelligence learning deep artificial ai htm brain neurons","title":"What is Machine Intelligence vs. Machine Learning vs. Deep Learning vs. Artificial Intelligence (AI)?","body":"<p>We are frequently asked how we distinguish our technology from others. This\ntask is made difficult by the fact that there is not an agreed vocabulary;\neverybody uses the above terms (and other associated terms) differently.  In\naddition, the commonly understood meaning of some of these terms has evolved\nover time.  What was meant by AI in 1960 is very different than what is meant\ntoday.</p>\n<p>In our view, there are three major approaches to building smart machines.  Let’s\ncall these approaches <em>Classic AI</em>, <em>Simple Neural Networks</em>, and <em>Biological\nNeural Networks</em>.  The rest of this blog post will describe and differentiate\nthese approaches.  At the end, we’ll include an example as to how each approach\nmight address the same problem.  This analysis is intended for a business rather\nthan technical audience, so we simplify somewhat and thus beg the indulgence of\ntechnical experts who might quibble with the details.</p>\n<h3><em>Classic AI</em> Approach</h3>\n<p>The earliest approaches to AI were computer programs designed to solve problems\nthat human brains performed easily, such as understanding text or recognizing\nobjects in an image. Results of this work were disappointing and progress was\nslow.  For many problems, researchers concluded that a computer had to have\naccess to large amounts of knowledge in order to be “smart”.  Thus they\nintroduced “expert systems”, computer programs combined with rules provided by\ndomain experts to solve problems, such as medical diagnoses, by asking a series\nof questions.  If the disease was not properly diagnosed, the expert adds\nadditional questions/rules to narrow the diagnosis.  A <em>Classic AI</em> system is\nhighly tuned for a specific problem.</p>\n<p>IBM’s Watson could be viewed as a modern version of a <em>Classic AI</em> system.  It\nfocuses on creating a sophisticated knowledge base on a particular issue.\nAlthough Watson doesn’t rely on encoded rules, it requires the close involvement\nof domain experts to provide data and evaluate its performance.  <em>Classic AI</em>\nhas solved some clearly defined problems but is limited by its inability to\nlearn on its own and by the need to create specific solutions to individual\nproblems.  In this regard, in spite of it being called artificial intelligence,\nit has very little in common with general human intelligence.</p>\n<h3><em>Simple Neural Network</em> Approach</h3>\n<p>Some early researchers explored the idea of neuron models for artificial\nintelligence. When the limits of <em>Classic AI</em> became clear, this notion picked\nup steam and with the addition of back propagation techniques, started proving\nuseful. The resulting technology, artificial neural networks (ANNs), was created\nover 50 years ago when very little was known about how real neurons worked.\nSince then, neuroscientists have learned a great deal about neural anatomy and\nphysiology, but the basic design of ANNs has changed very little. Therefore,\ndespite the name neural networks, the design of ANNs has little in common with\nreal neurons.  Instead, the emphasis of ANNs moved from biological realism to\nthe desire to learn from data without human supervision. Consequently, the big\nadvantage of <em>Simple Neural Networks</em> over <em>Classic AI</em> is that they learn from\ndata and don’t require an expert to provide rules.  Today ANNs are part of a\nbroader category called “machine learning” which includes other mathematical and\nstatistical techniques. Machine learning techniques, including ANNs, look at\nlarge bodies of data, extract statistics, and classify the results.</p>\n<p>ANNs have recently evolved into Deep Learning networks, whose advances have been\nenabled by access to fast computers and vast amounts of data for training.  Deep\nLearning has successfully addressed many problems such as image classification,\nlanguage translation and identifying spam in email.</p>\n<p>Although Simple Neural Network systems can solve many problems that were not\nsolvable using <em>Classic AI</em>, they have limitations.  For example, they don’t\nwork well when there is limited data for training, and they don’t handle\nproblems where the patterns in the data are constantly changing. Essentially,\nthe Simple Neural Network approach is a sophisticated mathematical technique\nthat finds patterns in large, static data sets.</p>\n<p>There is a deeper and more important issue beyond the current limitations of\n<em>Classic AI</em> and of <em>Simple Neural Networks</em>. In our view, both of these\napproaches are not on a path to achieve true machine intelligence; they don’t\nprovide a roadmap to get there, which brings us to the third approach.</p>\n<h3><em>Biological Neural Network</em> Approach</h3>\n<p>Everyone agrees that the human brain is an intelligent system; in fact it is the\nonly system everyone agrees is intelligent.  We believe that by studying how the\nbrain works we can learn what intelligence is and what properties of the brain\nare essential for any intelligent system. For example we know the brain\nrepresents information using sparse distributed representations (SDRs), which\nare essential for semantic generalization and creativity. We are confident that\nall truly intelligent machines will be based on SDRs. SDRs are not something\nthat can be added to existing machine learning techniques; they are more like a\nfoundation upon which everything else depends. Other essential attributes\ninclude that memory is primarily a sequences of patterns, that behavior is an\nessential part of all learning, and that learning must be continuous.  In\naddition, we now know that biological neurons are far more sophisticated than\nthe simple neurons used in the Simple Neural Network approach – and the\ndifferences matter. We believe you can’t get to machine intelligence by\nincrementally building upon the simple neuron approach, but instead must throw\nit away and start over with a more realistic biological approach.</p>\n<p>Numenta’s technology, Hierarchical Temporal Memory (HTM), is the best example of\nthe <em>Biological Neural Network</em> approach.  Today, HTM systems are able to learn\nthe structure of streaming data, make predictions and detect anomalies. They\nlearn continuously from unlabeled data. By taking a robust biological approach,\nthe brain gives us a roadmap of where to direct our work in the future, such as\ncompleting our understanding of behavior, attention and short term memory.  This\nroadmap distinguishes HTM from other techniques and makes it the best candidate\nfor creating intelligent machines.</p>\n<h3>An Example</h3>\n<p>Let’s take a problem and think about how it might be addressed in the three\ndifferent approaches.  Again, we oversimplify a bit in order to distinguish the\nmain differences of the three approaches.</p>\n<p>We have been asked to detect rogue behavior of an employee within an\norganization.  For example, companies with confidential information want to know\nif people with internal access are abusing that information.  A change in\nemployee behavior might be totally legitimate – the employee has changed roles,\nand now has new responsibilities – or it could be a problem.</p>\n<p>Rogue behavior is difficult to identify.  The <em>Classic AI</em> approach would\naddress this problem with a series of rules.  For example, let’s consider an\nanalyst who works with confidential customer data.  The <em>Classic AI</em> system\nwould need a human to figure out likely problem scenarios then program the\nsystem to look for those scenarios.  This solution might flag any instance where\nthe analyst has accessed the customer file more than 10 times in the month.  As\nthe <em>Classic AI</em> system is deployed, and false positives and false negatives are\nexamined, the rules would be strengthened.  The new rule might say that an\nanalyst accessing customer data in the first few days of the month is not\nflagged, but it is for the remainder of the month.</p>\n<p>The <em>Simple Neural Network</em> approach would start with lots of historical data,\nnamely a large database of known problem scenarios.  The <em>Simple Neuron Network</em>\nsystem might figure out, for example, that abuse of this information only\nhappens in the last week of the month.  The system identifies such features and\nthen classifies an individual as “unusual” or “not unusual”.  Although it sounds\nsimilar to the <em>Classic AI</em> approach, in this case, the features are learned\nfrom the data, not from an expert.</p>\n<p>Both approaches have some problems.  With the <em>Classic AI</em> solution you need to\nknow what you are looking for.  But criminals constantly change strategies to\navoid detection and the rules don’t adapt. The <em>Simple Neural Network</em> approach\nrequires a lot of labeled data to be able to find common features, but this kind\nof data generally doesn’t exist for unusual behavior.  Both approaches are\nunsuitable for modeling individual behaviors and require the system to be\nretrained when new patterns arise.</p>\n<p>The <em>Biological Neural Network</em> approach would stream the data from each analyst\n(such as the details of the files routinely accessed, numbers of emails, numbers\nof postings, etc.) and would automatically build individual models of normal\nbehavior for each person.  The system would then predict what would be normal\nfor each analyst and would flag anything abnormal.  One could stream a lot of\ndifferent metrics without knowing which will be important – all the modeling is\nautomated.  The <em>Biological Neural Network</em> system does not need to know what it\nis looking for, can model each individual separately, and continuously learns as\ndata changes.</p>\n<p>In summary, below are the characteristics of the three different approaches:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th><em>Classic AI</em></th>\n<th><em>Simple Neural Network</em></th>\n<th><em>Biological Neural Network</em></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Examples</td>\n<td>Watson</td>\n<td>Deep Learning</td>\n<td>Hierarchical Temporal Memory (HTM)</td>\n</tr>\n<tr>\n<td>Associated terms</td>\n<td>Expert systems</td>\n<td>Artificial Neural Nets (ANN) <br/> Machine learning</td>\n<td>Machine intelligence</td>\n</tr>\n<tr>\n<td>Data sources</td>\n<td>Rules from experts</td>\n<td>Large datasets</td>\n<td>Data streams</td>\n</tr>\n<tr>\n<td>Training</td>\n<td>Programmed by experts</td>\n<td>Derived from labeled databases</td>\n<td>Derived from unlabeled data streams</td>\n</tr>\n<tr>\n<td>Outputs</td>\n<td>Answers to questions</td>\n<td>Classification</td>\n<td>Prediction <br/> Anomaly detection <br/> Classification</td>\n</tr>\n<tr>\n<td>Batch vs. continuous learning</td>\n<td>Batch</td>\n<td>Batch</td>\n<td>Continuous</td>\n</tr>\n<tr>\n<td>Need to know what you are looking for</td>\n<td>Yes</td>\n<td>Requires labeled data</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Many individual models</td>\n<td>Hard</td>\n<td>Hard</td>\n<td>Easy</td>\n</tr>\n<tr>\n<td>Biological basis</td>\n<td>None</td>\n<td>Simple</td>\n<td>Realistic</td>\n</tr>\n<tr>\n<td>Provides roadmap to machine intelligence</td>\n<td>No</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</tbody>\n</table>\n<h3>Summary</h3>\n<p>We return to the question of terminology that we started this post with.  Our\nfeeling is that the term “artificial intelligence” has been used in so many ways\nthat it is now confusing.  People use AI to refer to all three approaches\ndescribed above, plus others, and therefore has become almost meaningless.  The\nterm “machine learning” is a more narrowly defined term for machines that learn\nfrom data, including simple neural models such as ANNs and Deep Learning.  We\nuse the term “machine intelligence” to refer to machines that learn but are\naligned with the <em>Biological Neural Network</em> approach.  Although there still is\nmuch work ahead of us, we believe the <em>Biological Neural Network</em> approach is\nthe fastest and most direct path to truly intelligent machines.</p>\n<p><em>This blog entry was modified on Thu Mar 24 2016 to clarify the timing of neural\nnetwork research.</em></p>\n"}

/***/ },
/* 831 */
/***/ function(module, exports) {

	module.exports = {"author":"Christy Maver","brief":"This morning, as Hollywood anxiously awaited to hear the nominees for this year’s Academy Awards, another set of winners was recognized – not for motion pictures, but for artificial intelligence.","date":"2016/01/14","featured":false,"image":"../images/image.png","org":"Director of Marketing","tags":"numenta AI awards artificial machine intelligence learning deep htm brain neurons nupic","title":"And the award goes to","body":"<hr>\n<p>This morning, as Hollywood anxiously awaited to hear the nominees for this\nyear’s Academy Awards, another set of winners was recognized – not for motion\npictures, but for artificial intelligence. <a href=\"http://awards.ai/\">The Global Annual Achievement Awards\nfor Artificial Intelligence</a> were announced today by\n<a href=\"http://Awards.AI\">http://Awards.AI</a>.</p>\n<p><a href=\"http://Awards.AI\">Awards.AI</a> is part of the <a href=\"http://informed.ai/\">Informed.AI Network</a>, which\nprovides a range of information resources for Artificial Intelligence and\nMachine Learning. The awards are voted on by its community and designed to\ncelebrate the various achievements in developing new algorithms, products and\nservices across a number of different categories and industries, as well as the\nwork of startups and individuals whose focus on AI is advancing the field.</p>\n<p>There’s no question that interest, activity and progress in the field of\nartificial intelligence, (or <a href=\"http://numenta.com/blog/machine-intelligence-machine-learning-deep-learning-artificial-intelligence.html\">machine intelligence, as we would say here at\nNumenta</a>)\nis increasing every day.  The existence of these awards is a testament to the\ngrowing enthusiasm for this space. We were honored to see the community\nrecognize our work, along with our strategic partner,\n<a href=\"http://www.cortical.io/\">Cortical.io</a>, in several of the 10 categories of\nachievement in 2015:</p>\n<ul>\n<li>AI Company of the Year: <strong>Numenta</strong></li>\n<li>AI Person of the Year: <strong>Jeff Hawkins</strong></li>\n<li>AI Application of the Year: <strong>NuPIC</strong></li>\n<li>AI Startup of the Year: <strong><a href=\"http://Cortical.io\">Cortical.io</a></strong></li>\n</ul>\n<p>Our <a href=\"http://numenta.com/newsletters/year-in-review-numenta-2015.html\">most recent newsletter</a>\nshared what we thought to be highlights of our achievements in 2015.</p>\n<p><a href=\"http://Cortical.io\">Cortical.io</a> was recognized for developing a new approach for handling Big Text\nData with highly efficient semantic fingerprints and the <a href=\"http://Cortical.io\">Cortical.io</a> Retina,\nwhich is the first semantic engine able to process terabytes of unstructured\ntext in real time, for any language or business domain.</p>\n<p>You can see the full list of winners at <a href=\"http://awards.ai/\">http://awards.ai/</a> or follow them on\nTwitter <a href=\"https://twitter.com/Awards_AI\">@Awards_AI</a>.</p>\n<p>Most awards ceremonies include the seemingly never-ending “I’d like to thank”\nspeeches.  Don’t worry; no need to cue the orchestra here.  I will simply say on\nbehalf of Numenta, thanks to those who voted, and more importantly, thanks for\nfollowing us and our work here.  We appreciate the support, and it is great\nmotivation as we set out to accomplish even more in 2016.</p>\n"}

/***/ },
/* 832 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "17f63a570102557590ccbe54e086c9db.png";

/***/ },
/* 833 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7e94e82fd2451ec5a786ee70f47b8e30.png";

/***/ },
/* 834 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fa8b1b6dff8402be58699fdc73dec5ad.png";

/***/ },
/* 835 */
/***/ function(module, exports) {

	module.exports = {"author":"Taylor Wirfs","brief":"We are excited to announce the Numenta Anomaly Benchmark (NAB) Competition! Last year, we released NAB, the first ever open-source benchmark for evaluating real-time anomaly detection algorithms. This year, we want to further expand NAB","date":"2016/02/11","featured":false,"hideImage":true,"image":"../images/image.png","org":"Marketing","tags":"numenta anomaly benchmark nab competition ieee wcci world congress computational intelligence 2016","title":"The NAB Competition 2016","body":"<h3>Numenta Anomaly Benchmark (NAB) Competition</h3>\n<h4>IEEE WCCI (World Congress on Computational Intelligence) 2016</h4>\n<p>We are excited to announce the Numenta Anomaly Benchmark (NAB) Competition! Last\nyear, we <a href=\"/press/numenta-anomaly-benchmark-nab-evaluates-anomaly-detection-techniques.html\">released NAB</a>,\nthe first ever open-source benchmark for evaluating real-time anomaly detection\nalgorithms. This year, we want to further expand NAB by including more\nreal-world datasets and benchmarked algorithms, through a fun competition - with\ncash prizes.</p>\n<p>The contest will be held in conjunction with the\n<a href=\"http://www.wcci2016.org/programs.php?id=home\">IEEE WCCI 2016</a> on July 25 – 29\nin Vancouver, Canada. The competition offers two submission categories:\nAlgorithms and Datasets. Want to see how your anomaly detection algorithm\nperforms? Have a dataset with labeled anomalies? Then this contest is for you.</p>\n<p>Entries can be submitted to either category, or both. All entries should be sent\nto <a href=\"mailto:nab@numenta.org\">nab@numenta.org</a>.</p>\n<t render=\"hbs\">\n  <a href=\"http://numenta.org/nab/#what-are-some-example-entries\">\n    <img src=\"{{document.image}}\" class=\"center-block img-responsive media-border\" alt=\"{{document.title}} Image\" />\n  </a>\n</t>\n<div class=\"caption\">\n  Example entry of satellite data with labeled anomalies. See\n  [more examples](http://numenta.org/nab/#what-are-some-example-entries).\n</div>\n<h3>Entry Categories</h3>\n<h4>Algorithms Category</h4>\n<p>We are looking for algorithms that detect anomalies in streaming data.</p>\n<p>Entries in this category must submit the following:</p>\n<ul>\n<li>Detailed description of the algorithm and NAB results</li>\n<li>Code to run the algorithm and re-create the results (GitHub link OK)</li>\n<li>List of contributors and their contact information</li>\n</ul>\n<p>We will evaluate your algorithm by running your code on NAB v1.0. Results will\nbe added to the NAB repository scoreboard, following the conference.</p>\n<h4>Datasets Category</h4>\n<p>We are looking for real-world, time-series datasets with labeled anomalies.</p>\n<p>Entries in this category must submit the following:</p>\n<ul>\n<li>Data file(s) in CSV format</li>\n<li>Anomaly labels, with timestamps at which the anomalies start</li>\n<li>Detailed description of the data and anomalies</li>\n<li>List of contributors and their contact information</li>\n</ul>\n<p>We will evaluate the dataset on the following characteristics: types of\nanomalies, relevance to real applications, quality, difficulty for algorithms,\nquantity of data (more files in your set, the better), and feasibility for\ndetection. Viable datasets will be added to the next version of NAB, shortly\nafter the competition ends.</p>\n<h3>Prizes $$</h3>\n<p>All work and no play is no fun. We will be awarding up to $10,000 in cash prizes\nfor your contributions to NAB.</p>\n<p>Rules and Eligibility For a complete list of rules and contest eligibility,\nvisit: <a href=\"http://numenta.org/nab/\">http://numenta.org/nab/</a>.</p>\n<h3>Deadline and Questions</h3>\n<p>Submissions are due by July 1, 2016. We encourage you to ask questions, and\nsubmit entries ASAP so we can ensure they meet all the requirements. Contact us\nwith any questions at <a href=\"mailto:nab@numenta.org\">nab@numenta.org</a>.</p>\n<p>Ready to get started? Check out these resources:</p>\n<ul>\n<li><a href=\"https://github.com/numenta/NAB\">NAB GitHub Repository</a></li>\n<li><a href=\"http://arxiv.org/abs/1510.03336\">NAB Technical Paper</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=SxtsCrTHz-4\">Evaluating Real-Time Anomaly Detection: The Numenta Benchmark</a>\n– Video presentation given by VP Research, Subutai Ahmad at MLConf (Nov. 2015)</li>\n<li><a href=\"http://numenta.org/nab/#what-are-some-example-entries\">Example Algorithms and Dataset Entries</a></li>\n</ul>\n"}

/***/ },
/* 836 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d946d9b79cbd34e08e7316f78cee1797.png";

/***/ },
/* 837 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cee97215b4ee1ffae14bc2def9ac3cce.png";

/***/ },
/* 838 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "da0db8718d973625fd66efd04e8f4e83.png";

/***/ },
/* 839 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ca5aa0ad01354dbbca4e08a6746f4d0e.png";

/***/ },
/* 840 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "18ac219045700329f0b9610d5d78beed.png";

/***/ },
/* 841 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fdc0038ba8bda3cd43516e29c68d9e6a.png";

/***/ },
/* 842 */
/***/ function(module, exports) {

	module.exports = {"author":"Christy Maver","brief":"While Numenta may not be in the business of selling traditional products, we are in the business of making our technology pervasive. To that end, we build sample applications that demonstrate the value of HTM","date":"2016/02/18","featured":false,"hideImage":true,"image":"../images/image.png","org":"Director of Marketing","tags":"htm for stocks iphone apple app store real time insights random walk hierarchical temporal memory","title":"Real-time Insights from a Random Walk: HTM for Stocks Hits the iPhone","body":"<p>While Numenta may not be in the business of selling traditional products, we are\nin the business of making our technology pervasive. To that end, we build sample\napplications that demonstrate the value of HTM, and we make the code available\nin our open source project.  But while anyone can read about our technology and\napplications, experiencing them requires some serious computer science skills.\nThat changed this month when we launched an <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.ext.htmstocks.ios%7D%7D\">iPhone version of our HTM for Stocks app</a></t>.\nAndroid users can still access the app <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.ext.htmstocks.android%7D%7D\">here</a></t>. Now, all it takes to\nexperience HTM is your cell phone.</p>\n<div>\n  <img src=\"../images/1.png\" class=\"center-block img-responsive media-border\" alt=\"HTM for Stocks in App Store\" />\n</div>\n<p>HTM can be applied in a variety of use cases, but we chose to focus this\napplication on the stock market because you don’t have to be an algorithms or\ninvestment expert to understand it. HTM for Stocks monitors financial and social\ndata (specifically stock price, stock volume and Twitter volume) for a couple\nhundred stocks and alerts you in real-time when a significant anomaly is\noccurring.</p>\n<p>To illustrate the benefits of this application, think about how you would find\nsecurities anomalies without it. You’d start with the list of 200 companies you\nwant to monitor and you’d have three data streams for each: the stock price, the\nstock volume and the Twitter volume. Rather than try to create 600 individual\nmodels and learn patterns in each one, you might set global thresholds like,\n“Notify me when any stock price moves more than 1 standard deviation away from\nits moving average of the last 60 days.” You would catch some anomalies this\nway, but you would miss the more subtle temporal anomalies.</p>\n<p>A couple recent examples demonstrate how HTM for Stocks finds these types of\nanomalies:</p>\n<hr>\n<h4>Example #1</h4>\n<p>On February 17, HTM for Stocks found a purely temporal anomaly in the stock\nvolume of FCX (Freeport-McMoRan).  It is normal for stock volume to spike at the\nbeginning and end of a trading day, with the data often resembling a U shape.\nHowever, it’s very rare for a stock’s volume to spike twice in a short time\nframe.  HTM for Stocks catches this anomaly, where other detection methods like\nthresholding would not.</p>\n<div>\n  <img src=\"../images/2.png\" class=\"center-block img-responsive media-border\" alt=\"HTM for Stocks screenshot\" />\n</div>\n<p>Interestingly, HTM for Stocks identifies temporal anomalies in the Twitter\nvolume just before the stock volume anomaly.</p>\n<div>\n  <img src=\"../images/3.png\" class=\"center-block img-responsive media-border\" alt=\"HTM for Stocks screenshot\" />\n</div>\n<p>The Twitter volume data not only indicates that something unusual is happening\nwith this stock, it also serves as root cause analysis.  You can view the\nunderlying Twitter data by tapping on it to reveal the tweets.  This allows you\nto get qualitative insights and see what people are saying about the company’s\nstock.  In this case, many of the tweets were advising shareholders to sell this\nparticular stock if it go to a certain price.</p>\n<h4>Example #2</h4>\n<p>On February 4, HTM for Stocks picked up an unusually high volume of Twitter\nactivity for Conoco Phillips before the market opened. The company had announced\na large decrease in dividends. This was followed by anomalous stock volume\nmovement where again we see a double spike at the beginning of market hours.\nWe also see multiple Twitter volume anomalies throughout the day.</p>\n<div>\n  <img src=\"../images/4.png\" class=\"center-block img-responsive media-border\" alt=\"HTM for Stocks screenshot\" />\n</div>\n<p>Much like the previous example, these anomalies are temporal in nature, and\nwould not necessarily be caught using a global alert or thresholding technique.</p>\n<hr>\n<p>HTM for Stocks demonstrates the value of combining multiple metrics.  If you\nwere only monitoring any one of these 3 streams (stock price, volume and Twitter\nvolume), you might miss some important anomalies.  But if two or three data\nstreams are displaying unusual behavior at the same time, something truly\nsignificant is happening.</p>\n<p>Numenta has no plans to turn this into a commercial application, but it’s easy\nto see how someone could.  The amount of data we are faced with in a single day\ncontinues to grow while the amount of hours in a day never will. The underlying\ntechnology is not specific to stocks but can be applied to many different\nstreaming applications. The ability to do anomaly detection in streaming\nanalytics with large, noisy data streams offer real-time insights and a\ncompetitive advantage.</p>\n<p>I hope you’ll download HTM for Stocks and give it a try. Let us know what\nanomalies you find by contacting <t render=\"hbs\">\n<a href=\"mailto:%7B%7Bsite.email.feedback%7D%7D\">{{site.email.feedback}}</a></t> or leave a comment\nbelow.</p>\n"}

/***/ },
/* 843 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6b62e62ebd60e867e515c1d3bc444380.png";

/***/ },
/* 844 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "39249d63ac0ca6d15ad79bc6a6ef317d.png";

/***/ },
/* 845 */
/***/ function(module, exports) {

	// empty (null-loader)

/***/ },
/* 846 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ed5f9ed05ab75365388fb142fc54ae45.png";

/***/ },
/* 847 */
/***/ function(module, exports) {

	module.exports = {"author":"Yuwei Cui","brief":"Earlier this month, I attended the annual Computational and Systems Neuroscience meeting (Cosyne) in Salt Lake City. Cosyne is a peer reviewed scientific conference that brings experimental and theoretical neuroscientists together to exchange data and ideas.","date":"2016/03/30","featured":false,"hideImage":true,"image":"../images/image.png","org":"Research Engineer","tags":"numenta computational systems neuroscience conference","title":"Numenta at the Computational and Systems Neuroscience Conference (COSYNE)","body":"<p>Earlier this month, I attended the annual\n<a href=\"http://www.cosyne.org/c/index.php?title=Cosyne_16\">Computational and Systems Neuroscience meeting (Cosyne)</a>\nin Salt Lake City. Cosyne is a peer reviewed scientific\nconference that brings experimental and theoretical neuroscientists together to\nexchange data and ideas. Why does a machine intelligence company attend a\nneuroscience meeting? Numenta’s approach to machine intelligence starts with a\ndeep understanding of how the neocortex learns. We use the brain as a blueprint.\nThe HTM theory is not only inspired by neuroscience concepts, but also\nconstrained by detailed neuroscience findings. Neuroscientists, using many new\ntools, have made tremendous advancements in understanding the physiology and\nconnectivity of the brain. We would like to see whether the latest experimental\nevidences could fit into the HTM theory. If not, how should we revise the theory\nto be consistent with the experimental observations?</p>\n<h3>From neuroscience findings to machine intelligence</h3>\n<p>This year we presented a poster on “a theory of sequence memory in the\nneocortex.” The ability to recognize and memorize regular temporal patterns from\nsensory input streams is critical for almost all cortical functions. The topic\nof neural representations of time and sequence in the cortex was very popular at\nCosyne this year, as you can see in the\n<a href=\"http://cosyne.org/cosyne16/Cosyne2016_program_book.pdf\">program guide</a>.\nOur work is unique, as it is not only built on concrete experimental findings\nfrom neuroscience and makes a number of experimentally testable predictions, but\nalso achieves compelling performance on real-world sequence learning tasks.</p>\n<p>Neurons in the neocortex receive thousands of inputs on their highly elaborated\ndendritic trees. Unlike most artificial neural network models individual\ndendritic branches act as active pattern detectors: co-activation of a number of\nsynapses leads to a dendritic spike that can depolarize the cell body for\nhundreds of milliseconds. This phenomenon of active dendrites has been known for\na long time among neuroscientists. A number of presentations at Cosyne modeled\nthe biophysical mechanism underlying dendritic spikes. Nevertheless, the\nfunction of dendritic spikes remains unclear and it is not incorporated in most\nneural network models.</p>\n<img src=\"../images/2.png\" class=\"center-block img-responsive media-border\" alt=\"Image of Active Dendrite Firing Timing\" />\n<div class=\"caption\">\n  **Left:** A pyramidal neuron in the cortex (Spruston 2008, Nat Rev Neurosci).\n  <br/>\n  **Right:** Researchers stimulated individual synapses optically and measured\n  voltage responses at the soma. Simultaneous stimulation of enough synapses\n  (8 in this case) caused a large and sustained depolarization at the cell body\n  (Major et al., 2013, Annu Rev Neurosci).\n</div>\n<p>The HTM sequence memory model utilizes the active dendrites of cortical neurons\nto learn sequences from data streams. Temporal sequences are learned via growth\nof new synapses and are represented with\n<a href=\"http://arxiv.org/abs/1503.07469\">sparse distributed representations</a>.\nPredictions of future inputs are made through the generation of dendritic\nspikes. The resulting model gives rise to a powerful sequence memory, which not\nonly achieves comparable performance to state-of-the-art machine learning\nalgorithms, but also exhibits many desirable attributes for real-world sequence\nlearning with streaming data.</p>\n<img src=\"../images/3.png\" class=\"center-block img-responsive media-border\" alt=\"Prediction graph image\" />\n<div class=\"caption\">\n  HTM sequence memory model makes accurate 2.5 hour ahead-predictions of taxi\n  demand in the New York City.\n</div>\n<h3>Interactions with other neuroscientists</h3>\n<p>Our work attracted wide interest among\nneuroscientists. Several experimental neuroscientists were very excited to learn\nabout the important functional role of the long observed phenomena of dendritic\nspikes. Some even expressed interest in running more specific experiments to\ntest the learning mechanisms used in HTM. We also benefited by discussing with\nother neuroscientists. For example, by talking with researchers that build\ndetailed biophysical models of active dendrites, we now have a better idea of\nhow HTM would work on a detailed biophysical level.</p>\n<p>I found quite a few other presentations at Cosyne that were related to HTM.\nProf. Michael Berry’s group from Princeton University recorded a large\npopulation of neurons in the primary visual cortex during the presentation of\nimage sequences. The observed behavior of the real neural population matches\nmany aspects of the HTM sequence memory model.  Prof. Jose Carmena from UC\nBerkeley presented a novel paradigm for brain-machine interface where subjects\ncontinuously learn to control a small set of neurons. Interestingly, the\nperformance over time looks quite similar to that of the HTM model on a\ncontinuous learning task. These studies, and many others, give us valuable\ninsights on the development of future HTM algorithms. We would like to keep\ncollaborating with the neuroscience community. We believe doing so would\ntremendously speed up our progress on machine intelligence.</p>\n<p>I encourage you to take a look at our poster and the\n<a href=\"http://arxiv.org/abs/1512.05463\">accompanying paper</a>. Please also check out\nthis recently published <a href=\"http://journal.frontiersin.org/article/10.3389/fncir.2016.00023/full\">Frontiers Neural Circuit paper</a>\nto learn about the HTM theory.  Let me know what you think of it by contacting\n<a href=\"mailto:ycui@numenta.com\">ycui@numenta.com</a> and join the discussion of HTM in\nthe <a href=\"http://numenta.org\">NuPIC community</a>.</p>\n<a href=\"../images/cosyne-poster.pdf\">\n  <img src=\"../images/image.png\" class=\"center-block img-responsive media-border\" alt=\"Numenta conference poster image\" />\n</a>\n<div class=\"caption\">\n  Numenta Cosyne Poster.\n  [Click to enlarge](../images/cosyne-poster.pdf).\n</div>\n"}

/***/ },
/* 848 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"Eric Jonas and Konrad Kording just released a provocative paper, \"Could a neuroscientist understand a microprocessor?\". In their paper, they ask whether current neuroscience techniques could discover the operations of a simple microprocessor.","date":"2016/06/16","featured":false,"hideImage":false,"image":"../images/image.png","org":"VP of Research","tags":"neuroscientist understand microprocessor","title":"Can Neuroscientists Understand the Brain?","body":"<p>Eric Jonas and Konrad Kording just released a provocative paper, “Could a\nneuroscientist understand a microprocessor?”<sup><a href=\"#1\">[1]</a></sup> In their\npaper, they ask whether current neuroscience techniques could discover the\noperations of a simple microprocessor<sup><a href=\"#2\">[2]</a></sup>.</p>\n<p>Their reasoning is as follows. The field of neuroscience is trying to understand\nthe computational properties of the brain. If we think current neuroscience\ntechniques are sufficient to understand something as complex as the brain,\nsurely they will be able to handle a small microprocessor. If, on the other\nhand, current techniques are insufficient to understand even this simple CPU, it\nraises serious questions about the current approaches in the field. True, the\nbrain is not a silicon processor but there are similarities (they list several\nin the paper). So let’s apply these techniques to this simpler computational\nsystem as a litmus test.</p>\n<p>Their methodology includes applying an array of traditional techniques such as\nlesioning, examining statistics of bit patterns, analyzing tuning properties of\ntransistors, dimensionality reduction, etc. They studied the microprocessor “in\nvivo” while playing a variety of video games (you can tell they had a lot of fun\nwith this project!) They were able to discover that transistors exhibited very\nlow pairwise correlations but were not actually independent (very similar to\nbehavior of neurons<sup><a href=\"#3\">[3]</a></sup>). They showed strong spatiotemporal\nstructure in the activity of various processor components. The resulting plots\nand charts look remarkably similar to those in neuroscience papers. Yet these\ntechniques did not uncover the true computational nature of the microprocessor\nnor its functional structure.</p>\n<p>Of course, in this process what they are really asking is “Could a\nneuroscientist understand the brain”?<sup><a href=\"#4\">[4]</a></sup> Their conclusion: an\nunequivocal “NO”.</p>\n<p>We all know that “correlation does not imply causation”. Current statistical\ntechniques report all sorts of correlations, but little regarding true\nunderlying structure.</p>\n<h3>What does it mean to understand the brain?</h3>\n<p>So what does it really mean to understand the brain? Unfortunately the paper\ndoes not answer this question. They do make vague comments that the field should\nunderstand “how the output relates to the inputs”, and that it should reward\n&quot;those who innovate methodologically.&quot; These statements are unsatisfactory at\nbest.</p>\n<p>I propose a much stronger answer. As a computer scientist, I believe the only\nway to be certain you understand something is to build it. Write the program for\nit. We don’t need to create an exact replica, just a system that demonstrates\nthe important properties.  This methodology is harder but demands that you\nuncover underlying structure and function.</p>\n<p>Let me give an analogy using a different paradigm. Suppose cars didn’t exist.\nHumans somehow get access to a luxury Mercedes sedan and the race is on to\nunderstand how it works.  Let’s consider two alternative approaches.</p>\n<p>The first approach involves calculating a number of statistical measures and\nbuilding predictive models. These models might accurately predict the car’s gas\nmileage under different conditions, such as going uphill vs downhill. They might\nbe able to plot precise acceleration profiles under different loads.  They would\nknow exactly how long it takes the air conditioning to cool the car in different\nclimates. Scientists would publish thousands of peer-reviewed papers with all\nsorts of equations and charts proving the accuracy of these models. But would\nthey really understand how the car works?</p>\n<p>The second approach involves using the car to deduce fundamental mechanisms such\nas a power source, transmission, and steering. It would focus on the function of\nthese subsystems, and less on details such as the strength of bolts or the\nefficiency of water pumps. To test our theories of function we would build a\nmuch simpler machine from scratch, perhaps something like a Ford\nModel T<sup><a href=\"#5\">[5]</a></sup>. This car would have a super simple engine and hand\ncranked starter. The controls might be awkward, the tires bad, and the seats\nuncomfortable. It would definitely have no air conditioning. It might not even\nbe as fast as a horse! But, you could actually drive this car. Because we\nunderstand how our simple car works, over time we can improve it and eventually\nbuild vehicles even better than the Mercedes prototype.</p>\n<h3>What is our approach?</h3>\n<p>At Numenta we are using this second approach to understanding the brain.  We are\nbuilding the Model T equivalent of the neocortex.</p>\n<p>We use neuroscience discoveries and details to deduce the fundamental components\nof intelligence. For example, we know that the neocortex learns a predictive\nmodel of the world. It learns continuously without supervision. We know that\nbehavior and sensory inference are not separate processes, but are intimately\nintegrated such that learning cannot be achieved without behavior. Our theories\nare constrained by and consistent with a great many neurosciences details, but\nour software simulations only capture the functional properties of the brain and\nnot all the details.  We are often asked, “How do you decide what neuroscience\ndetails to include in your simulations and which to leave out?”  The answer is\nwe include neuroscience details when they are essential for function. When we\nhit stumbling blocks we return to experimental neuroscience to provide clues and\nhard constraints on how to solve problems. Our simulations also provide insights\ninto the structure of cortex<sup><a href=\"#6\">[6]</a></sup><sup><a href=\"#7\">[7]</a></sup>.</p>\n<p>Compared to the brain, our software is at an early stage and primitive, like a\nModel T. But, you can actually take it for a spin, see how it performs, and then\nknow what areas need improvement.</p>\n<p>Can we understand the brain? We have made excellent progress with our approach.\nIf we stay focused on large-scale functional theories and building systems based\non those theories, the answer to this question is an unequivocal “YES”!</p>\n<h3>Footnotes and Citations</h3>\n<p><span id=\"1\" class=\"anchor\"></span>\n<strong>[1]</strong> Jonas, E., and Kording, K. (2016). Could a neuroscientist understand a\nmicroprocessor? Cold Spring Harbor Labs Journals bioRxiv doi:10.1101/055624.<br>\n<a href=\"http://biorxiv.org/content/early/2016/05/26/055624.abstract\">http://biorxiv.org/content/early/2016/05/26/055624.abstract</a></p>\n<p><span id=\"2\" class=\"anchor\"></span>\n<strong>[2]</strong> Specifically Motorola 6507, similar to what was used in the Apple I and\nAtari video game consoles 40 years ago.</p>\n<p><span id=\"3\" class=\"anchor\"></span>\n<strong>[3]</strong> Schneidman, E., Berry, M. J., Segev, R., and Bialek, W. (2006). Weak\npairwise correlations imply strongly correlated network states in a neural\npopulation. Nature 440, 1007–12. doi:10.1038/nature04701.</p>\n<p><span id=\"4\" class=\"anchor\"></span>\n<strong>[4]</strong> Note that the paper specifically targets computational neuroscience\ntechniques, not experimental neuroscience. The amount of experimental data\nin neuroscience has been exploding exponentially, but without good\ntheoretical guidance uncovering value is like finding a needle in a\nhaystack.</p>\n<p><span id=\"5\" class=\"anchor\"></span>\n<strong>[5]</strong> <a href=\"https://en.wikipedia.org/wiki/Ford_Model_T\">https://en.wikipedia.org/wiki/Ford_Model_T</a></p>\n<p><span id=\"6\" class=\"anchor\"></span>\n<strong>[6]</strong> Hawkins, J., and Ahmad, S. (2016). Why Neurons Have Thousands of\nSynapses, a Theory of Sequence Memory in Neocortex. Front. Neural\nCircuits 10. doi:10.3389/fncir.2016.00023.\n<a href=\"http://journal.frontiersin.org/article/10.3389/fncir.2016.00023/full\">http://journal.frontiersin.org/article/10.3389/fncir.2016.00023/full</a></p>\n<p><span id=\"7\" class=\"anchor\"></span>\n<strong>[7]</strong> Ahmad, S., and Hawkins, J. (2016). How do neurons operate on sparse\ndistributed representations? A mathematical theory of sparsity, neurons and\nactive dendrites. arXiv:1601.00720 [q–<a href=\"http://bio.NC\">bio.NC</a>]. Available at:\n<a href=\"http://arxiv.org/abs/1601.00720\">http://arxiv.org/abs/1601.00720</a>.</p>\n"}

/***/ },
/* 849 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "dbbf31057249241618b8e054e0dbab18.png";

/***/ },
/* 850 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "467ed184a3cbe6b5e5d3b7e2423ed4c5.png";

/***/ },
/* 851 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _universal = __webpack_require__(376);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _PostItem = __webpack_require__(852);
	
	var _PostItem2 = _interopRequireDefault(_PostItem);
	
	var _Section = __webpack_require__(675);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const BlogPage = (props, { route }) => {
	  const { pages } = route;
	  const posts = pages.filter(({ file }) => file.path.match(/^blog\/.*\.md/));
	  const items = posts.sort(_universal.sortDateDescend).map(post => _react2.default.createElement(
	    _ListItem2.default,
	    { key: post.file.stem },
	    _react2.default.createElement(_PostItem2.default, { post: post })
	  ));
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      _Section2.default,
	      { headline: true, open: true, title: 'Blog' },
	      _react2.default.createElement(
	        _List2.default,
	        { copy: false },
	        items
	      )
	    )
	  );
	};
	
	BlogPage.contextTypes = {
	  route: _react2.default.PropTypes.object
	};
	
	exports.default = BlogPage;
	module.exports = exports['default'];

/***/ },
/* 852 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Image = __webpack_require__(379);
	
	var _Image2 = _interopRequireDefault(_Image);
	
	var _ImageLink = __webpack_require__(400);
	
	var _ImageLink2 = _interopRequireDefault(_ImageLink);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _Spacer = __webpack_require__(390);
	
	var _Spacer2 = _interopRequireDefault(_Spacer);
	
	var _Strong = __webpack_require__(523);
	
	var _Strong2 = _interopRequireDefault(_Strong);
	
	var _TextLink = __webpack_require__(393);
	
	var _TextLink2 = _interopRequireDefault(_TextLink);
	
	var _index = __webpack_require__(853);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const PostItem = ({ post }) => {
	  const { data, path } = post;
	
	  return _react2.default.createElement(
	    'article',
	    { className: _index2.default.postItem },
	    _react2.default.createElement(
	      'div',
	      { className: _index2.default.columns },
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.content },
	        _react2.default.createElement(
	          _Strong2.default,
	          null,
	          data.date
	        ),
	        _react2.default.createElement('br', null),
	        _react2.default.createElement(
	          _TextLink2.default,
	          { to: path },
	          data.title
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          data.author,
	          _react2.default.createElement(_Spacer2.default, null),
	          data.org
	        ),
	        _react2.default.createElement(
	          _Paragraph2.default,
	          null,
	          data.brief || ''
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: _index2.default.aside },
	        _react2.default.createElement(
	          'div',
	          { className: _index2.default.image },
	          _react2.default.createElement(
	            _ImageLink2.default,
	            { to: path },
	            _react2.default.createElement(_Image2.default, {
	              alt: data.title,
	              respond: 'mw',
	              shadow: true,
	              src: `${ path }${ data.image }`
	            })
	          )
	        )
	      )
	    )
	  );
	};
	
	PostItem.propTypes = {
	  post: _react2.default.PropTypes.object.isRequired
	};
	
	exports.default = PostItem;
	module.exports = exports['default'];

/***/ },
/* 853 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin
	module.exports = {"postItem":"index_postItem_C2e","columns":"index_columns_1Mg theme_layout-columns_32i tachyons_cf_g7R tachyons_mb3_1mV","content":"index_content_z4H theme_layout-content_3wC tachyons_fl_wJK tachyons_w-100_1xC tachyons_w-60-ns_3x_","aside":"index_aside_GAR tachyons_mt1_3Hm tachyons_tc_3ab theme_layout-aside_238 tachyons_fr_2Nn tachyons_pl4-m_kHN tachyons_w-100_1xC tachyons_w-40-ns_2LN","image":"index_image_29W tachyons_center_iwf tachyons_mb2_1U4 tachyons_w-80_2JI tachyons_w-auto-m_1Sn"};

/***/ },
/* 854 */,
/* 855 */
/***/ function(module, exports) {

	"use strict";

/***/ },
/* 856 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "075fc0d379661bf285ba5e712a08a936.png";

/***/ },
/* 857 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(597);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class BusinessPage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Business Strategy & IP' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	}
	
	exports.default = BusinessPage;
	module.exports = exports['default'];

/***/ },
/* 858 */
/***/ function(module, exports) {

	module.exports = {"anchor":"careers-intern","date":"2014/01/01","email":"interns@numenta.com","sort":9,"title":"Internship Program","body":"<p><strong><em>IMPORTANT NOTE:</em></strong> <em>Numenta is unable to consider internship applications\nfrom international students unless they are currently enrolled in a\nUS University, are US Citizens, or hold a Green Card.</em></p>\n<p>We have filled our technical intern positions for Summer 2016, and are no longer\naccepting applications. We do have one open intern position for Fall-Winter\n2016, so you can submit an application if this time period is of interest. We\nwill start accepting applications for Summer 2017 on October 1, 2016.</p>\n<p>Numenta’s technical interns will get exposure to all aspects of HTM learning\nalgorithms and our streaming analytics platform. The commitment is for 3 to 4\nmonths, full time. We have internship positions in the following areas:</p>\n<h4>Algorithms Internships</h4>\n<p>What you can expect to learn:</p>\n<ul>\n<li>\n<p>The challenges of deploying complex machine learning algorithms in a\nproduction environment</p>\n</li>\n<li>\n<p>Deep understanding of our open source machine learning algorithms</p>\n</li>\n</ul>\n<p>Desired qualifications:</p>\n<ul>\n<li>\n<p>Experience with machine learning or pattern recognition algorithms</p>\n</li>\n<li>\n<p>Strong experience with conducting machine learning experiments. This\nincludes writing and evaluating machine learning algorithms</p>\n</li>\n<li>\n<p>Excellent programming skills in either Python (preferred), Java or C++</p>\n</li>\n<li>\n<p>Enrolled in undergraduate or graduate studies in CS, EE or related disciplines</p>\n</li>\n<li>\n<p>Preference given to candidates who have working knowledge of NuPIC or have\ncontributed to the NuPIC community</p>\n</li>\n<li>\n<p>Experience with data analytics</p>\n</li>\n</ul>\n<h4>Software Engineering Internships</h4>\n<p>Our innovative real time streaming data prediction service runs locally and in\nthe cloud, and includes both web and mobile applications. A developer API allows\ncustomers to integrate the service directly into their business.</p>\n<p>There are many interesting problems related to data analytics, visualization,\narchitecting web based API’s, and running complex algorithms reliably and\nquickly. As a Software Engineering intern, you will be exposed to all of these\nexciting areas.</p>\n<p>What you can expect to learn:</p>\n<ul>\n<li>\n<p>Improved understanding of data science</p>\n</li>\n<li>\n<p>Improved understanding of modern software engineering practices</p>\n</li>\n<li>\n<p>Working with professional development teams and experienced industry veterans</p>\n</li>\n</ul>\n<p>Desired qualifications:</p>\n<ul>\n<li>\n<p>Excellent programming skills in at least one language, preferably Java,\niPython or C++</p>\n</li>\n<li>\n<p>Enrolled in undergraduate or graduate studies in CS, EE or related disciplines</p>\n</li>\n<li>\n<p>Experience with the latest web development technologies\n(HTML 5, JavaScript, CSS 3, JSON, REST, etc.)</p>\n</li>\n<li>\n<p>Good understanding of cloud systems</p>\n</li>\n<li>\n<p>Experience with machine learning or data analytics</p>\n</li>\n<li>\n<p>Experience with NuPIC</p>\n</li>\n</ul>\n<h4>How to Apply</h4>\n<p>Qualified applicants should send the following:</p>\n<ul>\n<li>\n<p>Cover letter describing their specific interest in Numenta. Please include\nany relevant experience with NuPIC.</p>\n</li>\n<li>\n<p>Resume, including list of relevant course work.</p>\n</li>\n<li>\n<p>Period of the internship (e.g.: summer, January-March, etc.)</p>\n</li>\n<li>\n<p>Which area of internship you would like to be considered for.</p>\n</li>\n</ul>\n<p>Please email resume and cover letter to\n<a href=\"mailto:interns@numenta.com\">interns@numenta.com</a>. Numenta is an equal\nopportunity employer supporting workforce diversity.</p>\n"}

/***/ },
/* 859 */
/***/ function(module, exports) {

	module.exports = {"anchor":"careers-research-intern","date":"2016/01/22","email":"interns@numenta.com","sort":1,"title":"Research Internship","body":"<p><strong><em>IMPORTANT NOTE:</em></strong> <em>Numenta is unable to consider internship applications\nfrom international applicants unless they currently enrolled in a US University,\nare US Citizens, or hold a Green Card or are NAFTA (Mexican or Canadian)\ncitizens.</em></p>\n<p>The Research Group at Numenta is looking for outstanding PhD students or other\nresearch scientists for internship opportunities during the Fall - Winter\n2016/2017 time frame (note that we have filled our Summer 2016 positions and are\nno longer accepting applications for this time period). We are looking for\ncandidates with expertise in Machine Learning, Computational Neuroscience and/or\nNatural Language Processing. Preference given to candidates with experience in\none or more of the following areas: sequence learning, natural language\nprocessing, neuron modeling, and computational models of cortex.</p>\n<p>The commitment is for 3 to 4 months full time (longer appointments up to one\nyear may be possible). Numenta’s research interns will get exposure to all\naspects of Hierarchical Temporal Memory (HTM) learning algorithms, participate\nin leading edge research in computational neuroscience, and get full clearance\nto publish their work.</p>\n<h4>What you can expect to learn and how you might contribute</h4>\n<ul>\n<li>\n<p>The challenges of designing and implementing detailed models of cortical\nfunction that can be applied to real-world problems</p>\n</li>\n<li>\n<p>Gain experience solving hard problems in domains such as natural language\nprocessing, streaming analytics, and/or sensorimotor inference</p>\n</li>\n<li>\n<p>Participate in designing functional models of Layers 2/3, 4, 5, and 6,\nthalamocortical circuits, feedback circuits, and sensorimotor processing</p>\n</li>\n<li>\n<p>Learn how to contribute to a top open source project, and improve your\nsoftware engineering skills</p>\n</li>\n<li>\n<p>Obtain a detailed understanding of Hierarchical Temporal Memory</p>\n</li>\n</ul>\n<h4>Desired qualifications</h4>\n<ul>\n<li>\n<p>Currently enrolled in a MS or PhD program, or a recent graduate, or equivalent\nresearch experience</p>\n</li>\n<li>\n<p>Strong research background in machine learning or machine intelligence</p>\n</li>\n<li>\n<p>Strong research background in computational neuroscience</p>\n</li>\n<li>\n<p>Excellent algorithmic problem solving skills, and the ability to implement\nsolutions in Python, C/C++, Java, etc.</p>\n</li>\n<li>\n<p>Established track record of publications in leading peer reviewed conferences\nand journals</p>\n</li>\n<li>\n<p>Working knowledge of HTM algorithms a plus</p>\n</li>\n<li>\n<p>Excellent written and verbal communication skills, and the ability to work in\na team oriented environment</p>\n</li>\n<li>\n<p>A belief that the best way to build intelligent machines is to understand the\ncortex</p>\n</li>\n</ul>\n<h4>How To Apply – Research Internship</h4>\n<p>Qualified applicants should send the following:</p>\n<ul>\n<li>\n<p>Cover letter describing their specific interest in Numenta.</p>\n</li>\n<li>\n<p>Resume, including list of relevant course work.</p>\n</li>\n<li>\n<p>Period of the internship (typically 3 to 4 months fulltime.)</p>\n</li>\n<li>\n<p>Please email resume and cover letter to <t render=\"hbs\">\n<a href=\"mailto:%7B%7Bdocument.email%7D%7D\">{{document.email}}</a></t>. Numenta is an equal\nopportunity employer supporting workforce diversity.</p>\n</li>\n</ul>\n"}

/***/ },
/* 860 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "33933b80131b88d9a73aa81789f2c915.png";

/***/ },
/* 861 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "46268e58b679f51dc6c9ae76398a7883.jpg";

/***/ },
/* 862 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e76c4d14fe343a4b40f1e371ce0709b4.jpg";

/***/ },
/* 863 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7b4f6bd284586e0177ffea8371f64246.jpg";

/***/ },
/* 864 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d1d9b19369640b7eec2b1a1069f669d2.jpg";

/***/ },
/* 865 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6b4efc8e9e3d23dd24fe9ef10d3ec6f6.jpg";

/***/ },
/* 866 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4dafcd0c423946b1e538a3608e610ecb.jpg";

/***/ },
/* 867 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(629);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class CareersPage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Careers, Team & Contact' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	
	}
	
	exports.default = CareersPage;
	module.exports = exports['default'];

/***/ },
/* 868 */
/***/ function(module, exports) {

	module.exports = {"body":"<p>Thanks for contacting Numenta, we will be back in touch with you soon!</p>\n"}

/***/ },
/* 869 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2014/03/26","event":{"when":{"begin":"2014/03/26","end":"2014/03/26"},"where":{"desc":"Moscone Center Booth 100","city":"San Francisco","state":"CA","country":"USA","web":"https://aws.amazon.com/aws-summit-2014/san-francisco/"}},"featured":false,"image":"../images/image.png","org":"Event","tags":"grok it analytics aws amazon web services summit sf san francisco 2014","title":"AWS Summit San Francisco","body":""}

/***/ },
/* 870 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "44562d4b30aa421af14d876d832a5681.png";

/***/ },
/* 871 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5d8e4138e05356b6ff0256cb7ddc5a6d.png";

/***/ },
/* 872 */
798,
/* 873 */
/***/ function(module, exports) {

	module.exports = {"author":"Matthew Taylor","brief":null,"date":"2014/05/03","event":{"when":{"begin":"2014/05/03","end":"2014/05/04"},"where":{"desc":"Pinger, Inc.","city":"San Jose","state":"CA","country":"USA","web":"http://numenta.org/events.html#nupic_spring_2014_hackathon"}},"featured":false,"image":"../images/image.png","org":"Open Source Manager","tags":"nupic spring 2014 hackathon numenta platform for intelligent computing open source","title":"NuPIC Spring 2014 Hackathon","body":""}

/***/ },
/* 874 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2014/05/05","event":{"when":{"begin":"2014/05/05","end":"2014/05/07"},"where":{"desc":"Gerding Theater at the Armory","city":"Portland","state":"OR","country":"USA","web":"http://monitorama.com/"}},"featured":false,"image":"../images/image.png","org":"Event","tags":"grok it analytics monitorama 2014","title":"Monitorama","body":""}

/***/ },
/* 875 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4fb728ec5ef9682195f2af54978c70aa.png";

/***/ },
/* 876 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2014/07/09","event":{"when":{"begin":"2014/07/09","end":"2014/07/10"},"where":{"desc":"Javits Center","city":"New York","state":"NY","country":"USA","web":"https://aws.amazon.com/aws-summit-2014/"}},"featured":false,"image":"../images/image.png","org":"Event","tags":"grok it analytics aws amazon web services summit ny 2014","title":"AWS Summit New York","body":""}

/***/ },
/* 877 */
870,
/* 878 */
871,
/* 879 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":null,"date":"2014/08/20","event":{"what":"Understanding Cortical Principles and Building Intelligent Machines","when":{"begin":"2014/08/20 15:10","end":"2014/08/20 15:10"},"where":{"desc":"Sainte Claire Hotel","city":"San Jose","state":"CA","country":"USA","web":"http://www.cognitivecomputingforum.com/"},"who":"Subutai Ahmad","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"VP Research","tags":"numenta grok cognitive computing forum san jose 2014","title":"Cognitive Computing Forum","body":"<h4>Video:</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/k_p58LbXd4Y\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n"}

/***/ },
/* 880 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "50e7d0c2a48d312f35f3d71e95124631.png";

/***/ },
/* 881 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b148e4ac3429edf766b436d53721c7e1.png";

/***/ },
/* 882 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":null,"date":"2014/10/02","event":{"what":"Modeling Cortical Layers","when":{"begin":"2014/10/02","end":"2014/10/02"},"where":{"desc":"Kirchhoff Institute for Physics","city":"Heidelberg","state":"Baden-Württemberg","country":"Germany","web":"https://brainscales.kip.uni-heidelberg.de/"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-founder","tags":"brainscales neuromorphic computing conference jeff hawkins model cortical layers","title":"Frontiers in Neuromorphic Computing Conference","body":""}

/***/ },
/* 883 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d96b679b69da7d15ca7aba5ea39f80b3.png";

/***/ },
/* 884 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f49d6dc038177eb087bc9ae4234be19c.png";

/***/ },
/* 885 */
/***/ function(module, exports) {

	module.exports = {"ignored":true,"author":"Scott Purdy","brief":null,"date":"2014/10/15","event":{"what":"Building an Anomaly Service for AWS","when":{"begin":"2014/10/15","end":"2014/10/15"},"where":{"desc":"AirBnB","city":"San Francisco","state":"CA","country":"USA"},"who":"Scott Purdy","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Engineering Manager","tags":"numenta grok event advanced aws meetup lightning talk anomlay service","title":"Advanced AWS Meetup Lightning Talk","body":""}

/***/ },
/* 886 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3c7878d6c7ab19fa916ae5845b02e256.png";

/***/ },
/* 887 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "99677c19b13915036e83da4e31ef103e.png";

/***/ },
/* 888 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2014/10/17","event":{"when":{"begin":"2014/10/17","end":"2014/10/17"},"where":{"desc":"Numenta","city":"Redwood City","state":"CA","country":"USA","web":"https://www.eventbrite.com/e/numenta-training-workshop-registration-12898835765"}},"featured":true,"image":"../images/image.png","org":"Event","tags":"numenta training workshop htm hierarchical temporal memory october 2014","title":"Numenta Training Workshop","body":"<p>Numenta is offering a half-day technical workshop to provide training for\ndevelopers or potential customers/partners interested in our technology.\nWorkshop sessions will review Numenta theory, technology, and applications\n– and provide an overview for how to get started on your own projects using\nNumenta technology. The majority of content will be technical in nature and\nis intended for a developer/technical audience. Training curriculum will be\nfollowed by a networking reception.</p>\n<p>Who should attend? Developers/technically-minded people interested in\nNumenta technology. A substantial portion of our content will focus on\nintroducing the basics of our technology.</p>\n<h2>Workshop Videos</h2>\n<h4>Principles of Hierarchical Temporal Memory (HTM): Foundations of Machine Intelligence</h4>\n<p>Jeff Hawkins, Co-Founder</p>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/6ufPpZDmPKA\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<p>Q &amp; A Session</p>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/EU2Vm-VlfEk\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Applications of Hierarchical Temporal Memory (HTM)</h4>\n<p>Chetan Surpur, Software Engineer</p>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/900nFOfzp2E\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Getting Started With Numenta Technology</h4>\n<p>Celeste Baranski, VP Engineering</p>\n<p>Matt Taylor, Open Source Community Flag-Bearer</p>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/5HD9NnXpRus\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Sparse Distributed Representations: Our Brain’s Data Structure</h4>\n<p>Subutai Ahmad, VP Research</p>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/LbZtc_zWBS4\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n"}

/***/ },
/* 889 */
798,
/* 890 */
/***/ function(module, exports) {

	module.exports = {"author":"Matthew Taylor","brief":null,"date":"2014/10/18","event":{"when":{"begin":"2014-10-18 10:00","end":"2014-10-19 18:00"},"where":{"desc":"Pinger Inc","city":"San Jose","state":"CA","country":"USA","web":"http://numenta.org/events.html#nupic_fall_2014_hackathon"}},"featured":false,"image":"../images/image.png","org":"Open Source Manager","tags":"nupic numenta platform intelligent computing fall 2014 hackathon san jose california","title":"NuPIC Fall 2014 Hackathon","body":"<p>Please RSVP!</p>\n<p><a href=\"http://www.meetup.com/numenta/events/202402962/\">http://www.meetup.com/numenta/events/202402962/</a></p>\n"}

/***/ },
/* 891 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":null,"date":"2014/10/30","event":{"what":"What the Brain Can Tell Us About the Future of Computing","when":{"begin":"2014/10/30","end":"2014/10/30"},"where":{"desc":"T.J. Watson Research Center","city":"Yorktown Heights","state":"NY","country":"USA"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-Founder","tags":"ibm research cognitive systems colloquium jeff hawkins numenta machine intelligence cognitive computing","title":"IBM Research Cognitive Systems Colloquium","body":"<h4>Event Video</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/0SroCjwkSFc\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Interview Video with Jeff Hawkins</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/OS55dojA-PY\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n"}

/***/ },
/* 892 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "abc04f7761854013e61932e33e650947.png";

/***/ },
/* 893 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2014/11/11","event":{"when":{"begin":"2014/11/11","end":"2014/11/13"},"where":{"desc":"The Venetian, Booth 648","city":"Las Vegas","state":"NV","country":"USA","web":"https://reinvent.awsevents.com/"}},"featured":false,"image":"../images/image.png","org":"Event","tags":"grok it analytics aws reinvent 2014","title":"AWS re:Invent","body":""}

/***/ },
/* 894 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "200a325aca5502c57037db676f74fe2d.png";

/***/ },
/* 895 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "16162b73581f7063186ca762310dcd0e.png";

/***/ },
/* 896 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b046d5a5ea2a3d9f07ff9864c0811228.png";

/***/ },
/* 897 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":null,"date":"2014/12/04","event":{"when":{"begin":"2014/12/04 14:00","end":"2014/12/04 19:30"},"where":{"desc":"Hero City at Draper University","city":"San Mateo","state":"CA","country":"USA","web":"http://svforum.org/Education-Tech-Conference/iHuman-Future-Minds-and-Machines"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-Founder","tags":"sv silicon valley forum ihuman future of minds and machines jeff hawkins numenta machine intelligence","title":"SV Forum iHuman - The Future of Minds and Machines","body":"<h3>Video</h3>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/RojcnwnEzSQ\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n"}

/***/ },
/* 898 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "24e5235a1df254df6a1377f174afe5d0.png";

/***/ },
/* 899 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "77a676d6eb59a45534a1930e638b855b.png";

/***/ },
/* 900 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":null,"date":"2015/02/17","event":{"what":"Streaming Analytics - It’s Not The Same Game","when":{"begin":"2015/02/17","end":"2015/02/20"},"where":{"desc":"San Jose Convention Center","city":"San Jose","state":"CA","country":"USA","web":"http://strataconf.com/big-data-conference-ca-2015/public/schedule/detail/38703"},"who":"Subutai Ahmad","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"VP Research","tags":"strata hadoop world big data subutai ahmad numenta machine intelligence streaming analytics","title":"Strata + Hadoop World 2015","body":"<p><strong>Streaming Analytics: It’s Not The Same Game</strong></p>\n<h4>Slides</h4>\n<p>Link:\n<a href=\"http://www.slideshare.net/numenta/streaming-analytics-its-not-the-same-game\">Streaming Analytics: It’s Not The Same Game</a>\nfrom <a href=\"//www.slideshare.net/numenta\">Numenta</a>.</p>\n<div class=\"video-container media-border\">\n  <iframe src=\"//www.slideshare.net/slideshow/embed_code/45044014\" width=\"425\" height=\"355\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"//www.slideshare.net/numenta/streaming-analytics-its-not-the-same-game\" title=\"Streaming Analytics: It&#x27;s Not the Same Game\" target=\"_blank\">Streaming Analytics: It&#x27;s Not the Same Game</a> </strong> from <strong><a href=\"//www.slideshare.net/numenta\" target=\"_blank\">Numenta</a></strong> </div>\n</div>\n<h4>Talk Abstract</h4>\n<p>We are witnessing an explosion of sensors and machine generated data. Every\nserver, every building, and every device generates a continuous stream of\ninformation that is ever changing and potentially valuable. The existing big\ndata paradigm requires storing data for batch analysis, and extensive modeling\nby a human expert, prior to deployment. This is incredibly inefficient and\ncannot scale. Instead there is a growing need to rapidly create adaptive models\nthat accept streaming data sources and can take instant action.</p>\n<p>In this talk I will describe a new paradigm for streaming data algorithms, based\non recent neuroscience findings and on the computational properties of the\nneocortex.  These systems are highly automated, adapt to changing statistics,\nand naturally deal with temporal data streams. They require no batch training\nand custom models can be deployed on the fly.  Many of the core ideas have been\nimplemented in the open source project NuPIC, and validated in commercial\napplications.  Given the massive increase in the number of data sources, a\ngeneral-purpose automated approach is the only scalable way to effectively\nanalyze and act on continuously streaming information.</p>\n"}

/***/ },
/* 901 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9fc8aa6362ee4eba6e5e51f57a0c313e.png";

/***/ },
/* 902 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":null,"date":"2015/02/23","event":{"when":{"begin":"2015/02/23","end":"2015/02/25"},"where":{"desc":"Hyatt Regency Tamaya","city":"Santa Ana Pueblo","state":"NM","country":"USA","web":"http://nice.sandia.gov/"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-Founder","tags":"numenta jeff hawkins speaking sandia national laboratories neuro inspired computational elements workshop 2015","title":"Sandia National Laboratories Neuro-Inspired Computational Elements Workshop 2015","body":"<h3>Sandia National Laboratories</h3>\n<p><strong>Neuro-Inspired Computational Elements Workshop 2015</strong></p>\n<h3>Video Links</h3>\n<p>Click link title to play.</p>\n<ul>\n<li>\n<p><a href=\"http://digitalops.sandia.gov/Mediasite/Play/515d11e3d7404d608c3b50ba4e8496981d\">Reverse Engineering the Neocortex (49:00)</a>,\nJeff Hawkins, Numenta.</p>\n</li>\n<li>\n<p><a href=\"http://digitalops.sandia.gov/Mediasite/Play/1365ba62685c4c91a1cb7143c1e321cc1d\">IBM Cortical Learning Center (33:18)</a>,\nWinfried Wilcke, IBM CLC.</p>\n</li>\n</ul>\n<h3>Abstract</h3>\n<p><strong>Beyond von Neumann/Turing Architecture and Moore’s Law Limits</strong></p>\n<p>Conventional, stored program architecture systems are designed for algorithmic\nand exact calculations.  However, the problems with highest impact involve\nlarge, noisy, incomplete, “natural” data sets that do not lend themselves to\nconvenient solutions by current systems.  Our task is to build upon the\nconvergence – cresting waves among neuroscience, microelectronics and\ncomputational systems to develop a new architecture designed to handle these\nnatural data sets.</p>\n"}

/***/ },
/* 903 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":null,"date":"2015/03/05","event":{"what":"Maintaining Stable Perception During Active Exploration","when":{"begin":"2015/03/05","end":"2015/03/08"},"where":{"desc":"Hilton Salt Lake City Center","city":"Salt Lake City","state":"UT","country":"USA","web":"http://www.cosyne.org/c/index.php?title=Cosyne_15"},"who":"Yuwei Cui, Subutai Ahmad, Chetan Surpur, and Jeff Hawkins","why":"Authors"},"featured":false,"image":"../images/image.png","org":"VP Research","tags":"computational systems neuroscience cosyne 2015 numenta nupic machine intelligence","title":"Computational and Systems Neuroscience (Cosyne) 2015","body":"<h4>Title</h4>\n<p><strong>Maintaining Stable Perception During Active Exploration</strong></p>\n<h4>Abstract</h4>\n<p>Our sensory input changes dramatically as the result of our own behavior,\nincluding eye movements, head turns, and body movements. Despite these rapid\nsensory changes, our perception of the world is amazingly stable, and we can\nreliably discriminate between different patterns. This suggests that we learn\nstable but distinct representations through active exploration. There is reason\nto believe that efference copy, an internal copy of the motor signal, is\ncritical for such sensorimotor learning. However the exact brain mechanisms\nunderlying these computations remain unknown. In this study, we propose a\ncomputational model of sensorimotor learning and prediction. Sparse distributed\nrepresentations of visual scenes are built up incrementally by pooling together\npredictable temporal transitions during exploration. To enable accurate\npredictions during active exploration, we modified the Hierarchical Temporal\nMemory sequence-learning algorithm to use both sensory inputs and efference copy\nsignals. To enable forming stable representations of scenes, we implemented a\nnovel temporal pooling learning rule that allows downstream neurons to form\nconnections with upstream neurons that are predicting correctly.</p>\n<p>The overall model is unsupervised and the architecture is consistent with\nseveral important aspects of thalamocortical circuits. We tested the algorithm\non a set of simulated environments, as well as a robotics test bed. In both\ncases the model achieves two desired properties: 1) prediction of future sensory\ninputs during behavior, and 2) emergence of stable and distinct representations\nfor learned patterns. After learning, the sparse activity of cells in downstream\nregions is stable despite sensor movements, while different images lead to\ndistinct representations. These results demonstrate how efference copy can be\nused in sensory cortex to make predictions during behavior. We propose temporal\npooling as a novel computational principle for forming invariant representations\nduring unsupervised learning and active exploration.</p>\n"}

/***/ },
/* 904 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "669d4294c03eb1aeda3d8e2a2032fc17.png";

/***/ },
/* 905 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "96ea273775426b06230a610474000d09.png";

/***/ },
/* 906 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "607c167c3e2c10106fb5c0d5581caedf.png";

/***/ },
/* 907 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f063db3a2cb0865dd7ec220f5ef063a2.png";

/***/ },
/* 908 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":null,"date":"2015/03/17","event":{"what":"What the Brain Says About Machine Intelligence","when":{"begin":"2015/03/17 19:00","end":"2015/03/17 21:00"},"where":{"desc":"Cornell Tech","city":"New York","state":"NY","country":"USA","web":"http://www.meetup.com/numenta/events/220895892/"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-Founder","tags":"meetup nyc new york city cornell tech what the brain says about machine intelligence jeff hawkins numenta","title":"What the Brain Says About Machine Intelligence NYC Meetup","body":"<h3>Summary</h3>\n<p>Come hear Jeff Hawkins speak about the machine intelligence work being done at\nNumenta in NYC. This Meetup is an hour-long presentation by Jeff at 7PM,\nfollowed by another hour of networking and socialization. Anyone is welcome to\nattend, but you must RSVP. Anyone showing up at the door without an RSVP will be\nturned away.</p>\n<h3>Abstract</h3>\n<p>The neocortex is the only example we have of a cognitive system. I will argue\nthat understanding the principles of how the neocortex works and then building\nmachines that work on those principles is the only way to build intelligent\nmachines. I will describe the progress we are making in understanding how the\nneocortex works and demonstrate how we are turning that knowledge into useful\ntechnology and products.</p>\n<h3>Biography</h3>\n<p>Jeff Hawkins is an engineer, serial entrepreneur, scientist, inventor, and\nauthor. He was a founder of two mobile computing companies, Palm and Handspring,\nand was the architect of many computing products such as the PalmPilot and Treo\nsmartphone. Throughout his life Jeff has also had a deep interest in\nneuroscience and theories of the neocortex. In 2002 he founded the Redwood\nNeuroscience Institute, a scientific institute focused on understanding how the\nneocortex processes information. The institute is now located at U.C. Berkeley.\nIn 2004 he wrote the book On Intelligence, which describes progress on\nunderstanding the neocortex. In 2005 he co-founded Numenta, a startup company\nbuilding a technology based on neocortical theory. It is his hope that Numenta\nwill play a catalytic role in the emerging field of machine intelligence. Jeff\nHawkins earned his B.S. in electrical engineering from Cornell University\nin 1979. He was elected to the National Academy of Engineering in 2003.</p>\n<h3>About Numenta</h3>\n<p>Numenta, Inc. was formed in 2005 to develop biologically-inspired machine\nintelligence technology for both commercial and scientific use.</p>\n<h3>What is NuPIC?</h3>\n<p>NuPIC, the Numenta Platform for Intelligent Computing, comprises a set of open\nsource learning algorithms that were first described in a white paper published\nby Numenta in 2009. The learning algorithms faithfully capture how layers of\nneurons in the neocortex learn. The white paper has been translated into seven\nlanguages by volunteers and has generated considerable interest among developers\nand research scientists.</p>\n"}

/***/ },
/* 909 */
798,
/* 910 */
/***/ function(module, exports) {

	module.exports = {"author":"Matthew Taylor","brief":null,"date":"2015/05/30","event":{"when":{"begin":"2015/05/30 10:00","end":"2015/05/31 20:00"},"where":{"desc":"Cornell Tech","city":"New York City","state":"NY","country":"USA","web":"http://www.meetup.com/numenta/events/220422020/"}},"featured":false,"image":"../images/image.png","org":"Open Source Manager","tags":"nupic spring 2015 hackathon numenta machine intelligence htm hierarchical temporal memory","title":"NuPIC Spring 2015 Hackathon NYC","body":"<h3>Please RSVP</h3>\n<p>Please RSVP on our <a href=\"http://Meetup.com\">Meetup.com</a> info page:</p>\n<ul>\n<li>Meetup: <a href=\"http://www.meetup.com/numenta/events/220422020/\">http://www.meetup.com/numenta/events/220422020/</a></li>\n</ul>\n<h3>More Info</h3>\n<ul>\n<li>NuPIC Event Page: <a href=\"http://numenta.org/events/hackathon/2015/may/\">http://numenta.org/events/hackathon/2015/may/</a></li>\n</ul>\n"}

/***/ },
/* 911 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "028f4cdc8745f7a32bed5035b033e12f.png";

/***/ },
/* 912 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":null,"date":"2015/06/01","event":{"when":{"begin":"2015/06/01","end":"2015/06/04"},"where":{"desc":"TBD","city":"Silicon Valley","state":"CA","country":"USA","web":"http://institute.orange.com/sessions/2015-2016-program"},"who":"Donna Dubinsky","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"CEO, Co-Founder","tags":"orange institute 14 silicon valley redefine business donna dubinsky numenta machine intelligence","title":"Orange Institute 14 How Silicon Valley is Redefining Business Again","body":"<p>Disruption is the new norm. Many of us have watched the Digital Economy remake\nthe IT and tech world, from mainframes to mobile phones. At Orange Institute, we\nare convinced that this time it’s fundamentally different: Digital is\ntransforming everything, not just the Tech world. Entertainment is always the\nfirst to feel Technology’s shock. It continues to be the test-bed today. But for\nthe first time - as never before - all industries are impacted.</p>\n<p>Orange Institute’s Silicon Valley session explores how technology is\nrestructuring industries and the companies within, and helping them adapt to\nchanging customer behaviors. From the drive toward network virtualization,\nvirtual reality, mobile payments, and Cloud technology, to new device and\nconsumtion patterns, the scale of these incursions is explosive.</p>\n<p>Topics included in this session (preliminary):</p>\n<ul>\n<li>Corporate interaction with Startups</li>\n<li>Machine learning / Deep Learning</li>\n<li>Self-driving Cars, Robots, and Smart Homes</li>\n<li>The Full Stack: Silicon Valley’s secret formula for Disruption</li>\n<li>Studio System to Ecosystem: Hollywood confronts the YouTube Effect</li>\n<li>Regulating Disruption: How Silicon Valley challenges the rules</li>\n<li>Neuroscience meets Computer Science</li>\n<li>The Virtual Reality Rollout</li>\n</ul>\n"}

/***/ },
/* 913 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"We are witnessing an explosion of sensors and machine generated data. Every server, every building, and every device generates a continuous stream of information that is ever changing and potentially valuable","date":"2015/08/18","event":{"what":"How Cognitive Computing Will Drive the Future of Analytics","when":{"begin":"2015/08/18","end":"2015/08/20"},"where":{"desc":"San Jose Convention Center","city":"San Jose","state":"CA","country":"USA","web":"http://smartdata2015.dataversity.net/"},"who":"Subutai Ahmad","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"VP Research","tags":"dataversity smart data conference san jose 2015 subutai ahmad numenta htm hierarchical temporal memory cognitive computing","title":"Dataversity Smart Data Conference San Jose 2015","body":"<p>A conference about Cognitive Computing, Internet of Things, and other current\nhot topics in Silicon Valley.</p>\n<p>Register with our discount code: <strong>NUMENTA</strong></p>\n<h3>Opening Keynote</h3>\n<p>Come see Subutai Ahmad, VP of Research for Numenta, speak on how cognitive\ncomputing will drive the future of analytics.</p>\n<ul>\n<li>Wednesday, August 19, 2015</li>\n<li>09:00 AM - 09:30 AM</li>\n<li>Level: \tBusiness/Strategic</li>\n</ul>\n<blockquote>\n<p>We are witnessing an explosion of sensors and machine generated data. Every\nserver, every building, and every device generates a continuous stream of\ninformation that is ever changing and potentially valuable. The existing big\ndata paradigm requires storing data for batch analysis, and extensive modeling\nby a human expert, prior to deployment. This is incredibly inefficient and\ncannot scale. Instead there is a growing need to rapidly create adaptive\nmodels that accept streaming data sources and can take instant action.</p>\n<p>In this talk I will describe a new paradigm for streaming data algorithms,\nbased on recent neuroscience findings and on the computational properties of\nthe neocortex. These systems are highly automated, adapt to changing\nstatistics, and naturally deal with temporal data streams. They require no\nbatch training and custom models can be deployed on the fly. Many of the core\nideas have been implemented in the open source project NuPIC, and validated in\ncommercial applications. Given the massive increase in the number of data\nsources, a general-purpose automated approach is the only scalable way to\neffectively analyze and act on continuously streaming information.</p>\n</blockquote>\n<p>Subutai Ahmad is the VP of Research at Numenta, a company focused on Machine\nIntelligence. Our technology, Hierarchical Temporal Memory (HTM), is a detailed\ncomputational framework based on principles of the brain. Our HTM learning\nalgorithms are available through the NuPIC open source community and are\nembedded in our commercial streaming analytics applications.</p>\n<p>Subutai’s experience includes computational neuroscience, machine learning,\ncomputer vision and building real time commercial systems. He has previously\nserved as VP Engineering at YesVideo where he helped grow the company from a\nthree-person start-up to a leader in automated digital media authoring. In 1997,\nSubutai co-founded ePlanet Interactive, a spin-off from Interval Research.\nePlanet developed the IntelPlay Me2Cam, the first computer vision product\ndeveloped for consumers.</p>\n<p>Subutai holds a B.S. in Computer Science from Cornell, and a Ph.D in Computer\nScience from the University of Illinois at Urbana-Champaign.</p>\n<h3>Meet Numenta</h3>\n<p>The Numenta team would love to meet you, answer any questions about our HTM\ntechnology, discuss cognitive computing, and show you around our intelligent\napplications.</p>\n<p>Open Hours:</p>\n<ul>\n<li>Tue Aug 18: 4:00pm - 6:30pm</li>\n<li>Wed Aug 19: 2:15pm - 8:00pm</li>\n</ul>\n<p>App Demos:</p>\n<ul>\n<li><a href=\"http://grokstream.com\">Grok</a></li>\n<li><a href=\"/htm-for-stocks/\">HTM for Stocks</a></li>\n<li>Rogue Behavior detection:\n<a href=\"/assets/pdf/whitepapers/Rogue%20Behavior%20Detection%20White%20Paper.pdf\">Whitepaper</a> (PDF),\n<a href=\"https://github.com/numenta/nupic.rogue\">Source Code</a></li>\n<li>GPS tracking:\n<a href=\"/assets/pdf/whitepapers/Geospatial%20Tracking%20White%20Paper.pdf\">Whitepaper</a> (PDF),\n<a href=\"https://github.com/numenta/nupic.geospatial\">Source Code</a></li>\n<li><a href=\"http://numenta.org\">NuPIC</a></li>\n</ul>\n"}

/***/ },
/* 914 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "01955fb277318bcdad7ebd26723f8ceb.png";

/***/ },
/* 915 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "215548f3b11f8a0c37196fa5a2d70827.png";

/***/ },
/* 916 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"The Berkeley Symposium on Energy Efficient Electronic Systems brings together researchers from around the world who are working on breakthrough improvements in energy efficiency for information processing systems","date":"2015/10/01","event":{"when":{"begin":"2015/10/01","end":"2015/10/02"},"where":{"desc":"Sutardja Dai Hall @ UC Berkeley","city":"Berkeley","state":"CA","country":"USA","web":"http://www.e3s-center.org/events/e3s-symposium/"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-Founder","tags":"numenta jeff hawkins berkeley symposium energy efficient electronic systems htm hierarchical temporal memory","title":"Fourth Berkeley Symposium on Energy Efficient Electronic Systems","body":"<p>The technical program consists of invited and contributed papers. Complementing\nthe oral presentation sessions is a poster session.</p>\n<p>The 2015 Organizing Committee is soliciting contributed papers on advances in\nthe following areas that will contribute to radical reduction in power\nconsumption:</p>\n<ul>\n<li>Ultra Low Voltage Nanoelectronics</li>\n<li>Milli-Volt Nanomechanical Logic</li>\n<li>Ultra-Low Energy Spintronics Optical Chip Scale Interconnects</li>\n<li>Low Voltage CMOS Circuits and Architectures</li>\n<li>Energy Efficient Computing Systems</li>\n</ul>\n<h3>The Symposium</h3>\n<p>The Berkeley Symposium on Energy Efficient Electronic Systems brings together\nresearchers from around the world who are working on breakthrough improvements\nin energy efficiency for information processing systems. The goal is to foster\ncloser cooperation and collaborations among the researchers working in this\ndomain of technology.</p>\n<p>Established in 2009, it is a forum for speakers, from academia, industry, and\ngovernment laboratories, to share their perspectives, and discuss issues and\napproaches, enabling the attendees to better understand this area from both\nabove and below them on the food chain. We have a grand scope in mind, extending\nfrom new low-power nanoelectronic devices, through circuit design, chip-scale\narchitecture, short-range interconnects, long-range interconnect, networks,\nsoftware, storage systems, servers, data centers and supercomputers.</p>\n<p>IEEE Electron Device Society became a technical co-sponsor in 2013.</p>\n"}

/***/ },
/* 917 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3e7da25ff53acd7f330c3a7f5c202b19.png";

/***/ },
/* 918 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c67bfb171e642e67bafd1d4aea66efaa.png";

/***/ },
/* 919 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"We are convening the leading venture and growth companies from around the world, highly curated by the GSV TEAM, to gather in Silicon Valley. We don’t want incremental ideas","date":"2015/10/07","event":{"when":{"begin":"2015/10/07","end":"2015/10/09"},"where":{"desc":"GSVlabs","city":"Redwood City","state":"CA","country":"USA","web":"http://gsvlabs.com/gsv-pioneer/"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-Founder","tags":"numenta jeff hawkins nupic htm machine intelligence gsv labs gsvlabs pioneer summit","title":"GSVlabs Pioneer Summit 2015","body":"<p>We are convening the leading venture and growth companies from around the world,\nhighly curated by the GSV TEAM, to gather in Silicon Valley. We don’t want\nincremental ideas. Our main mission is to help accelerate entrepreneurs’ efforts\nto make a significant impact on industries and societies.</p>\n<p>In the spirit of Davos and TED, we want to explore the ideas that will transform\nand improve the world, yet focus on tangible companies that entrepreneurs are\nbuilding through blood, sweat and tears.</p>\n<p>Our goal is not to be the biggest summit, but to be the most impactful. We bring\ntogether the key people driving growth in the Global Silicon Valley. The\nPioneers at our Summit believe that we can build companies that are\ntransformative, global and inclusive.</p>\n"}

/***/ },
/* 920 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "656e6f50dac5f745e33a749d8e0d27ef.png";

/***/ },
/* 921 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0e1d5a50c59364fa86bf8973c774661c.png";

/***/ },
/* 922 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"Get inspired. Learn about what is next in technology. Straight from tech leaders, startup founders and visionaries. Hear the stories of innovators who are building companies that change our life, our work and our business.","date":"2015/10/22","event":{"what":"The Future of Machine Intelligence","when":{"begin":"2015/10/22","end":"2015/10/23"},"where":{"desc":"Municipal Arena","city":"Kansas City","state":"MO","country":"USA","web":"http://www.computemidwest.com/"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-Founder","tags":"compute midwest 2015 jeff hawkins numenta future of machine intelligence imagine the future","title":"Compute Midwest 2015 - Imagine the Future","body":"<h3>Imagine The Future</h3>\n<p>Get inspired: learn about what’s next in technology - straight from tech\nleaders, startup founders &amp; visionaries.</p>\n<p>Hear the stories of innovators who are building companies that change our life,\nour work &amp; our business.</p>\n<p>Connect with 500+ forward thinking tech minds, exchange/build new ideas &amp; gather\ntakeaways that can move your career/company forward!</p>\n"}

/***/ },
/* 923 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c0c66e69b9d84e3cac4e731e42c05372.png";

/***/ },
/* 924 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"In the last few years, optical techniques have emerged that allow near-simultaneous acquisition of neuronal activity at the whole-brain level and with single-cell resolution","date":"2015/11/01","event":{"when":{"begin":"2015/11/01","end":"2015/11/04"},"where":{"desc":"HHMI Janelia Research Campus","city":"Ashburn","state":"VA","country":"USA","web":"https://www.janelia.org/you-janelia/conferences/emerging-tools-acquisition-and-interpretation-whole-brain-functional-data"},"who":"Subutai Ahmad","why":"Invited Participant"},"featured":false,"image":"../images/image.png","org":"VP Research","tags":"subutai ahmad numenta htm machine intelligence janelia research emerging tools whole brain functional data","title":"HHMI Janelia Emerging Tools for Acquisition and Interpretation of Whole-Brain Functional Data","body":"<p>In the last few years, optical techniques have emerged that allow\nnear-simultaneous acquisition of neuronal activity at the whole-brain level and\nwith single-cell resolution for small model organisms. Given the enormous\ndensity of interconnectivity of neurons in the brain, these techniques bear\ngreat potential for advancing our understanding of how the information\nunderlying behavior is represented and processed by neuronal networks in a\ndynamic fashion and at the whole-brain level.  At the same time, these new tools\nhave transitioned neuroscience into the field of “Big Data”, where terabytes of\ndata are produced per microscope and day. It is expected that major\nbreakthroughs in coming years will result from making sense of these data sets.\nThis calls for the application of advanced machine learning, statistics tools\nand mathematical modeling as well as an IT infrastructure capable of handling\nsuch data sets efficiently. This meeting will bring together experts and\npioneers in these fields to identify synergies and new opportunities and to\ndiscuss the main challenges moving forward.</p>\n"}

/***/ },
/* 925 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c72032f31063e96d30db8524a06b8f8e.png";

/***/ },
/* 926 */
823,
/* 927 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0d981d48ae07394331be8e3dfb6ca851.png";

/***/ },
/* 928 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f4f7c3bc1f22708fc0b2238dcc6e1863.png";

/***/ },
/* 929 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"Subutai Ahmad, VP Research at Numenta, speaks at MLConf SF on Real-time Anomaly Detection for Real-time Data Needs. MLconf gathers communities to discuss the recent research and application of Algorithms, Tools, and Platforms to solve the hard problems that exist within","date":"2015/11/13","event":{"what":"Real-time Anomaly Detection for Real-time Data Needs","when":{"begin":"2015/11/13","end":"2015/11/13"},"where":{"desc":"Julia Morgan Ballroom","city":"San Francisco","state":"CA","country":"USA","web":"http://mlconf.com/events/san-francisco-ca/"},"who":"Subutai Ahmad","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"VP Research","tags":"subutai ahmad numenta htm real time streaming data anomaly detection mlconf machine learning conference san francisco sf 2015","title":"MLConf Machine Learning Conference San Francisco 2015","body":"<h3>THE MACHINE LEARNING CONFERENCE</h3>\n<p>MLconf gathers communities to discuss the recent research and application of\nAlgorithms, Tools, and Platforms to solve the hard problems that exist within\norganizing and analyzing massive and noisy data sets.</p>\n"}

/***/ },
/* 930 */
/***/ function(module, exports) {

	module.exports = {"author":"Matthew Taylor","brief":"This is an event organized by the NuPIC community to accompany the Numenta HTM Challenge Onsite. If you are coming to the Challenge and want to meet members of the NuPIC community the night before, please RSVP.","date":"2015/11/13","event":{"what":"Numenta HTM Challenge Community Meetup","when":{"begin":"2015/11/13 15:00","end":"2015/11/13 21:00"},"where":{"desc":"Numenta","city":"Redwood City","state":"CA","country":"USA","web":"http://www.meetup.com/numenta/events/224711563/"},"who":null,"why":null},"featured":false,"image":"../images/htm-challenge.png","org":"Open Source Flag-Bearer","tags":"numenta htm challenge 2015 community meetup hierarchical temporal memory machine intelligence learning brain neocortex","title":"Numenta HTM Challenge Community Meetup","body":"<h2>Numenta HTM Challenge Community Meetup</h2>\n<p>This is an event organized by the NuPIC community to accompany the Numenta HTM\nChallenge Onsite. If you are coming to the Challenge and want to meet members of\nthe NuPIC community the night before, please RSVP.</p>\n"}

/***/ },
/* 931 */
823,
/* 932 */
/***/ function(module, exports) {

	module.exports = {"author":"Matthew Taylor","brief":"The Numenta HTM Challenge is an online coding contest encouraging the creation of Hierarchical Temporal Memory applications.","date":"2015/11/14","event":{"what":"Numenta HTM Challenge Onsite","when":{"begin":"2015/11/14 10:00","end":"2015/11/14 20:00"},"where":{"desc":"San Mateo County History Museum","city":"Redwood City","state":"CA","country":"USA","web":"http://www.meetup.com/numenta/events/224711586/"},"who":null,"why":null},"featured":false,"image":"../images/image.png","org":"Open Source Flag-Bearer","tags":"numenta htm challenge onsite 2015 nupic hierarchical temporal memory brain neocortex machine learning intelligence","title":"Numenta HTM Challenge Onsite","body":"<h2>Numenta HTM Challenge Onsite</h2>\n<p>The Numenta HTM Challenge is an online coding contest encouraging the creation\nof Hierarchical Temporal Memory applications.</p>\n"}

/***/ },
/* 933 */
/***/ function(module, exports) {

	module.exports = {"author":"Alexander Lavin","brief":"Alexander Lavin, Numenta Research Engineer, speaks on Evaluating Realtime Anomaly Detection Algorithms – the Numenta Anomaly Benchmark, at IEEE ICMLA'15 Miami.","date":"2015/12/09","event":{"what":"Evaluating Realtime Anomaly Detection Algorithms – the Numenta Anomaly Benchmark","when":{"begin":"2015/12/09","end":"2015/12/11"},"where":{"desc":"TBD","city":"Miami","state":"FL","country":"USA","web":"http://www.icmla-conference.org/icmla15/"},"who":"Alexander Lavin","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Engineer","tags":"ieee machine learning conference numenta alexander lavin reserach numenta anomaly detection algorithm benchmark","title":"14th IEEE International Conference on Machine Learning and Applications (ICMLA)","body":"<h3>IEEE ICMLA’15</h3>\n<h4>14th International Conference on Machine Learning and Applications</h4>\n<p>The 14th International Conference on Machine Learning and Applications (IEEE\nICMLA’15) will be held in Miami, Florida, USA, December, 2015.</p>\n<p>The aim of the conference is to bring researchers working in the areas of\nmachine learning and applications together. The conference will cover both\ntheoretical and experimental research results. Submission of machine learning\npapers describing machine learning applications in fields like medicine,\nbiology, industry, manufacturing, security, education, virtual environments,\ngame playing and problem solving is strongly encouraged.</p>\n<p>Conference content will be submitted for inclusion into IEEE Xplore as well as\nother Abstracting and Indexing (A&amp;I) databases.</p>\n"}

/***/ },
/* 934 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e193cb425b32d81e254435ea88076d1e.png";

/***/ },
/* 935 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e060ccbe3090d5bb1040e4e5aec920b0.png";

/***/ },
/* 936 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2016/02/25","event":{"what":"A Theory of Sequence Memory in the Neocortex","when":{"begin":"2016/02/25","end":"2016/02/28"},"where":{"desc":"Marriott Downtown","city":"Salt Lake City","state":"UT","country":"USA","web":"http://www.cosyne.org/c/index.php?title=Cosyne_16"},"who":"Jeff Hawkins, Subutai Ahmad, Yuwei Cui, and Scott Purdy","why":"Poster Presentation"},"featured":false,"image":"../images/image.png","org":"Research Team","tags":"theory sequence memory neocortex cosyne 2016 computational and systems neuroscience numenta jeff hawkins","title":"COSYNE 2016 Computational and Systems Neuroscience Meeting","body":"<h4>Abstract</h4>\n<p><strong>A Theory of Sequence Memory in the Neocortex</strong></p>\n<p>Neocortical neurons have thousands of excitatory synapses. It is a mystery how\nneurons integrate the input from so many synapses and what kind of large-scale\nnetwork behavior this enables. It has been previously proposed that non-linear\nproperties of dendrites enable neurons to recognize multiple patterns. In this\npaper we extend this idea by showing that a neuron with several thousand\nsynapses arranged along active dendrites can learn to accurately and robustly\nrecognize hundreds of unique patterns of cellular activity, even in the presence\nof large amounts of noise and pattern variation. We then propose a neuron model\nwhere some of the patterns recognized by a neuron lead to action potentials and\ndefine the classic receptive field of the neuron, whereas the majority of the\npatterns recognized by a neuron act as predictions by slightly depolarizing the\nneuron without immediately generating an action potential. We then present a\nnetwork model based on neurons with these properties and show that the network\nlearns a robust model of time-based sequences. Given the similarity of\nexcitatory neurons throughout the neocortex and the importance of sequence\nmemory in inference and behavior, we propose that this form of sequence memory\nis a universal property of neocortical tissue. We further propose that cellular\nlayers in the neocortex implement variations of the same sequence memory\nalgorithm to achieve different aspects of inference and behavior. The neuron and\nnetwork models we introduce are robust over a wide range of parameters as long\nas the network uses a sparse distributed code of cellular activations. The\nsequence capacity of the network scales linearly with the number of synapses on\neach neuron. Thus neurons need thousands of synapses to learn the many temporal\npatterns in sensory stimuli and motor sequences.</p>\n<p>Related links:</p>\n<ul>\n<li><a href=\"http://numenta.com/learn/why-neurons-have-thousands-of-synapses-theory-of-sequence-memory-in-neocortex.html\">Blog Post</a></li>\n<li><t render=\"hbs\"><a href=\"%7B%7Bsite.paths.ext.paper.sequence%7D%7D\">PDF Whitepaper</a></t></li>\n</ul>\n<h4>About Cosyne</h4>\n<p>The annual Cosyne meeting provides an inclusive forum for the exchange of\nexperimental and theoretical/computational approaches to problems in systems\nneuroscience.</p>\n<p>To encourage interdisciplinary interactions, the main meeting is arranged in a\nsingle track. A set of invited talks are selected by the Executive Committee and\nOrganizing Committee, and additional talks and posters are selected by the\nProgram Committee, based on submitted abstracts.</p>\n<p>Cosyne topics include (but are not limited to): neural coding, natural scene\nstatistics, dendritic computation, neural basis of persistent activity,\nnonlinear receptive field mapping, representations of time and sequence, reward\nsystems, decision-making, synaptic plasticity, map formation and plasticity,\npopulation coding, attention, and computation with spiking networks.\nParticipants include pure experimentalists, pure theorists, and everything in\nbetween.</p>\n"}

/***/ },
/* 937 */
904,
/* 938 */
905,
/* 939 */
/***/ function(module, exports) {

	module.exports = {"author":"Alexander Lavin","brief":null,"date":"2016/03/07","event":{"what":"Global Big Data Conference 2016","when":{"begin":"2016/03/07","end":"2016/03/09"},"where":{"desc":"Santa Clara Convention Center","city":"Santa Clara","state":"CA","country":"USA","web":"http://globalbigdataconference.com/67/santa-clara/global-data-science-conference/event.html"},"who":"Alexander Lavin","why":"Speaking"},"featured":false,"image":"../images/bigdata.png","org":"Research Engineer","tags":"global big data conference 2016 numenta htm hierarchical temporal memory","title":"Global Big Data Conference 2016","body":"<p>Global Big Data Conference’s vendor agnostic Global Data Science Conference is\nheld on March 7th, March 8th &amp; March 9th, 2016 on all industry verticals. The\nConference allows practitioners to discuss data science through effective use\nof various data management techniques.</p>\n<p>Large amount of data created by various mobile platforms, social media\ninteractions, e-commerce transactions, and IoT provide an opportunity for\nbusinesses to effectively tailor their services by effective use of data\nanalytics. Proper use of data science can be a major competitive advantage for\nany business considering vast amount of  data being generated.</p>\n<p>Data Science is an emerging field that allows businesses to effectively mine\nhistorical data and better understand consumer behavior. This type of scientific\ndata management approach is critical for any business to successfully launch its\nproducts and better serve its existing markets.</p>\n"}

/***/ },
/* 940 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "14c87d4dcb18de2d88acdbaa197c63df.png";

/***/ },
/* 941 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3583715a9311e1973e4b76f72bf72236.png";

/***/ },
/* 942 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":null,"date":"2016/03/07","event":{"what":null,"when":{"begin":"2016/03/07","end":"2016/03/09"},"where":{"desc":"Clark Kerr Campus, UC Berkeley","city":"Berkeley","state":"CA","country":"USA","web":"http://neuroscience.berkeley.edu/2016-neuro-inspired-computational-elements-workshop/"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/nice.png","org":"Co-Founder","tags":"numenta jeff hawkins speaking neuro inspired computational elements workshop nice 2016","title":"Neuro-Inspired Computational Elements (NICE) Workshop 2016","body":"<h3>Workshop focus</h3>\n<p>Conventional, stored program architecture systems are designed for algorithmic\nand exact calculations.  However, the problems with highest impact involve\nlarge, noisy, incomplete, “natural” data sets that do not lend themselves to\nconvenient solutions by current systems.  Our task is to build upon the\nconvergence among neuroscience, microelectronics and computational systems to\ndevelop a new architecture designed to handle these natural data sets. The\napplications and clarification of the value proposition for new neuro-inspired,\nneuromorphic systems are critical focal points of this workshop.</p>\n<h3>Themes</h3>\n<p><strong>Neuroscience:</strong> Sensory information processing in cells and circuits,\nmechanisms of plasticity, learning and development.</p>\n<p><strong>Theory:</strong> Theoretical principles of brain information processing, sparse\ncoding, stochastic computing, the role of spikes, Bayesian computing.</p>\n<p><strong>Algorithms:</strong> Computational synthesis of brain information processing, deep\nlearning.</p>\n<p><strong>Platforms/Hardware:</strong> Massively parallel neuromorphic hardware architectures,\napplication of commodity systems, novel digital, analog and mixed-signal\narchitectures, application of novel devices.</p>\n<p><strong>Applications:</strong> Robotics, spatio-temporal pattern detection, causal relations\nin big data, prediction, approximate computing.</p>\n"}

/***/ },
/* 943 */
906,
/* 944 */
907,
/* 945 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2016/03/14","event":{"what":"HTM Bay Area Meetup","when":{"begin":"2016/03/14 18:30","end":"2016/03/14 21:30"},"where":{"desc":"Trustly @ 4500 Great America Pkwy","city":"Santa Clara","state":"CA","country":"USA","web":"http://www.meetup.com/numenta"},"who":"Matthew Taylor & Christy Maver","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Matt Taylor & Christy Maver","tags":"numenta htm hierarchical temporal memory bay area meetup santa clara ca","title":"HTM Bay Area Meetup in Santa Clara","body":"<p>Please join Numenta speakers Matt Taylor (Open-Source Community Manager) and\nChristy Maver (Director of Marketing) for this HTM Bay Area Community Meetup.\nEvent located at the Trustly offices in Santa Clara, CA.</p>\n<p>Meet HTM hackers, AI researchers, Entrepreneurs and enthusiast working in the\nfield of Artificial Intelligence. A brief agenda is listed below.  Like before\nwe have a special focus on HTM projects and talks.</p>\n<p>Make sure you are signing up for a lightning talk if you plan to present. <em>Slots\nare limited, make sure you sign up fast</em>.</p>\n"}

/***/ },
/* 946 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "581c67371b7e5272d3d8bf2c285d2ee3.png";

/***/ },
/* 947 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "23920bfcee833d9460abf49a099a7994.png";

/***/ },
/* 948 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2016/03/17","event":{"what":"Introductory Workshop - Numenta's Hierarchical Temporal Memory (HTM)","when":{"begin":"2016/03/17 18:00","end":"2016/03/17 20:00"},"where":{"desc":"190 Doe Memorial Library, UC Berkeley","city":"Berkeley","state":"CA","country":"USA","web":"http://bids.berkeley.edu/events/numenta-workshop"},"who":"Numenta Engineering","why":"Speaking"},"featured":true,"image":"../images/image.png","org":"Event","tags":"numenta htm workshop hierarchical temporal memory berkeley institute data science bids","title":"Numenta HTM Workshop at Berkeley Institute for Data Science","body":"<h3>Description</h3>\n<p>This event will introduce the Numenta platform and give students\nthe opportunity to learn about cutting-edge research. Members of the Numenta\nengineering team will host a workshop on using their platform and its impact.</p>\n"}

/***/ },
/* 949 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3de52d9b1f0cc5ce7784024e9423e9bd.png";

/***/ },
/* 950 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7753b482bb7080225bf758dbef7093c3.png";

/***/ },
/* 951 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2016/03/29","event":{"what":null,"when":{"begin":"2016/03/29","end":"2016/03/31"},"where":{"desc":"San Jose Convention Center, Booth #540","city":"San Jose","state":"CA","country":"USA","web":"http://conferences.oreilly.com/strata/hadoop-big-data-ca"},"who":null,"why":null},"featured":false,"image":"../images/image.png","org":"Event","tags":"strata hadoop world big data conference 2016 oreilly numenta machine intelligence","title":"Strata + Hadoop World 2016: O’Reilly Big Data Conference","body":"<blockquote>\n<p>Sponsored by Numenta. See us at Booth #540.</p>\n</blockquote>\n<h3>Event Details</h3>\n<p>Big data means big business. Learn to survive and thrive in a data-driven world.</p>\n<p>Make big data work. We’ve assembled the world’s best data scientists, analysts,\nand executives from innovative companies of all sizes to share deep, hard-won\nknowledge. Compelling data case studies, proven best practices, effective new\nanalytic approaches, and core skills will give you insight around:</p>\n<ul>\n<li>Data-driven business</li>\n<li>Data innovations</li>\n<li>Data science &amp; advanced analytics</li>\n<li>Enterprise adoption</li>\n<li>Hadoop use cases</li>\n<li>Hadoop internals &amp; development</li>\n<li>IoT &amp; real-time</li>\n<li>Law, ethics, governance</li>\n<li>Security</li>\n<li>Spark &amp; beyond</li>\n<li>Visualization &amp; user experience</li>\n</ul>\n"}

/***/ },
/* 952 */
/***/ function(module, exports) {

	module.exports = {"author":"Yuwei Cui","brief":null,"date":"2016/04/07","event":{"what":null,"when":{"begin":"2016/04/07 18:30","end":"2016/04/07 19:30"},"where":{"desc":"404 Bryant Street","city":"San Francisco","state":"CA","country":"USA","web":"https://www.eventbrite.com/e/ai-meetup-hierarchal-temporal-memory-presented-by-numenta-tickets-24327505223"},"who":"Yuwei Cui","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Research Engineer","tags":"numenta htm hierarchical temporal memory ai meetup san francisco","title":"AI Meetup - Hierarchical Temporal Memory","body":"<h3>Event Details</h3>\n<p>Hosted by San Francisco Artificial Intelligence Meetup. On April 7th, we are\nproudly having Yuwei Cui, Ph.D., and Research Engineer at Numenta who will\npresent us the heart of company’s technology - Hierarchical Temporal Memory.</p>\n<p>HTM is a detailed computational theory of the neocortex. At the core of HTM are\ntime-based learning algorithms that store and recall spatial and temporal\npatterns. HTM is well suited to a wide variety of problems; particularly those\ninvolve streaming data and time-based patterns. The current HTM systems are able\nto learn the structure of streaming data, make predictions and detect anomalies.\nIt is distinguished from other techniques in its ability to learn continuously\nin a fully unsupervised manner.</p>\n<p>HTM has been tested and implemented in software, all of which is developed with\nbest practices and is suitable for deploying in commercial applications. The\ncore learning algorithms are fully documented and available in an open source\nproject called NuPIC.</p>\n"}

/***/ },
/* 953 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d9fa06900dd9db596ffa6159ea5d34c1.png";

/***/ },
/* 954 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a4395369723561ce15ca1bae3332a852.png";

/***/ },
/* 955 */
/***/ function(module, exports) {

	module.exports = {"author":"Matthew Taylor","brief":null,"date":"2016/04/09","event":{"what":"Using HTM with GPS Data","when":{"begin":"2016/04/09","end":"2016/04/10"},"where":{"desc":"Joseph P. Bort MetroCenter Auditorium","city":"Oakland","state":"CA","country":"USA","web":"http://connected-car.devpost.com/"},"who":"Matthew Taylor","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Open Source Manager","tags":"mtc connected car hackathon oakland numenta nupic","title":"Connected Car Hackathon","body":"<h3>Event Details</h3>\n<p>Numenta is a Gold Sponsor of this hackathon that seeks to bring together\nprogrammers, developers, artists, technologists, data analysts, environmental\nstewards, travel behavior experts, commuters, and others who are interested in\nusing technology to address our region’s transportation challenges in order to\ntransform how we get around the Bay Area. Participants will have the opportunity\nto use data sets coming from connected cars to build apps and tools that\nencourage smarter driving, safer driving, and maybe even encourage travelers to\nconsider alternate travel options.</p>\n<p>Matt Taylor will give a breakout presentation and be on hand to help hackers use\nHTM with their GPS data.</p>\n"}

/***/ },
/* 956 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4eb55cfe159ecaef9044401da7d644b8.png";

/***/ },
/* 957 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "0eae53f0313267b0d869beb1487c52b6.png";

/***/ },
/* 958 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "eb99b3182524f1bafab6a2f2ceea542d.png";

/***/ },
/* 959 */
/***/ function(module, exports) {

	module.exports = {"author":"Alexander Lavin","brief":null,"date":"2016/04/23","event":{"what":"TEDx Cornell Tech","when":{"begin":"2016/04/23 10:00","end":"2016/04/23 16:00"},"where":{"desc":"Infor, 641 Avenue of the Americas","city":"New York City","state":"NY","country":"USA","web":"http://www.tedxcornelltech.com/"},"who":"Alexander Lavin","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Research Engineer","tags":"ted tedx cornell tech alexander lavin numenta research engineer","title":"TEDx Cornell Tech","body":"<h3>Event Details</h3>\n<p>TEDx events are TED-like conferences organized and conducted by local\ncommunities, where speakers present on ideas that challenge audiences to change\nthe way they think. Our event is organized around our NYC-based Cornell Tech\ncommunity.</p>\n<p>Cornell Tech is a revolutionary new technology focused campus of Cornell\nUniversity, located in New York City.</p>\n"}

/***/ },
/* 960 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "eb20aed54e0e148213c73e7ee386a7a2.png";

/***/ },
/* 961 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "156c30af83f0ed7fd51d2373e94e9b3a.png";

/***/ },
/* 962 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2016/04/26","event":{"what":"Machine Intelligence with Streaming Data. A new approach for anomaly detection and time-based learning.","when":{"begin":"2016/04/26 09:00","end":"2016/04/26 10:00"},"where":{"desc":"Online","city":null,"state":null,"country":null,"web":"http://www.prohuddle.com/webinars/ChristyAndScott/Machine_Intelligence_with_Streaming_Data_A_New_Approach.php"},"who":"Christy Maver & Scott Purdy","why":"Webinar"},"featured":false,"image":"../images/image.png","org":"Christy Maver & Scott Purdy","tags":"numenta webinar machine intelligence with streaming data","title":"Webinar: Machine Intelligence with Streaming Data","body":"<blockquote>\n<p><strong>Machine Intelligence with Streaming Data.</strong>\nA new approach for anomaly detection and time-based learning.</p>\n</blockquote>\n<h3>About the Webinar</h3>\n<p>Across every industry, we are seeing an exponential increase in the availability\nof streaming, time-series data. The real-time detection of anomalies has\nsignificant practical application. Finding anomalies in such data can be very\ndifficult, given the need to process data in real time, and learn while\nsimultaneously making predictions. With the increasing variety of streaming data\nsources, automated deployment—without manual parameter tuning—is also becoming\nimportant.</p>\n<p>Numenta’s online sequence memory algorithm, called Hierarchical Temporal Memory\n(HTM), has been used to detect anomalies in IT monitoring, human behavior, the\nstock market, geospatial data, and more. This webinar will introduce this novel\ntechnique, demonstrate its broad applicability, and cover performance details\nfrom a published benchmark designed for real-time anomaly detection.</p>\n"}

/***/ },
/* 963 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ecf4e85c9865a834ba820d3ce54c4025.png";

/***/ },
/* 964 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":null,"date":"2016/05/12","event":{"what":"What is Intelligence, that a Machine Might Have Some?","when":{"begin":"2016/05/12 18:30","end":"2016/05/12 20:00"},"where":{"desc":"Indiegogo","city":"San Francisco","state":"CA","country":"USA","web":"http://www.meetup.com/NeuroTechSF/events/230385690/"},"who":"Jeff Hawkins","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Co-Founder","tags":"jeff hawkins numenta founder speaking machine intelligence artificial neocortex","title":"NeuroTechX meetup featuring Jeff Hawkins","body":"<blockquote>\n<p>What is Intelligence, that a Machine Might Have Some?</p>\n</blockquote>\n<h3>Event Details</h3>\n<p>On May 12, NeuroTechX and Indiegogo are proud to host Jeff Hawkins, co-founder\nof Numenta, who will give a talk titled, “What is Intelligence, that a Machine\nMight Have Some?”</p>\n<p>There’s no question that Artificial Intelligence (AI) is hotter than ever. Yet\nas interest continues to grow, so do the number of interpretations of AI itself.\nNumenta’s approach lays the groundwork for the new era of Machine Intelligence.\nLed by Hawkins, the company’s mission is to reverse engineer the neocortex to\nbuild intelligent machines. This approach, which is not just biologically\ninspired, but biologically constrained, is based on the understanding that the\nbrain is the only example we have of an intelligent system.</p>\n<p>While there’s more work to be done, Numenta has made great progress toward a\ncomputational theory of the neocortex called HTM. At the core of HTM are\ntime-based learning algorithms that store and recall spatial and temporal\npatterns. It is distinguished from other techniques in its ability to learn\ncontinuously in a fully unsupervised manner.</p>\n<p>In this talk, Jeff will raise important questions about the implications of this\nwork: what is the legacy that we should be aiming for? What is intelligence\nitself? What should we do to try to build intelligent machines? What might these\nmachines look like in the future and what will they do? He’ll cover the\nbiological components of intelligence, the functional components of intelligence\nand the diversity of intelligence machines.</p>\n<p>Don’t miss the chance to hear Jeff speak on this fascinating topic.</p>\n"}

/***/ },
/* 965 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":null,"date":"2016/05/19","event":{"what":"Detecting Anomalies in Streaming Data - Real-time Algorithms for Real-world applications","when":{"begin":"2016/05/19 14:10","end":"2016/05/19 14:50"},"where":{"desc":"Galvanize SOMA","city":"San Francisco","state":"CA","country":"USA","web":"http://ai.bythebay.io/"},"who":"Subutai Ahmad","why":"Speaking"},"featured":false,"image":"../images/aibythebay.png","org":"VP Research","tags":"ai by the bay numenta detecting anomalies streaming data real time algorithms real world applications machine intelligence","title":"AI by the Bay","body":"<blockquote>\n<p>“Detecting Anomalies in Streaming Data - Real-time Algorithms for Real-world\napplications”</p>\n</blockquote>\n<h3>Abstract</h3>\n<p>There’s no question that we are seeing an increase in the availability of\nstreaming, time-series data. Largely driven by the rise of the Internet of\nThings (IoT) and connected real-time data sources, we now have an enormous\nnumber of applications with sensors that produce important data that changes\nover time. This data presents a challenge and opportunity for businesses across\nevery industry. How do they handle the onslaught of streaming data? How can they\nexploit it to make decisions in real-time? One way is to detect, in real time,\nwhen something unusual occurs. Early anomaly detection in streaming data has\nsignificant implications, yet can be very difficult to execute. It requires\ndetectors to process data in real-time, not batches, and learn while\nsimultaneously making predictions. In this talk, we’ll look at algorithms\ndesigned for such data and analyze the components that lead to optimal\nperformance. We’ll also discuss a new benchmark with a labeled, real-world data\nset, designed to provide a controlled and repeatable environment of open-source\ntools to test and measure anomaly detection algorithms on streaming data. How do\nwe score in a way that rewards algorithms that detect all anomalies as soon as\npossible, triggers no false alarms, works with real-world time-series data\nacross a variety of domains, and automatically adapts to changing statistics?</p>\n<h3>Event Details</h3>\n<p>AI By the Bay is a new conference applying scalable Machine Learning to batch\nand streaming data. Text and speech channels such as social media, sensors and\nother Internet of Things devices are generating more of these streams every day.\nThese streams can be understood semantically, correlated, and used for real-time\nmodeling of interactions crucially relevant to your business. We’ll apply the\nsame scientific rigor and uncompromising software engineering presented at Text\nBy the Bay 2015 to the AI and IoT domains, and connect them through open-source\nsystems, applications, and community.</p>\n"}

/***/ },
/* 966 */
/***/ function(module, exports) {

	module.exports = {"author":"Christy Maver","brief":null,"date":"2016/05/19","event":{"what":null,"when":{"begin":"2016/05/19","end":"2016/05/20"},"where":{"desc":"InterContinental Chicago Magnificent Mile","city":"Chicago","state":"IL","country":"USA","web":"https://theinnovationenterprise.com/summits/business-analytics-innovation-summit-chicago-2016"},"who":"Christy Maver","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Director of Marketing","tags":"business analytics innovation summit chicago 2016 numenta htm","title":"Business Analytics Innovation Summit Chicago 2016","body":"<blockquote>\n<p>“Smart Business Insights for Smarter Business Decisions”</p>\n</blockquote>\n<h3>Event Details</h3>\n<p>The Business Analytics Innovation Summit provides a platform to share unique\ninsight into the innovations that are driving success in the worlds leading\norganizations.</p>\n<ul>\n<li>25+ Industry thought leaders take the stage</li>\n<li>Case studies, challenges, successes, lessons &amp; more</li>\n<li>Solutions &amp; Services to fit your business analytics needs</li>\n<li>Ample Networking opportunities, over 20 hours of networking provided</li>\n<li>150+ Analytics professionals in attendance</li>\n<li>A range of industries representing their analytics stories</li>\n</ul>\n"}

/***/ },
/* 967 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ddbad9ff8c375d55aa00883022320680.png";

/***/ },
/* 968 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a863c732ad5fc58a7024116e91d57902.png";

/***/ },
/* 969 */
/***/ function(module, exports) {

	module.exports = {"author":"Celeste Baranski","brief":null,"date":"2016/05/25","event":{"what":"Reverse-Engineering the Neocortex","when":{"begin":"2016/05/25 12:10","end":"2016/05/25 12:35"},"where":{"desc":"Rackspace","city":"San Francisco","state":"CA","country":"USA","web":"https://www.eventbrite.com/e/ai-startups-conference-tickets-24722374287"},"who":"Celeste Baranski","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"VP Engineering","tags":"ai startups conference 2016 san francisco reverse engineering neocortex machine intelligence","title":"AI Startups Conference","body":"<h3>Event Details</h3>\n<p>Conference open from 9:00am - 5:00pm (PST).</p>\n"}

/***/ },
/* 970 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "18548fa99edb9ee022bf251186e37506.png";

/***/ },
/* 971 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8ba466249ad29a0dd7bae2377940c64d.png";

/***/ },
/* 972 */
/***/ function(module, exports) {

	module.exports = {"author":"Alexander Lavin","brief":null,"date":"2016/06/01","event":{"what":"Deriving Machine Intelligence from Neuroscience","when":{"begin":"2016/06/01 19:00","end":"2016/06/01 20:00"},"where":{"desc":"OC Deep Learning, HTM, ANN, NLP & AI Meetup","city":"Irvine","state":"CA","country":"USA","web":"http://www.meetup.com/OC-Deep-Learning-HTM-ANN-NLP-AI/events/230346144/"},"who":"Alexander Lavin","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Research Engineer","tags":"numenta machine intelligence neuroscience orange county oc meetup","title":"OC Meetup - Deriving Machine Intelligence from Neuroscience","body":"<p><strong>Hosted by: OC Deep Learning, HTM, ANN, NLP &amp; AI Meetup.</strong></p>\n<p>Alex will be presenting via webinar and his company Numenta who’s a leader in\nthis new era of machine intelligence is kind enough to be sending us some\nmaterials and giveaways so we will be able to share in some first hand data\ncoming from this exciting field of Hierarchical Temporal Memory (HTM) which is\ndetailed computational theory based on the neocortex.</p>\n<p>This will be an interactive webinar for those that can not make it in person.\nSee event page to sign-up to attend in person, or via webinar.</p>\n"}

/***/ },
/* 973 */
/***/ function(module, exports) {

	module.exports = {"author":"Yuwei Cui","brief":null,"date":"2016/06/18","event":{"what":null,"when":{"begin":"2016/06/18","end":"2016/06/21"},"where":{"desc":"The Foundation for Research and Technology-Hellas (FORTH)","city":"Heraklion","state":"Crete","country":"Greece","web":"http://www.dendrites2016.gr/"},"who":"Yuwei Cui","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Research Engineer","tags":"numenta htm hierarchical temporal memory dendritic anatomy molecules function herkalion crete 2016 event","title":"Dendritic Anatomy, Molecules and Function","body":"<h3>Event Details</h3>\n<p>Spotlight on molecules, structure, and function</p>\n<p>Dendrites are thin processes extending from the cell bodies of multiple neuron\ntypes. Since the majority of synaptic connections take place on dendrites, they\nprovide the primary substrate for inter-neuronal communication. In addition to\ntheir role as conducting cables, the dendrites of many neuron types contain a\nrich repertoire of ionic mechanisms that allow them to perform all sorts of\nnonlinear computations. As a result, dendrites have been suggested to play a key\nrole in information processing in brain and may even serve as independent\nprocessing units. This Workshop brings together scientific leaders from around\nthe world to present their work on molecular, biophysical, anatomical and/or\nfunctional studies in dendrites, aiming to further our understanding of how\nthese beautiful structures contribute to different brain functions.</p>\n<p>With the backdrop of an informal yet spectacular setting on the Greek island of\nCrete, the meeting has been carefully planned to not only satisfy our scientific\ncuriosity but also foster discussion and encourage interaction between attendees\nwell beyond the traditional presentations. In this spirit, the workshop will\nalso provide soft skills sessions for all participants.</p>\n"}

/***/ },
/* 974 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7e36509aee2ba54cd9dbe936f2798a47.png";

/***/ },
/* 975 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d489b8aaa08d22c7f0043ae2024d25c9.png";

/***/ },
/* 976 */
/***/ function(module, exports) {

	module.exports = {"author":"Yuwei Cui","brief":null,"date":"2016/06/22","event":{"what":null,"when":{"begin":"2016/06/22","end":"2016/06/26"},"where":{"desc":"Nomikos Conference Centre","city":"Fira","state":"Santorini","country":"Greece","web":"http://areadne.org/"},"who":"Yuwei Cui","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Research Engineer","tags":"numenta htm hierarchical temporal memory areadne 2016 research encoding decoding neural ensembles","title":"Areadne 2016 - Research in Encoding And Decoding of Neural Ensembles","body":"<h3>Event Details</h3>\n<p>There are three major goals of the AREADNE Conferences. First and foremost, the\nmeetings are intended to gather global scientific leaders who work on neural\nensembles and create a touch-point for a widely disparate and hybrid field.\nSecond, with a spectacular setting on Santorini, the conferences have been\ncarefully planned to foster discussion and interaction between attendees to\nencourage the establishment of lasting professional relationships. Third, these\nmeetings continue our efforts to promote systems neuroscience in Greece through\ncreating a world-class forum for cutting-edge research.</p>\n"}

/***/ },
/* 977 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b04929c5c428f7661c48b088f6fdecbb.png";

/***/ },
/* 978 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "bb4a4f6da1cd53f1ab95f0920b36e284.png";

/***/ },
/* 979 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cef08d9863adccbdff6286af86bf5804.png";

/***/ },
/* 980 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":null,"date":"2016/07/01","event":{"what":"Hierarchical Temporal Memory, a theoretical framework for both biological and machine intelligence","when":{"begin":"2016/07/01 13:15","end":"2016/07/01 13:40"},"where":{"desc":null,"city":"London","state":"United Kingdom","country":"England","web":"https://playfairaisummit2016.splashthat.com/"},"who":"Subutai Ahmad","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"VP of Research","tags":"playfair ai summit 2016 subutai ahmad numenta htm hierarchical temporal memory theoretical biological machine intelligence","title":"Playfair AI Summit 2016","body":"<h3>About the Event</h3>\n<p>Artificial intelligence is transforming our world. <strong>Fast.</strong></p>\n<p>In its second edition, the Playfair AI Summit 2016 will explore the frontiers of\nAI research and how these technologies are leveraged by companies to extend the\nfunctionality of products and services, as well as enable entirely new ones\naltogether. It’s overwhelmingly clear that AI is transforming our personal and\nprofessional lives, as well as the operations of businesses worldwide. AI also\nhas profound implications for the future fabric and functioning of society.</p>\n<p>Keeping with last year’s tradition, the Playfair AI Summit 2016 will showcase\nthe brightest academic and entrepreneurial leaders in engineering, research,\nproduct development from the most exciting technology companies and\nUniversities. Conversations will be led by the industry’s most respected\njournalists and thinkers.</p>\n"}

/***/ },
/* 981 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":null,"date":"2016/07/13","event":{"what":"Understanding Cortical Principles and Building Intelligent Machines","when":{"begin":"2016/07/13 14:30","end":"2016/07/13 14:55"},"where":{"desc":"Fairmont Hotel","city":"San Francisco","state":"CA","country":"USA","web":"http://conf.dato.com/2016/us/speakers/subutai-ahmad/"},"who":"Subutai Ahmad","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Numenta Event","tags":"data science summit 2016 numenta sponsor machine intelligence ai","title":"Data Science Summit US 2016","body":"<h3>Topic</h3>\n<p>At Numenta we aim to understand the computational principles underlying the\nneocortex, and build intelligent machines based on those principles. At its most\nbasic level the neocortex takes in a stream of sensory data, builds a\nsensorimotor model of the world and outputs a stream of motor actions. Recent\nadvances in neuroscience and neural imaging techniques have led to an explosion\nof data and information regarding these functions. In this talk I will describe\na number of cortical principles and how, as computer scientists, we can\ntranslate them into working systems. The core ideas have been validated in\ncommercial streaming analytics applications, and an optimized implementation is\navailable in our open source project called NuPIC. Although we still have much\nwork to do, this work forms a foundation for building biologically inspired\nintelligent machines.</p>\n<h3>About</h3>\n<p>The Data Science Summit is packed with industry experts, authors, researchers\nand business leaders, delivering concrete examples of data science and machine\nlearning in action. Hear best practices, war stories, vital dos and don’ts and\nprecisely how innovators are deploying machine learning solutions in industry,\nand the business impact they deliver.</p>\n<h3>Highlights</h3>\n<ul>\n<li>\n<p>2 days &amp; 3 tracks with 60 talks and tutorials, and a startup showcase.</p>\n</li>\n<li>\n<p>Hands-on trainings: gain practical skills using the best tools in the\nindustry.</p>\n</li>\n<li>\n<p>Hear war stories from business leaders at Capital One, Cloudera, Deepart,\nGoogle, Kaggle, Pandora, Quora, Salesforce, StichFix, Tableau and more.</p>\n</li>\n<li>\n<p>Discover amazing machine learning advances from professors at Carnegie Mellon,\nStanford, UC Berkeley &amp; University of Washington.</p>\n</li>\n<li>\n<p>Book signings by scikit-learn’s Andreas Mueller &amp; Pedro Domingos, author of\n“The Master Algorithm”.</p>\n</li>\n<li>\n<p>1400 fellow data scientists, developers and business leaders for networking.</p>\n</li>\n</ul>\n"}

/***/ },
/* 982 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4d5cacc75e7797b79c587052b9aeb97b.png";

/***/ },
/* 983 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7a032599c192a63934b54ad60c59f751.png";

/***/ },
/* 984 */
960,
/* 985 */
961,
/* 986 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2016/07/24","event":{"what":"Numenta Anomaly Benchmark Competition for Real-time Anomaly Detection @ IEEE WCCI 2016","when":{"begin":"2016/07/24","end":"2016/07/29"},"where":{"desc":"IEEE WCCI 2016","city":"Vancouver","state":"British Columbia","country":"Canada","web":"http://numenta.org/nab/"},"who":null,"why":null},"featured":false,"image":"../images/image.png","org":"Event","tags":"numenta anomaly benchmark competition nab ieee wcci world congress computational intelligence 2016","title":"IEEE WCCI 2016 - Numenta Anomaly Benchmark Competition","body":"<p><a href=\"http://numenta.org/nab/\">Numenta Anomaly Benchmark Competition</a> for Real-Time\nAnomaly Detection at <a href=\"http://www.wcci2016.org/programs.php?id=home\">IEEE WCCI 2016</a>\n(World Congress on Computational Intelligence).</p>\n<h3>About Competition</h3>\n<p>Do you have an algorithm that detects anomalies in streaming data? Or a dataset\nof real-world, time-series data with labeled anomalies? If so, you’re encouraged\nto enter the Numenta Anomaly Benchmark (NAB) Competition.</p>\n<h3>About Conference</h3>\n<p>IEEE WCCI has traditionally been the largest technical event in the field of\ncomputational intelligence, hosting three separate prestigious conferences\n(IJCNN, FUZZ-IEEE, IEEE CEC) under one roof. Over the years the event has\nprovided a platform for highly acclaimed intellectuals from all over the world\nto discuss and present their research findings on computational intelligence.\nThe organizing committee will put in place a rich and varied technical program\nwhich is designed to engage participants in cross-fertilization of ideas among\nthe three big areas in computational intelligence. The event will also offer a\nseries of social functions, such as welcome reception, conference banquet etc.,\nwhich will serve as a good channel to establish new connections and foster\neverlasting friendship among fellow counterparts.</p>\n"}

/***/ },
/* 987 */
/***/ function(module, exports) {

	module.exports = {"author":"Yuwei Cui","brief":null,"date":"2016/07/26","event":{"what":"A comparative study of HTM and other neural network models for online sequence learning with streaming data","when":{"begin":"2016/07/26 08:00","end":"2016/07/26 10:00"},"where":{"desc":"IEEE WCCI 2016","city":"Vancouver","state":"British Columbia","country":"Canada","web":"http://www.wcci2016.org/"},"who":"Yuwei Cui","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Research Engineer","tags":"numenta ieee wcci world congress computational intelligence 2016","title":"IEEE WCCI 2016","body":"<h3>About Talk</h3>\n<p>This talk is part of the International Joint Conference on Neural Networks\n(IJCNN 2016). Special Session TA-4: Online Real-Time Learning Strategies for\nLarge Data Streams, located in room 215.</p>\n<p><strong>Conference Schedule:</strong>\n<a href=\"http://www.wcci2016.org/document/ijcnn2016_5new.pdf\">http://www.wcci2016.org/document/ijcnn2016_5new.pdf</a></p>\n<h3>About Conference</h3>\n<p>IEEE WCCI has traditionally been the largest technical event in the field of\ncomputational intelligence, hosting three separate prestigious conferences\n(IJCNN, FUZZ-IEEE, IEEE CEC) under one roof. Over the years the event has\nprovided a platform for highly acclaimed intellectuals from all over the world\nto discuss and present their research findings on computational intelligence.\nThe organizing committee will put in place a rich and varied technical program\nwhich is designed to engage participants in cross-fertilization of ideas among\nthe three big areas in computational intelligence. The event will also offer a\nseries of social functions, such as welcome reception, conference banquet etc.,\nwhich will serve as a good channel to establish new connections and foster\neverlasting friendship among fellow counterparts.</p>\n"}

/***/ },
/* 988 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c3e576c874eaf30a6a7693d7f3b72f85.png";

/***/ },
/* 989 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1ad8bc0a450c3c6f5c5fefb22f937360.png";

/***/ },
/* 990 */
/***/ function(module, exports) {

	module.exports = {"author":"Alexander Lavin","brief":null,"date":"2016/08/02","event":{"what":"Predictive Analytics with Numenta Machine Intelligence","when":{"begin":"2016/08/02 18:00","end":"2016/08/02 21:00"},"where":{"desc":"Galvanize @ 44 Tehama Street","city":"San Francisco","state":"CA","country":"USA","web":"http://www.meetup.com/SF-Data-Science/events/232031072/"},"who":"Alexander Lavin","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"Research Engineer","tags":"sf san francisco data science meetup predictive analytics numenta machine intelligence","title":"SF Data Science Meetup","body":"<h3>Talk Abstract</h3>\n<p><strong>Predictive Analytics with Numenta Machine Intelligence</strong></p>\n<p>As sensors integrate with our daily lives, driven largely by the internet of\nthings (IoT), there is demand for streaming analytics algorithms to provide\ninsight from this data. Factories, farms, homes, people, and more are being\noutfitted with sensors that produce streaming data, but traditional\nbatch-processing analytics methods don’t suffice. Algorithms must be able to\nlearn and predict online, in real-time. They also must continuously learn and\nadapt to changing statistics of the environment while simultaneously making\npredictions.</p>\n<p>At Numenta we’ve developed Hierarchical Temporal Memory (HTM), a theory of\nneocortex implemented in software for machine learning applications. HTM runs\nonline and unsupervised, performing anomaly detection, prediction, and\nclassification on streaming data. HTM can run on wide variety of data streams,\nfrom IT server metrics to GPS coordinates. In this talk, Alex will discuss HTM\nin the context of predictive analytics, presenting real-world use cases.</p>\n<h3>Schedule</h3>\n<ul>\n<li><strong>6:00pm</strong> - Doors open &amp; food/drinks</li>\n<li><strong>6:50pm</strong> - Announcements</li>\n<li><strong>7:00pm</strong> - Talks Start</li>\n<li><strong>8:30pm</strong> - Networking</li>\n</ul>\n"}

/***/ },
/* 991 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Welcome to the 3rd community hosted HTM [Hierarchical Temporal Memory] Meetup. Meet HTM hackers, AI researchers, Entrepreneurs and enthusiasts working in the field of Artificial Intelligence. Read more for a brief agenda.","date":"2016/08/08","event":{"what":"HTM Bay Area Meetup","when":{"begin":"2016/08/08 18:00","end":"2016/08/08 21:00"},"where":{"desc":"H2O.ai Headquarters","city":"Mountain View","state":"CA","country":"USA","web":"http://www.meetup.com/numenta/events/232848149/"},"who":null,"why":null},"featured":false,"image":"../images/meetup.png","org":"HTM Community","tags":"numenta hierarchical temporal memory htm community 3rd bay area meetup palo alto machine intelligence neuroscience biological","title":"HTM Bay Area Meetup","body":"<h3>Details</h3>\n<p>Welcome to the 3rd community hosted HTM [Hierarchical Temporal Memory] Meetup.</p>\n<p>Meet HTM hackers, AI researchers, Entrepreneurs and enthusiasts working in the\nfield of Artificial Intelligence. See below for a brief agenda.</p>\n<p>As always we have a special focus on lightning talks where you get to talk about\nyour latest work. Sign up for a lightning talk if you plan to present. [Slots\nare limited, make sure you sign up fast].</p>\n<h3>Agenda</h3>\n<ul>\n<li>6:00 - 7:00: Welcome, Sign In and Networking</li>\n<li>7:00 - 7:10: About our Host [A message from our host for the day]</li>\n<li>7:10 - 7:20: State of HTM Open Source [Matt Taylor]</li>\n<li>7:20 - 7:30: Current HTM Theory thought process [TBD]</li>\n<li>7:30 - 9:00: Lightning Talks and Demos</li>\n</ul>\n<h3>Lightning Talks and Demos</h3>\n<ul>\n<li>\n<p>Two Extensions to HTM Engine - Ryan Mccall: an overview of HTM engine,\ndescribe the changes, and demo how to use them.</p>\n</li>\n<li>\n<p>SDRs and Spatial Pooling - Matt Taylor : Matt has been creating several\nYouTube videos about HTMs. He will talk in detail about Sparse Distributed\nRepresentations and Spatial Pooling.</p>\n</li>\n<li>\n<p>A Comparison of Popular AI Technologies - Chandan Maruthi: We have often been\nasked for a comparison of different algorithms used in AI. Chandan will cover\nsome of the key aspects of traditional AI methods including HTM’s.</p>\n</li>\n</ul>\n<p>To sign-up for a demo/lighting talk email:\n<a href=\"mailto:chandan.maruthi@gmail.com\">chandan.maruthi@gmail.com</a></p>\n<h3>What is HTM?</h3>\n<p>Hierarchical temporal memory (HTM) is an online machine learning model developed\nby Numenta, Inc. that models some of the structural and algorithmic properties\nof the neocortex. HTM is a biomimetic model based on the memory-prediction\ntheory of brain function described by Jeff Hawkins in his book On Intelligence.\nHTM is a method for discovering and inferring the high-level causes of observed\ninput patterns and sequences, thus building an increasingly complex model of the\nworld.</p>\n<p>More information about HTMs: <a href=\"http://numenta.org/htm-white-paper.html\">http://numenta.org/htm-white-paper.html</a></p>\n"}

/***/ },
/* 992 */
906,
/* 993 */
907,
/* 994 */
/***/ function(module, exports) {

	module.exports = {"author":"Matthew Taylor","brief":null,"date":"2016/09/25","event":{"what":"Hierarchical Temporal Memory: Computing Like the Brain","when":{"begin":"2016/09/25 12:40","end":"2016/09/25 13:40"},"where":{"desc":"Online","city":null,"state":null,"country":null,"web":"http://ai.withthebest.com/#Agenda"},"who":"Matthew Taylor","why":"Speaking"},"featured":false,"image":"../images/image.png","org":"HTM Community Leader","tags":"ai with the best artificial intelligence htm hierarchical temporal memory computing like the brain","title":"AI with the Best","body":"<h3>Talk Abstract</h3>\n<p><strong>Hierarchical Temporal Memory: Computing Like the Brain</strong></p>\n<p>Most of today’s AI technologies are extensions of ANN models that were\nenvisioned twenty years ago. While they have some amazing capabilities, they are\nnot truly intelligent. To attain truly intelligent machines, our approach is to\nunderstand the only thing we can all agree is intelligent today: the human\nbrain. HTM is an AI technology that is biologically-constrained. All major\nalgorithms at work in an HTM system were uncovered by years of intensive\nneuroscience research. In this presentation, I’ll describe the major mechanism\nof HTM at a high level, and lay a path towards the future of truly intelligent\nmachines.</p>\n"}

/***/ },
/* 995 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a72ae003bad5d5ad5bd6bb07af85df68.png";

/***/ },
/* 996 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "82ef27aee02a91401233ed2440e294e5.png";

/***/ },
/* 997 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "684b4f3e7b1a4be52369590f77038768.png";

/***/ },
/* 998 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "bc83f7cc3de4fb8fce1c32dade70d49a.png";

/***/ },
/* 999 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":null,"date":"2016/11/11","event":{"what":null,"when":{"begin":"2016/11/11","end":"2016/11/11"},"where":{"desc":"Hotel Nikko","city":"San Francisco","state":"CA","country":"USA","web":"http://mlconf.com/events/san-francisco-ca/"},"who":null,"why":null},"featured":false,"image":"../images/image.png","org":"Research Team","tags":"numenta machine learning conference san francisco sf 2016","title":"MLconf 2016 Machine Learning Conference San Francisco","body":"<h3>About the MLconf</h3>\n<p>The Machine Learning Conference (MLconf) began in 2012, as a partnership with\nCarnegie Mellon University’s GraphLab team, to gather the thought leaders in\nMachine Learning, specifically Graph Databases.</p>\n<p>In 2013, MLconf became a separate event, devoted to the Machine Learning and\nData Science community in San Francisco, agnostic of any tool, platform or\ncompany. MLconf events host speakers from various industries, research and\nuniversities to discuss recent research and application of Machine Learning\nmethodologies and practices. In 2014, MLconf entered NYC and Atlanta, as well as\nSan Francisco. In 2015, MLconf will host conferences in NYC, Atlanta, Seattle\nand San Francisco, with plans to enter additional US cities in 2016, and the UK.</p>\n<p>MLconf gathers communities to discuss the recent research and application of\nAlgorithms, Tools, and Platforms to solve the hard problems that exist within\norganizing and analyzing massive and noisy data sets.</p>\n"}

/***/ },
/* 1000 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _universal = __webpack_require__(376);
	
	var _Anchor = __webpack_require__(544);
	
	var _Anchor2 = _interopRequireDefault(_Anchor);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _PostItem = __webpack_require__(852);
	
	var _PostItem2 = _interopRequireDefault(_PostItem);
	
	var _Section = __webpack_require__(675);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _SubTitle = __webpack_require__(535);
	
	var _SubTitle2 = _interopRequireDefault(_SubTitle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const EventsPage = (props, { route }) => {
	  const { pages } = route;
	  const now = new Date();
	  const posts = pages.filter(({ file }) => file.path.match(/^events\/.*\.md/));
	  const past = posts.filter(({ data }) => new Date(data.date) < now);
	  const upcoming = posts.filter(({ data }) => new Date(data.date) >= now);
	  const itemsPast = past.sort(_universal.sortDateDescend).map(post => _react2.default.createElement(
	    _ListItem2.default,
	    { key: post.file.stem },
	    _react2.default.createElement(_PostItem2.default, { post: post })
	  ));
	  const itemsUp = upcoming.sort(_universal.sortDateAscend).map(post => _react2.default.createElement(
	    _ListItem2.default,
	    { key: post.file.stem },
	    _react2.default.createElement(_PostItem2.default, { post: post })
	  ));
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      _Section2.default,
	      { headline: true, open: true, title: 'Events' },
	      _react2.default.createElement(_Anchor2.default, { name: 'upcoming' }),
	      _react2.default.createElement(
	        _SubTitle2.default,
	        null,
	        'Upcoming Events'
	      ),
	      _react2.default.createElement(
	        _List2.default,
	        { copy: false },
	        itemsUp
	      ),
	      _react2.default.createElement(_Anchor2.default, { name: 'past' }),
	      _react2.default.createElement(
	        _SubTitle2.default,
	        null,
	        'Past Events'
	      ),
	      _react2.default.createElement(
	        _List2.default,
	        { copy: false },
	        itemsPast
	      )
	    )
	  );
	};
	
	EventsPage.contextTypes = {
	  route: _react2.default.PropTypes.object
	};
	
	exports.default = EventsPage;
	module.exports = exports['default'];

/***/ },
/* 1001 */
855,
/* 1002 */
855,
/* 1003 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(504);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	var _index = __webpack_require__(526);
	
	var _index2 = _interopRequireDefault(_index);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class HomePage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        {
	          headline: true,
	          open: true,
	          title: 'Leading the New Era of Machine Intelligence'
	        },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      { className: _index2.default.page },
	      sections
	    );
	  }
	
	}
	
	exports.default = HomePage;
	module.exports = exports['default'];

/***/ },
/* 1004 */
/***/ function(module, exports) {

	module.exports = {"title":"Privacy Policy","body":"<p><strong>Updated:</strong> 22 July 2016</p>\n<p>These terms of service apply to the use of Numenta’s streaming analytics product\nas distributed through cloud service providers (the Grok Product) and for the\nuse of Numenta’s web site. Together, the Grok Product and the Numenta web site\nare called the Numenta Offering.</p>\n<h3>1. ACCEPTANCE OF TERMS</h3>\n<p>If you do not agree to these Terms, you should not use the Numenta Offering. We\nreserve the right to change, modify, add or remove portions of these Terms\nperiodically. Such modifications shall be effective immediately upon posting of\nthe modified Terms to the Numenta website. Your continued use of the Numenta\nOffering will mean that you accept these terms.</p>\n<h3>2. NO UNLAWFUL OR PROHIBITED USE</h3>\n<p>You warrant to Numenta that you will not use the Numenta Offering, or any of the\ncontent therein, for any purpose that is unlawful or that is prohibited by these\nTerms.</p>\n<h3>3. LICENSE GRANT</h3>\n<p>Your rights to access, download, and use the Grok Product will be subject to the\nterms and conditions of the software license agreement provided on the cloud\nservice provider’s site through which it is distributed.</p>\n<h3>4. YOUR CONTENT</h3>\n<p>Numenta will not pre-screen or review your content, but Numenta shall have the\nright (but not the obligation) in its sole discretion to refuse or delete any\ncontent that it reasonably considers to violate the Terms or to be otherwise\nillegal.</p>\n<p>You grant Numenta the right to review your content for the purposes of debugging\nthe Numenta Offering and for providing you with technical support. Numenta will\nnot share your content with others without your explicit, written permission,\nexcept in the case where being required to do so by the appropriate court or\ngovernment agency.</p>\n<h3>5. TERMINATION</h3>\n<p>We may terminate your use of the Numenta Offering if we have reasonable belief\nthat your use: 1) violates these Terms; or 2) abuses site resources or attempts\nto gain unauthorized entry to the site or site resources; or 3) we are required\nto do so by law, regulation, court or governing agency order.</p>\n<p>Our termination of any user’s access to the Numenta Offering may be effected\nwithout notice and, on such termination, we may immediately deactivate or delete\nuser’s account and/or bar any further access to such files. Numenta shall not be\nliable to any Numenta user or other third party for any such termination.</p>\n<p>You may terminate your use of the Numenta Offering by stopping its use without\nnotice to us.</p>\n<h3>6. PAYMENT</h3>\n<p>The Numenta Product is delivered through a cloud service provider’s marketplace.\nYou will abide by the payment terms as detailed in that marketplace. If you do\nnot wish to continue using and paying for the Numenta Product, you may stop\nusing it at any time, and further charges will not accrue. We do not offer\nrefunds for any amounts paid.</p>\n<h3>7. LINKS</h3>\n<p>To the extent the Numenta website includes links to third parties, Numenta is\nnot responsible or liable for the content of such sites. The Numenta website\nprivacy statement is applicable only when you are on the Numenta websites.</p>\n<h3>8. SUPPORT</h3>\n<p>Technical support for the Grok Product is provided by email. We will make a\nreasonable effort to respond to your email within 48 hours. Support inquiries\nare to be sent to <a href=\"mailto:support@numenta.com\">support@numenta.com</a>.</p>\n<h3>9. TRADEMARK INFORMATION</h3>\n<p>Numenta, Grok, NuPIC, and the Numenta, Grok and NuPIC trademarks, logos and\nservice marks are the intellectual property of Numenta, Inc.</p>\n<p>All trademarks, trade names, service marks and logos referenced herein are the\nproperty of their respective owners.</p>\n<h3>10. COPYRIGHTS</h3>\n<p>If you believe that your work has been copied and is accessible in the Numenta\nOffering in a way that constitutes copyright infringement, you may notify us by\nproviding our copyright agent with the following information in writing:</p>\n<ul>\n<li>\n<p>the electronic or physical signature of the owner of the copyright or the\nperson authorized to act on the owner’s behalf;</p>\n</li>\n<li>\n<p>identification of the copyrighted work that you claim has been infringed;</p>\n</li>\n<li>\n<p>identification of the material that is claimed to be infringing and\ninformation reasonably sufficient to permit Grok to locate the material;</p>\n</li>\n<li>\n<p>your name, address, telephone number, and email address;</p>\n</li>\n<li>\n<p>a statement by you that you have a good faith belief that the disputed use is\nnot authorized by the copyright owner, its agent, or the law;</p>\n</li>\n<li>\n<p>a statement, made under penalty of perjury, that the above information in\nyour Notice is accurate and that you are the copyright owner or are authorized\nto act on the copyright owner’s behalf.</p>\n</li>\n</ul>\n<p>If Numenta receives such a claim, Numenta will investigate and report back to\nthe complainant. Numenta reserves the right to delete such reported content or\nto terminate a user’s account.</p>\n<p>Our designated agent to receive notification of claimed infringement under the\nDigital Millennium Copyright Act OF 1998 (“DMCA”) is:\n<a href=\"mailto:dmca@numenta.com\">dmca@numenta.com</a></p>\n<h3>11. VIOLATIONS OF TERMS</h3>\n<p>Please report any violations of the Terms to\n<a href=\"mailto:info@numenta.com\">info@numenta.com</a>.</p>\n<h3>12. PRIVACY</h3>\n<p>Our Privacy Policy is located at <a href=\"http://numenta.com/legal/privacy/\">http://numenta.com/legal/privacy/</a>.</p>\n"}

/***/ },
/* 1005 */
/***/ function(module, exports) {

	module.exports = {"title":"Terms of Service","body":"<p><strong>Updated:</strong> 22 July 2016</p>\n<p>These terms of service apply to the use of Numenta’s streaming analytics product\nas distributed through cloud service providers (the Grok Product) and for the\nuse of Numenta’s web site. Together, the Grok Product and the Numenta web site\nare called the Numenta Offering.</p>\n<h3>1. ACCEPTANCE OF TERMS</h3>\n<p>If you do not agree to these Terms, you should not use the Numenta Offering. We\nreserve the right to change, modify, add or remove portions of these Terms\nperiodically. Such modifications shall be effective immediately upon posting of\nthe modified Terms to the Numenta website. Your continued use of the Numenta\nOffering will mean that you accept these terms.</p>\n<h3>2. NO UNLAWFUL OR PROHIBITED USE</h3>\n<p>You warrant to Numenta that you will not use the Numenta Offering, or any of the\ncontent therein, for any purpose that is unlawful or that is prohibited by these\nTerms.</p>\n<h3>3. LICENSE GRANT</h3>\n<p>Your rights to access, download, and use the Grok Product will be subject to the\nterms and conditions of the software license agreement provided on the cloud\nservice provider’s site through which it is distributed.</p>\n<h3>4. YOUR CONTENT</h3>\n<p>Numenta will not pre-screen or review your content, but Numenta shall have the\nright (but not the obligation) in its sole discretion to refuse or delete any\ncontent that it reasonably considers to violate the Terms or to be otherwise\nillegal.</p>\n<p>You grant Numenta the right to review your content for the purposes of debugging\nthe Numenta Offering and for providing you with technical support. Numenta will\nnot share your content with others without your explicit, written permission,\nexcept in the case where being required to do so by the appropriate court or\ngovernment agency.</p>\n<h3>5. TERMINATION</h3>\n<p>We may terminate your use of the Numenta Offering if we have reasonable belief\nthat your use: 1) violates these Terms; or 2) abuses site resources or attempts\nto gain unauthorized entry to the site or site resources; or 3) we are required\nto do so by law, regulation, court or governing agency order.</p>\n<p>Our termination of any user’s access to the Numenta Offering may be effected\nwithout notice and, on such termination, we may immediately deactivate or delete\nuser’s account and/or bar any further access to such files. Numenta shall not be\nliable to any Numenta user or other third party for any such termination.</p>\n<p>You may terminate your use of the Numenta Offering by stopping its use without\nnotice to us.</p>\n<h3>6. PAYMENT</h3>\n<p>The Numenta Product is delivered through a cloud service provider’s marketplace.\nYou will abide by the payment terms as detailed in that marketplace. If you do\nnot wish to continue using and paying for the Numenta Product, you may stop\nusing it at any time, and further charges will not accrue. We do not offer\nrefunds for any amounts paid.</p>\n<h3>7. LINKS</h3>\n<p>To the extent the Numenta website includes links to third parties, Numenta is\nnot responsible or liable for the content of such sites. The Numenta website\nprivacy statement is applicable only when you are on the Numenta websites.</p>\n<h3>8. SUPPORT</h3>\n<p>Technical support for the Grok Product is provided by email. We will make a\nreasonable effort to respond to your email within 48 hours. Support inquiries\nare to be sent to <a href=\"mailto:support@numenta.com\">support@numenta.com</a>.</p>\n<h3>9. TRADEMARK INFORMATION</h3>\n<p>Numenta, Grok, NuPIC, and the Numenta, Grok and NuPIC trademarks, logos and\nservice marks are the intellectual property of Numenta, Inc.</p>\n<p>All trademarks, trade names, service marks and logos referenced herein are the\nproperty of their respective owners.</p>\n<h3>10. COPYRIGHTS</h3>\n<p>If you believe that your work has been copied and is accessible in the Numenta\nOffering in a way that constitutes copyright infringement, you may notify us by\nproviding our copyright agent with the following information in writing:</p>\n<ul>\n<li>\n<p>the electronic or physical signature of the owner of the copyright or the\nperson authorized to act on the owner’s behalf;</p>\n</li>\n<li>\n<p>identification of the copyrighted work that you claim has been infringed;</p>\n</li>\n<li>\n<p>identification of the material that is claimed to be infringing and\ninformation reasonably sufficient to permit Grok to locate the material;</p>\n</li>\n<li>\n<p>your name, address, telephone number, and email address;</p>\n</li>\n<li>\n<p>a statement by you that you have a good faith belief that the disputed use is\nnot authorized by the copyright owner, its agent, or the law;</p>\n</li>\n<li>\n<p>a statement, made under penalty of perjury, that the above information in\nyour Notice is accurate and that you are the copyright owner or are authorized\nto act on the copyright owner’s behalf.</p>\n</li>\n</ul>\n<p>If Numenta receives such a claim, Numenta will investigate and report back to\nthe complainant. Numenta reserves the right to delete such reported content or\nto terminate a user’s account.</p>\n<p>Our designated agent to receive notification of claimed infringement under the\nDigital Millennium Copyright Act OF 1998 (“DMCA”) is:\n<a href=\"mailto:dmca@numenta.com\">dmca@numenta.com</a></p>\n<h3>11. VIOLATIONS OF TERMS</h3>\n<p>Please report any violations of the Terms to\n<a href=\"mailto:info@numenta.com\">info@numenta.com</a>.</p>\n<h3>12. PRIVACY</h3>\n<p>Our Privacy Policy is located at <a href=\"http://numenta.com/legal/privacy/\">http://numenta.com/legal/privacy/</a>.</p>\n"}

/***/ },
/* 1006 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "02c4277e82fcaf64077f6a989fea0e9b.png";

/***/ },
/* 1007 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(654);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class MissionPage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Mission & History' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	
	}
	
	exports.default = MissionPage;
	module.exports = exports['default'];

/***/ },
/* 1008 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"Over the past year, we have tested our Grok technology on a variety of enterprise applications. Customers show substantial interest in our technology, with proposed","date":"2013/10/11","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"grok it","title":"Announcing Grok for IT","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>Over the past year, we have tested our Grok technology on a variety of\nenterprise applications. Customers show substantial interest in our\ntechnology, with proposed applications ranging from remote equipment maintenance\nto power management to web advertising optimization, and many more.</p>\n<p>Although the interest level is strong, and we conducted many tests to prove the\nvalidity of the cortical learning algorithms, we found that it was difficult for\ncustomers to deploy Grok. The barriers to deployment included having clean\naccess to data streams as well as integrating the results into existing business\nprocesses.</p>\n<p>Because of this experience, we decided to create a more targeted solution that\nmakes it far easier for customers to deploy Grok.</p>\n<p>This product, currently under development, will monitor IT systems,\nautomatically figuring out whether the network is healthy or is in an anomalous\nstate. In essence, we are bringing deep science to the problem of\ndetecting anomalies in servers and server based applications. The first\nversion of the product is a simple-to-deploy tool focused on customers using\nAmazon Web Services (AWS).</p>\n<p>We have a few openings left for our private beta program, which will start\nshortly. If you have a current AWS environment (small or large) and would\nlike to participate in the private beta, please send an email to\n<a href=\"mailto:grokbeta@numenta.com\">grokbeta@numenta.com</a>. We welcome\nyour input and your help in finalizing this exciting new product.</p>\n<p>In other news, the NuPIC open source project we created in June is off to a\ngreat start. NuPIC contains the source code to our cortical learning\nalgorithms, the same code used in our product Grok. We are pleased with\nthe number of contributors, the email discussions, and overall\ninterest. We are holding our second NuPIC Hackathon in San Francisco\non November 2 – 3. To sign up for the Hackathon, go to\n<a href=\"http://www.numenta.org/events.html\">www.numenta.org/events.html</a>.\nTo learn more about the open source project, visit\n<a href=\"http://www.numenta.org\">www.numenta.org</a>.</p>\n<p>Thank you for your interest in Grok and in <a href=\"http://Numenta.org\">Numenta.org</a>. We look forward to\nmeeting some of you in our beta program or at the NuPIC Hackathon.</p>\n"}

/***/ },
/* 1009 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"Grok is targeted towards Amazon Web Services (AWS) customers. We will be showing it publicly for the first time at the Amazon re:Invent conference next week in Las Vegas.","date":"2013/11/08","featured":false,"image":"../../../../images/numenta.png","org":"Founder","tags":"grok at aws reinvent 2013","title":"Grok at AWS re:Invent","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>As we wrote to you in October, we have developed an exciting product based on\nour Cortical Learning Algorithms (CLA). The product, called Grok, is targeted\ntowards Amazon Web Services (AWS) customers. We will be showing it publicly for\nthe first time at the\n<a href=\"http://reinvent.awsevents.com/\">Amazon re:Invent Conference</a>\nnext week in Las Vegas.</p>\n<p>This may be of interest to you for two reasons.</p>\n<ul>\n<li>\n<p>This is the first commercial application of the cortical learning models we\nhave developed over the past few years. It is a landmark event for us and\na step on the path towards machine intelligence.</p>\n</li>\n<li>\n<p>Some of you have expressed interest in using Grok. If you are attending\nre:Invent, we hope you will come by booth #1200, say hello, and see how we\napplied advanced cortical modeling to transform anomaly detection in computer\nservers.</p>\n</li>\n</ul>\n<p>Because of the capabilities of the CLA, Grok automates the process of\nmodeling normal behavior and identifying unusual behavior in Amazon\ninstances. The patterns found by Grok go well beyond those found by static\nor dynamic thresholds. In addition, Grok provides a mobile client that\nenables a unique ability to monitor the health of your network anytime,\nanywhere. It is a remarkable product and the first showcase for the CLA.</p>\n<p>We continue to recruit participants in our private beta program as well, so let\nus know at <a href=\"mailto:grokbeta@numenta.com\">grokbeta@numenta.com</a> if you\nare interested in using Grok.</p>\n<p>Finally, last weekend in San Francisco we held our second NuPIC Hackathon for\nthe open source community built around the CLA. It was a great\nsuccess. Two big themes at this event were to apply the CLA to robotics\nand natural language processing. Matt Taylor, the NuPIC community\nflag-bearer, put together this\n<a href=\"http://numenta.org/blog/2013/11/06/2013-fall-hackathon-outcome.html\">summary</a>.</p>\n<p>We hope to see some of you at re:Invent, and look forward to getting your\nfeedback on Grok. We are excited about approaching the first commercial\nrelease of a product that is based on the CLA.</p>\n"}

/***/ },
/* 1010 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"I am pleased to share with our newsletter subscribers the availability of Grok Amazon Web Services (AWS) Marketplace. Grok monitors complex networks running","date":"2014/02/04","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"grok soft launch","title":"Announcing Grok 1.0 Soft Launch","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>I am pleased to share with our newsletter subscribers the availability of Grok\n1.0 in “soft launch” on the\n<a href=\"/grok/#get\">Amazon Web Services (AWS) Marketplace</a>.\nGrok monitors complex networks running on AWS and is the first commercial\napplication of our groundbreaking Cortical Learning Algorithm (CLA).\nGrok enables IT professionals to easily spot unusual activity, thus staying\nahead of problems and preventing downtime. Grok includes the following features:</p>\n<ul>\n<li>Very easy configuration and set-up</li>\n<li>Using the CLA, automatically models each metric to determine normal patterns</li>\n<li>Automatically identifies and ranks unusual patterns</li>\n<li>Continuously learns new patterns as environments evolve</li>\n<li>Does not require any manual threshold setting</li>\n<li>Notifies the user when something curious is happening</li>\n<li>Displays output graphically on a mobile Android device</li>\n</ul>\n<p>Using Grok will enable IT professionals to get insights to their system\nperformance by providing an early warning that something has changed.\nSince everything happens automatically, using Grok can reduce costs of system\nmonitoring by requiring less work from engineers. And, given the mobile\ninterface, IT professionals can get this information anytime, anywhere.</p>\n<p>Grok 1.0 is available in two editions:</p>\n<ul>\n<li><a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6/ref=srh_res_product_title?ie=UTF8&sr=0-3&qid=1391115095261\">Grok Free Edition</a>; supports up to 10 AWS instances or custom metrics</li>\n<li><a href=\"https://aws.amazon.com/marketplace/pp/B00HJAA5MM/ref=srh_res_product_title?ie=UTF8&sr=0-2&qid=1391115112131\">Grok Standard Edition</a>; supports up to 200 AWS instances or custom metrics (fee based)</li>\n</ul>\n<p>We plan to formally announce and exhibit at the AWS Summit on March 25-26 at the\nMoscone Center in San Francisco; please stop by and say hello. And be sure\nto check out our updated website.</p>\n<p>I’m also happy to tell you that in addition to working on the Grok product\nrelease, we continue to push our biologically-inspired algorithms forward.\nWe’ve made some important progress recently and look forward to sharing it\nwith you over the coming year. Our open source community,\n<a href=\"http://numenta.org/\">NuPIC</a>, is growing and actively contributing to\nthe advancement of the science.</p>\n<p>Thank you for your support and your interest. We hope you’ll try\nGrok and give us your feedback.</p>\n"}

/***/ },
/* 1011 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"Today is an important day for Numenta.  We are pleased to announce the general availability of Grok on the Amazon Web Services Marketplace. We will be showcasing Grok at the","date":"2014/03/25","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"Grok","title":"Announcing Grok for IT Analytics on AWS","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>Today is an important day for Numenta.  We are pleased to announce the general\navailability of Grok on the\n<a href=\"https://aws.amazon.com/marketplace/search/results/ref=gtw_navgno_search_box?page=1&amp;searchTerms=grok\">Amazon Web Services Marketplace</a>\nWe will be showcasing Grok at the\n<a href=\"https://aws.amazon.com/aws-summit-2014/san-francisco/\">AWS Summit</a>\nat the San Francisco Moscone Convention Center on March 26th.  If you are\nattending, please join us in booth 100 to see a demo - and experience our\nbreakthrough technology for anomaly detection.</p>\n<p>As we mentioned in our February newsletter, Grok for IT Analytics monitors\nservers running on AWS and is the first commercial application of our\ngroundbreaking Cortical Learning Algorithm (CLA). Grok enables\nIT professionals to spot anomalous system behavior in order to stay ahead of\nproblems and prevent business downtime, and to substantially reduce annoying\nfalse positives generated by threshold based systems.</p>\n<p>What makes us different is the powerful science behind our technology, enabling\nGrok to identify unusual patterns that many other monitoring tools may miss and\nto automatically learn changes in its environment without human intervention.\nWe encourage you to read our new whitepaper\n[The Science of Anomaly Detection](/assets/pdf/whitepapers/Numenta White Paper - Science of Anomaly Detection.pdf)\nfor details and examples of how Grok does its magic.</p>\n<p>Since our soft launch in February, our team has added valuable new features\nbased on customer feedback:</p>\n<ul>\n<li>Monitoring of AWS Auto-Scaling Groups</li>\n<li>Monitoring of logically-related server clusters</li>\n<li>Improved user-controlled notifications</li>\n<li>Addition of a command line interface tool</li>\n<li>Improved mobile interface on Android devices</li>\n<li>Ability to ingest any streaming data source via custom metrics</li>\n</ul>\n<p>If you are an IT professional or just wanted to explore Grok, we have several\noptions to make it easy to get started.  Grok is available in the AWS\nMarketplace in two editions:</p>\n<ul>\n<li><a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6/ref=srh_res_product_title?ie=UTF8&amp;sr=0-3&amp;qid=1395708910993\">Grok Free Edition</a>:\nsupports up to 10 instances or custom metrics</li>\n<li><a href=\"https://aws.amazon.com/marketplace/pp/B00HJAA5MM/ref=srh_res_product_title?ie=UTF8&amp;sr=0-2&amp;qid=1395708888644\">Grok Standard Edition</a>:\nsupports up to 200 AWS instances or custom metrics</li>\n</ul>\n<p>We also invite you to <a href=\"/contact/\">provide your feedback</a>. Be\nsure to send us details on anomalies that Grok found that you would otherwise\nnot have seen!  And let us know about features you’d like to have us implement\nin order to make Grok more useful.</p>\n<p>To support our launch, we have upgraded our website and made a number of helpful\n<a href=\"/grok/#resources\">resources</a> available.</p>\n<p>Thanks for your continued interest and support.  We look forward to hearing how\nyou like Grok.</p>\n"}

/***/ },
/* 1012 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"I’m writing today to give you a progress report from Numenta.  We have continued to make strides towards our mission of being a catalyst for machine intelligence.","date":"2014/06/10","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"june 2014 numenta nupic grok aws","title":"Progress Report June 2014 Newsletter","body":"<p>I’m writing today to give you a progress report from Numenta.  We have continued\nto make strides towards our mission of being a catalyst for machine\nintelligence.</p>\n<h4>NuPIC Open Source Community – Solid Growth in First Year</h4>\n<p>One year ago we created the NuPIC open source project to support scientists and\ndevelopers who are interested in machine intelligence based on neocortical\nprinciples.  Since our launch, we’ve made great progress in our goal of building\na vibrant community, now with more than 800 subscribers to the NuPIC mailing\nlist and nearly 100 contributors.</p>\n<p>We have recently concluded our third NuPIC Hackathon; the 32-hour weekend event\ndrew 76 developers and yielded 14 demos ranging from simple games to complex\nword associations based on CEPT, the Cortical Engine for Processing Text.  NuPIC\nCommunity Flag-Bearer, Matt Taylor, summarized it well, saying “We’ve come a\nlong way since we started with 90,000 lines of code on Github and held our first\nHackathon with 20 people. Today, I am happy to report we have an active\ncommunity and a pattern of steady growth over the past year. If you are\ninterested in biologically-inspired machine intelligence, there is no better\nplace to be.”</p>\n<h4>Grok for IT Analytics on AWS – Showcasing the Power of the CLA</h4>\n<p>Grok, the first commercial product using Numenta’s Cortical Learning Algorithm\n(CLA), is marking its first quarter in market. Grok learns patterns from its\ntemporal data stream, makes predictions, and identifies anomalies.\nSimultaneously with the product’s release, Numenta issued a\n<a href=\"/blog/science-of-anomaly-detection.html\">Science of Anomaly Detection Whitepaper</a>\nthat explains how it applied the science of the CLA to the technology of anomaly\ndetection. Here’s what some of our first customers have to say:</p>\n<blockquote>\n<p>“Having Grok monitor AWS CloudWatch to highlight unusual patterns is\nextremely useful. It highlighted leading indicators of problems in my AWS\nenvironment, which helped me prevent downtime.” – Greg Krill, Data Center\nArchitect, Founder and Director, EdgeSense</p>\n</blockquote>\n<blockquote>\n<p>“Grok is unique in that it delivers at-a-glance insight on top of our\nexisting metrics. As it learns automatically, we spend less time maintaining\nit and more time working on our technology,” – Chris Alexander, SysAdmin and\nEngineer, Import IO</p>\n</blockquote>\n<p>If you’d like to see Grok, we will be exhibiting at the AWS Summit in NYC on\nJuly 10th.  Grok is also available on the AWS Marketplace with no license fee.</p>\n<p>We are recruiting for two positions in our marketing department, one for a\nproduct manager and one for a marketing manager [URL].  Help us find outstanding\npeople by sharing this information with your friends and colleagues!</p>\n<p>We look forward to sharing more exciting news over the summer as we continue to\ndrive new innovations with our technology.  Thanks for your continued interest\nand support.</p>\n"}

/***/ },
/* 1013 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"We’ve had a busy summer at Numenta. Since the launch of our first product, Grok for IT Analytics on Amazon Web Services (AWS), we’ve created a variety of demonstration applications to showcase","date":"2014/08/19","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"summer 2014 numenta nupic grok aws machine intelligence applications","title":"Machine Intelligence Applications 2014","body":"<p>We’ve had a busy summer at Numenta. Since the launch of our first product, Grok\nfor IT Analytics on Amazon Web Services (AWS), we’ve created a variety of\ndemonstration applications to showcase the breadth of the underlying\nHierarchical Temporal Memory (HTM) technology.  We’ve also restructured our web\nsite to highlight these new applications.</p>\n<p>First, let me give you an update on our product, Grok.  We recently released\n<a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6/ref=srh_res_product_title?ie=UTF8&amp;sr=0-2&amp;qid=1406131482540\">version 1.5</a>,\nwhich incorporates a great new web charting feature.  In addition,\nwe decided to eliminate the paid version of Grok in order to make it super easy\nfor customers to try and to deploy Grok.  If you are running an AWS installation\nbut haven’t tried out Grok, you can do so\n<a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6/ref=srh_res_product_title?ie=UTF8&amp;sr=0-2&amp;qid=1406131482540\">here</a>.</p>\n<p>Then, in addition to Grok, we’ve created a group of demonstration applications\nto show the potential use of our core technology in a variety of areas. We’ve\npublished white papers on two of the demonstrations:</p>\n<ul>\n<li>\n<p><a href=\"/assets/pdf/whitepapers/Geospatial%20Tracking%20White%20Paper.pdf\">Geospatial Tracking</a>:\nusing 2D or 3D speed and location data, learn travel patterns and detect\nanomalies in objects or people moving through the world</p>\n</li>\n<li>\n<p><a href=\"/assets/pdf/whitepapers/Rogue%20Behavior%20Detection%20White%20Paper.pdf\">Rogue Behavior Detection</a>:\nModel human behavioral patterns to highlight anomalies in employee actions\nsuch as financial trading patterns, computer and device usage, and internal\nsystem access.</p>\n</li>\n</ul>\n<p>An additional demonstration application looks at anomalies in stock volume\ntracking.  We are in our initial exploration of this application, but you can\nread more about it in this\n<a href=\"/blog/detecting-anomalies-in-stock-volumes.html\">blog entry</a>.</p>\n<p>Finally, we are doing some very exciting research with our partner\n<a href=\"http://www.cortical.io/\">Cortical IO</a>\non using HTM to predict and classify language using semantic encoding.</p>\n<p>We are getting more visibility for our progress as we start to showcase these\napplications.  You may want to read Dean Takahashi of VentureBeat’s article\n<a href=\"http://venturebeat.com/2014/07/09/numentas-brain-research-has-taken-a-long-nine-years-but-it-starting-to-pay-off-interview/\">here</a>.</p>\n<p>On August 20, Subutai Ahmad, our VP of Research will present “Understanding\nCortical Principles and Building Intelligent Machines” at the\n<a href=\"/events/cognitive-computing-forum.html\">Cognitive Computing Forum</a>\nin San Jose. If you’re interested, register using the discount code NUMENTA.</p>\n<p>I’d like to add a welcome to Celeste Baranski, who has joined us as VP\nEngineering, taking over the daily operations of our engineering group, enabling\nSubutai to dedicate himself to research and writing.</p>\n<p>Finally, we’re happy to celebrate the first anniversary of the creation of our\n<a href=\"http://numenta.org/\">NuPIC open source project</a>.\nNuPIC interest has grown steadily, and we are pleased to see the strength and\ncommitment building in this community.</p>\n<p>We will continue to update you as we build the demonstration applications into\nfull-featured applications and as our research efforts continue.</p>\n<p>Thank you for your ongoing interest in Numenta.</p>\n"}

/***/ },
/* 1014 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"I’m writing to let you know that we have two upcoming opportunities to learn about and try our technology: Our Numenta Training Workshop and NuPIC Fall Hackathon 2014","date":"2014/09/16","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"numenta training workshop nupic machine intelligence hackathon fall 2014","title":"Opportunities to Learn About and Try Numenta Technology - Fall Workshop and Hackathon","body":"<p>I’m writing to let you know that we have two upcoming opportunities to learn\nabout and try our technology:</p>\n<h3>Numenta Training Workshop</h3>\n<ul>\n<li>Friday, Oct 17 2014, 12pm - 6pm</li>\n<li>Redwood City, CA</li>\n</ul>\n<p><a href=\"https://www.eventbrite.com/e/numenta-training-workshop-registration-12898835765\">https://www.eventbrite.com/e/numenta-training-workshop-registration-12898835765</a></p>\n<p>This half-day workshop for developers will review Numenta theory, technology and\napplications. Content will consist of presentations about HTM theory, including\nsome detailed implementation topics, and will be technical in nature.  The\nworkshop will be followed by a networking reception.  If you have been\ninterested in our work and have wanted to get a thorough grounding in the\nsubject matter, or if you already are active in our community but would like an\nupdate on our progress, attending this workshop is a great idea.  Our capacity\nis limited, and early-bird pricing is available through September 26th, so we\nencourage you to register soon.</p>\n<h3>Numenta Fall NuPIC Hackathon</h3>\n<ul>\n<li>Saturday, Oct 18 2014 - Sunday, Oct 19 2014</li>\n<li>San Jose, CA</li>\n</ul>\n<p><a href=\"http://www.meetup.com/numenta/events/202402962/\">http://www.meetup.com/numenta/events/202402962/</a></p>\n<p>The NuPIC fall hackathon follows our workshop and will be a 32-hour all-weekend\nhackathon. We’ll start with a kickoff presentation from the NuPIC team,\nincluding a few words from Jeff Hawkins. During the event, we’ll help you get\nNuPIC installed and provide several informational sessions about NuPIC. The\nevent will end with demonstrations of hacks that attendees have created during\nthe event.\n(<a href=\"http://numenta.org/blog/2014/05/09/2014-spring-hackathon-outcome.html#demos\">See example of past demos here</a>).\nThe hackathon is appropriate both for experienced NuPIC developers as well as\nfor new developers.</p>\n<p>I hope you’ve had a chance to check out our updated web site, where we have\nreleased some new whitepapers, including an expanded version of\n<a href=\"/assets/pdf/whitepapers/Numenta%20White%20Paper%20-%20Science%20of%20Anomaly%20Detection.pdf\">The Science of Anomaly Detection</a>.</p>\n<p>I look forward to seeing many of you at the Workshop and/or the Hackathon.\nThank you for your ongoing interest in Numenta.</p>\n"}

/***/ },
/* 1015 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"We are pleased to report that Numenta has released version 1.6 of Grok for IT Analytics, which is available for no license charge on the AWS Marketplace. This version offers several new important features","date":"2014/11/11","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"grok 1.6 release aws amazon web services reinvent las vegas nov 2014 numenta it analytics","title":"Grok 1.6 Released - Showcasing at AWS ReInvent in Las Vegas, Nov 11-14","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<h3>Newsletter - November 11, 2014</h3>\n<p><strong>Grok 1.6 Released - Showcasing at AWS Re:invent in Las Vegas, Nov 11-14</strong></p>\n<p>We are pleased to report that Numenta has released version 1.6 of\n<a href=\"/grok/\">Grok for IT Analytics</a>, which is available for no\nlicense charge on the\n<a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6/ref=srh_res_product_title?ie=UTF8&amp;sr=0-2&amp;qid=1415482679002\">AWS Marketplace</a>.</p>\n<p>This version offers several new important features:</p>\n<ul>\n<li>\n<p>Annotation of data streams, which allows sharing of information and\ncollaboration among users</p>\n</li>\n<li>\n<p>Increased support for additional data formats</p>\n</li>\n<li>\n<p>Enhanced performance</p>\n</li>\n</ul>\n<p>Based on Numenta’s breakthrough\n<a href=\"/#technology\">Hierarchical Temporal Memory</a>\ntechnology, Grok monitors servers running on AWS and enables complex pattern\ndetection, automatic model building, and continuous learning. Grok output is\ndisplayed on a constantly updated mobile device, enabling IT professionals to\nassess the health of their systems anytime, anywhere.</p>\n<p>We will be showcasing this new version of Grok at the\n<a href=\"/events/AWS-reInvent.html\">AWS re:Invent conference</a>\nin Las Vegas, November 11-14.  If you are attending, please visit us and see\nGrok 1.6 in action at Booth #648.</p>\n<p>I’m also happy to announce that the videos from our Numenta Training Workshop\nheld Friday, October 17th, are now available on our web site.  You can access\nthese videos on the <a href=\"/learn/\">Learning Center</a>\npage of our website. This new material offers a great way to get up to speed on\nour work. Please check back on this page over the coming months as we plan to\nadd more content shortly.</p>\n<p>Thank you for your ongoing interest in Numenta.</p>\n"}

/***/ },
/* 1016 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"As a fun and educational kick-off to the year, we are offering our second Super Bowl sparse football pool. Entering the pool is free, and prizes are offered for the top five winners (note that because of legal constraints, those","date":"2015/01/26","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":null,"title":"Welcome to 2015!","body":"<h3>Newsletter - January 26, 2015</h3>\n<p><strong>Welcome to 2015!</strong></p>\n<p>As a fun and educational kick-off to the year, we are offering our second\n<strong>Super Bowl sparse football pool</strong>.  Entering the pool is free, and prizes are\noffered for the top five winners (note that because of legal constraints, those\npeople under 18 or outside of the U.S. cannot win prizes … but they still can\nplay for the glory of winning!).  Participating is a fun way to learn more about\nSparse Distributed Representations. Subutai explains here the details of the\npool:\n<a href=\"/blog/introducing-sparse-football-pool-ii-super-bowl-xlix.html\">Super Bowl Sparse Football</a>.</p>\n<p>In early January, we delivered <strong>NuPIC version 0.1</strong>, our\n<a href=\"http://numenta.org/news/2015/01/22/nupic-0.1-released.html\">first formal release</a>\nof NuPIC.  Says Matt Taylor, our NuPIC flag-bearer, “With the NuPIC 0.1 release,\nmost OS X and Linux users won’t need to compile from source code to install.\nThis makes the installation process much easier for those wanting to use NuPIC\nas a python project.”</p>\n<p>In other news, we look forward to an exciting year at Numenta.  We are beginning\nthe hard work of publishing more information on our algorithms, including\nsubmissions for peer reviewed papers.  We are progressing in the science with a\nlot of focus on sensory-motor integration.  For those interested in the details,\nthe concepts are often discussed in the\n<a href=\"http://lists.numenta.org/mailman/listinfo/nupic-theory_lists.numenta.org\">NuPIC Theory Mailing List</a>\nand in <a href=\"http://numenta.org/events.html\">NuPIC office hours</a>. We are continuing\nto support our product, <a href=\"http://numenta.com/grok/\">Grok for AWS</a>, and have an\nadditional demonstration application in the works to announce later this year.\nWe also will be speaking or exhibiting at a number of events this year,\nincluding:</p>\n<ul>\n<li><a href=\"/events/strata-hadoop-world.html\">Strata + Hadoop World</a>,\n2/20, Subutai (VP of Research) will give a talk on streaming analytics</li>\n</ul>\n<p>We are also planning a <strong>Spring NuPIC Hackathon</strong>, which we expect to be on the\nU.S. East Coast.  Be sure to follow us on\n<a href=\"https://twitter.com/Numenta?lang=en\">Twitter</a>\nand check our\n<a href=\"/events/\">events page</a> as more speaking appearances or events are announced.</p>\n<p>You might enjoy seeing a\n<a href=\"https://www.youtube.com/watch?v=f1tYXv6ST_U&amp;feature=youtu.be\">short video</a>\nfeaturing Jeff that describes our mission.\nIn an effort to communicate more about our work, you can expect to see more\nmaterial like this over the coming year.</p>\n<p>Best wishes for a happy new year!</p>\n"}

/***/ },
/* 1017 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"As part of the community interested in machine intelligence, you may be following the current public debate about whether artificial intelligence should be feared or encouraged. Jeff Hawkins recently","date":"2015/03/12","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"numenta newsletter march 2015","title":"Numenta Newsletter March 2015","body":"<h3>Numenta Newsletter</h3>\n<p><strong>March 12, 2015</strong></p>\n<p>As part of the community interested in machine intelligence, you may be\nfollowing the current public debate about whether artificial intelligence should\nbe feared or encouraged.  Jeff Hawkins recently wrote a thoughtful opinion piece\non this subject:\n<a href=\"http://recode.net/2015/03/02/the-terminator-is-not-coming-the-future-will-thank-us/\">The Terminator Is Not Coming. The Future Will Thank Us.</a>\nI hope you will have time to read Jeff’s piece and, if you find it worth\nsharing, to promote it within your social network.  We feel that the future of\nmachine intelligence is very exciting, and would welcome your help in spreading\nthe word.</p>\n<p>We have confirmed the date and location for our next NuPIC hackathon:  May 29-30\nin New York City. The 32-hour all-weekend event is our first east coast\nhackathon.  We hope that the New York location will facilitate attendance from\nthe east coast as well as from international locations.</p>\n<ul>\n<li><a href=\"http://www.meetup.com/numenta/events/220422020/\">RSVP on our event page</a></li>\n<li>Saturday, May 29 2015 – Sunday, May 30 2015</li>\n<li>Cornell Tech Campus in NYC</li>\n</ul>\n<p>Congratulations to the winners of our Sparse Football Pool (including me!)!\n<a href=\"/legal/results/sparse-football-pool-ii-2015.html\">See the results</a>\nand learn about the connection between football, HTM\nlearning algorithms and the brain in our\n<a href=\"/blog/super-bowl-neuroscience-sparse-pool-ii-2015-results.html\">blog post</a>.</p>\n<p>We also have two additional short videos about Numenta that I would like to\nshare:\n<a href=\"/?video=youtube:v-VvFRar5TY\">Intro to Technology</a> and\n<a href=\"/?video=youtube:9jWmS62MWx8\">Intro to Applications</a>.\nThese videos are a quick way to learn more about Numenta’s machine intelligence\ntechnology and its broad applicability, and are especially appropriate as\nintroductory videos for those new to our work.  Again, we hope you will share\nthese videos, along with Jeff’s overview video, with others who want to learn\nabout Numenta.</p>\n<p>Thank your for your ongoing interest in Numenta.</p>\n"}

/***/ },
/* 1018 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"I have a lot of exciting news to share. Rather than making the newsletter overly long, I’ve provided links to get more information on any of these topics.","date":"2015/04/29","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"numenta newsletter april 2015","title":"Numenta Newsletter April 2015","body":"<h3>Numenta Newsletter</h3>\n<p><strong>April 29, 2015</strong></p>\n<p>Dear Numenta newsletter subscriber:</p>\n<p>I have a lot of exciting news to share.  Rather than making the newsletter\noverly long, I’ve provided links to get more information on any of these topics.</p>\n<p>We’re pleased to let you know about the establishment of a Cortical Learning\nCenter at IBM, which is actively experimenting with Numenta’s technology.  You\ncan view what Winfried Wilcke, a senior IBM researcher,\n<a href=\"http://digitalops.sandia.gov/Mediasite/Play/1365ba62685c4c91a1cb7143c1e321cc1d\">has to say about his work</a>.</p>\n<p>In the publications arena, we have posted an important paper on the mathematical\nproperties of sparse distributed representations. You can <t render=\"hbs\"><a href=\"%7B%7Bsite.paths.ext.paper.sdr%7D%7D\">read it here</a></t>.</p>\n<p>We also have a hackathon coming up.  For the first time, we are coming to the\neast coast for this hackathon:  May 30-31 in New York City.  Many of our Numenta\nengineers will be attending, as well as Jeff Hawkins and Subutai Ahmad.<br>\n<a href=\"http://numenta.org/events/hackathon/2015/may/\">There are still spaces left</a>!</p>\n<p>We have another project brewing called the Numenta Anomaly Benchmark.  We have\nfound it difficult to benchmark our algorithms given how few benchmarks exist\nwith streaming data.  Consequently we have decided to create an open source\nbenchmark ourselves in the hope that it becomes an industry standard for\nreal-time anomaly detection.  If you are interested in this project and,\nspecifically, if you have some streaming data sets that you can share, please\ncontact us at <a href=\"mailto:nab@numenta.org\">nab@numenta.org</a>.  We plan to have the\nNumenta Anomaly Benchmark available around the end of the summer.</p>\n<p>We’ve had a lot of positive reactions to Jeff’s article on the\n<a href=\"http://recode.net/2015/03/02/the-terminator-is-not-coming-the-future-will-thank-us/\">reality of AI dangers</a>,\nso be sure to view some of the commentary:</p>\n<ul>\n<li><a href=\"http://www.forbes.com/sites/anthonykosner/2015/04/20/what-really-scares-tech-leaders-about-artificial-intelligence/\">What Really Scares Tech Leaders about Artificial Intelligence</a></li>\n<li><a href=\"http://www.forbes.com/sites/anthonykosner/2015/04/21/graph-theory-helps-to-decode-the-ai-fears-of-tech-leaders/\">Graph Theory Helps To Decode The AI Fears of Tech Leaders</a></li>\n</ul>\n<p>Lastly, we have an opening in marketing at Numenta.  If HTM and machine\nintelligence is a passion of yours, and you have a strong marketing\ncommunications background, please consider\n<a href=\"http://numenta.com/careers/\">applying for our position</a>.</p>\n<p>We are excited about the momentum growing behind HTM technology and hope you’ll\nhave a chance to review some of these developments.</p>\n"}

/***/ },
/* 1019 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"I am excited to let you know that we recently announced a relationship with Cortical.io, an innovative company based in Austria that is working on the next generation of natural language processing: language intelligence. Cortical.io has created a technology that can","date":"2015/05/14","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"numenta newsletter may 2015 announcing relatioship cortical.io","title":"May 2015 Newsletter: Cortical.io Relationship","body":"<h3>Numenta Newsletter</h3>\n<p><strong>May 14, 2015</strong></p>\n<p>Dear Numenta newsletter subscriber:</p>\n<p>I am excited to let you know that we recently announced a relationship with\n<a href=\"http://Cortical.io\">Cortical.io</a>, an innovative company based\nin Austria that is working on the next generation of natural language\nprocessing: language intelligence. <a href=\"http://Cortical.io\">Cortical.io</a> has created a technology that can\ntranslate text into sparse distributed representations, called Semantic Folding.\nBy using <a href=\"http://Cortical.io\">Cortical.io</a>’s Semantic Folding technology in combination with HTM, we\nplan to tackle problems in language that have frustrated computer scientists for\nmany years. To learn more about <a href=\"http://Cortical.io\">Cortical.io</a>, you can read our\n<a href=\"/press/numenta-and-cortical-io-form-strategic-partnership.html\">press release</a>,\nview the <a href=\"http://Cortical.io\">Cortical.io</a> <a href=\"http://cortical.io/\">website</a>, or try the <a href=\"http://Cortical.io\">Cortical.io</a> API\nat <a href=\"https://aws.amazon.com/marketplace/seller-profile?id=c88ca878-a648-464c-b29b-38ba057bd2f5\">AWS</a>.</p>\n<p>I also wanted to draw your attention to a new paper about HTM written by\nSebastian Billaudelle, with Subutai Ahmad, our VP Research. As part of the\nEuropean based Human Brain Project, Sebastian spent several months at Numenta\nporting HTM to the Heidelberg Neuromorphic Computing Platform, with positive\nresults. Sebastian implemented HTM using spiking neurons, which are complex\nmodels often used by neuroscientists to reproduce actual biophysical\ncharacteristics of neurons. You can read about his work <t render=\"hbs\"><a href=\"%7B%7Bsite.paths.ext.paper.neuromorph%7D%7D\">here</a></t>.</p>\n<p>We have several great projects under development and look forward to sharing\nmore with you over the coming months.</p>\n"}

/***/ },
/* 1020 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"In order to encourage our developers and to facilitate the creation of applications, we have decided to release substantially more of our technology into open source. To that end, we just added to the code base two complete products","date":"2015/06/09","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"numenta open source htm products apps applications nupic june 2015 newsletter donna dubinsky","title":"June 2015 Newsletter: Numenta Releasing Two Complete HTM Products into Open Source","body":"<h3>Numenta Newsletter</h3>\n<p><strong>June 09, 2015</strong></p>\n<p>Dear Numenta newsletter subscriber:</p>\n<p>I’m writing to update you on exciting news for our open source project, NuPIC.</p>\n<p>In order to encourage our developers and to facilitate the creation of\napplications, we have decided to release substantially more of our technology\ninto open source. To that end, we just added to the code base two complete\nproducts: Grok for IT Analytics and HTM for Stocks (an example application\nthat will be made available to end users shortly). The released code for these\nproducts includes the HTM Engine as well as two different Android applications.\nThe HTM Engine runs multiple anomaly models in an easy, scalable way, allowing a\nsingle server to manage and run thousands of HTM models. The Android\napplications act as a client to the HTM engine, pulling in the data to display\nit in a human-understandable format. We are developing tutorials that will help\ndevelopers come up to speed on this new technology.</p>\n<p>This source code has been open-sourced under the AGPLv3.0 license<sup><a href=\"#agpl\">*</a></sup>. You can find\nall the code on <a href=\"https://github.com/numenta/numenta-apps\">GitHub</a>.</p>\n<p>We hope that developers will find this source code beneficial as example\napplications of NuPIC. If you are interested in creating a commercial\napplication using this code, you may do so in accordance with the terms of the\nAGPLv3<sup><a href=\"#agpl\">*</a></sup>, or may <a href=\"mailto:sales@numenta.com\">write us</a> to request a separate,\ncommercial license if you prefer different terms. Commercial licenses are\nhandled on a case-by-case basis. For more information on our open source\nlicensing, see: <a href=\"http://numenta.org/licenses/\">License</a>,\n<a href=\"http://numenta.org/blog/2013/07/01/patent-position.html\">Patent Position</a>,\n<a href=\"http://numenta.org/blog/2013/12/16/nupic-commercial-licenses.html\">Commercial Licenses</a>.</p>\n<p>We invite you to join our growing open source community.</p>\n<p><small id=\"agpl\" class=\"disclaimer\"><sup>*</sup> This content has been updated to reflect our <a href=\"http://numenta.org/blog/2015/08/17/licensing-update.html\">new AGPL license</a>.</small></p>\n"}

/***/ },
/* 1021 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"Over the last two years, we have created a series of example applications that illustrate the capabilities of HTM. Grok for IT Analytics, available for download on the Amazon Web Services Marketplace","date":"2015/07/02","featured":false,"image":"../images/image.png","org":"CEO","tags":"htm for stocks monitor stock price volume twitter anomaly outlier detection numenta open source htm app application nupic","title":"July 2015 Newsletter: Announcing HTM for Stocks - Open Source Example HTM App","body":"<h3>Numenta Newsletter</h3>\n<p><strong>July 02, 2015</strong></p>\n<p>Dear Numenta newsletter subscriber:</p>\n<p>Over the last two years, we have created a series of example applications that\nillustrate the capabilities of HTM.  Grok for IT Analytics, available for\ndownload on the Amazon Web Services Marketplace, uses HTM to detect anomalies in\nAWS server metrics. We have published source code for several other example\napplications that use HTM to detect anomalies in human behavior, and in GPS\ndata. But up until now it hasn’t been easy for an individual to get a sense of\nhow HTM-based anomaly detection works; you either need to bring up an AWS server\ninstance, or put in a reasonable amount of software development effort.</p>\n<p>So we have created a new example application, called HTM for Stocks, which\nmakes it much easier for you to experience how HTM detects anomalies. HTM for\nStocks is available for free here:\n<a href=\"http://numenta.com/htm-for-stocks/#get\">Download HTM for Stocks</a>. At this\npoint, the application is available only for an Android mobile device.</p>\n<p>HTM for Stocks applies HTM modeling and anomaly detection to 200 large\ncapitalization public companies.  The application automatically models three\ndata streams for each stock:  stock volume, stock price, and Twitter volume.  It\nfigures out “normal” for each of these data streams for each company, and then\nlets you know if something abnormal has occurred.</p>\n<p>Here is what we hope you will notice when using HTM for Stocks:</p>\n<ul>\n<li>\n<p>HTM enables automatic modeling of many models here, we are creating 600\nseparate models (3 for each of 200 companies).  No human intervention is\nrequired to adjust parameters or tune models.</p>\n</li>\n<li>\n<p>HTM models learn continuously, with each new data point.  If a company changes\nits fundamentals, taking its stock volume to a new level, at first it will\nshow an anomaly, but after a short period, it will learn the “new normal”.</p>\n</li>\n<li>\n<p>The models are ranked by the most anomalous to the least anomalous.  If you\nscroll down, you will note that many of the stocks show no anomalies.  This\nranking of anomalies allows you to focus on the companies that are the most\ndifferent from the norm.</p>\n</li>\n</ul>\n<p><img src=\"/assets/img/pages/newsletters/2015-07-02/homescreen.png\" alt=\"HTM for Stocks Home Screen\"></p>\n<p>Some of the anomalies detected by HTM for Stocks may appear obvious but others\nare subtle and not easily detected by a human.  For example, if you watch stock\nvolumes, you will see that there often is a spike in the beginning and at the\nend of the trading day.  It will notice if those spikes continue longer than\nnormal for that particular stock.  Such examples demonstrate the power of\nfinding temporal patterns</p>\n<p>When you see an anomaly, it’s very informative to look at the Twitter stream for\nthe corresponding time frame.  There, you often will be able to quickly\ndetermine the reason for the anomaly, such as an earnings announcement, a\ntakeover bid, a lawsuit, or a rapidly growing interest in something the company\ndid.</p>\n<p>In keeping with our focus as a technology provider, we do not intend to build\nHTM for Stocks into a full commercial application, and so we have provided the\nsource code for HTM for Stocks alongside our NuPIC open source project at\n<a href=\"https://github.com/numenta/numenta-apps\">https://github.com/numenta/numenta-apps</a>, available under a AGPL v3 license<sup><a href=\"#agpl\">*</a></sup>.\nDevelopers may find that HTM for Stocks code can be used to create derivative\nproducts that track other data streams.  We also welcome partners who are\ninterested in a commercial license to the HTM for Stocks code; in this case\nplease write to <a href=\"mailto:sales@numenta.com\">sales@numenta.com</a>.</p>\n<p>We hope that you will enjoy using HTM for Stocks.  We welcome your feedback at\n<a href=\"mailto:feedback@numenta.com\">feedback@numenta.com</a>.</p>\n<p><small id=\"agpl\" class=\"disclaimer\"><sup>*</sup> This content has been updated to reflect our <a href=\"http://numenta.org/blog/2015/08/17/licensing-update.html\">new AGPL license</a>.</small></p>\n"}

/***/ },
/* 1022 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cdab7706d731991a537d9dc21122f4df.png";

/***/ },
/* 1023 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "abda5eaeb6988ea8400602a45d868cce.png";

/***/ },
/* 1024 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3ca6fed4dbd467a7b83e6e8e33b948be.png";

/***/ },
/* 1025 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a382c402d5750bc0bd75bef85be34422.png";

/***/ },
/* 1026 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"I am excited to tell you about a new partnership between Numenta and Avik Partners, an IT services and advanced analytics company. Before I tell you more about Avik, I want to remind you of our strategy for","date":"2015/09/01","featured":false,"image":"../images/image.png","org":"CEO","tags":"numenta partnership avik partners grok stream for it analytics","title":"September 2015 Newsletter: Partnership between Numenta and Avik Partners on Grok for IT Analytics","body":"<h3>Numenta Newsletter</h3>\n<p><strong>September 01, 2015</strong></p>\n<p>Dear Numenta newsletter subscriber:</p>\n<p>I am excited to tell you about a new partnership between Numenta and Avik\nPartners, an IT services and advanced analytics company.</p>\n<p>Before I tell you more about Avik, I want to remind you of our strategy for\ndeploying HTM technology.  Over the past few years we have made excellent\nprogress in turning HTM cortical theory into a valuable technology, first for\nstreaming analytics, but ultimately as a core component of machine intelligence.\nIn order to demonstrate how HTM technology can be used, we created several\nexample applications.  Our plan is to partner with applications developers to\nbring commercial solutions to the market while we focus on developing the\nscience and technology.  Earlier this year we announced our first such\nrelationship with <a href=\"http://Cortical.io\">Cortical.io</a>, a company using HTM technology for natural\nlanguage applications.</p>\n<p>Avik Partners is our second commercial partnership.  Casey Kindiger, CEO of\nAvik, is a proven entrepreneur with deep experience in IT and developer\noperations.  Casey became intrigued with our Grok for IT Analytics example\napplication, recognizing the substantial commercial potential for our advanced\nanomaly detection capability in the IT environment, and approached us about a\nlicense.</p>\n<p>Our relationship with Avik is structured as a strategic partnership.  Avik will\nassume our Grok for IT product (including the name Grok), enhance the\napplication with the many features that have been requested, and market it to\nenterprise IT organizations.  Avik will be doing business on the\n<a href=\"http://grokstream.com\">http://grokstream.com</a> website, where you can sign up to receive information\nwhen the product is available.  We expect to complete the transition of the Grok\nfor IT Analytics product to Avik within 30 days.  As part of the license,\nNumenta has taken a minority ownership position in Avik.</p>\n<p>We believe that Avik is an ideal partner to apply HTM technology to solve major\nproblems in complex IT organizations.  Given the breadth of potential HTM\napplications, we are excited about our discussions with several other potential\nlicensees who want to apply HTM technology to a wide variety of application\ndomains.  Over time, we hope to establish a constellation of partners building\nintelligent applications using HTM technology.</p>\n<p>In order to facilitate consideration of a license, we have created several\nstandard license options.  We realize that these standard licenses won’t fit\nevery situation, so we also offer custom licenses.  We have just published a new\n<a href=\"/assets/pdf/apps/licensing-guide.pdf\">license guide</a> with details.  If you are\ninterested in becoming a licensee, please review this document, and feel free to\nwrite to us at <a href=\"mailto:sales@numenta.com\">sales@numenta.com</a>.</p>\n<p>Please join me in congratulating Casey and Avik Partners.  We look forward to\nworking together to bring machine intelligence to improve management of IT\ninfrastructure.</p>\n"}

/***/ },
/* 1027 */
538,
/* 1028 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "74267284c3a0a1764fde6bcfd45a62cd.png";

/***/ },
/* 1029 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"To start with, I’m pleased to announce that we have a paper accepted on the Numenta Anomaly Benchmark (NAB).  I’ve written to you about the development of","date":"2015/10/01","featured":false,"image":"../images/image.png","org":"CEO","tags":"numenta anomaly benchmark nab numenta htm challenge nupic onsite november 2015","title":"Numenta Anomaly Benchmark (NAB), and Numenta HTM Challenge","body":"<h3>Numenta Newsletter October 2015</h3>\n<h4>Numenta Anomaly Benchmark (NAB), and Numenta HTM Challenge</h4>\n<p>To Numenta newsletter subscribers:</p>\n<p>I’m writing with a few exciting updates from Numenta.</p>\n<p>To start with, I’m pleased to announce that we have a paper accepted on the\nNumenta Anomaly Benchmark (NAB).  I’ve written to you about the development of\nNAB in the past.  NAB is essentially two things.  First, it consists of over 50\nstreaming data files with anomalies that are marked for ground truth.  These\nfiles are a combination of real-world data sets along with some simulated data\nsets.  Second, there is a scoring mechanism that is designed for streaming data.\nNumenta’s HTM algorithms do a great job at finding temporal structure, learning\ncontinuously, and detecting anomalies early.  These are valuable properties for\nreal-time streaming applications but benchmarks designed for batch data don’t\nincorporate them. For example, traditional benchmarks do not give “credit” for\nfinding an anomaly sooner rather than later.  Our development of NAB is an\neffort to create such a benchmark.</p>\n<p>We will be releasing NAB into open source such that the community can add new\ndata sets, propose different scoring mechanisms, and test/compare other\nalgorithms with HTM.  We hope that the developers in the community will get\nbehind NAB and enable a robust comparison of our anomaly detection with other\ntechniques.</p>\n<p>For more information on NAB, <a href=\"https://github.com/numenta/NAB\">go here</a>. We will\nbe presenting NAB at two conferences\n(<a href=\"http://mlconf.com/events/san-francisco-ca/\">MLconf SF</a> on November 13 in\nSan Francisco, and the\n<a href=\"http://www.icmla-conference.org/icmla15/\">IEEE Conference on Machine Learning and Applications</a>\non December 9-11 in Miami), so if you are in the vicinity, we hope you will be\nable to attend. Of course, once the paper is published, we will send you\nthe link.</p>\n<p>My second topic is an update from the NuPIC community.  We recently announced\nthe HTM Challenge.  The idea of the HTM Challenge is to provide a structure to\nencourage members of our open source community to create HTM sample\napplications. And, to add an extra incentive, we’re offering cash prizes of\n$3000 for first place, $2000 for second place and $1000 for third place, along\nwith some fun door prizes.</p>\n<p>The <a href=\"http://htmchallenge.devpost.com/\">Numenta HTM Challenge</a> is an online\ncontest open for submissions now and running until November 14th. Participants\npropose ideas for real-world applications of HTM technology and submit them for\napproval before starting work. We will check that the problem being solved is\napplicable to HTM, and that the data being analyzed is a good fit for HTM.\nOnce a project has been approved, hackers have until November 6th to work on it\nand submit a demo video for judging.</p>\n<p>This Challenge can be completed entirely online, but we encourage you to try to\nattend the <a href=\"http://www.meetup.com/numenta/events/224711586/\">onsite event</a> that\nculminates the Challenge on Saturday, November 14 in Redwood City, California.\nAt this event, all demonstration videos will be viewed by a judging panel and a\nlive audience. Judges will get a chance to comment and ask questions to\nsubmission authors (either live or over the phone). At the end of the event,\nwe’ll announce the winners and cash prizes will be awarded.</p>\n<p>In addition to judging, there will also be at least two educational sessions by\nNumenta team members Subutai Ahmad and Jeff Hawkins. They will be talking about\nthe history and evolution of HTM algorithms, the Numenta Anomaly Benchmark, and\nsome details about new algorithm development.</p>\n<p>You don’t have to participate in the Challenge to attend the onsite event.\nMaybe you just want to come see the latest presentations from Numenta or watch\nthe Challenge demonstration judging. That’s great! We welcome you to mingle with\nus HTM enthusiasts.\n<a href=\"http://www.meetup.com/numenta/events/224711586/\">Register here</a>.</p>\n<p>And as long as you’ll be in the area, there is a community event being planned\non Friday, November 13, the day before the onsite event. I hope you’ll come meet\nthe rest of the HTM community. This event is run by the NuPIC community, for the\nNuPIC community. A schedule is in the works.\n<a href=\"http://www.meetup.com/numenta/events/224711563/\">RSVP here</a>.</p>\n<p>Stay tuned for more information on NAB and on the HTM Challenge.  I’ll update\nyou as both projects develop.</p>\n<p>Lastly, let me remind you that Avik Partners has now taken over the Grok for IT\nproduct.  They have enhanced the product and are now in\n<a href=\"http://grokstream.com/\">beta</a>. If you want to experience breakthrough anomaly\ndetection on IT infrastructure, register to give it a try.</p>\n"}

/***/ },
/* 1030 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "662d816ee2af5ceb8e89c8f86953f183.png";

/***/ },
/* 1031 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1ce690e83fe0b9e7a935c4af2f75e944.png";

/***/ },
/* 1032 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"As I wrote you last month, we have been working hard on creating NAB, the Numenta Anomaly Benchmark, to test the HTM learning algorithms and enable comparison with other algorithms. Now, it’s here!","date":"2015/11/10","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"numenta anomaly benchmark nab released open source streaming data","title":"Numenta Anomaly Benchmark (NAB) is Released, Open Source with White Paper","body":"<h3>Numenta Newsletter November 2015</h3>\n<h4>Numenta Anomaly Benchmark (NAB) is Released, Open Source with White Paper</h4>\n<p>To Numenta newsletter subscribers:</p>\n<p>As I wrote you last month, we have been working hard on creating NAB, the\nNumenta Anomaly Benchmark, to test the HTM learning algorithms and enable\ncomparison with other algorithms.  Now, it’s here!</p>\n<p>We have found the need to create a benchmark for many reasons, including:</p>\n<ul>\n<li>\n<p>We sought a benchmark that incorporated time series data, i.e. that gives\n“credit” if you find an anomaly earlier rather than later.</p>\n</li>\n<li>\n<p>We wanted a benchmark that incorporated learning … if something about the\nsituation changes, and there is a “new normal”, does the algorithm keep\nfinding anomalies (false positives), or does it automatically adjust?</p>\n</li>\n<li>\n<p>We wanted real-world data files that have labeled anomalies …. did a machine\nfail?  Was it taken off line?  Knowing “ground truth” is important to evaluate\nwhether an algorithm correctly identifies an anomaly.</p>\n</li>\n<li>\n<p>We wanted an open dataset and code… in order for a benchmark to be accepted by\nthe community, it must be accessible to everyone.</p>\n</li>\n<li>\n<p>We saw the need for a new way of scoring.  Scoring can be tricky because you\nneed to think through questions such as:  if you see the anomaly TOO far in\nadvance, perhaps it is not related, and you didn’t really spot it …. how far\nin advance would that be?</p>\n</li>\n</ul>\n<p>We are now pleased to announce that the <a href=\"http://www.businesswire.com/news/home/20151110006297/en/Numenta-Anomaly-Benchmark-Evaluates-Anomaly-Detection-Techniques\">Numenta Anomaly Benchmark (NAB) is released</a>.\nYou can read the technical paper <t render=\"hbs\"><a href=\"%7B%7Bsite.paths.ext.paper.nab%7D%7D\">here</a></t>.\nThe paper describes our data files, our scoring mechanism, and the test results\nof HTM algorithms along with other, publicly available anomaly detection\nalgorithms.  And, if you want to have a look at the code yourself, it is all in\nopen source.  You can <a href=\"https://github.com/numenta/NAB\">see it here</a>.</p>\n<p>For those readers less interested in technical details, we have created a more\nbusiness focused paper, which you can\n<a href=\"http://numenta.com/assets/pdf/numenta-anomaly-benchmark/NAB-Business-Paper.pdf\">download here</a>.</p>\n<p>Our hope is that we can build a community around NAB.  We’d like to collect\nadditional labeled data files that can be used for future versions.  We expect\nthat others will test their algorithms using our data files and scoring, and\ncompare and publish the results.  Since it is open source, companies can test\ntheir internal algorithms without sharing the results as well, although we hope\nthat they will.   We have received positive feedback from the research community\nso far, and we are confident that NAB will grow over time into a very useful\ntool.</p>\n<p>As a reminder, we will be presenting NAB at two conferences\n(<a href=\"http://mlconf.com/events/san-francisco-ca/\">MLconf SF</a> on November 13 in San\nFrancisco, and the\n<a href=\"http://www.icmla-conference.org/icmla15/\">IEEE Conference on Machine Learning and Applications</a>\non December 9-11 in Miami), so if you are in the vicinity, we hope you will be\nable to attend.</p>\n<p>I’m happy to share a couple updates from our strategic partners:\n<a href=\"http://www.grokstream.com/\">Avik Partners</a> and\n<a href=\"http://www.cortical.io/\">Cortical.io</a>. Avik Partners has had a successful beta\nfor Grok for IT and they’re getting ready to launch Grok 2.0.  <a href=\"http://Cortical.io\">Cortical.io</a>\nrecently announced its latest venture capital round of $1.8M and the opening of\nits San Francisco office.  We’re excited to see their progress in next\ngeneration natural language processing.</p>\n<p>Lastly, for any of you that are in the Bay Area, we’d love to see you at our HTM\nChallenge event this weekend.  If you can’t attend in person, you can still help\nchoose the winner.  Public voting for the 12 applications is now open.  Read\nthis blog post to learn more and cast your vote:</p>\n<p><a href=\"http://numenta.org/blog/2015/11/09/vote-for-the-best-htm-challenge-submissions.html\">http://numenta.org/blog/2015/11/09/vote-for-the-best-htm-challenge-submissions.html</a></p>\n"}

/***/ },
/* 1033 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "098825976cc10c5b5fe63583dcdef725.png";

/***/ },
/* 1034 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"November is shaping up to be a busy and exciting month for Numenta. I wrote you about the release of our Numenta Anomaly Benchmark (NAB). Today I’m pleased to share more good news. Founders Jeff Hawkins and Subutai Ahmad have written a paper that","date":"2015/11/17","featured":false,"image":"../images/image.png","org":"CEO","tags":"numenta machine learning intelligence neurons thousands synapses theory sequence memory neocortex","title":"Why Neurons Have Thousands of Synapses, A Theory of Sequence Memory in Neocortex","body":"<h3>Numenta Newsletter — November 17, 2015</h3>\n<h4>Why Neurons Have Thousands of Synapses, A Theory of Sequence Memory in Neocortex</h4>\n<p>To Numenta newsletter subscribers:</p>\n<p>November is shaping up to be a busy and exciting month for Numenta.\n<a href=\"/newsletters/numenta-anomaly-benchmark-nab-open-source-with-white-paper.html\">Earlier this month</a>,\nI wrote you about the release of our Numenta Anomaly Benchmark (NAB). Today I’m\npleased to share more good news.</p>\n<p>Numenta founders Jeff Hawkins and Subutai Ahmad have written a paper that we\nbelieve will become a seminal work in the field of biological and machine\nintelligence. It is titled, “Why Neurons Have Thousands of Synapses, A Theory of\nSequence Memory in Neocortex.”  We posted the paper to an academic archive a\ncouple of weeks ago. This makes it available while it is undergoing the peer\nreview process.</p>\n<p>MIT Technology Review noticed and wrote a thoughtful article about the paper\nthat explains the concepts and their importance in a very understandable way. We\nthought we’d share both the MIT Technology Review article and our paper. If you\nare interested in Numenta, brain theory, and machine intelligence I think you\nwill be interested in reading them.</p>\n<p><strong>MIT Technology Review article:</strong> <br/>\n<a href=\"http://www.technologyreview.com/view/543486/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns/\">http://www.technologyreview.com/view/543486/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns/</a></p>\n<p><strong>Numenta paper:</strong> <br/> <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.ext.paper.sequence%7D%7D\">{{site.paths.ext.paper.sequence}}</a>\n</t></p>\n"}

/***/ },
/* 1035 */
/***/ function(module, exports) {

	module.exports = {"author":"Donna Dubinsky","brief":"As we look forward to a bright 2016 here at Numenta, I thought I’d pause and review the highlights of 2015.  From advancing our research to expanding our community, we had many accomplishments that laid the groundwork for significant","date":"2016/01/07","featured":false,"image":"../../../../images/numenta.png","org":"CEO","tags":"numenta 2015 review partners cortical.io avik grok nlp semantic folding nab numenta anomaly benchmark","title":"Year in Review for Numenta 2015","body":"<h3>Numenta Newsletter — January 07, 2016</h3>\n<p>As we look forward to a bright 2016 here at Numenta, I thought I’d pause and\nreview the highlights of 2015.  From advancing our research to expanding our\ncommunity, we had many accomplishments that laid the groundwork for significant\nprogress going forward. I’d like to share four highlights.</p>\n<ol>\n<li>In 2015, we signed up two key strategic partners:\n<a href=\"http://www.cortical.io/\">Cortical.io</a> and\n<a href=\"http://www.grokstream.com/#home\">Avik Partners</a>.  In May, we\n<a href=\"http://numenta.com/press/numenta-and-cortical-io-form-strategic-partnership.html\">announced our Cortical.io partnership</a>,\nwhich focuses on advancing natural language processing (NLP).  We believe that\nthe combination of our HTM technology and Cortical’s Semantic Folding\ntechnology provides new possibilities to understanding text.  Co-founder\nFrancisco Webber has been a long-time supporter of Numenta. We look forward to\ncontinued collaboration with him and his team.</li>\n</ol>\n<p>In August, we\n<a href=\"http://numenta.com/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced our partnership with Avik Partners</a>,\nan IT services and advanced analytics startup to whom we transferred our Grok\napplication.  In a short time, Avik CEO Casey Kindiger launched a\n<a href=\"http://www.grokstream.com/#home\">commercial application</a> to use Grok to\nmonitor IT infrastructure. This partnership is a great example of our\n“technology transfer” business model where other companies complete and\ncommercialize our example applications.</p>\n<p>We can’t wait to see exciting results from <a href=\"http://Cortical.io\">Cortical.io</a> and Avik Partners, and\nI hope to share news of additional partnerships with you in the coming year.</p>\n<ol start=\"2\">\n<li>\n<p>We also released the\n<a href=\"http://numenta.com/numenta-anomaly-benchmark/\">Numenta Anomaly Benchmark (NAB)</a>,\nwhich was two years in the making.  We believe NAB offers the definitive way\nto assess the performance of algorithms for detecting anomalies in streaming\ndata.  We presented NAB v1.0 at two conferences and continue to get positive\nfeedback supporting the need for this benchmark. The launch was just the\nbeginning for NAB. We are actively working to collect additional data sources\nand publish additional algorithm results to incorporate in the next version.\nStay tuned for details on a NAB competition we are running this year in\nconjunction with the\n<a href=\"http://www.wcci2016.org/programs.php?id=home\">IEEE World Congress on Computational Intelligence</a>.</p>\n</li>\n<li>\n<p>This year also was a great year for our growing <a href=\"http://numenta.org/\">NuPIC</a>\ncommunity, which received a Top 3 ranking in a KDNuggets report on the\n<a href=\"http://www.kdnuggets.com/2015/06/top-20-python-machine-learning-open-source-projects.html\">Top 20 Python Machine Learning Open Source Projects</a>.\nWe increased the number of NuPIC followers by 750, put more of our technology\ninto open source, and had two hackathons that demonstrated the\n<a href=\"http://numenta.com/blog/htm-challenge-2015-results.html\">broad applicability of HTM applications</a>.\nI encourage you to\n<a href=\"https://www.youtube.com/playlist?list=PL3yXMgtrZmDqZc2m7qI3Kkbmxechp2-Zs\">view the videos</a>\nfrom our most recent hackathon.</p>\n</li>\n<li>\n<p>Perhaps one of the most exciting achievements of 2015 was the progress toward\na goal that we set at the beginning of the year: to <a href=\"/papers/\">publish major papers</a> about our work.\nWe have several papers undergoing peer review, which we’ve  made available\npre-publication on arxiv, an academic archive. I hope to be  sharing news of\npublication over the coming months, but in the meantime, you  can find all our\npapers on arxiv, here:</p>\n</li>\n</ol>\n<ul>\n<li>\n<p><a href=\"http://arxiv.org/abs/1511.00083\">Why Neurons Have Thousands of Synapses, A Theory of Sequence Memory in Neocortex</a>\n(Preprint of journal submission) – Foundational paper describing core HTM\ntheory for sequence memory and its relationship to the neocortex. Written\nwith a neuroscience perspective, the paper explains why neurons need so many\nsynapses and how networks of neurons can form a powerful sequence learning\nmechanism.</p>\n</li>\n<li>\n<p><a href=\"http://arxiv.org/abs/1512.05463\">Continuous online sequence learning with an unsupervised neural network model</a>\n(Preprint of journal submission) – Analysis of HTM sequence memory applied\nto various sequence learning and prediction problems. Written with a machine\nlearning perspective, the paper contains some comparisons to statistical and\nDeep Learning techniques.</p>\n</li>\n<li>\n<p><a href=\"http://arxiv.org/abs/1510.03336\">Evaluating Real-time Anomaly Detection Algorithms</a> -\nthe Numenta Anomaly Benchmark  (Published conference paper) – This paper\ndiscusses how we should think about anomaly detection for streaming\napplications. It introduces a new open-source benchmark for detecting\nanomalies in real-time, time-series data.</p>\n</li>\n<li>\n<p><a href=\"http://arxiv.org/abs/1601.00720\">How do neurons operate on sparse distributed representations? A mathematical theory of sparsity, neurons and active dendrites</a>\n(Preprint of journal submission) – This paper describes a mathematical model\nfor quantifying the benefits and limitations of sparse representations in\nneurons and cortical networks.</p>\n</li>\n<li>\n<p><a href=\"http://arxiv.org/abs/1503.07469\">Properties of Sparse Distributed Representations and their Application to Hierarchical Temporal Memory</a> –\nAn earlier version of the above submission, this paper applies our\nmathematical model of sparse representations to practical HTM systems.</p>\n</li>\n<li>\n<p><a href=\"http://arxiv.org/abs/1505.02142\">Porting HTM Models to the Heidelberg Neuromorphic Computing Platform</a> –\nRecently there has been much interest in building custom hardware\nimplementations of HTM systems. This paper discusses one such scenario, and\nshows how to port HTM algorithms to analog hardware platforms such as the\none developed by the Human Brain Project.</p>\n</li>\n</ul>\n<p>As we kick off 2016, I am excited for what’s in store.  We are working to make\nNumenta technology even more accessible. We have several events and publications\nplanned. And we will remain dedicated to driving the creation of machine\nintelligence through neocortical principles.</p>\n<p>Best wishes for a Happy New Year.</p>\n"}

/***/ },
/* 1036 */
/***/ function(module, exports) {

	module.exports = {"author":"Christy Maver","brief":"This month, I am pleased to announce the Numenta Anomaly Benchmark competition offered in conjunction with the IEEE WCCI (World Congress on Computational Intelligence). This contest follows the release last fall of our","date":"2016/02/10","featured":false,"image":"../../../../images/numenta.png","org":"Director of Marketing","tags":"numenta anomaly benchmark competition research papers strata hadoop world","title":"Announcing the Numenta Anomaly Benchmark Competition","body":"<h3>Numenta Newsletter — February 10, 2016</h3>\n<p>I’m excited to update you on what’s happening at Numenta this month, but before\nI do, I want to introduce myself, as some of you may notice a new name at the\nbottom of this newsletter. I joined Numenta as the Director of Marketing last\nfall, and I look forward to keeping you up to date on the latest Numenta news.</p>\n<p>This month, I am pleased to announce the\n<a href=\"http://numenta.org/nab/\">Numenta Anomaly Benchmark competition</a>,\noffered in conjunction with the\n<a href=\"http://www.wcci2016.org/programs.php?id=home\">IEEE WCCI (World Congress on Computational Intelligence)</a>.\nThis contest follows the release last fall of our\n<a href=\"http://numenta.com/numenta-anomaly-benchmark/\">Numenta Anomaly Benchmark</a>,\nwhich is designed to test algorithms that detect anomalies in\nstreaming data and reward early detection.</p>\n<p>The competition provides cash awards for two categories: algorithms and\ndatasets.  In the algorithms category, we’re looking for others to test and\npublish results of running anomaly detection algorithms on NAB.  For the dataset\ncategory, we’re looking for real-world, time-series data with labeled anomalies.\nWinning entrants that are participating in the WCCI contest will be announced\nduring official conference proceedings.  We are offering a parallel contest for\nthose who are not able to attend the conference.  We’ll award cash prizes for\nthe same two categories.  All contest entries are due by July 1, 2016, but we\nencourage you to submit early. For more details on the NAB competition, visit\n<a href=\"http://numenta.org/nab/\">http://numenta.org/nab/</a>. Our intention with NAB is to create a community around\nit and grow it into a widely used tool.  We hope the competition will be a fun\nway to add to the benchmark corpus and to position NAB as the standard benchmark\nfor anomaly detection in streaming data.</p>\n<p>In other news, we recently shared a summary of our published and submitted\nresearch papers.  You can now access all of these papers at\n<a href=\"http://numenta.com/papers/\">http://numenta.com/papers/</a>. I encourage you to bookmark the page as we will be\nupdating it with new material throughout the year.</p>\n<p>Lastly, I want to share that we will be participating in\n<a href=\"http://conferences.oreilly.com/strata/hadoop-big-data-ca\">Strata San Jose</a>,\nMarch 29-31. We’ll have a booth on the expo floor where you can meet our\nengineers and see our demonstration applications. We’ll also preview a new tool\nto enable broader experimentation with HTM, so stay tuned for more details.\nIf you’re planning on attending Strata, please stop by and see us.</p>\n"}

/***/ },
/* 1037 */
/***/ function(module, exports) {

	module.exports = {"author":"Christy Maver","brief":"I'm pleased to announce that we have released an iOS version of HTM for Stocks, a demonstration application that enables anybody to experience HTM technology firsthand. Previously available for Android only, HTM for Stocks now can be","date":"2016/02/18","featured":false,"image":"../images/image.png","org":"Director of Marketing","tags":"htm for stocks apple app store hierarchical temporal memory numenta","title":"HTM for Stocks available in the App Store","body":"<h3>Numenta Newsletter — February 18, 2016</h3>\n<p>I’m pleased to announce that we have released an iOS version of <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.ext.htmstocks.ios%7D%7D\">HTM for Stocks</a></t>, a demonstration\napplication that enables anybody to experience HTM technology firsthand.\nPreviously available for Android only, HTM for Stocks now can be found in the\nApp Store.</p>\n<div class=\"text-center\">\n  <t render=\"hbs\">\n    [![Download from the App Store](/assets/img/icon/mobile/app-store-button.png)]({{site.paths.ext.htmstocks.ios}})\n  </t>\n</div>\n<p><t render=\"hbs\"><a href=\"%7B%7Bsite.paths.pages.htmstocks%7D%7D\">HTM for Stocks</a></t> continuously\nmonitors stock price, stock volume and Twitter volume for roughly 200 publicly\ntraded companies and alerts you in real time when something unusual is\nhappening. Results are displayed from most to least anomalous, so you can\ndetermine what is important and where to focus.</p>\n<p>This application not only makes detecting securities anomalies easy, but it also\nhighlights the value of HTM.  For example, you don’t have to know what you’re\nlooking for to find these real-time anomalies. HTM starts learning hundreds of\nmodels immediately.  In this case, it creates a model for three data streams per\nstock: stock price, stock volume and Twitter volume.  The application\ncontinuously compares a prediction of the next data point with the actual next\npoint and, if the overall behavior is unexpected, it reports an anomaly.  No\nhuman intervention is required. You don’t have to tune it or define parameters.\nYou don’t need to know anything about the stocks.  Because HTM for Stocks\ncontinuously learns, it adapts well to changes. For example, if a stock price\nspikes but then continues to stay at that level, HTM for Stocks learns the\nhigher price is a new normal.</p>\n<p>Perhaps one of the nicest benefits of this application is that it displays\nstocks from most to least anomalous activity. This ability to cut through vast\namounts of noisy data and surface only the companies where something unusual is\nhappening is extremely valuable and time-saving.   In this application, we’re\nmonitoring stocks, but you could use the same principles to find anomalous\nbehavior in many types of data streams:</p>\n<ul>\n<li>Machine sensor data - to do preventative maintenance and know which machines\nneed repairs</li>\n<li>Human behavior metrics – to identify suspicious activity</li>\n<li>GPS coordinates – to track vehicles and find deviations from an expected route</li>\n</ul>\n<p>Like all of our sample applications, we’ve made the <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.ext.htmstocks.source%7D%7D\">source code available</a></t>, and we hope to\nsee developers create derivative products.  If you are interested in developing\nHTM for Stocks into a commercial product, you can contact us at <t render=\"hbs\">\n<a href=\"mailto:%7B%7Bsite.email.sales%7D%7D\">{{site.email.sales}}</a></t>.</p>\n<p>In the meantime, we hope that our readers who are also iPhone users will\ndownload HTM for Stocks and give it a try.</p>\n"}

/***/ },
/* 1038 */
841,
/* 1039 */
/***/ function(module, exports) {

	module.exports = {"author":"Christy Maver","brief":"Numenta has an ambitious mission: reverse-engineer the neocortex to understand how it works and apply those principles to software to create intelligent machines.  Because neuroscience is the foundation of everything we do","date":"2016/03/28","featured":false,"image":"../../../../images/numenta.png","org":"Director of Marketing","tags":"numenta neuron paper published peer reviewed neuroscience journal frontiers neural circuits neurons have thousands synapses theory sequence memory","title":"Neuron Paper Published in Peer-reviewed Neuroscience Journal","body":"<h3>Numenta Newsletter — March 28, 2016</h3>\n<p>Numenta has an ambitious mission: reverse-engineer the neocortex to understand\nhow it works and apply those principles to software to create intelligent\nmachines.  Because neuroscience is the foundation of everything we do, it’s\nimportant to have our work published and critiqued in peer-reviewed neuroscience\njournals.  I’m excited to announce that Jeff Hawkins and Subutai Ahmad’s recent\nmanuscript, “<a href=\"http://journal.frontiersin.org/article/10.3389/fncir.2016.00023/abstract\">Why Neurons Have Thousands of Synapses, A Theory of Sequence\nMemory in Neocortex</a>,”\nhas been accepted to Frontiers in Neural Circuits Journal, a publication devoted\nto research in neural circuits, serving the worldwide neuroscience community.</p>\n<p>We believe this paper will prove to be a significant contribution to brain\ntheory as well as introduce algorithms that will be important for machine\nintelligence.  The paper proposes a model of cortical neurons that explains why\nthey have thousands of synapses, why the synapses are segregated onto different\nparts of the dendrites, and how neurons integrate this input in a functionally\nmeaningful way.  There are many aspects of this neuron model that are novel.\nThe paper also provides a new and detailed theory of how networks of neurons\nthroughout the neocortex learn sequences and make predictions.</p>\n<p>This theory is radically different than the models used in most artificial\nneural networks such as deep learning and LSTM sequence memory. Deep learning\nand LSTM use artificial neurons that are simplistic and not biologically\naccurate.  Many deep learning models do not incorporate sequence memory at all.\nYet sequence memory is a critical component of the brain.  In fact, we believe\nthat learning and recalling sequences of patterns is the basic operation common\nto all brain function.</p>\n<p>Why is sequence memory so important? Because everything we as humans do is\nsequence based. When we hear someone talk, we take in a sequence of words; when\nwe look at something, our eyes saccade, moving quickly over the image, leading\nto a sequence of inputs from the retina; when we move our bodies, we’re\noutputting a sequence of motor commands, which causes changes in our inputs. It\nis this understanding of how sequence memory works in the brain that allows our\nsoftware to perform continuous, unsupervised learning without any training data.</p>\n<p>In case you are not familiar with academic publishing, being published in a\njournal like Frontiers is not as simple as writing and submitting your paper.\nIt involves a meticulous, multi-step review process where independent reviewers\nprovide feedback and request changes before accepting or denying the paper.\nThis paper is ambitious in how many new ideas it introduces, and took over a\nyear from when we first decided to write it to now, when it has been accepted.</p>\n<p>I invite you to read <a href=\"http://journal.frontiersin.org/article/10.3389/fncir.2016.00023/abstract\">the paper</a>,\nand for those that want a less technical overview, I encourage you to read\n<a href=\"https://www.technologyreview.com/s/543486/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns/\">this article by MIT Tech Review</a>,\nwhich summarizes the findings of our pre-published version.</p>\n<p>Speaking of papers, we also recently completed a new white paper that addresses\none of the most popular topics that we’re asked when people are learning about\nNumenta’s HTM theory: encoders.  The paper, <a href=\"http://arxiv.org/abs/1602.05925\">Encoding Data for HTM Systems</a>,\nwritten by Scott Purdy, our Director of Engineering, describes how to encode\ndata into Sparse Distributed Representations (SDRs) so that the data can be used\nin HTM systems.  Scott reviews several existing encoders, which are available\nthrough our open source project called <a href=\"http://numenta.org\">NuPIC</a>, and explains\nthe requirements for creating encoders for new types of data.</p>\n<p>Lastly, for any of our readers that will be attending <a href=\"/events/strata-hadoop-world-big-data-conference-2016.html\">Strata + Hadoop World\n2016 in San Jose, CA</a>,\nplease stop by and say Hi.  We will be at Booth 540, along with representatives\nfrom our partners <a href=\"http://cortical.io\">Cortical.io</a> and\n<a href=\"http://grokstream.com\">Avik Partners</a>, giving demos and overviews on the\ncompany, our technology and our latest applications.</p>\n"}

/***/ },
/* 1040 */
/***/ function(module, exports) {

	module.exports = {"author":"Christy Maver","brief":"We receive many requests for better documentation of our work, and as our research has progressed, we know that some of our most popular papers are now outdated. As a result, we have been working for some time on creating a living","date":"2016/05/11","featured":false,"image":"../../../../images/numenta.png","org":"Director of Marketing","tags":"numenta newsletter may 2016 bami biological and machine intelligence living online book machine intelligence htm hierarchical temporal memory","title":"Announcing BAMI: Biological and Machine Intelligence, a Living Online Book","body":"<h3>Numenta Newsletter — May 11, 2016</h3>\n<p>We receive many requests for better documentation of our work, and as our\nresearch has progressed, we know that some of our most popular papers are now\noutdated.  As a result, we have been working for some time on creating a “living\nbook”, a cohesive body of documentation that provides readers with the “A to Z”\nof HTM, and that can be updated as our work progresses.  I am pleased to\nannounce that we have released the first four chapters of this book, called\n<a href=\"/biological-and-machine-intelligence/\">Biological and Machine Intelligence (BAMI)</a>. We\nare calling this release v.4 to represent the 4 chapters available. We include a\nlist of future chapters that we hope to add, as well as links to research papers\nand supporting material. Material that is replaced by BAMI will be moved to the\narchive section of the <a href=\"/learn/\">learning center</a> on our web site.</p>\n<p>In addition to publishing peer reviewed papers, we hope to build on BAMI to\nbecome the principal resource for those who want to learn about HTM.  Over time,\nwe will include problem sets and lecture notes, making it particularly\nappropriate for academics who intend to create courses teaching HTM theory.</p>\n<p>For those who are interested, we’ve created a twitter account called\n<a href=\"https://twitter.com/NumentaBAMI\">@NumentaBAMI</a>, which we will only use for BAMI\nupdates.  If you’d like to be alerted when we add or revise a chapter, I\nencourage you to follow this account. We’ve designed BAMI such that each chapter\nincludes a revision history, so you will always be able to see what has changed.\nWe hope you find BAMI to be a useful resource, and we\n<a href=\"https://numenta.wufoo.com/forms/biological-and-machine-intelligence-bami/\">welcome your feedback and comments</a>.</p>\n<p>In addition to our BAMI news, we have some exciting events coming up this month\nas well. On May 12, Jeff Hawkins will be the featured guest at a\n<strong><a href=\"http://www.meetup.com/NeuroTechSF/events/230385690/\">NeurotechX meetup in San Francisco</a></strong>.\nCo-founded by one of our engineers, <a href=\"mailto:mleborgne@numenta.com\">Marion LeBorgne</a>,\nNeurotechX is a non-profit organization whose mission is to build a strong,\nglobal neurotechnology community by providing key resources and learning\nopportunities.  Jeff will give a talk titled &quot;What is Intelligence, that a\nMachine Might Have Some?”  For those that are not in the Bay Area, you can watch\nthe event live, and ask questions in the chat room.</p>\n<p>On May 19, Subutai Ahmad will be giving a talk titled, “Detecting Anomalies in\nStreaming Data – Real-time Algorithms for Real-world Applications” at\n<strong><a href=\"http://data.bythebay.io/\">Data By the Bay 2016</a></strong>. Spanning 150 talks over\n5 days, Data By The Bay is a by-data engineers, for-data engineers developer and\ndata scientist conference. If you’re interested in attending, you\n<a href=\"https://www.universe.com/embed/listings/BQJX8H/bookings/new?modal=1&amp;discount_code=NUMENTA10\">can get a 10% discount with the code NUMENTA10</a>.</p>\n<p>Also on May 19, I will be speaking at the\n<strong><a href=\"https://theinnovationenterprise.com/summits/business-analytics-innovation-summit-chicago-2016\">Business Analytics Innovation Summit</a></strong>\nin Chicago.  As a sponsor of this event, we will have the opportunity to\nintroduce and demonstrate our technology and its applications to a\nbusiness-focused audience over the course of two days.</p>\n<p>In partner news, <a href=\"http://Cortical.io\">Cortical.io</a> announced new releases to their products, which\ninclude more accurate results in the comparison of text similarity. This\nannouncement comes on the heels of an independent academic study that concluded\n<a href=\"http://Cortical.io\">Cortical.io</a>’s Semantic Folding approach helps improve the prediction of stock\nreturn correlations. Visit <a href=\"http://cortical.io\">their website</a> for more details.</p>\n<p>Lastly, our Open Source Flag Bearer, <a href=\"mailto:mtaylor@numenta.com\">Matt Taylor</a>,\nhas created a new YouTube series called\n<a href=\"https://www.youtube.com/playlist?list=PL3yXMgtrZmDqhsFQzwUC9V8MeeVOQ7eZ9\">HTM School</a>.\nDesigned for the layperson, Matt breaks down the basics of various HTM topics in\nbite-size videos.  If you haven’t been to HTM School, be sure to check it out.</p>\n"}

/***/ },
/* 1041 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b32a2e03ff36e30f0feaedc627b4e034.png";

/***/ },
/* 1042 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8853868184591f8e767415d473e7f30e.png";

/***/ },
/* 1043 */
/***/ function(module, exports) {

	module.exports = {"author":"Christy Maver","brief":"Since I arrived at Numenta 9 months ago, one of the most common requests I’ve heard is that people want an easy way to experiment with HTM without having to dive deep into our code and algorithms","date":"2016/06/28","featured":false,"image":"../images/htm-studio.png","org":"Director of Marketing","tags":"numenta releases htm studio desktop application anomaly detection htm school nupic","title":"Numenta Releases HTM Studio Desktop Application","body":"<h3>Numenta Newsletter — June 28, 2016</h3>\n<p>Since I arrived at Numenta 9 months ago, one of the most common requests I’ve\nheard is that people want an easy way to experiment with <a href=\"http://numenta.com/#technology\">HTM</a> without having\nto dive deep into our code and algorithms. Well, I’m happy to share that this\nweek we addressed that request when we announced the <a href=\"http://www.businesswire.com/news/home/20160627005453/en/Numenta-Releases-HTM-Studio\">release of HTM Studio</a>,\na desktop tool that allows you to test whether HTM finds interesting anomalies\nin your own numeric, time-series data.</p>\n<p>The ability to detect anomalies as soon as possible in streaming data has value\nacross a wide variety of applications – from health monitoring to preventative\nmaintenance to geospatial tracking and more. Yet early detection is easier said\nthan done, and traditional methods like thresholds often miss the subtle\nanomalies common within streaming data. Because HTM learns continuously and\nwithout supervision, it finds these types of anomalies very well.</p>\n<p><a href=\"http://numenta.com/htm-studio/\">HTM Studio</a> provides a way for anyone, even non-technical people, to\nexperiment with HTM for anomaly detection on their own data, without having to\nupload anything to the cloud. After downloading HTM Studio, you can import a\nlocal csv file, and with a few clicks, HTM analyzes your data and displays any\nanomalies it finds.  For those who don’t have streaming data sets, HTM Studio\ncomes with pre-loaded sample data.</p>\n<p>We hope that this release encourages broad experimentation with our technology.\nTry it on your home automation data to uncover anomalies in your usage patterns,\nor your sleep data to find abnormalities in your sleep-wake cycles, or your\ncompany’s sensors to see where unusual activity is occurring in the office. All\nyou need is a csv file with one Date/Time column, one header row and at least\n400 rows of numeric data listed in chronological order.  For more on how to\nensure your data is in the right format for HTM Studio, watch this\n<a href=\"http://youtu.be/f80ewxLvgks\">short tutorial video</a>.  HTM Studio provides an easy way to do a proof of\nconcept before fully implementing or deploying HTM. It also removes the\ntechnical hurdle and steep learning curve that typically accompanies HTM\nexperimentation.</p>\n<p>As a company with a scientific mission to understand how the brain learns, it’s\nbeen hard for us to make this technology accessible, which is why we are so\nproud of this release. If you’d like to try it, you can download the Windows or\nMac version, view our tutorials and give us feedback at\n<a href=\"http://numenta.com/htm-studio/\">http://numenta.com/htm-studio/</a>.  Feel free to write us about interesting\nanomalies that you find – we hope to share guest blog posts of the best ones.</p>\n<p>While many of you are likely planning summer trips, Numenta will be traveling\nthe globe this summer as well.  Our Research Engineer, <a href=\"mailto:ycui@numenta.com\">Yuwei Cui</a>, just\nreturned from speaking at two academic conferences in Greece (<a href=\"http://numenta.com/events/dendritic-anatomy-molecules-and-function-heraklion-crete.html\">Dendrite</a> and\n<a href=\"http://numenta.com/events/areadne-2016-research-in-encoding-and-decoding-of-neural-ensembles.html\">Areadne</a>), and will be in Vancouver, BC next month to speak at the\n<a href=\"http://numenta.com/events/ieee-wcci-2016.html\">IEEE World Congress on Computational Intelligence</a>. <a href=\"mailto:sahmad@numenta.com\">Subutai Ahmad</a>, VP\nof Research, is headed to speak at the <a href=\"http://numenta.com/events/the-playfair-ai-summit-2016.html\">Playfair AI Summit</a> in London, before\nreturning to speak in San Francisco at the <a href=\"http://numenta.com/events/data-science-summit.html\">Data Science Summit</a>.  We’ll be\nexhibiting at Data Science Summit as well, so if you’re planning to attend, be\nsure to stop by our table for a demo of HTM Studio.</p>\n<p>For those of you who follow our open source project, you may have seen that we\nmigrated our HTM mailing lists to the <a href=\"https://discourse.numenta.org/\">HTM Forum</a>.  With its clean,\nintuitive design, this new forum provides a better platform for fostering\ndiscussions as the community continues to grow. It categorizes content and\nallows you to choose which topics to follow. Moderated by our open source flag\nbearer, <a href=\"mailto:matt@numenta.org\">Matt Taylor</a>, HTM Forum is open to anyone, so I encourage you to\nread the posts and join the conversation at <a href=\"https://discourse.numenta.org/\">https://discourse.numenta.org/</a>.</p>\n<p>In other news, our partners have some exciting updates to share. <a href=\"http://www.grokstream.com/\">Grok</a> has\nmade several product improvements over the past few months. Grok now supports\nworkflow automation, features improvements to the anomaly dashboard and includes\nmany new design enhancements.  As Grok continues to grow, the company is looking\nto expand as well.  If you know anyone who would make a great community manager\nor full stack developer, particularly in the Southern California area, contact\n<a href=\"mailto:tarun@grokstream.com\">tarun@grokstream.com</a>.</p>\n<p><a href=\"http://Cortical.io\">Cortical.io</a> was recently named an IDC Innovator for the\n<a href=\"http://www.cortical.io/news.html#lead_1\">2016 Machine-Learning based Text Analytics market</a>. Much like Numenta,\n<a href=\"http://Cortical.io\">Cortical.io</a> has been traveling the globe and will be speaking at several\nupcoming <a href=\"http://www.cortical.io/company/events/\">events</a>, including the <a href=\"http://conferences.oreilly.com/artificial-intelligence/ai-deep-learning-bots-ny/public/content/about\">AI O’Reilly Conference</a> in New York\nSeptember 26-27.</p>\n<p>Lastly, we are in the final countdown of our Numenta Anomaly Benchmark (NAB)\ncompetition. This <a href=\"https://youtu.be/Wdr_s9Bdi3I\">short video</a> explains how easy it is to win up to $5,000.</p>\n"}

/***/ },
/* 1044 */
699,
/* 1045 */
700,
/* 1046 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _universal = __webpack_require__(376);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _PostItem = __webpack_require__(852);
	
	var _PostItem2 = _interopRequireDefault(_PostItem);
	
	var _Section = __webpack_require__(675);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const NewsletterPage = (props, { route }) => {
	  const { pages } = route;
	  const posts = pages.filter(({ file }) => file.path.match(/^newsletter\/.*\.md/));
	  const items = posts.sort(_universal.sortDateDescend).map(post => _react2.default.createElement(
	    _ListItem2.default,
	    { key: post.file.stem },
	    _react2.default.createElement(_PostItem2.default, { post: post })
	  ));
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      _Section2.default,
	      { headline: true, open: true, title: 'Newsletter' },
	      _react2.default.createElement(
	        _List2.default,
	        { copy: false },
	        items
	      )
	    )
	  );
	};
	
	NewsletterPage.contextTypes = {
	  route: _react2.default.PropTypes.object
	};
	
	exports.default = NewsletterPage;
	module.exports = exports['default'];

/***/ },
/* 1047 */
855,
/* 1048 */
672,
/* 1049 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "30e97fcd7264c3188222fe2a9ee71cad.png";

/***/ },
/* 1050 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(659);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class OpenSourcePage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Open Source Project' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	
	}
	
	exports.default = OpenSourcePage;
	module.exports = exports['default'];

/***/ },
/* 1051 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(663);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class PapersPage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Papers, Videos & More' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	}
	
	exports.default = PapersPage;
	module.exports = exports['default'];

/***/ },
/* 1052 */
/***/ function(module, exports) {

	module.exports = {"author":"Chetan Surpur","brief":"This video talk on Applications of Hierarchical Temporal Memory (HTM) was delivered at a Numenta workshop.","date":"2014/10/17","image":null,"link":null,"org":"Software Engineer","section":"detail","sort":"e","tags":"numenta hierarchical temporal memory htm applications","title":"Applications of Hierarchical Temporal Memory (HTM)","type":"talk","body":"<p>This video talk on Applications of Hierarchical Temporal Memory (HTM) was\ndelivered at a Numenta workshop.</p>\n<h4>Talk Video</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/900nFOfzp2E\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Slides</h4>\n<p>Link: <a href=\"http://www.slideshare.net/numenta/applications-of-htm-workshop\">Applications of Hierarchical Temporal Memory</a>\nfrom <a href=\"//www.slideshare.net/numenta\">Numenta</a>.</p>\n<div class=\"video-container media-border\">\n  <iframe src=\"//www.slideshare.net/slideshow/embed_code/45034552\" width=\"425\" height=\"355\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"//www.slideshare.net/numenta/applications-of-htm-workshop\" title=\"Applications of Hierarchical Temporal Memory (HTM)\" target=\"_blank\">Applications of Hierarchical Temporal Memory (HTM)</a> </strong> from <strong><a href=\"//www.slideshare.net/numenta\" target=\"_blank\">Numenta</a></strong> </div>\n</div>\n"}

/***/ },
/* 1053 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"This video is replaced by the Numenta License Guide","date":"2014/10/17","image":null,"link":null,"org":"Celeste Baranski & Matt Taylor","section":"archive","sort":"a","tags":"numenta getting started hierarchical temporal memory htm technology nupic","title":"Getting Started With Numenta Technology","type":"talk","body":"<p>This video is replaced by the\n<a href=\"/assets/pdf/apps/licensing-guide.pdf\">Numenta License Guide</a>.</p>\n<h4>Video</h4>\n<p>Presented by:</p>\n<ul>\n<li>Celeste Baranski, VP of Engineering, Numenta</li>\n<li>Matthew Taylor, Open Source Manager, Numenta</li>\n</ul>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/5HD9NnXpRus\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Slides</h4>\n<p>Link: <a href=\"http://www.slideshare.net/numenta/getting-started-with-numenta-technology\">Getting Started with Numenta Technology</a>\nfrom <a href=\"//www.slideshare.net/numenta\">Numenta</a>.</p>\n<div class=\"video-container media-border\">\n  <iframe src=\"//www.slideshare.net/slideshow/embed_code/45034781\" width=\"425\" height=\"355\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"//www.slideshare.net/numenta/getting-started-with-numenta-technology\" title=\"Getting Started with Numenta Technology \" target=\"_blank\">Getting Started with Numenta Technology </a> </strong> from <strong><a href=\"//www.slideshare.net/numenta\" target=\"_blank\">Numenta</a></strong> </div>\n</div>\n"}

/***/ },
/* 1054 */
/***/ function(module, exports) {

	module.exports = {"author":"Rahul Agarwal","brief":"This video tutorial follows the 2011 HTM whitepaper, and is largely obsolete. The content of this tutorial will be replace by HTM School (over time).","date":"2013/08/03","image":null,"link":null,"org":"Software Engineer","section":"archive","sort":"c","tags":"htm hierarchical temporal memory tutorial algorithm basics","title":"HTM Learning Algorithm Tutorial - Algorithm Basics","type":"talk","body":"<p>This video tutorial follows the 2011 HTM whitepaper, and is largely obsolete.\nThe content of this tutorial will be replace by\n<a href=\"https://www.youtube.com/watch?v=XMB0ri4qgwc\">HTM School</a> (over time).</p>\n<p><strong>Note:</strong> This video refers to the HTM learning algorithm as the Cortical\nLearning Algorithm, or CLA; we have recently decided to sunset this term.</p>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/z6r3ekreRzY\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n"}

/***/ },
/* 1055 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"There have been changes in our thinking, in algorithm implementation, in terminology and in other areas since this paper was written, rendering part of this paper obsolete. Much of this paper has been replaced by BAMI and the current white papers, and we will continue to provide updated material in subsequent releases of BAMI.","date":"2011/09/12","image":null,"link":"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-en.pdf","org":"Co-Founder","section":"archive","sort":"b","tags":"hierarchical temporal memory htm jeff hawkins whitepaper pdf","title":"Hierarchical Temporal Memory (HTM) Whitepaper","type":"paper","body":"<p>There have been changes in our thinking, in algorithm implementation, in\nterminology and in other areas since this paper was written, rendering part of\nthis paper obsolete. Much of this paper has been replaced by\n<a href=\"/biological-and-machine-intelligence/\">BAMI</a> and the\n<a href=\"/papers/\">current white papers</a>, and we will continue to provide updated\nmaterial in subsequent releases of\n<a href=\"/biological-and-machine-intelligence/\">BAMI</a>.</p>\n<h4>About</h4>\n<p>At the heart of Hierarchical Temporal Memory (HTM), our machine intelligence\ntechnology, are time-based learning algorithms that store and recall spatial and\ntemporal patterns. This paper describes how the learning algorithms work and\ntheir biological mapping.</p>\n<p><strong>Note:</strong> This paper refers to the HTM learning algorithm as the Cortical\nLearning Algorithm, or CLA; we have recently decided to sunset this term as our\ntechnology has evolved.</p>\n<blockquote>\n<p><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-en.pdf\">Download Whitepaper</a></p>\n</blockquote>\n<h4>Translations Available</h4>\n<table>\n<thead>\n<tr>\n<th>Language</th>\n<th>Code</th>\n<th>Translator</th>\n<th>Link</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Chinese</td>\n<td>CN</td>\n<td>Yu Tianxiang</td>\n<td><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-cn.pdf\">Download</a></td>\n</tr>\n<tr>\n<td>French</td>\n<td>FR</td>\n<td>Laurent Julliard</td>\n<td><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-fr.pdf\">Download</a></td>\n</tr>\n<tr>\n<td>German</td>\n<td>DE</td>\n<td>Ingmar Baetge</td>\n<td><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-de.pdf\">Download</a></td>\n</tr>\n<tr>\n<td>Japanese</td>\n<td>JP</td>\n<td>Akihiro Yoshikawa</td>\n<td><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-jp.pdf\">Download</a></td>\n</tr>\n<tr>\n<td>Korean</td>\n<td>KR</td>\n<td>Jihoon Oh</td>\n<td><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-kr.pdf\">Download</a></td>\n</tr>\n<tr>\n<td>Portuguese</td>\n<td>PT</td>\n<td>David Ragazzi</td>\n<td><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-pt.pdf\">Download</a></td>\n</tr>\n<tr>\n<td>Russian</td>\n<td>RU</td>\n<td>Mikhaile Netov</td>\n<td><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-ru.pdf\">Download</a></td>\n</tr>\n<tr>\n<td>Spanish</td>\n<td>ES</td>\n<td>Garikoitz Lerma Usabiaga</td>\n<td><a href=\"/assets/pdf/whitepapers/hierarchical-temporal-memory-cortical-learning-algorithm-0.2.1-es.pdf\">Download</a></td>\n</tr>\n</tbody>\n</table>\n"}

/***/ },
/* 1056 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"These two videos are similar, and provide an overview of HTM and associated topics by Numenta’s founder, Jeff Hawkins. The talks have slightly different emphasis. For instance, the first video has more details on SDRs.","date":"2014/11/22","image":null,"link":null,"org":"Co-Founder","section":"overview","sort":"c","tags":"numenta htm videos heirarchical temporal memory brain machine intelligence jeff hawkins","title":"HTM Videos from Jeff Hawkins","type":"talk","body":"<p>These two videos are similar, and provide an overview of HTM and associated\ntopics by Numenta’s founder, Jeff Hawkins. The talks have slightly different\nemphasis (for instance, the first video has more details on SDRs). At the time\nof BAMI 0.4 release, we are currently rethinking the role of hierarchy and the\nconnections between the various layers of the neocortex, so the comments on\nthese subjects in the videos are out of date.</p>\n<hr>\n<h2>#1 What The Brain Says About Machine Intelligence</h2>\n<p>Video talk on What The Brain Says About Machine Intelligence by Jeff Hawkins,\nNumenta Co-Founder. Nov 2014 in Redwood City, CA.</p>\n<h4>Video</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/izO2_mCvFaw\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Slides</h4>\n<p>Link: <a href=\"//www.slideshare.net/numenta/what-the-brain-says-about-machine-intelligence\">What the Brain says about Machine Intelligence</a>\nfrom <a href=\"//www.slideshare.net/numenta\">Numenta</a>.</p>\n<div class=\"video-container media-border\">\n  <iframe src=\"//www.slideshare.net/slideshow/embed_code/44507410\" width=\"425\" height=\"355\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen></iframe>\n</div>\n<hr>\n<h2>#2 Principles of HTM - Foundations of Machine Intelligence</h2>\n<p>Video talk on Hierarchical Temporal Memory (HTM) and the Foundations of Machine\nIntelligence by Jeff Hawkins, Numenta Co-Founder. Numenta Workshop Oct 2014 in\nRedwood City, CA.</p>\n<h4>Talk</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/6ufPpZDmPKA\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Q &amp; A Session</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/EU2Vm-VlfEk\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Slides</h4>\n<p>Link: <a href=\"http://www.slideshare.net/numenta/2014-10-17-numenta-workshop\">Principles of Hierarchical Temporal Memory</a>\nfrom <a href=\"//www.slideshare.net/numenta\">Numenta</a>.</p>\n<div class=\"video-container media-border\">\n  <iframe src=\"//www.slideshare.net/slideshow/embed_code/45033943\" width=\"425\" height=\"355\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"//www.slideshare.net/numenta/2014-10-17-numenta-workshop\" title=\"Principles of Hierarchical Temporal Memory - Foundations of Machine Intelligence\" target=\"_blank\">Principles of Hierarchical Temporal Memory - Foundations of Machine Intelligence</a> </strong> from <strong><a href=\"//www.slideshare.net/numenta\" target=\"_blank\">Numenta</a></strong> </div>\n</div>\n"}

/***/ },
/* 1057 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"This webinar provides an overview of the current state of HTM, with an emphasis on the software implementation and example applications. The Q&A session at the end of the webinar answers some popular user questions.","date":"2016/04/26","image":null,"link":null,"org":"Christy Maver & Scott Purdy","section":"overview","sort":"d","tags":"numenta webinar machine intelligence streaming data real time anomaly detection","title":"Machine Intelligence with Streaming Data Webinar","type":"talk","body":"<h2>Machine Intelligence with Streaming Data</h2>\n<h3>A new approach for anomaly detection and time-based learning</h3>\n<p>This webinar provides an overview of the current state of HTM, with an emphasis\non the software implementation and example applications. The Q&amp;A session at the\nend of the webinar answers some popular user questions.</p>\n<p>Presented by:</p>\n<ul>\n<li>Christy Maver (Marketing Director, Numenta)</li>\n<li>Scott Purdy (Director of Development, Numenta)</li>\n</ul>\n<h4>Video</h4>\n<iframe src=\"https://player.vimeo.com/video/164320064?title=0&byline=0&portrait=0\" width=\"640\" height=\"481\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe> <p><a href=\"https://vimeo.com/164320064\">Machine Intelligence with Streaming Data</a> from <a href=\"https://vimeo.com/formspider\">ProHuddle</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p>\n<h4>About</h4>\n<p>Links:</p>\n<ul>\n<li><a href=\"http://www.prohuddle.com/webinars/ChristyAndScott/Machine_Intelligence_with_Streaming_Data_A_New_Approach.php\">Main Event Website</a></li>\n<li><a href=\"/events/numenta-webinar.html\">Numenta Event Page</a></li>\n</ul>\n<p>Across every industry, we are seeing an exponential increase in the availability\nof streaming, time-series data. The real-time detection of anomalies has\nsignificant practical application. Finding anomalies in such data can be very\ndifficult, given the need to process data in real time, and learn while\nsimultaneously making predictions. With the increasing variety of streaming data\nsources, automated deployment—without manual parameter tuning—is also becoming\nimportant.</p>\n"}

/***/ },
/* 1058 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins & Sandra Blakeslee","brief":"The core concepts in Hierarchical Temporal Memory (HTM) theory were first described in this book titled On Intelligence, which was written by Jeff Hawkins with the help of Sandra Blakeslee.","date":"2005/07/14","image":null,"link":"http://www.amazon.com/On-Intelligence-Jeff-Hawkins/dp/0805078533/ref=sr_1_1?ie=UTF8&qid=1363894040&sr=8-1&keywords=on+intelligence","org":"Co-Founder & Co-Author","section":"overview","sort":"a","tags":"on intelligence jeff hawkins htm hierarchical temporal memory","title":"On Intelligence","type":"book","body":"<p>The core concepts in Hierarchical Temporal Memory (HTM) theory were first\ndescribed in this book titled <strong>On Intelligence</strong>, which was written by Jeff\nHawkins with the help of Sandra Blakeslee. This book still provides background\nand a great introduction to our theory, though many of the ideas in chapter 6\n(“How the Cortex Works”) are currently being revised.</p>\n<p><strong>Buy Book</strong>: <a href=\"http://www.amazon.com/On-Intelligence-Jeff-Hawkins/dp/0805078533/ref=sr_1_1?ie=UTF8&amp;qid=1363894040&amp;sr=8-1&amp;keywords=on+intelligence\">Purchase on Amazon</a></p>\n<p><strong>Note:</strong> This book refers to the HTM learning algorithm as the Cortical\nLearning Algorithm, or CLA; we have recently decided to sunset this term as our\ntechnology has evolved.</p>\n<h4>Translations Available</h4>\n<p>Chinese, Finnish, French, German, Hebrew, Indonesian, Italian, Korean, Japanese,\nPolish, <a href=\"/assets/pdf/on-intelligence/on-intelligence-pt.pdf\">Portuguese</a>,\nRussian, <a href=\"/assets/pdf/on-intelligence/on-intelligence-es.pdf\">Spanish</a>,\nVietnamese.</p>\n"}

/***/ },
/* 1059 */
/***/ function(module, exports) {

	module.exports = {"author":"Scott Purdy","brief":"This video talk on the Science of Anomaly Detection was delivered at a Numenta workshop and covers the application of HTM to anomaly detection in streaming data.","date":"2014/10/17","image":null,"link":null,"org":"Engineering Manager","section":"detail","sort":"f","tags":"numenta science of anomaly detection","title":"Science of Anomaly Detection","type":"talk","body":"<p>This video talk on the Science of Anomaly Detection was delivered at a Numenta\nworkshop and covers the application of HTM to anomaly detection in streaming\ndata.</p>\n<h4>Talk Video</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/I5lSEHvngaI\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Slides</h4>\n<p>Link: <a href=\"http://www.slideshare.net/numenta/science-of-anomaly-detection\">Science of Anomaly Detection</a>\nfrom <a href=\"//www.slideshare.net/numenta\">Numenta</a>.</p>\n<div class=\"video-container media-border\">\n  <iframe src=\"//www.slideshare.net/slideshow/embed_code/45034949\" width=\"425\" height=\"355\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen></iframe>\n  <div style=\"margin-bottom:5px\">\n    <strong>\n      <a href=\"//www.slideshare.net/numenta/science-of-anomaly-detection\" title=\"Science of Anomaly Detection\">Science of Anomaly Detection</a>\n    </strong> from\n    <strong>\n      <a href=\"//www.slideshare.net/numenta\">Numenta</a>\n    </strong>\n  </div>\n</div>\n<h4>Whitepaper</h4>\n<p>Numenta PDF Whitepaper:\n<a href=\"/assets/pdf/whitepapers/Numenta%20White%20Paper%20-%20Science%20of%20Anomaly%20Detection.pdf\">Science of Anomaly Detection</a></p>\n"}

/***/ },
/* 1060 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad","brief":"This video talk on Sparse Distributed Representations (SDR) covers a subset of the topics in the BAMI chapter on SDRs.","date":"2014/10/17","image":null,"link":null,"org":"VP Research","section":"detail","sort":"g","tags":"numenta sparse distributed representations sdr brain data structure","title":"Sparse Distributed Representations - Our Brain's Data Structure","type":"talk","body":"<p>This video talk on Sparse Distributed Representations (SDR) covers a subset of\nthe topics in the <a href=\"/biological-and-machine-intelligence/\">BAMI</a> chapter on SDRs.</p>\n<h4>Talk Video</h4>\n<div class=\"video-container media-border\">\n  <iframe width=\"560\" height=\"315\" src=\"//www.youtube.com/embed/LbZtc_zWBS4\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n<h4>Slides</h4>\n<p>Link: <a href=\"http://www.slideshare.net/numenta/sparse-distributed-representations-sdr\">Sparse Distributed Representations</a>\nfrom <a href=\"//www.slideshare.net/numenta\">Numenta</a>.</p>\n<div class=\"video-container media-border\">\n  <iframe src=\"//www.slideshare.net/slideshow/embed_code/45035404\" width=\"425\" height=\"355\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe> <div style=\"margin-bottom:5px\"> <strong> <a href=\"//www.slideshare.net/numenta/sparse-distributed-representations-sdr\" title=\"Sparse Distributed Representations: Our Brain&#x27;s Data Structure \" target=\"_blank\">Sparse Distributed Representations: Our Brain&#x27;s Data Structure </a> </strong> from <strong><a href=\"//www.slideshare.net/numenta\" target=\"_blank\">Numenta</a></strong> </div>\n</div>\n"}

/***/ },
/* 1061 */
/***/ function(module, exports) {

	module.exports = {"author":"Yuwei Cui, Subutai Ahmad, Jeff Hawkins & Chetan Surpur","brief":"Analysis of HTM sequence memory applied to various sequence learning and prediction problems. Written with a machine learning perspective, the paper contains some comparisons to statistical and Deep Learning techniques.","date":"2015/12/17","image":null,"link":"http://arxiv.org/abs/1512.05463","org":"Preprint of journal submission","sort":"d","title":"Continuous Online Sequence Learning with an Unsupervised Neural Network Model","type":"machine-learning","body":""}

/***/ },
/* 1062 */
/***/ function(module, exports) {

	module.exports = {"author":"Scott Purdy","brief":"Hierarchical Temporal Memory (HTM) is a biologically inspired machine intelligence technology that mimics the architecture and processes of the neocortex. In this white paper we describe how to encode data as Sparse Distributed Representations (SDRs) for use in HTM systems. We explain several existing encoders, which are available through the open source project called NuPIC, and we discuss requirements for creating encoders for new types of data.","date":"2016/02/18","link":"http://arxiv.org/abs/1602.05925","org":null,"sort":"p","title":"Encoding Data for HTM Systems","type":"machine-learning","body":""}

/***/ },
/* 1063 */
/***/ function(module, exports) {

	module.exports = {"author":"Alexander Lavin & Subutai Ahmad","brief":"14th IEEE ICMLA 2015 - This paper discusses how we should think about anomaly detection for streaming applications. It introduces a new open-source benchmark for detecting anomalies in real-time, time-series data.","date":"2015/10/12","image":null,"link":"http://arxiv.org/abs/1510.03336","org":"Published conference paper","sort":"g","title":"Evaluating Real-time Anomaly Detection Algorithms - the Numenta Anomaly Benchmark","type":"machine-learning","body":""}

/***/ },
/* 1064 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad & Jeff Hawkins","brief":"This paper describes a mathematical model for quantifying the benefits and limitations of sparse representations in neurons and cortical networks.","date":"2016/01/05","link":"http://arxiv.org/abs/1601.00720","org":"Preprint of journal submission","sort":"j","title":"How Do Neurons Operate on Sparse Distributed Representations? A Mathematical Theory of Sparsity, Neurons and Active Dendrites","type":"neuroscience","body":""}

/***/ },
/* 1065 */
/***/ function(module, exports) {

	module.exports = {"author":"Sebastian Billaudelle & Subutai Ahmad","brief":"Recently there has been much interest in building custom hardware implementations of HTM systems. This paper discusses one such scenario, and shows how to port HTM algorithms to analog hardware platforms such as the one developed by the Human Brain Project.","date":"2015/05/08","image":null,"link":"http://arxiv.org/abs/1505.02142","org":null,"sort":"s","title":"Porting HTM Models to the Heidelberg Neuromorphic Computing Platform","type":"neuroscience","body":""}

/***/ },
/* 1066 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad & Jeff Hawkins","brief":"An earlier version of the above submission, this paper applies our mathematical model of sparse representations to practical HTM systems.","date":"2014/10/28","link":"http://arxiv.org/abs/1503.07469","org":null,"sort":"m","title":"Properties of Sparse Distributed Representations and their Application To Hierarchical Temporal Memory","type":"neuroscience","body":""}

/***/ },
/* 1067 */
/***/ function(module, exports) {

	module.exports = {"author":"Subutai Ahmad & Scott Purdy","brief":"Much of the worlds data is streaming, time-series data, where anomalies give significant information in critical situations. Yet detecting anomalies in streaming data is a difficult task, requiring detectors to process data in real-time, and learn while simultaneously making predictions.","date":"2016/07/08","link":"https://arxiv.org/abs/1607.02480","org":"Preprint of journal submission","sort":"h","title":"Real-Time Anomaly Detection for Streaming Analytics","type":"machine-learning","body":""}

/***/ },
/* 1068 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins & Subutai Ahmad","brief":"Foundational paper describing core HTM theory for sequence memory and its relationship to the neocortex. Written with a neuroscience perspective, the paper explains why neurons need so many synapses and how networks of neurons can form a powerful sequence learning mechanism.","date":"2015/10/31","image":null,"link":"http://journal.frontiersin.org/article/10.3389/fncir.2016.00023/abstract","org":"Published in Frontiers in Neural Circuits Journal","sort":"a","title":"Why Neurons Have Thousands of Synapses, A Theory of Sequence Memory in Neocortex","type":"neuroscience","body":""}

/***/ },
/* 1069 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ba14ece563e537ddf828f6951b50051b.png";

/***/ },
/* 1070 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(666);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class PartnersPage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Partners' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	
	}
	
	exports.default = PartnersPage;
	module.exports = exports['default'];

/***/ },
/* 1071 */
699,
/* 1072 */
700,
/* 1073 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Numenta, a breakthrough machine intelligence company, today announced it has been selected as one of the four Big Ideas companies to be featured at the","date":"2013/02/14","featured":false,"image":"../images/numenta.png","link":null,"org":"Press Release","tags":"numenta grok gigaom structure data","title":"Numenta to Present Grok, a Solution for Fast Data, as one of the Big Ideas at the GigaOM Structure:Data Conference on March 20, 2013","type":"release","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>Numenta, a breakthrough machine intelligence company, today announced it has\nbeen selected as one of the four Big Ideas companies to be featured at the\nGigaOM <a href=\"http://event.gigaom.com/structuredata/\">Structure:Data</a>\nconference March 20-21 in New York City.  Numenta CEO\n<a href=\"http://event.gigaom.com/structuredata/speakers/%20\">Rami Branitzky</a>\nwill give an on-stage introduction of Grok, the company’s first product, on\nMarch 20 at 5:20 p.m.</p>\n<p><a href=\"/grok/\">Grok</a> brings together Numenta’s\ntrailblazing R&amp;D in biologically inspired machine intelligence software with\na highly scalable infrastructure for acting on fast data. The Grok platform\ningests data streams and creates actionable predictions in real time. Grok’s\nautomated modeling and continuous learning capability makes it uniquely suited\nfor fast data.</p>\n<p>“Machine generated streaming data is exploding. It has a short half-life and is\nconstantly changing,” said Branitzky. “To date, the focus in the area of Big\nData has been on machines to store and process data, with a short supply of data\nscientists to analyze and act on it. To best leverage fast data, we believe you\nmust have systems that model and learn from data automatically and use the\nresults to drive automated actions. That’s what Grok was designed to do.”</p>\n<p>“The GigaOM editorial team hand picked four companies and speakers who embody\ngreat ideas that are shaping our industry for the Big Ideas session, and our\neditors are excited to have\n<a href=\"http://gigaom.com/2013/01/29/palm-creators-brain-mimicking-software-helps-manage-the-smart-grid/\">Numenta</a>\nas one,” said Surj Patel, GigaOM’s Vice President for Events.</p>\n<p>Grok solutions currently are in private beta with customers in a variety of\nvertical markets, including electric energy, IT management, online advertising\nand finance.  Numenta recently announced EnerNOC, Inc., a leading provider\nof energy management applications, as one of its first\ncustomers - entering a partnership that couples Numenta’s Grok streaming\nanalytics solution with EnerNOC’s cloud-based software to create opportunities\nfor demand response and increased ability to detect energy efficiency faults\nand anomalies.</p>\n<h4>About GigaOM Structure:Data</h4>\n<p>Structure:Data 2013 will explore the technical and business opportunities\ncreated by the rapid growth of big data. Many of the industry’s brightest minds\nwill converge to reveal how they are making the most of the data revolution.\nDiscounted\n<a href=\"http://event.gigaom.com/structuredata/registration/\">supersaver tickets</a>\nare available through February 22.</p>\n<h4>About Numenta</h4>\n<p>Numenta’s mission is to build solutions that help companies automatically and\nintelligently act on the world’s data.  Numenta’s biologically inspired machine\nlearning technology was first described in Numenta’s co-founder Jeff Hawkin’s\nbook, <strong>On Intelligence</strong>.</p>\n<p>Numenta’s Grok platform, based on this technology, ingests data streams and\ncreates actionable predictions in real time. Grok’s automated modeling and\ncontinuous learning capability makes it uniquely suited to drive intelligent\naction from fast data.</p>\n<p>Grok solutions are available directly from Numenta and Numenta partners in a\nvariety of vertical markets, including electric energy, IT management, online\nadvertising and finance. For more information on Numenta and Grok go to\n<a href=\"/\">numenta.com</a>.</p>\n<h5>Media Contact</h5>\n<ul>\n<li><strong>Betty Taylor</strong></li>\n<li>Krause Taylor Associates for Numenta</li>\n<li><a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a></li>\n<li>408-981-7551</li>\n</ul>\n"}

/***/ },
/* 1074 */
699,
/* 1075 */
700,
/* 1076 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"The proliferation of devices and sensors creating machine-generated data yield enormous opportunity for automated predictive maintenance solutions. According","date":"2013/04/18","featured":false,"image":"../images/numenta.png","link":null,"org":"Press Release","tags":"thingworx numenta partner predictive maintenance connected world","title":"ThingWorx and Numenta Partner to offer Next Generation Predictive Maintenance and Operations for the Connected World","type":"release","body":"<p>Partnership to fully integrate Numenta’s Grok action intelligence platform with\nThingWorx connected application platform</p>\n<p>Exton, Pa. — April 18, 2013 —\n<a href=\"http://www.thingworx.com\">ThingWorx�</a>, the provider of the\nfirst application development platform for the connected world, and\n<a href=\"/\">Numenta</a>, a leading provider of solutions\nthat help companies intelligently act on machine-generated data, today announced\na partnership to create the next generation of tools for predictive maintenance.\nThe companies will work together to deliver advanced maintenance solutions to\nenable organizations to fully leverage the troves of data being generated by\ntheir connected machinery to achieve maximum operational efficiency and reduce\nmaintenance costs.</p>\n<p>The proliferation of devices and sensors creating machine-generated data yield\nenormous opportunity for automated predictive maintenance solutions. According\nto leading device and network companies such as Ericsson and Cisco, the number\nof connected devices and machines is expected to reach\n<a href=\"http://www.ericsson.com/res/docs/whitepapers/wp-50-billions.pdf;\">50\nbillion devices by 2020</a>.  ARC Research estimates that Predictive Maintenance\nis a global\n<a href=\"http://www.arcweb.com/strategy-reports/2012-06-28/leveraging-predictive-maintenance-for-apm-1.aspx\">$20 billion opportunity</a>.\nTo fully capitalize on this opportunity, ThingWorx and Numenta believe that a\nnew generation of maintenance solutions are required that go beyond today’s\nbatch-driven analytics approaches.</p>\n<p>ThingWorx, which provides a powerful and flexible platform to rapidly deliver\ncustomizable applications and connected solutions, is architected for this\nexplosion of devices and data across a range of industries. Numenta’s industry\nleading biologically inspired machine intelligence technology, called\n<a href=\"http://grokstream.com\">Grok</a>, is designed to automatically\nanalyze data generated by these connected devices to drive actionable\npredictions.  Grok ingests data streams and can detect anomalous patterns in\ndata streams that indicate, for example, when a machine is in an unusual state\nand might fail.</p>\n<p>“Our two companies bring a unique combination of assets to tackle problems in\nreal-time predictive maintenance  to help companies minimize or avoid downtime\nof mission critical systems and reduce maintenance costs,” said Rami Branitzky,\nNumenta CEO. “Grok capabilities – especially its continuous learning and\nautomated modeling — are ideal for advanced, proactive monitoring of machinery\nthat needs to have continuous uptime. Working closely with ThingWorx’s industry\nleading connected device platform and rapid development environment we are well\npositioned to help transform the Predictive Maintenance market.”</p>\n<p>“ThingWorx is pleased to be able to offer plug-and-play access to the most\ninnovative analytic framework in the market today,” said Russ Fadel, CEO and Co-\nFounder of ThingWorx.  “Grok provides new capabilities for predictive\nmaintenance applications.  By integrating it into our platform we can eliminate\nthe time-consuming process of data analysis and predictive modeling and provide\ncustomers in asset-intensive industries such as energy, oil and gas, healthcare,\nand manufacturing, and equipment OEMs, with the critical analysis and actions in\norder for them to operate more reliably and efficiently. We are excited to be\noffering a solution that we believe  will allow companies to truly predict\nmachine behavior, which will enable a step change in efficiency.”</p>\n<p>As part of their collaboration, Grok has been certified as ThingWorx\nReady� and will be pre-integrated with the ThingWorx rapid application\ndevelopment platform.  Further information on the combined predictive\nmaintenance solution will be on display at the upcoming\n<a href=\"http://www.wbresearch.com/fieldserviceusa/home.aspx\">Field Service USA</a>\nevent, as well as during a live webcast on April 24, 2013,\n<a href=\"http://theservicecouncil.com/webcast-registration\">Smarter Services:\nThe Future of Connected Products Today</a>.</p>\n<h4>About Numenta</h4>\n<p>Numenta builds solutions that help companies automatically and intelligently act\non their data.  Its Grok technology and product platform are based on\nbiologically inspired machine learning technology first described in co-founder\nJeff Hawkin’s book, <strong>On Intelligence</strong>. Grok ingests data streams and\ncreates actionable predictions in real time. Grok’s automated modeling and\ncontinuous learning capability makes it uniquely suited to drive intelligent\naction from fast data.</p>\n<h4>About ThingWorx</h4>\n<p>ThingWorx� provides the first platform designed to efficiently build and\nrun the applications of today’s connected world. ThingWorx’s model-based design\nand search-based intelligence reduces application development efforts by 10X,\nminimizing cost, risk and time to market. The ThingWorx platform combines the\nkey functionality of Web 2.0, search, and social collaboration, and applies it\nto the world of “things,” including connected products, machines, sensors, and\nindustrial equipment. Businesses use the ThingWorx platform to rapidly deliver\ninnovative applications and connected solutions across markets ranging from\nmanufacturing, energy, and food, to Machine-to-Machine (M2M) remote monitoring\nand service, as well as in emerging Internet of Things applications, including\nsmart cities, smart grid, agriculture, and transportation.  For more\ninformation, please visit our website at\n<a href=\"http://www.thingworx.com\">www.thingworx.com</a> and our blog at\n<a href=\"http://www.thingworx.com/blog\">www.thingworx.com/blog</a> or follow us\non Twitter at <a href=\"https://twitter.com/thingworx\">@ThingWorx</a>.</p>\n<h5>Media Contact</h5>\n<ul>\n<li><strong>Betty Taylor</strong></li>\n<li>Krause Taylor Associates for Numenta</li>\n<li><a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a></li>\n<li>408-981-7551</li>\n</ul>\n"}

/***/ },
/* 1077 */
699,
/* 1078 */
700,
/* 1079 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Numenta, a leading provider of solutions that help companies intelligently act on machine-generated data, today announced its Grok solution has achieved certified integration","date":"2013/05/17","featured":false,"image":"../images/numenta.png","link":null,"org":"Press Release","tags":"grok sap sybase esp cep complex event processing","title":"Grok’s Action Intelligence Solution Achieves Certified Integration with SAP® Sybase ESP Complex Event Processing Platform","type":"release","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p><strong>Grok delivers real-time predictions and finds anomalies in streaming data</strong></p>\n<p>Numenta, a leading provider of solutions\nthat help companies intelligently act on machine-generated data, today announced\nits Grok solution has achieved certified integration with the SAP® Sybase® Event\nStream Processor (SAP Sybase ESP). The SAP Integration and Certification Center\n(SAP ICC) has certified that the Grok 2.0 solution integrates with the SAP\nSybase ESP 5.1 to send and receive streaming data, predictions, and anomalies\nfound in data streams.</p>\n<p>Grok’s patented machine intelligence product ingests data streams and creates\nactionable predictions and detects anomalies in real-time. The Grok solution\nfeatures automated pattern discovery and predictive modeling capabilities based\non its unique biologically inspired machine intelligence algorithm. Grok was\nrecently named as one of the Cool Vendors in Analytics for 2013 by Gartner\nResearch.</p>\n<p>“Grok’s ability to learn from streaming data makes it a perfect add-on for\ncustomers who are looking to automatically and intelligently act on their\nmachine-generated data,” said Numenta CEO Rami Branitzky. “The Grok solution is\na natural complement to SAP Real-Time Data Platform. We look forward to working\nclosely with SAP to serve this rapidly expanding market.”</p>\n<p>In addition, Numenta has applied to join the SAP PartnerEdge® program as an SAP\nsoftware solution and technology partner. Through the program, partners work\nclosely with <a href=\"http://www.sap.com/\">SAP AG</a> (NYSE: SAP) to develop and\ncertify the technical integration of their solutions with SAP software.\nIntegrated partner applications extend, complement and add value to SAP\nsolutions, thereby helping mutual customers more successfully meet business\nneeds and drive strong results.</p>\n<h4>About Numenta</h4>\n<p>Numenta builds solutions that help companies automatically and intelligently act\non their data. Grok’s technology and product platform are based on biologically\ninspired machine learning technology first described in co-founder Jeff Hawkins’\nbook, <strong>On Intelligence</strong>. Grok ingests data streams and creates actionable\npredictions in real time. Grok’s automated modeling and continuous learning\ncapabilities make it uniquely suited to drive intelligent action from fast data.</p>\n<p>Grok solutions are available directly from Grok and its partners in a variety of\nvertical markets, including energy, IT management, and finance. For more\ninformation go to\n<a href=\"http://grokstream.com\">http://grokstream.com</a>.</p>\n<p>SAP, PartnerEdge and all SAP logos are trademarks or registered trademarks of\nSAP AG in Germany and in several other countries. Sybase is a trademark or\nregistered trademark of Sybase, Inc. ® indicates registration in the United\nStates. Sybase is an SAP company. All other product and service names mentioned\nherein are the trademarks of their respective owners.</p>\n<h5>Media Contact</h5>\n<ul>\n<li><strong>Betty Taylor</strong></li>\n<li>Krause Taylor Associates for Numenta</li>\n<li><a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a></li>\n<li>408-981-7551</li>\n</ul>\n"}

/***/ },
/* 1080 */
798,
/* 1081 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Numenta.org has been created as the home for the NuPIC (Numenta Platform for Intelligent Computing) open source project and community.  The project was","date":"2013/07/22","featured":false,"image":"../images/nupic.png","link":null,"org":"Press Release","tags":"nupic open source numenta","title":"NuPIC Open Source Project and Community Established at Numenta.org","type":"release","body":"<p><a href=\"http://Numenta.org\">Numenta.org</a> has been created as the home for the NuPIC (Numenta Platform for\nIntelligent Computing) open source project and community.  The project was\nannounced today in a keynote address at the OSCON open source conference.</p>\n<p>“The mission of this project is to build a community interested in machine\nintelligence based on biological principles,” said Jeff Hawkins, co-founder of\nNumenta, Inc. “Developers and scientists told us they wanted to work with our\nlearning algorithms.  There were already several independent implementations\nbased on our publications.  We felt that an open source structure was the best\nway to share knowledge and accelerate progress in machine intelligence.”</p>\n<p>Hawkins, who has studied neuroscience for more than 30 years, wrote a book\ncalled <strong>On Intelligence</strong> (along with Sandra Blakeslee) in 2005 that\ndescribed a theory of the neocortex.  Numenta, Inc. was formed as a company to\npursue the theory for commercial and scientific purposes shortly thereafter.</p>\n<p>NuPIC comprises a set of learning algorithms called the Cortical Learning\nAlgorithm (CLA) first described in a\n<a href=\"http://numenta.org/resources/HTM_CorticalLearningAlgorithms.pdf\">whitepaper</a>\npublished by Numenta in 2009. The CLA algorithms replicate part of the function\nof a region of the neocortex. They can be used for pattern recognition,\nprediction, and anomaly detection in many domains. They have been tested\nextensively and are embedded in a product called Grok, which the company\nreleased last year. <a href=\"/grok/\">Grok</a> is now being\nbranded and commercialized separately from Numenta.</p>\n<p>“Understanding the brain and building fantastically intelligent machines is a\ngrand quest for humanity,” Hawkins continued. “This is not a trivial pursuit,\nand there is a tremendous amount of work to be done, but we believe the CLA is a\nkey building block that provides a path forward. Our hope is that NuPIC\ncontributors will work on these problems, accelerate our progress, and uncover\nfascinating new applications.”</p>\n<p>Anyone can access the NuPIC open source code under the AGPLv3 license<sup><a href=\"#agpl\">*</a></sup>. For more\ninformation see the\n<a href=\"http://numenta.org/news/2013/06/03/introducing-nupic.html\">Introduction to NuPIC</a>\nand go to <a href=\"http://numenta.org\">Numenta.org</a>.</p>\n<p><small id=\"agpl\" class=\"disclaimer\"><sup>*</sup> This content has been updated to reflect our <a href=\"http://numenta.org/blog/2015/08/17/licensing-update.html\">new AGPL license</a>.</small></p>\n<h4>About <a href=\"http://Numenta.org\">Numenta.org</a></h4>\n<p><a href=\"http://Numenta.org\">Numenta.org</a> is the home and community for the NuPIC (Numenta Platform for\nIntelligent Computing) open source project. NuPIC was developed by Numenta Inc.\nbased on the theory of the neocortex first described in co-founder Jeff Hawkins’\n2005 book <strong>On Intelligence.</strong></p>\n<h5>Media Contact</h5>\n<ul>\n<li><strong>Betty Taylor</strong></li>\n<li>Krause Taylor Associates for Numenta</li>\n<li><a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a></li>\n<li>408-981-7551</li>\n</ul>\n"}

/***/ },
/* 1082 */
/***/ function(module, exports) {

	module.exports = {"author":"Editor","brief":"Computing Like the Brain - The Path to Machine Intelligence, a video off Jeff Hawkins at the YOW 2013 conference","date":"2013/12/04","featured":false,"image":"../images/yow.png","link":"http://yow.eventer.com/yow-2013-1080/computing-like-the-brain-the-path-to-machine-intelligence-by-jeff-hawkins-1408","org":"YOW","tags":"computing brain machine intelligence jeff hawkins yow 2013","title":"Computing Like the Brain: The Path to Machine Intelligence","type":"item","body":""}

/***/ },
/* 1083 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c9c5b1fe9e530ebfd85314ae87740a39.png";

/***/ },
/* 1084 */
/***/ function(module, exports) {

	module.exports = {"author":"Editor","brief":"Fujitsu NATF Video with Jeff Hawkins","date":"2014/01/22","featured":false,"image":"../images/fujitsu.png","link":"https://www.youtube.com/watch?v=cz-3WDdqbj0&list=PLX9JDz3uBpNCjNfq20KOCvsP6szY94r2e","org":"Fujitsu","tags":"fujitsu natf video jeff hawkins","title":"Brains, Data, and Machine Intelligence","type":"item","body":""}

/***/ },
/* 1085 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "86b1b57cee0360a4a868624b669ff3bb.png";

/***/ },
/* 1086 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "789a17233f0936f0e495f8deed877619.png";

/***/ },
/* 1087 */
/***/ function(module, exports) {

	module.exports = {"author":"Ricardo Hausmann","brief":"In his pathbreaking 2005 book On Intelligence, Jeff Hawkins proposed an alternative paradigm of how the human brain works. In his view, the brain is not a Turing machine that manipulates symbols according to a table of rules, which is the model on which computers and artificial intelligence have been based","date":"2014/01/29","featured":false,"image":"../images/project-syndicate.png","link":"http://www.project-syndicate.org/commentary/ricardo-hausmann-proposes-an-alternative-approach-to-economic-development-based-on-how-the-human-brain-functions","org":"Project Syndicate","tags":"brain view economics alternative","title":"A Brain's View of Economics","type":"item","body":""}

/***/ },
/* 1088 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "eb566664982ac36466f26150c87aac7f.png";

/***/ },
/* 1089 */
699,
/* 1090 */
700,
/* 1091 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Grok anomaly detection leverages sophisticated machine intelligence algorithms to enable new insights into critical IT systems. Grok automatically learns complex patterns and then","date":"2014/03/25","featured":false,"image":"../images/numenta.png","link":null,"org":"Press Release","tags":"grok it analytics numenta aws","title":"Numenta Releases Grok for IT Analytics on AWS","type":"release","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>Numenta, Inc. today announced the commercial\navailability of Grok for IT Analytics on Amazon Web Services (AWS) in the\n<a href=\"/grok/#get\">AWS Marketplace</a>. <a href=\"/grok/\">Grok</a> anomaly detection\nleverages sophisticated machine intelligence algorithms to enable new insights\ninto critical IT systems. Grok automatically learns complex patterns and then\nhighlights unusual behavior.  As software topologies and usage patterns change,\nGrok continuously learns and adapts, eliminating the need for frequent resetting\nof thresholds. Visualization of Grok output is displayed on a constantly updated\nmobile device, enabling IT professionals to assess the health of their systems\nanytime, anywhere.  Using Grok, IT operators can better prevent business\ndowntime while reducing false positives.</p>\n<p>Grok is the first commercial application of Numenta’s groundbreaking Cortical Learning Algorithm\n(CLA), biologically inspired algorithms for machine intelligence. The core\nCLA technology is ideal for large-scale analysis of continuously streaming\ndatasets and excels at modeling and predicting patterns in data.</p>\n<p>“Grok provides an early warning system to IT professionals to give them real-\ntime insights into their system performance,” said Numenta CEO Donna Dubinsky.\n“Grok anticipates problems before they happen, reduces false positives, and\nlowers engineering costs through automated modeling and continuous learning.”</p>\n<p>Grok features include:</p>\n<ul>\n<li>Monitoring of performance and health of AWS environments or other systems</li>\n<li>Automatic modeling to determine normal patterns</li>\n<li>Automatic identification and ranking of unusual patterns</li>\n<li>Continuous learning of new patterns as environments evolve – no need for\nmanual threshold setting</li>\n<li>Notification to user when an anomaly occurs</li>\n<li>Output displayed graphically on an Android mobile device</li>\n<li>Simple setup via a web-based or command-line interface</li>\n<li>Support for AWS auto-scaling groups and logical clusters</li>\n</ul>\n<p>Grok is available now:</p>\n<ul>\n<li><a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6/ref=srh_res_product_title?ie=UTF8&amp;sr=0-3&amp;qid=1391115095261\">Grok Free Edition</a>; supports up to 10 AWS instances or custom metrics</li>\n</ul>\n<p>Grok will be demonstrated in Booth 100 at the\n<a href=\"https://aws.amazon.com/aws-summit-2014/\">AWS Summit</a> on March 26 at the\nMoscone Center in San Francisco.</p>\n<p>In addition to working on the Grok product release, Numenta continues to push\nits biologically-inspired algorithms forward.  “We’ve made some important\nprogress recently and look forward to sharing it with our community over the\ncoming year,” said Jeff Hawkins, Numenta co-founder. “Our open source community,\n<a href=\"http://numenta.org\">NuPIC</a>, is also growing and actively\ncontributing to the advancement of the science.”</p>\n<h4>About Numenta Inc.</h4>\n<p>Numenta, Inc., was founded in 2005 to be a catalyst in the emerging field of\nmachine intelligence. Numenta builds solutions that help companies automatically\nand intelligently act on machine generated data.  Its biologically inspired\nmachine learning technology is based on a theory of the neocortex first\ndescribed in co-founder Jeff Hawkins’ book, <strong>On Intelligence</strong>. Its first\ncommercial product, called Grok, offers a breakthrough solution for anomaly\ndetection for IT Operations. In addition, Numenta has created NuPIC (Numenta\nPlatform for Intelligent Computing) as an open source project.</p>\n<p>Numenta is based in Redwood City, California. It is privately funded.</p>\n<h5>Media Contact</h5>\n<ul>\n<li><strong>Betty Taylor</strong></li>\n<li>Krause Taylor Associates for Numenta</li>\n<li><a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a></li>\n<li>408-981-7551</li>\n</ul>\n"}

/***/ },
/* 1092 */
/***/ function(module, exports) {

	module.exports = {"author":"Jack Clark","brief":"Jeff Hawkins has bet his reputation, fortune, and entire intellectual life on one idea: that he understands the brain well enough to create machines with an intelligence we recognize as our own","date":"2014/03/29","featured":false,"image":"../images/the-register.png","link":"http://www.theregister.co.uk/2014/03/29/hawkins_ai_feature/","org":"The Register","tags":"building ai mimic neocortex","title":"Meet the Man Building an AI that Mimics Our Neocortex","type":"item","body":""}

/***/ },
/* 1093 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e3961127a8c23e9d084b507970ab35e6.png";

/***/ },
/* 1094 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4a8752db0788974d1a59a2992c102088.png";

/***/ },
/* 1095 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "589ca4cc59b0a009a86ed0bf0d05e324.png";

/***/ },
/* 1096 */
/***/ function(module, exports) {

	module.exports = {"author":"Leo Laporte","brief":"Jeff Hawkins on Triangulation 146 with Leo Laporte","date":"2014/04/07","featured":false,"image":"../images/twit.png","link":"http://twit.tv/show/triangulation/146","org":"Twit.tv","tags":"jeff hawkins on triangulation 146 with leo laporte","title":"Jeff Hawkins on Triangulation 146 with Leo Laporte","type":"item","body":""}

/***/ },
/* 1097 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "66fe1317baab3fadfca60eb908edb6c6.png";

/***/ },
/* 1098 */
/***/ function(module, exports) {

	module.exports = {"author":"Editor","brief":"Jeff Hawkins, founder of Numenta recently gave a talk highlighting his approach to machine intelligence—an approach that is highly dependent on an understanding of the human neocortex","date":"2014/04/08","featured":false,"image":"../images/33rd-square.png","link":"http://www.33rdsquare.com/2014/04/jeff-hawkins-on-path-to-machine.html","org":"33rd Square","tags":"path to machine intelligence","title":"Jeff Hawkins on the Path to Machine Intelligence","type":"item","body":""}

/***/ },
/* 1099 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b432b1ba51ae2a570cbd32fad8457dcc.png";

/***/ },
/* 1100 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b4bff8bf7efbf862d1562009140f3f63.png";

/***/ },
/* 1101 */
/***/ function(module, exports) {

	module.exports = {"author":"Anthony Wing Kosner","brief":"Does artificial intelligence represent an existential threat to humanity? Some very smart people think so. Technologists are supposed to be rationalists, and yet Musk waxed supernatural about the threat of renegade AI.","date":"2015/04/20","featured":false,"image":"../images/forbes.png","link":"http://www.forbes.com/sites/anthonykosner/2015/04/20/what-really-scares-tech-leaders-about-artificial-intelligence/","org":"Forbes","tags":"scares tech leaders artificial intelligence ai numenta htm jeff hawkins","title":"What Really Scares Tech Leaders About Artificial Intelligence?","type":"item","body":""}

/***/ },
/* 1102 */
1033,
/* 1103 */
/***/ function(module, exports) {

	module.exports = {"author":"Robert D. Hof","brief":"Trying to emulate the brain just by using special software on conventional processors—the way Google did in its cat experiment—is way too inefficient to be the basis of machines with still greater intelligence, says Jeff Hawkins, a leading thinker on AI who created the Palm Pilot before cofounding Numenta, a maker of brain-inspired software","date":"2014/04/23","featured":false,"image":"../images/mit-technology-review.png","link":"http://m.technologyreview.com/featuredstory/526506/neuromorphic-chips/","org":"MIT Technology Review","tags":"neuromorphic chips enhance artificial intelligence","title":"Neuromorphic Chips: Microprocessors Configured Like Brains","type":"item","body":""}

/***/ },
/* 1104 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7d1e954f645f551ffc4b5bf72aadd7dc.png";

/***/ },
/* 1105 */
/***/ function(module, exports) {

	module.exports = {"author":"Editor","brief":"Big data gives you large amounts of data that can provide interesting insights, but typically static. But we live in reality more and more in the direction of data that is constantly moving and changing. We call it streaming data","date":"2014/04/30","featured":false,"image":"../images/nordea-invest.png","link":"http://mag.nordea.dk/invest/2014/04/naar-big-data-bliver-old-news","org":"Nordea Invest","tags":"big data old news","title":"As Big Data Becomes Old News","type":"item","body":""}

/***/ },
/* 1106 */
/***/ function(module, exports) {

	module.exports = {"author":"Kevin Maney","brief":"Numenta, run by PalmPilot inventor Jeff Hawkins, developed technology called Grok that learns by recognizing patterns over time, the way brains do. It’s being used, for instance, by Amazon to spot unusual activity on its computers.","date":"2014/05/29","featured":false,"image":"../images/newsweek.png","link":"http://www.newsweek.com/2014/06/06/computer-programming-dying-art-252618.html","org":"Newsweek","tags":"computer programming dying art","title":"Computer Programming is a Dying Art","type":"item","body":""}

/***/ },
/* 1107 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "dcaadf8f4c139cf49ebd2bc75abfb74d.png";

/***/ },
/* 1108 */
/***/ function(module, exports) {

	module.exports = {"author":"Jordan Robertson","brief":"Last year, ImportIO began using software made by Numenta, a Redwood City, California-based company founded by Palm's founder Jeff Hawkins and former CEO Donna Dubinsky. Their approach: Instead of focusing on data collection and retrospective looks at information piling up in a warehouse, focus on analyzing data streams in real time to spot anomalies.","date":"2014/06/03","featured":false,"image":"../images/bloomberg.png","link":"http://www.bloomberg.com/news/2014-06-03/big-data-s-dumping-grounds-how-hoarding-hinders-startups-to-spy-agencies.html","org":"Bloomberg","tags":"big data overwhelm spy agencies","title":"The Big Data Dump: How Info-Hoarding Can Overwhelm Startups and Spy Agencies","type":"item","body":""}

/***/ },
/* 1109 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2aa0de5f3f073ef96915415a6d13b651.png";

/***/ },
/* 1110 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b2d19f90850730b15446ad75dd7a8b20.png";

/***/ },
/* 1111 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "65041c6ad3ad1b1ff815e498d9f5752b.png";

/***/ },
/* 1112 */
/***/ function(module, exports) {

	module.exports = {"author":"Dean Takahashi","brief":"Numenta founders Jeff Hawkins and Donna Dubinsky sit down with VentureBeat to talk about Numenta’s breakthrough progress in machine intelligence","date":"2014/07/09","featured":false,"image":"../images/venture-beat.png","link":"http://venturebeat.com/2014/07/09/numentas-brain-research-has-taken-a-long-nine-years-but-it-starting-to-pay-off-interview/","org":"Venture Beat","tags":"numenta apps mimic brain","title":"After Nine Years of Research Numenta Finally Has Apps That Mimic the Way the Brain Works","type":"item","body":""}

/***/ },
/* 1113 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "6ddb267ba48a74cff217a8046db850ef.png";

/***/ },
/* 1114 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2fcfda406645f4bc59888c20cabbe9d9.png";

/***/ },
/* 1115 */
/***/ function(module, exports) {

	module.exports = {"author":"Dan Sullivan","brief":"Cloud monitoring can collect a range of performance data, but a crucial piece of the puzzle, networking, often falls short. A third-party network monitoring tool is essential to keep your cloud running up to par.","date":"2014/08/13","featured":false,"image":"../images/search-cloud-computing.png","link":"http://searchcloudcomputing.techtarget.com/tip/Network-monitoring-tools-for-when-cloud-monitoring-falls-short","org":"Search Cloud Computing","tags":"network monitoring tools cloud monitoring numenta grok","title":"Network Monitoring Tools For When Cloud Monitoring Falls Short","type":"item","body":""}

/***/ },
/* 1116 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "241f15fce1dd3238bc4a2f2937b6796f.png";

/***/ },
/* 1117 */
/***/ function(module, exports) {

	module.exports = {"author":"Eileen McNulty","brief":"We’ve seen huge improvements in the way algorithms can detect our language and dialogue. IBM have continued to pour money and resources into the development of Watson; Apple have moved","date":"2014/09/02","featured":false,"image":"../images/dataconomy.png","link":"http://dataconomy.com/how-an-austrian-startup-is-mimicking-brain-function-to-revolutionise-nlp/","org":"Dataconomy","tags":"mimicking brain function revolutionising nlp natural language processing numenta nupic cortical.io","title":"How Mimicking Brain Function is Revolutionising NLP","type":"item","body":""}

/***/ },
/* 1118 */
/***/ function(module, exports) {

	module.exports = {"author":"Janet Wagner","brief":"Cognitive computing is a relatively new area of computer science that has been growing fairly rapidly in recent years. While artificial intelligence, a field of study that has been around since","date":"2014/09/05","featured":false,"image":"../images/programmableweb.png","link":"http://www.programmableweb.com/news/cognitive-computing-makes-it-possible-to-build-truly-amazing-apps/analysis/2014/09/05","org":"ProgrammableWeb","tags":"cognitive computing numenta grok htm hierarchical temporal memory","title":"Cognitive Computing Makes It Possible To Build Truly Amazing Apps","type":"item","body":""}

/***/ },
/* 1119 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4b15f86f525fc954d0f94fb7cecea737.png";

/***/ },
/* 1120 */
1116,
/* 1121 */
/***/ function(module, exports) {

	module.exports = {"author":"Eileen McNulty","brief":"Machine learning, to put it mildly, is an incredibly broad and varied field, with multitudes of applications. Thus, this list of Ten Machine Learning Experts You Need to Know","date":"2014/09/16","featured":false,"image":"../images/dataconomy.png","link":"http://dataconomy.com/10-machine-learning-experts-you-need-to-know/","org":"Dataconomy","tags":"machine learning experts jeff hawkins numenta grok","title":"Ten Machine Learning Experts You Need to Know","type":"item","body":""}

/***/ },
/* 1122 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "06d0b1e1a4509fc8efa994cfe7773b64.png";

/***/ },
/* 1123 */
/***/ function(module, exports) {

	module.exports = {"author":"Derrick Harris","brief":"Jeff Hawkins is best known for bringing us the Palm Pilot, but he’s working on something that could be much, much bigger. For the past several years, Hawkins has been studying how the human brain functions with the hope of replicating it in software.","date":"2014/09/24","featured":false,"image":"../images/gigaom.png","link":"https://gigaom.com/2014/09/24/the-gigaom-interview-jeff-hawkins-on-why-his-approach-to-ai-will-become-the-approach-to-ai/","org":"Gigaom","tags":"jeff hawkins numenta gigaom ai artificial intelligence machine nupic htm","title":"Jeff Hawkins on why his approach to AI will become the approach to AI","type":"item","body":""}

/***/ },
/* 1124 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "169dac90c5c88faa02e28a27d2dc5ad3.png";

/***/ },
/* 1125 */
/***/ function(module, exports) {

	module.exports = {"author":"Augustus Van Dusen","brief":"The media hype surrounding artificial neural networks (ANN) is becoming absurd. These articles tend to be uncritical summaries of company press releases. The most over the top articles","date":"2014/10/22","featured":false,"image":"../images/thinkingmachine.png","link":"http://thinkingmachineblog.net/jeff-hawkins-on-the-limitations-of-artificial-neural-networks/","org":"Thinking Machine","tags":"jeff hawkins numenta limitations of artificial nerual networks","title":"Jeff Hawkins on the Limitations of Artificial Neural Networks","type":"item","body":""}

/***/ },
/* 1126 */
699,
/* 1127 */
700,
/* 1128 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Grok enables IT professionals to easily spot unusual activity and to gain immediate insights into the health of their critical IT systems. Now, with annotations, they can more easily share","date":"2014/11/05","featured":false,"image":"../images/numenta.png","link":null,"org":"Press Release","tags":"numenta grok it analytics aws reinvent amazon web services","title":"Numenta to Showcase New Version of Grok at AWS reInvent 2014","type":"release","body":"<p><strong>NOTE:</strong> Numenta has <a href=\"/press/numenta-announces-licensing-of-grok-for-it-to-avik-partners.html\">announced a strategic partnership with Avik Partners</a>,\nplease read more about the future of\n<a href=\"http://grokstream.com\">Grok for IT Analytics</a>.</p>\n<p>AWS re:Invent 2014</p>\n<p>REDWOOD CITY, Calif. --(<a href=\"http://www.businesswire.com/\">BUSINESS WIRE</a>)–\n<a href=\"/\">Numenta Inc.</a>, a leader in machine intelligence technology,\ntoday announced the newest release of\n<a href=\"/assets/pdf/grok/resources/1.6/Grok-1.6-DataSheet.pdf\">Grok IT for Analytics</a>.\nThe application, which runs on Amazon Web Services, will be featured\nat the <a href=\"https://reinvent.awsevents.com/\">upcoming AWS re:Invent 2014</a>,\nNovember 11-14 in Las Vegas. Visit Numenta and see Grok in action at\nAWS Booth 648.</p>\n<p>Based on Numenta’s breakthrough Hierarchical Temporal Memory technology, Grok\nmonitors servers running on AWS and enables complex pattern detection, automatic\nmodel building, and continuous learning. Grok output is displayed on a\nconstantly updated mobile device, enabling IT professionals to assess the health\nof their systems anytime, anywhere.</p>\n<p>The latest Grok 1.6 release features:</p>\n<ul>\n<li>A major new feature called “Annotations,” which allows sharing of information\nand collaboration among users</li>\n<li>Increased ability to support additional sources and formats of data</li>\n<li>Enhanced performance</li>\n</ul>\n<p>“Grok enables IT professionals to easily spot unusual activity and to gain\nimmediate insights into the health of their critical IT systems. Now, with\nannotations, they can more easily share these insights with colleagues, enabling\nthe organization to get ahead of problems before they become serious,” noted\nNumenta CEO Donna Dubinsky.</p>\n<p>Unlike other tools that rely on static thresholds or simple statistics, Grok\nautomatically learns complex patterns in the AWS environment, and then\nidentifies unusual behavior in those systems.</p>\n<p>Key features of Grok IT for Analytics include:</p>\n<ul>\n<li>Very easy configuration and set-up</li>\n<li>Automatically models each metric to determine normal patterns</li>\n<li>Automatically identifies and ranks unusual patterns</li>\n<li>Continuously learns new patterns as environments evolve</li>\n<li>Does not require any manual threshold setting</li>\n<li>Notifies the user when something curious is happening</li>\n<li>Displays output graphically on a mobile Android device</li>\n</ul>\n<p>To learn more about use cases for IT operators, go to\n<a href=\"/grok/\">http://numenta.com/grok</a>.</p>\n<p>Grok is available for free on the <a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6/ref=srh_res_product_title?ie=UTF8&amp;sr=0-3&amp;qid=1390942511618\">AWS Marketplace</a>.</p>\n<h4>About Numenta</h4>\n<p><a href=\"/\">Numenta, Inc.</a> was founded in 2005 to be a catalyst in the\nnew era of machine intelligence. Its biologically inspired machine learning\ntechnology is based on a theory of the neocortex first described in co-founder\nJeff Hawkins’ book, On Intelligence. The technology can be applied to anomaly\ndetection in servers and applications, human behavior, and geo-spatial tracking\ndata, and to the predication and classification of natural language. In\naddition, Numenta has created NuPIC (Numenta Platform for Intelligent Computing)\nas an open source project. Based in Redwood City, CA, the company is privately\nfunded. For more information go to <a href=\"/\">numenta.com</a>.</p>\n<p>Connect with Numenta on <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.social.twitter%7D%7D\">Twitter</a>,\n<a href=\"%7B%7Bsite.paths.social.facebook%7D%7D\">Facebook</a>,\n<a href=\"%7B%7Bsite.paths.social.googleplus%7D%7D\">Google+</a> and\n<a href=\"%7B%7Bsite.paths.social.linkedin%7D%7D\">LinkedIn</a>.\n</t></p>\n<h4>Media Contact</h4>\n<div>Krause Taylor Associates</div>\n<div>**Betty Taylor**</div>\n<div>[408-981-7551](tel:+1-408-981-7551)</div>\n<div>[bettyt@krause-taylor.com](mailto:bettyt@krause-taylor.com)</div>\n"}

/***/ },
/* 1129 */
1107,
/* 1130 */
/***/ function(module, exports) {

	module.exports = {"author":"Kevin Maney","brief":"Technology is stuck. It’s stuck while an overcrowding, polluting, beheading, virus-spreading planet needs the kind of breakthroughs that reorganize life and create a clear before and after.","date":"2014/11/10","featured":false,"image":"../images/newsweek.png","link":"http://www.newsweek.com/innovation-lite-modern-day-technology-stuck-283338","org":"Newsweek","tags":"modern day technology stuck newsweek numenta hierarchical temporal memory htm jeff hawkins","title":"Innovation Lite - Modern-Day Technology is Stuck","type":"item","body":""}

/***/ },
/* 1131 */
/***/ function(module, exports) {

	module.exports = {"author":"Eileen McNulty","brief":"Cortical.io, an Austrian startup whose tech mimics brain function to process language more accurately and natively, have just announced an impressive new funding round. Reventon (NL) is a venture capital firm responsible","date":"2014/11/12","featured":false,"image":"../images/dataconomy.png","link":"http://dataconomy.com/cortical-io-gain-1-25-million-in-new-venture-capital-share-grand-plans-for-the-future/","org":"Dataconomy","tags":"cortical.io million venture capital grand plans for future numenta semantic machine intelligence","title":"Cortical.io Gain $1.25 Million in New Venture Capital, Share Grand Plans for The Future","type":"item","body":""}

/***/ },
/* 1132 */
1116,
/* 1133 */
/***/ function(module, exports) {

	module.exports = {"author":"Dan Hartveld","brief":"Ever since IBM Watson won the hugely popular US quiz show ‘Jeopardy’ back in 2011, cognitive computing has been a hot topic for discussion. Those who have had a glimpse of this new technology recognise its importance","date":"2014/11/21","featured":false,"image":"../images/techworld.png","link":"http://www.techworld.com/blogs/talking-shop/cognitive-computing-explained-3588242/","org":"Techworld","tags":"cognitive computing numenta grok nupic techworld nlp natural language processing","title":"Cognitive Computing - What It Means To You","type":"item","body":""}

/***/ },
/* 1134 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8eb1e39b1f4b7320e170be348fc2801d.png";

/***/ },
/* 1135 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "60c90fad6d02e99c8ddae2ab9c4d1119.png";

/***/ },
/* 1136 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "818cdf44c0fb7bfe59bf3ac5ebfcf4f2.png";

/***/ },
/* 1137 */
/***/ function(module, exports) {

	module.exports = {"author":"Jessica Lipsky","brief":"At a conference hosted by Silicon Valley Forum last week, industry experts projected the future of AI, machine learning, and deep learning. Jeff Hawkins, CEO and co-founder of Numenta, a firm that has developed a computational framework for AI,","date":"2014/12/09","featured":false,"image":"../images/eetimes.png","link":"http://www.eetimes.com/document.asp?doc_id=1324910&_mc=sm_eet_editor_rickmerritt","org":"EE Times","tags":"artificial intelligence future smart panel silicon valley forum jeff hawkins numenta","title":"Smart Panel Ponders AI's Future","type":"item","body":""}

/***/ },
/* 1138 */
/***/ function(module, exports) {

	module.exports = {"author":"Anthony Wing Kosner","brief":"Despite what Stephen Hawking or Elon Musk say, hostile Artificial Intelligence is not going to destroy the world anytime soon. What is certain to happen, however, is the continued ascent of the practical applications of AI","date":"2014/12/29","featured":false,"image":"../images/forbes.png","link":"http://www.forbes.com/sites/anthonykosner/2014/12/29/tech-2015-deep-learning-and-machine-intelligence-will-eat-the-world/","org":"Forbes","tags":"2015 deep learning machine intelligence numenta grok forbes","title":"Tech 2015 Deep Learning And Machine Intelligence Will Eat The World","type":"item","body":""}

/***/ },
/* 1139 */
1099,
/* 1140 */
1100,
/* 1141 */
/***/ function(module, exports) {

	module.exports = {"author":"Derrick Harris","brief":"Artificial intelligence is already very real. Not conscious machines, omnipotent machines or even reasoning machines (yet), but statistical machines that automate and increasingly can outperform humans at certain","date":"2015/01/09","featured":false,"image":"../images/gigaom.png","link":"https://gigaom.com/2015/01/09/artificial-intelligence-is-real-now-and-its-just-getting-started/?utm_medium=content&utm_campaign=syndication&utm_source=googlemustreads&utm_content=artificial-intelligence-is-real-now-and-its-just-getting-started_905416&google_editors_picks=true","org":"GigaOm","tags":"artificial intelligence real just getting started numenta machine intelligence","title":"Artificial Intelligence Is Real Now and It’s Just Getting Started","type":"item","body":""}

/***/ },
/* 1142 */
1122,
/* 1143 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c9abdea7e95f2be8244f9723c65010c5.png";

/***/ },
/* 1144 */
/***/ function(module, exports) {

	module.exports = {"author":"Alex Alaniz","brief":"Before pressing to Numenta’s remarkable (and likely correct) approach to general AI an IBM talk, let’s consider the question of how much you and I are already uploaded and super intelligent","date":"2015/02/19","featured":false,"image":"../images/science20.png","link":"http://www.science20.com/physics_foundations/blog/life_happens_ai_will_happen_probably_at_ibmnumenta-153354","org":"Science2.0","tags":"general ai artificial intelligence ibm numenta hierarchical temporal memory science 2.0","title":"Life happens, AI will happen, probably at IBM/Numenta","type":"item","body":""}

/***/ },
/* 1145 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "bdcbc7433ee574a8f7cf09be97e0d027.png";

/***/ },
/* 1146 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "398f50162f5618f3e3e5aaa88cc2c634.png";

/***/ },
/* 1147 */
/***/ function(module, exports) {

	module.exports = {"author":"Jeff Hawkins","brief":"Stephen Hawking and Elon Musk are worried. Could machine intelligence really lead to the extinction of humans?","date":"2015/03/02","featured":false,"image":"../images/recode.png","link":"http://recode.net/2015/03/02/the-terminator-is-not-coming-the-future-will-thank-us/","org":"Re/Code","tags":"general ai artificial intelligence machine recode terminator","title":"The Terminator Is Not Coming. The Future Will Thank Us.","type":"item","body":""}

/***/ },
/* 1148 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8b39c03294d11a98ee4bb129d9bcf4de.png";

/***/ },
/* 1149 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7fc6f8461f741be8dc6b9dc25f2f22f8.png";

/***/ },
/* 1150 */
/***/ function(module, exports) {

	module.exports = {"author":"Erik Sherman","brief":"These leading scientists dismiss the doomsday predictions and say artificial intelligence, automation and robotics will bring a better world. Here’s why.","date":"2015/03/05","featured":false,"image":"../images/fortune.png","link":"http://fortune.com/2015/03/05/forget-the-naysayers-robots-pose-no-threat-to-humanity-these-experts-say/","org":"Fortune","tags":"fortune scientists dismiss fear of robots ai artificial machine intelligence jeff hawkins numenta","title":"Many Scientists Dismiss the Fear of Robots — Here's Why","type":"item","body":""}

/***/ },
/* 1151 */
/***/ function(module, exports) {

	module.exports = {"author":"Anthony Wing Kosner","brief":"I thought of this story as the news unfolded from the Alps. We are so concerned, it seems, about giving machines too much power that we appear to miss the fact that the largest existential threat to humans is other humans.","date":"2015/03/26","featured":false,"image":"../images/forbes.png","link":"http://www.forbes.com/sites/anthonykosner/2015/03/26/artificial-intelligence-could-have-prevented-the-germanwings-crash/","org":"Forbes","tags":"artificial machine general intelligence ai could have prevented germanwings crash jeff hawkins numenta nupic","title":"Artificial Intelligence Could Have Prevented The Germanwings Crash","type":"item","body":""}

/***/ },
/* 1152 */
1099,
/* 1153 */
1100,
/* 1154 */
/***/ function(module, exports) {

	module.exports = {"author":"Wired","brief":"A sharp dichotomy has emerged in the big debate about where technology is taking us (or vice versa). In one high-profile camp are technologists and scientists sounding the alarm about the perils of artificial intelligence.","date":"2015/04/02","featured":false,"image":"../images/wired.png","link":"http://www.wired.com/2015/04/learn-stop-worrying-love-bots/","org":"Wired","tags":"artificial general machine intelligence ai stop worrying love the bots numenta nupic jeff hawkins","title":"How We Learn to Stop Worrying and Love the Bots","type":"item","body":""}

/***/ },
/* 1155 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "8873abdc9a7894129201e4a40f0e1239.png";

/***/ },
/* 1156 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "dd72979816c79e7076cf346c2f79dcc6.png";

/***/ },
/* 1157 */
/***/ function(module, exports) {

	module.exports = {"author":"Tom Simonite","brief":"For more than a decade Jeff Hawkins, founder of mobile computing company Palm, has dedicated his time and fortune to a theory meant to explain the workings of the human brain, and provide a blueprint for a powerful new kind of artificial intelligence software.","date":"2015/04/08","featured":false,"image":"../images/mit-technology-review.png","link":"http://www.technologyreview.com/news/536326/ibm-tests-mobile-computing-pioneers-controversial-brain-algorithms/","org":"MIT Technology Review","tags":"ibm mobile pioneer brain algorithms jeff hawkins numenta htm hierarchical temporal memory","title":"IBM Tests Mobile Computing Pioneer’s Controversial Brain Algorithms","type":"item","body":""}

/***/ },
/* 1158 */
1033,
/* 1159 */
1143,
/* 1160 */
/***/ function(module, exports) {

	module.exports = {"author":"Alex Alaniz","brief":"Growing new connections in your brain is more essential to learning than strengthening established connections. You may know how to be a tax lawyer because you've spent years strengthening your old tax law connections, but these are utterly useless when you take up ballroom dancing to find yourself a mate.","date":"2015/04/14","featured":false,"image":"../images/science20.png","link":"http://www.science20.com/physics_foundations/blog/numenta_the_bruce_lee_of_ai_and_deep_learning-154801","tags":"numenta ai artificial intelligence deep learning jeff hawkins htm hierarchical temporal memory","title":"Numenta, The Bruce Lee of AI and Deep Learning","type":"item","body":""}

/***/ },
/* 1161 */
1155,
/* 1162 */
1156,
/* 1163 */
/***/ function(module, exports) {

	module.exports = {"author":"Caleb Garling","brief":"Along with other researchers, Hawkins believes that the brain’s structure holds the keys for the next generation of computers that will interpret our world with far more insight than our eyes and ears ever could.","date":"2015/05/07","featured":false,"image":"../images/wired.png","link":"http://www.wired.com/2015/05/jeff-hawkins-firing-silicon-brain/","org":"Wired","tags":"jeff hawkins firing up silicion brain wired neocortex htm hierarchical temporal memory nupic numenta","title":"Jeff Hawkins on Firing Up the Silicon Brain","type":"item","body":""}

/***/ },
/* 1164 */
699,
/* 1165 */
700,
/* 1166 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Numenta, Inc., a leader in machine intelligence, and Cortical.io, an innovator in natural language processing (NLP), are pleased to announce a strategic partnership to create a new computing approach to understanding text. As part of the strategic relationship,","date":"2015/05/14","featured":false,"image":"../images/numenta.png","link":null,"org":"Press Release","tags":"numenta cortical.io form strategic partnership htm hierarchical temporal memory sdr sparse distributed memory retina wikipedia natural lanuage learning","title":"Numenta and Cortical.io Form Strategic Partnership","type":"release","body":"<p>Numenta and <a href=\"http://Cortical.io\">Cortical.io</a> Form Strategic Partnership</p>\n<p>Redwood City, CA –May 14, 2015— <a href=\"/\">Numenta, Inc.</a>, a leader in machine\nintelligence, and <a href=\"http://cortical.io\">Cortical.io</a>, an innovator in natural\nlanguage processing (NLP), are pleased to announce a strategic partnership to\ncreate a new computing approach to understanding text.  As part of the strategic\nrelationship, <a href=\"http://Cortical.io\">Cortical.io</a> has taken a broad general license to Numenta’s\nHierarchical Temporal Memory (HTM) technology, and Numenta has taken an\nownership position in <a href=\"http://Cortical.io\">Cortical.io</a>.  The combination of <a href=\"http://Cortical.io\">Cortical.io</a>’s Semantic\nFolding technology and Numenta’s HTM technology enables a host of exciting\napplications that have challenged computer scientists for decades, including\nsentiment analysis, automatic summarization, semantic search, and conversational\ndialogue systems.</p>\n<p>“<a href=\"http://Cortical.io\">Cortical.io</a>’s Semantic Folding technology is a clever and elegant way to feed\nnatural language into our HTM technology“, said Jeff Hawkins, founder of\nNumenta.  “<a href=\"http://Cortical.io\">Cortical.io</a> takes advantage of the semantic encoding and predictive\nmodeling of HTM systems in a way that will lead to significant advances in\nnatural language processing.”</p>\n<p>“Natural language understanding is one of the central problems of artificial\nintelligence,” said Francisco Webber, founder and CEO of <a href=\"http://Cortical.io\">Cortical.io</a>.  “We aim\nto build the next generation of NLP, Language Intelligence, and in so doing,\nshow the path to broadly applied machine intelligence.”</p>\n<p>Building on their existing commercial product, the Retina API, <a href=\"http://Cortical.io\">Cortical.io</a> will\nmake the combined technologies available through their industrial-grade cloud\nservice for customers ranging from innovative startups to international\ncorporations.</p>\n<h4>About Numenta</h4>\n<p><a href=\"/\">Numenta, Inc.</a>, was founded in 2005 to be a leader in the emerging field of\nmachine intelligence. Numenta builds technology that helps companies\nautomatically and intelligently act on machine generated data.  Its biologically\ninspired machine learning technology is based on a theory of the neocortex first\ndescribed in co-founder Jeff Hawkins’ book,\n<a href=\"/learn/on-intelligence.html\">On Intelligence</a>. Its first commercial product,\ncalled <a href=\"/grok/\">Grok</a>, offers a breakthrough solution for\nanomaly detection for IT Operations. In addition, Numenta has created\n<a href=\"http://numenta.org\">NuPIC</a> (Numenta Platform for Intelligent Computing) as an\nopen source project (<a href=\"http://numenta.org\">http://numenta.org</a>). Numenta is based in Redwood City,\nCalifornia.</p>\n<p>Numenta Media Contact: <br/>\nBetty Taylor,\nKrause Taylor Associates:\n<a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a>\n<a href=\"tel:+1-408-981-7551\">408-981-7551</a></p>\n<p>Connect with Numenta: <br/> <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.social.twitter%7D%7D\">Twitter</a>,\n<a href=\"%7B%7Bsite.paths.social.facebook%7D%7D\">Facebook</a>,\n<a href=\"%7B%7Bsite.paths.social.googleplus%7D%7D\">Google+</a> and\n<a href=\"%7B%7Bsite.paths.social.linkedin%7D%7D\">LinkedIn</a>\n</t></p>\n<h4>About <a href=\"http://Cortical.io\">Cortical.io</a></h4>\n<p>Headquartered in Vienna, Austria, <a href=\"http://cortical.io\">Cortical.io</a> is a\nscience-based start-up that has developed a fundamentally new approach to\nNatural Language Processing (NLP), Semantic Folding, inspired by the latest\nfindings on the way the human neocortex processes information.  By representing\nlanguage with highly efficient semantic fingerprints, the Retina API is the\nfirst semantic engine that painlessly handles the avalanche of text data\nexperienced by global business today –in any language and in real-time. A US\nsubsidiary has been incorporated recently.</p>\n<p><a href=\"http://Cortical.io\">Cortical.io</a> Media Contact: <br/>\nMarie-Pierre Garnier,\n<a href=\"http://Cortical.io\">Cortical.io</a>:\n<a href=\"mailto:mp.garnier@Cortical.io\">mp.garnier@Cortical.io</a></p>\n"}

/***/ },
/* 1167 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e4493dd67f0129d21e81645cefdf309d.png";

/***/ },
/* 1168 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d551f71134455a8dfc47a63264e7102a.png";

/***/ },
/* 1169 */
1143,
/* 1170 */
/***/ function(module, exports) {

	module.exports = {"author":"Alex Alaniz","brief":"When we catch balls, Jeff Hawkins, cofounder of Numenta and author of “On Intelligence,” tells us we aren’t solving differential equations. A robot, on the other hand, does solve differential equations, requiring roughly 3-trillion calculations for a 1s toss","date":"2015/05/22","featured":false,"image":"../images/science20.png","link":"http://www.science20.com/physics_foundations/blog/numenta_and_ibm_to_build_biologically_inspired_intelligent_machines-155769","org":"Science 2.0","tags":"numenta ibm build biologically inspired intelligent machines neocortex","title":"Numenta And IBM To Build Biologically Inspired Intelligent Machines","type":"item","body":""}

/***/ },
/* 1171 */
/***/ function(module, exports) {

	module.exports = {"author":"Fareed Zakaria, GPS","brief":"Fareed asks Jeff Hawkins about artificial intelligence -- could robots one day rise up against humans?","date":"2015/05/22","featured":false,"image":"../images/cnn.png","link":"http://www.cnn.com/videos/tv/2015/05/22/exp-gps-0524-hawkins-artificial-intelligence.cnn","org":"CNN","tags":"cnn on gps fareed zakaria jeff hawkins threat intelligent machines numenta nupic brain neocortex","title":"On GPS: The Threat of Intelligent Machines","type":"item","body":""}

/***/ },
/* 1172 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9813db4647115c47d95e4b4e393999aa.png";

/***/ },
/* 1173 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3d12354c6b9b77c3f2f818cd7e5226b7.png";

/***/ },
/* 1174 */
1111,
/* 1175 */
/***/ function(module, exports) {

	module.exports = {"author":"Dean Takahashi","brief":"Numenta today released HTM for Stocks, a new mobile application that tracks the trading patterns of companies in the stock market. The new Google Play app can monitor stock price, stock volume, and Twitter activity for hundreds of publicly traded companies","date":"2015/07/08","featured":false,"image":"../images/venture-beat.png","link":"http://venturebeat.com/2015/07/08/numentas-grok-for-stocks-app-uses-a-i-to-decipher-stock-market-patterns/","org":"VentureBeat","tags":"numenta htm for stocks app ai htm stock market patterns venturebeat","title":"Numenta’s HTM for Stocks app uses A.I. to decipher stock market patterns","type":"item","body":""}

/***/ },
/* 1176 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"Redwood City, CA –July 8, 2015— Numenta, Inc., today announced the availability of HTM for Stocks, the newest example application showing how Hierarchical Temporal Memory (HTM) technology can be applied to streaming data","date":"2015/07/08","featured":false,"image":"../images/image.png","link":null,"org":"Press Release","tags":"numenta new htm example application htm for stocks monitor stock price volume twitter activity public companies anomaly detection unusual notifications","title":"Numenta Ships New HTM Example App: HTM for Stocks","type":"release","body":"<h3>An Easy Way to Experience HTM Machine Learning Technology</h3>\n<p>Redwood City, CA –July 8, 2015— <a href=\"/\">Numenta</a>, Inc., today announced the\navailability of HTM for Stocks, the newest example application showing how\n<a href=\"/#technology\">Hierarchical Temporal Memory</a> (HTM) technology can be applied to\nstreaming data and the Internet of Things.</p>\n<p>HTM for Stocks is a mobile application that continually monitors stock price,\nstock volume, and Twitter activity for hundreds of publicly traded companies.\nHTM for Stocks learns the normal patterns for each company and notifies you if\nsomething unusual is happening to any of the companies.</p>\n<p>During the past two years, Numenta has created a series of example applications\nto illustrate the capabilities of HTM.  The first application, Grok for IT\nAnalytics, uses HTM to detect anomalies in AWS server metrics and is available\non the <a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6\">Amazon Web Services Marketplace</a>.\nNumenta also published example source code that uses HTM to detect anomalies in\nhuman behavior and in GPS tracking data.</p>\n<p>“HTM for Stocks is our most accessible demonstration of Numenta HTM\ntechnology,” said Numenta CEO Donna Dubinsky. “Until now, it has required\nprogramming expertise to experience HTM-based anomaly detection. With HTM for\nStocks, it is as simple as downloading the app to your smartphone from the\n<a href=\"https://play.google.com/store/apps/details?id=com.numenta.taurus\">Google Play store</a>.”</p>\n<p>In keeping with its mission to be a technology provider, Numenta is providing\nthe source code for HTM for Stocks under an open source license at:\n<a href=\"https://github.com/numenta/numenta-apps\">https://github.com/numenta/numenta-apps</a>.  Said Dubinsky, “We encourage\ndevelopers to use the HTM for Stocks code to create derivative products that\ntrack a variety of data streams. HTM for Stocks shows how thousands of data\nstreams can be made useful in a mobile application using HTM technology.”</p>\n<h3>How HTM for Stocks Works</h3>\n<p>HTM for Stocks applies Numenta’s HTM modeling and anomaly detection to 200\nlarge capitalization public companies.  It automatically models three data\nstreams for each company:  stock volume, stock price, and Twitter volume.  The\nHTM models learn continuously, receiving new data every five minutes.  HTM\nlearns what is “normal” for each of the data streams for each company.  The\ncompanies are ranked from the most anomalous to the least anomalous over the\nprevious hour. HTM for Stocks lets you see the text of the Tweets as well,\noften explaining why the company is showing an anomaly.</p>\n<p><img src=\"../images/screen.png\" alt=\"HTM for Stocks Screenshot\"></p>\n<h3>About Numenta</h3>\n<p><a href=\"/\">Numenta</a>, Inc., is a leader in the field of machine intelligence.  Numenta\nbuilds technology that helps companies automatically act on streaming data. Its\nmachine learning technology is based on a theory of the neocortex first\ndescribed in co-founder Jeff Hawkins’ book, <em>On Intelligence</em>. In\naddition, Numenta has created <a href=\"http://numenta.org\">NuPIC</a> (Numenta Platform for\nIntelligent Computing) as an open source project (<a href=\"http://numenta.org\">http://numenta.org</a>). Numenta\nis based in Redwood City, California.</p>\n<p>To obtain more info about partnering and licenses write to\n<a href=\"mailto:sales@numenta.com\">sales@numenta.com</a>.</p>\n<p>Numenta Media Contact: <br/>\nBetty Taylor,\nKrause Taylor Associates:\n<a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a>\n<a href=\"tel:+1-408-981-7551\">408-981-7551</a></p>\n<p>Connect with Numenta: <br/> <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.social.twitter%7D%7D\">Twitter</a>,\n<a href=\"%7B%7Bsite.paths.social.facebook%7D%7D\">Facebook</a>,\n<a href=\"%7B%7Bsite.paths.social.googleplus%7D%7D\">Google+</a> and\n<a href=\"%7B%7Bsite.paths.social.linkedin%7D%7D\">LinkedIn</a>\n</t></p>\n"}

/***/ },
/* 1177 */
699,
/* 1178 */
700,
/* 1179 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"REDWOOD CITY, CA –August 19, 2015— Numenta, Inc., a leader in machine intelligence, today announced a strategic partnership with Avik Partners, a new IT services and advanced analytics company, for its Grok for IT Analytics on AWS technology.","date":"2015/08/19","featured":false,"image":"../images/numenta.png","link":null,"org":"Press Release","tags":"numenta license grok for it analytics to avik partners smart data conference 2015 dataversity","title":"Numenta Announces Licensing of Grok for IT Analytics to Avik Partners","type":"release","body":"<p>REDWOOD CITY, CA –August 19, 2015— <a href=\"/\">Numenta, Inc.</a>, a leader in machine\nintelligence, today announced a strategic partnership with\n<a href=\"http://www.grokstream.com/\">Avik Partners</a>, a new IT services and advanced\nanalytics company, for its Grok for IT Analytics on AWS technology. The\nannouncement was made during the\n<a href=\"http://smartdata2015.dataversity.net\">Smart Data Conference</a> being held in\nSan Jose, CA. (See Numenta at Booth #406).</p>\n<p>Grok for IT Analytics on AWS detects anomalies in Amazon Web Services server\nmetrics and is currently available on the\n<a href=\"https://aws.amazon.com/marketplace/pp/B00I18SNQ6\">Amazon Web Services Marketplace</a>.<br>\nAs part of this strategic relationship, Numenta will transfer the Grok\napplication and the Grok brand to Avik under a broad general licensing agreement\nfor Numenta’s <a href=\"http://numenta.com/learn/hierarchical-temporal-memory-white-paper.html\">Hierarchical Temporal Memory (HTM)</a>\ntechnology. Numenta also will take a minority ownership position in Avik.</p>\n<p>“Our core HTM technology can be applied to such a broad array of machine\nintelligence solutions, it would be impossible for us to pursue\ncommercialization in all of these verticals. We decided that the best approach\nfor us, like that taken by premier research institutions, is a licensing and\ntechnology transfer model. It is an exciting way for us to see our HTM\napplications built out for commercial use,” said Numenta CEO Donna Dubinsky.</p>\n<p>She added, “In Casey Kindiger, the CEO of Avik, we found the perfect match to\ntake Grok for IT Analytics and run with it. He is a proven entrepreneur who is\nstarting this new venture to apply HTM technology to solve problems in IT\nanalytics.”</p>\n<p>Kindiger, a veteran enterprise software solutions provider and consultant,\nfounded Avik after more than a decade of designing and developing process\nautomation solutions for companies like JP Morgan Chase, T-Mobile, Allstate\nInsurance, and others.</p>\n<p>“HTM offers substantially better technology for finding anomalies and is well\nsuited to the needs of today’s streaming data in IT and dev ops environments,”\nsaid Kindiger. “We are very excited to be able to take the Grok technology and\nbrand, move it forward and build on it.”</p>\n<p>During the past two years, Numenta has created a series of example applications\nto illustrate the capabilities of HTM, beginning with Grok for IT Analytics on\nAWS. The HTM technology also has been applied to anomaly detection in stock\nprices and volumes\n(<a href=\"http://numenta.com/press/numenta-ships-new-htm-example-app-htm-for-stocks.html\">HTM for Stocks</a>),\nhuman behavior, geo-spatial tracking data, and to the predication and\nclassification of natural language. For the latter application, Numenta recently\nannounced a partnership and licensing agreement with\n<a href=\"http://numenta.com/press/numenta-and-cortical-io-form-strategic-partnership.html\">Cortical.io</a>,\nan innovator in natural language processing (NLP), to license HTM and use the\ntechnology for the development of language intelligence products.</p>\n<p>“We will continue to create example applications to inspire others, and hope to\ncreate a constellation of partnerships like Avik and <a href=\"http://Cortical.io\">Cortical.io</a> going forward\nto enable broad commercialization of HTM technology,” Dubinsky concluded.</p>\n<p>Numenta, Inc. was founded in 2005 to be a leader in the emerging field of\nmachine intelligence. Numenta builds technology that helps companies\nautomatically and intelligently act on machine generated data.  Its biologically\ninspired machine learning technology is based on a theory of the neocortex first\ndescribed in co-founder Jeff Hawkins’ book, On Intelligence. In addition,\nNumenta has created NuPIC (Numenta Platform for Intelligent Computing) as an\nopen source project (<a href=\"http://numenta.org\">http://numenta.org</a>).  Numenta is based in Redwood City,\nCalifornia.</p>\n<p>To contact Avik Partners and for further information about Grok for IT\nAnalytics, go to <a href=\"http://grokstream.com\">http://grokstream.com</a>.</p>\n<p>Numenta Media Contact: <br/>\nBetty Taylor,\nKrause Taylor Associates:\n<a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a>\n<a href=\"tel:+1-408-981-7551\">408-981-7551</a></p>\n<p>Avik Partners Media Contact: <br/>\nPaula Johns:\n<a href=\"mailto:paula@paulajohnscommunications.com\">paula@paulajohnscommunications.com</a>\n<a href=\"tel:+1-760-522-0941\">760-522-0941</a></p>\n"}

/***/ },
/* 1180 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "063725e3b5730c0407452e01fbf5f3a8.png";

/***/ },
/* 1181 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "61fa382703455b6d39531055bc115827.png";

/***/ },
/* 1182 */
/***/ function(module, exports) {

	module.exports = {"author":"Mark Gibbs","brief":"Anomalies in data are everywhere. They appear in the performance of just about anything you can measure. Sometimes, if you’re lucky, they’re rare. Other times they aren’t. The problem in both cases, however, is figuring out what is truly an anomaly","date":"2015/09/05","featured":false,"image":"../images/network-world.png","link":"http://www.networkworld.com/article/2980746/infrastructure-management/numentas-grok-for-it-artificial-intelligence-meets-network-performance-analysis.html","org":"Network World","tags":"numenta grok for it artifical intelligence network performance analysis htm hierarchical temporal memory","title":"Numenta's Grok for IT: Artificial Intelligence Meets Network Performance Analysis","type":"item","body":""}

/***/ },
/* 1183 */
/***/ function(module, exports) {

	module.exports = {"author":"Mike Vizard","brief":"Machine learning has the potential to transform the way IT is managed by applying automation at an unprecedented level of scale, so it was only a matter of time before an IT management","date":"2015/10/06","featured":false,"image":"../images/it-business-edge.png","link":"http://www.itbusinessedge.com/blogs/it-unmasked/avik-partners-unfurls-machine-learning-service-to-optimize-it-operations.html","org":"IT Business Edge","tags":"numenta avik partners grok stream machine learning service optimize it operations htm hierarchical temporal memory","title":"Avik Partners Unfurls Machine Learning Service to Optimize IT Operations","type":"item","body":""}

/***/ },
/* 1184 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "186d232dd31d4657c46a38c0aa362040.png";

/***/ },
/* 1185 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "602de983f8c5115d7d9fabe22966c6f3.png";

/***/ },
/* 1186 */
/***/ function(module, exports) {

	module.exports = {"author":"Cortical.io","brief":"Cortical.io, an innovator in Natural Language Processing (NLP), announces its next venture capital round. In this third round, Cortical.io opens its capital to a new investor from the US, a fund affiliated with Open Field Capital","date":"2015/10/29","featured":false,"image":"../images/prweb.png","link":"http://www.prweb.com/releases/corticalio/3rdcapitalround/prweb13038027.htm","org":"PRWeb","tags":"cortical.io numenta nupic htm hierarchical temporal memory nlp natural language processing machine intelligence","title":"USD 1.8 Million for Cortical.io Brain-Inspired Algorithm Made in Austria","type":"item","body":""}

/***/ },
/* 1187 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "140b07ce6927f9bc6e2916a8030feda6.png";

/***/ },
/* 1188 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "100523f46754d36d9483b933e4fc99b2.png";

/***/ },
/* 1189 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"REDWOOD CITY, CA –November 10, 2015— Numenta, Inc., a leader in machine intelligence, today launched the Numenta Anomaly Benchmark (NAB), an open-source benchmark and tool designed to help data","date":"2015/11/10","featured":false,"image":"../images/image.png","link":null,"org":"Press Release","tags":"numenta anomaly benchmark nab evaluate anomaly detection techniques on real-time streaming data","title":"Numenta Anomaly Benchmark Evaluates Anomaly Detection Techniques for Real-time, Streaming Data","type":"release","body":"<h3>Open Source Tool Tests Effectiveness of Algorithms on IoT Data</h3>\n<p>REDWOOD CITY, CA –November 10, 2015— <a href=\"/\">Numenta</a>, Inc., a leader in machine\nintelligence, today launched the\n<a href=\"/numenta-anomaly-benchmark/\">Numenta Anomaly Benchmark (NAB)</a>, an\nopen-source benchmark and tool designed to help data researchers evaluate the\neffectiveness of algorithms for anomaly detection in streaming,\nreal-time applications.</p>\n<p>Anomalies in streaming data are patterns that do not conform to past patterns of\nbehavior for a given data stream. Until now, no benchmark has existed to\nevaluate anomaly detection in real-time streaming data.</p>\n<p>NAB will be publicly unveiled on November 13 during\n<a href=\"http://mlconf.com/events/san-francisco-ca/\">MLconf</a> in San Francisco in a\npresentation by Numenta Research VP Subutai Ahmad, “Real-time Anomaly Detection\nfor Real-time Data Needs.” A peer-reviewed paper on NAB also was accepted by the\n<a href=\"http://www.icmla-conference.org/icmla15/\">IEEE Conference on Machine Learning and Applications</a>\nand will be presented during the conference on December 9-11 in Miami.</p>\n<h4>The Need for Anomaly Detection in Time-Series Data</h4>\n<p>Explosive growth in streaming data is happening across industries, largely\ndriven by the rise of the Internet of Things (IoT) and the proliferation of\nconnected real-time data sources and applications with sensors producing waves\nof data. Voluminous amounts of this data are being stored for later analysis,\nthough it often isn’t necessary or practical to capture and store all the\ninformation. Instead, data analysts need a way to analyze time-series data in\nreal time, identify when something is different and act upon that insight.</p>\n<p>Different approaches are being pursued to solve this problem, in the form of\nanomaly detection algorithms. But until now, a measurement to gauge the\neffectiveness of real-time anomaly detection algorithms has been lacking. With\nthis goal in mind, Numenta created NAB.</p>\n<p>“There is an explosion in real-time streaming data sources.  Data owners want to\nbe able to model this data and figure out if anything has changed,” commented\nNumenta CEO Donna Dubinsky.  “We created this open benchmark as a tool to help\ndata scientists evaluate the effectiveness of different algorithms in finding\nanomalous behavior in these data streams.”</p>\n<p>Early anomaly detection in streaming data has practical and significant\napplications across many industries – from monitoring critical IT infrastructure\nto detecting potential fraudulent financial transactions, from understanding\nenergy consumption to geo-tracking of vehicles in logistics networks.</p>\n<h4>The Numenta Anomaly Benchmark</h4>\n<p>NAB is an open source framework that was created to help data professionals\ntest, score and evaluate anomaly detection algorithms on time-series data and to\ncompare their internal anomaly detection techniques to published algorithms.</p>\n<p>NAB also allows people to test their algorithms against Numenta’s HTM detector,\nwhich is based on Numenta’s Hierarchical Temporal Memory technology. It uses a\nbiologically inspired memory prediction algorithm to model real-time data\nstreams and continuously learns.</p>\n<p>The major components to the NAB framework include:</p>\n<ul>\n<li>Real-world data. Includes 58 labeled streaming data files that are a\ncombination of real-world data sets along with some simulated datasets. All\nanomalies are marked.</li>\n<li>Anomaly windows. These are defined ranges of data points that surround a known\nanomaly label. NAB uses these windows to decide whether, and how early, an\nalgorithm detected each anomaly.</li>\n<li>A scoring mechanism. Scoring is specifically designed for streaming data and\nrewards early detection.</li>\n</ul>\n<p>“NAB’s emphasis on anomaly windows and early detection is pioneering. In\naddition the research community stands to benefit greatly from an open dataset\ncontaining real world data, and an open source tool for measuring the\neffectiveness of real-time anomaly detection algorithms,” said Varun Chandola,\nAssistant Professor in Computer Science and Engineering, SUNY Buffalo.</p>\n<p>“Having a standard benchmark could spur innovation in real-time anomaly\ndetection algorithms. Our hope is the open source community will add new data\nsets, propose different scoring mechanisms, and test and compare other\nalgorithms with our HTM algorithms,” said Dubinsky.</p>\n<p>For more detailed information on NAB, go to:</p>\n<p><strong>NAB Peer-Reviewed Research Paper</strong> <br/> <t render=\"hbs\">\n{{site.paths.ext.paper.nab}}\n</t></p>\n<p><strong>NAB Business White Paper</strong> <br/>\n<a href=\"http://numenta.com/assets/pdf/numenta-anomaly-benchmark/NAB-Business-Paper.pdf\">http://numenta.com/assets/pdf/numenta-anomaly-benchmark/NAB-Business-Paper.pdf</a></p>\n<p><strong>Numenta Anomaly Benchmark Repository</strong> <br/>\n<a href=\"https://github.com/numenta/NAB\">https://github.com/numenta/NAB</a></p>\n<p><strong>Algorithm &amp; product code</strong> <br/>\n<a href=\"http://numenta.org\">http://numenta.org</a></p>\n<h4>About Numenta</h4>\n<p>Founded in 2005, Numenta has developed a cohesive theory, core software\ntechnology, and numerous applications all based on principles of the neocortex.\nLaying the groundwork for the new era of machine intelligence, this technology\nis ideal for large-scale analysis of continuously streaming data sets and excels\nat modeling and predicting patterns in data. Numenta has also developed a suite\nof products and demonstration applications that utilize its flexible and\ngeneralizable HTM learning algorithms to provide solutions that encompass the\nfields of machine generated data, human behavioral modeling, geo-location\nprocessing, semantic understanding and sensory-motor control. In addition,\nNumenta has created\n<a href=\"http://numenta.org\">NuPIC (Numenta Platform for Intelligent Computing)</a> as an\nopen source project. <a href=\"/\">Numenta</a> is based in Redwood City, California.</p>\n<p>Connect with Numenta on <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.social.twitter%7D%7D\">Twitter</a>,\n<a href=\"%7B%7Bsite.paths.social.facebook%7D%7D\">Facebook</a>,\n<a href=\"%7B%7Bsite.paths.social.googleplus%7D%7D\">Google+</a> and\n<a href=\"%7B%7Bsite.paths.social.linkedin%7D%7D\">LinkedIn</a>.\n</t></p>\n<p><strong>Numenta Media Contact:</strong> <br/>\nBetty Taylor <br/>\nKrause Taylor Associates <br/>\n<a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a> <br/>\n<a href=\"tel:+1-408-981-7551\">408-981-7551</a></p>\n<p><a href=\"http://www.businesswire.com/news/home/20151110006297/en/Numenta-Anomaly-Benchmark-Evaluates-Anomaly-Detection-Techniques\">http://www.businesswire.com/news/home/20151110006297/en/Numenta-Anomaly-Benchmark-Evaluates-Anomaly-Detection-Techniques</a></p>\n"}

/***/ },
/* 1190 */
1033,
/* 1191 */
/***/ function(module, exports) {

	module.exports = {"author":"Emerging Technology","brief":"Biologists have long puzzled over why neurons have thousands of synapses. Now neuroscientists have shown they are crucial not just for recognizing patterns but for learning the sequence in which they appear.","date":"2015/11/12","featured":false,"image":"../images/mit-technology-review.png","link":"http://www.technologyreview.com/view/543486/single-artificial-neuron-taught-to-recognize-hundreds-of-patterns/","org":"MIT Technology Review","tags":"numenta artificial neuron taught to recognize patterns htm neuron synapse dendrite axon proximal distal","title":"Single Artificial Neuron Taught to Recognize Hundreds of Patterns","type":"item","body":""}

/***/ },
/* 1192 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "025f642657586a08e95252b873f7ddcd.png";

/***/ },
/* 1193 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b2bd405c3d3d483eceffb3efa161147e.png";

/***/ },
/* 1194 */
/***/ function(module, exports) {

	module.exports = {"author":"U.S. & Politics Retro Report","brief":"(VIDEO) What the legendary matches between supercomputer Deep Blue and chess grandmaster Garry Kasparov reveal about today’s artificial intelligence and machine learning fears.","date":"2016/03/07","featured":false,"image":"../images/the-new-york-times.png","link":"http://www.nytimes.com/video/us/100000004255656/the-terminator-and-the-washing-machine.html?action=click&gtype=vhs&version=vhs-heading&module=vhs&region=title-area","org":"The New York Times","tags":"numenta jeff hawkins terminator and the washing machine the new york times us politics retro report video supercomputer","title":"The Terminator and the Washing Machine","type":"item","body":""}

/***/ },
/* 1195 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ce5b6e9e95b8aceb1ab2b52ba4b0c143.jpg";

/***/ },
/* 1196 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"REDWOOD CITY, CA –April 12, 2016— How do our brains learn and understand the world? That question is of paramount importance to both neuroscientists and technologists who want to build intelligent machines.","date":"2016/04/12","featured":false,"hideImage":true,"image":"../images/image.jpg","link":null,"org":"Press Release","tags":"numenta neuron research paper published discover brain learns sequences key machine intelligence systems pattern theory","title":"Numenta Researchers Discover How The Brain Learns Sequences, A Key to Intelligent Systems","type":"release","body":"<blockquote>\n<p>Numenta’s theory of how the brain learns and understands sequences of patterns\nmay be an essential component for creating intelligent machines</p>\n</blockquote>\n<p>REDWOOD CITY, CA –April 12, 2016— How do our brains learn and understand the\nworld? That question is of paramount importance to both neuroscientists and\ntechnologists who want to build intelligent machines.</p>\n<p>It has been understood for over a hundred years that the inputs and outputs of\nthe brain are constantly changing sequences of patterns and therefore learning\nand recalling sequences must be a fundamental operation of neurons. Numerous\nproposals have been made for how neural networks might learn sequences. However,\nthese proposals did not match the anatomy and function observed in the brain.</p>\n<p>Now, researchers at <a href=\"/\">Numenta Inc.</a> have published a new theory that\nrepresents a breakthrough in understanding how networks of neurons in the\nneocortex learn sequences. A paper, authored by Numenta co-founder Jeff Hawkins\nand VP of Research Subutai Ahmad, <a href=\"http://journal.frontiersin.org/article/10.3389/fncir.2016.00023/full\">“Why Neurons Have Thousands of Synapses, A\nTheory of Sequence Memory in Neocortex,”</a>*\nhas been published in the Frontiers in Neural Circuits Journal, a publication\ndevoted to research in neural circuits, serving the worldwide neuroscience\ncommunity.</p>\n<p>“This study is a key milestone on the path to achieving that long-sought goal of\ncreating truly intelligent machines that simulate human cerebral cortex and\nforebrain system operations,” commented Michael Merzenich, PhD, Professor\nEmeritus UCSF, Chief Scientific Officer for Posit Science.</p>\n<p>The Numenta paper introduces two advances. First, it provides an explanation of\nwhy neurons in the neocortex have thousands of synapses, and why the synapses\nare segregated onto different parts of the cell, called dendrites. The authors\npropose that the majority of these synapses are used to learn transitions of\npatterns, a feature missing from most artificial neural networks. Second, the\nauthors show that neurons with these properties, arranged in layers and\ncolumns - a structure observed throughout the neocortex - form a powerful\nsequence memory. This suggests the new sequence memory algorithm could be a\nunifying principle for understanding how the neocortex works. Through\nsimulations, the authors show the new sequence memory exhibits a number of\nimportant properties such as the ability to learn complex sequences, continuous\nunsupervised learning, and extremely high fault tolerance.</p>\n<img src=\"../images/image.jpg\" class=\"center-block img-responsive media-border\" alt=\"Neuron image\" />\n<div class=\"caption\">\n  **Comparison of Biological and Artificial Neuron Models:**\n  The Hawkins-Ahmad paper on the theory of sequence memory in the neocortex\n  proposes a model of cortical neurons that explains why they have thousands of\n  synapses, why the synapses are segregated onto different parts of the\n  dendrites, and how neurons integrate this input in a functionally meaningful\n  way. This diagram draws a comparison between the human neocortical pyramidal\n  neuron, the HTM biologically-inspired neuron model, and the model used in most\n  mathematically-inspired artificial neural networks and Deep Learning models\n  today.\n</div>\n<p>“Our paper makes contributions in both neuroscience and machine learning,”\nHawkins noted. “From a neuroscience perspective, it offers a computational model\nof pyramidal neurons, explaining how a neuron can effectively use thousands of\nsynapses and computationally active dendrites to learn sequences. From a machine\nlearning and computer science perspective, it introduces a new sequence memory\nalgorithm that we believe will be important in building intelligent machines.”</p>\n<p>“This research extends the work Jeff first outlined in his 2004 book On\nIntelligence and encompasses many years of research we have undertaken here at\nNumenta,” said Ahmad, “It explains the neuroscience behind our HTM (Hierarchical\nTemporal Memory) technology and makes several detailed predictions that can be\nexperimentally verified. The software we have created proves that the theory\nactually works in real world applications.”</p>\n<p>Numenta’s primary goal is to reverse engineer the neocortex, to understand the\ndetailed biology underlying intelligence. The Numenta team also believes this is\nthe quickest route to creating machine intelligence. As a result of this\napproach, the neuron and network models described in the new paper are\nstrikingly different than the neuron and network models being used in today’s\ndeep learning and other artificial neural networks. Functionally, the new theory\naddresses several of the biggest challenges confronting deep learning today,\nsuch as the lack of continuous and unsupervised learning.</p>\n<div class=\"caption\">\n  * Hawkins, J., and Ahmad, S. (2016). Why Neurons Have Thousands of Synapses, A\n  Theory of Sequence Memory in Neocortex. Front. Neural Circuits 10.\n  doi:10.3389/fncir.2016.00023\n</div>\n<h4>About Frontiers in Neural Circuits</h4>\n<p>Frontiers is a leading open-access publisher. Established in 2007, Frontiers\ndrives innovations in peer review, post-publication review, impact metrics, and\nan ecosystem of open-science tools. Frontiers has published over 43,000 articles\nacross 55 journals and over 400 disciplines, which receive 4 million monthly\nviews, and are supported by over 210,000 researchers.</p>\n<h4>About Numenta</h4>\n<p>Founded in 2005, Numenta develops theory, software technology, and applications\nall based on reverse engineering the neocortex. Laying the groundwork for the\nnew era of machine intelligence, this technology is ideal for analysis of\ncontinuously streaming data sets and excels at modeling and predicting patterns\nin data. Numenta has also developed a suite of products and demonstration\napplications that utilize its flexible and generalizable\n<a href=\"/#technology\">Hierarchical Temporal Memory (HTM)</a> learning algorithms to\nprovide solutions that encompass the fields of machine generated data, human\nbehavioral modeling, geo-location processing, semantic understanding and\nsensory-motor control.</p>\n<p>In addition, Numenta has created\n<a href=\"http://numenta.org\">NuPIC (Numenta Platform for Intelligent Computing)</a>\nas an open source project. <a href=\"/\">Numenta</a> is based in Redwood City, California.</p>\n<p>Connect with Numenta on <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.social.twitter%7D%7D\">Twitter</a>,\n<a href=\"%7B%7Bsite.paths.social.facebook%7D%7D\">Facebook</a>,\n<a href=\"%7B%7Bsite.paths.social.googleplus%7D%7D\">Google+</a> and\n<a href=\"%7B%7Bsite.paths.social.linkedin%7D%7D\">LinkedIn</a>.\n</t></p>\n<p><strong>Numenta Media Contact:</strong> <br/>\nBetty Taylor <br/>\nKrause Taylor Associates <br/>\n<a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a> <br/>\n<a href=\"tel:+1-408-981-7551\">408-981-7551</a></p>\n"}

/***/ },
/* 1197 */
/***/ function(module, exports) {

	module.exports = {"author":"Tiejun Huang","brief":"The IEEE Computer Society’s 2022 Report, which was released through the Computing Now site in 2014, presents insights from tech leaders to explore what our world might look like in 2022. Among its findings, the report predicts an integrated network of smart devices, which it calls “seamless intelligence,” that will be able to directly interface with our brain waves.","date":"2016/05/01","featured":false,"image":"../images/computing-now.png","link":"https://www.computer.org/web/computingnow/archive/brain-like-computing-may-2016","org":"Computing Now","tags":"numenta brain-like computing ieee computer society 2022 report computing now smart devices seamless intelligence brain waves","title":"Brian-Like Computing","type":"item","body":""}

/***/ },
/* 1198 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3d047a5ecde4d6056a4954e530cfa520.png";

/***/ },
/* 1199 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4c092ea422e4f175c78cda88100500ae.png";

/***/ },
/* 1200 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5ebcc93c1102e7f487854ba4c496803f.png";

/***/ },
/* 1201 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "144caaf043afff669e387a058fed108f.png";

/***/ },
/* 1202 */
/***/ function(module, exports) {

	module.exports = {"author":"Don Clark","brief":"Massachusetts General Hospital recently established a center in Boston that plans to use Nvidia chips to help an artificial-intelligence system spot anomalies on CT scans and other medical images, jobs now carried out by human radiologists. The project, drawing on a database of 10 billion existing images","date":"2016/05/22","featured":false,"image":"../images/wall-street-journal.png","link":"http://www.wsj.com/articles/new-chips-propel-machine-learning-1463957238","org":"Wall Street Journal","tags":"nvidia microchip ct scan numenta machine learning","title":"New Chips Propel Machine Learning","type":"item","body":""}

/***/ },
/* 1203 */
/***/ function(module, exports) {

	module.exports = {"author":"Ryan Hawk","brief":"Donna Dubinsky was made famous by the Harvard Business School study about the time when she disagreed with Steve Jobs (when he decided that Apple should eliminate their distribution warehouses).  She ultimately prevailed and we discussed what happened next in her incredible career.  We had a fascinating conversation on this episode of The Learning Leader Show.","date":"2016/05/29","featured":false,"image":"../images/learning-leader.png","link":"http://learningleader.com/episode-128-donna-dubinsky-standing-up-to-steve-jobs-and-being-right/","org":"Learning Leader","tags":"learning leader donna dubinsky standing up to steve jobs being right ryan hawk numenta","title":"Donna Dubinsky – Standing Up To Steve Jobs And Being Right","type":"item","body":""}

/***/ },
/* 1204 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9ca8ab49304b7313fb9b6592cbbe7a70.png";

/***/ },
/* 1205 */
/***/ function(module, exports) {

	module.exports = {"author":"Charlotte Jee","brief":"Thanks to its role underpinning many of the recent advances in artificial intelligence, machine learning has become of mainstream interest to many technologists and developers. Here we’ll explain what it is, how you can get started plus the best tools and languages you need to develop machine learning technology.","date":"2016/06/16","featured":false,"image":"../images/techworld.png","link":"http://www.techworld.com/tutorial/apps/everything-uk-developers-need-know-about-machine-learning-3641971/","org":"Techworld","tags":"developers machine learning numenta htm hierarchical temporal memory machine intelligence","title":"Here's what UK Developers Need to Know about Machine Learning","type":"item","body":""}

/***/ },
/* 1206 */
1134,
/* 1207 */
1135,
/* 1208 */
/***/ function(module, exports) {

	module.exports = {"author":"Tom Standage","brief":"How has artificial intelligence, associated with hubris and disappointment since its earliest days, suddenly become the hottest field in technology? The term was coined in a research proposal written in 1956 which suggested that significant progress could be made in getting machines to “solve the kinds of problems now reserved for humans","date":"2016/06/25","featured":false,"image":"../images/economist.png","link":"http://www.economist.com/news/special-report/21700756-artificial-intelligence-boom-based-old-idea-modern-twist-not","org":"Economist","tags":"from not working neural networking economist numenta artificial machine intelligence","title":"From Not Working to Neural Networking","type":"item","body":""}

/***/ },
/* 1209 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "79d9bef821ae98be0f12058e61db321b.png";

/***/ },
/* 1210 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "9ef01d113c890608327015be131199d9.png";

/***/ },
/* 1211 */
1041,
/* 1212 */
1042,
/* 1213 */
/***/ function(module, exports) {

	module.exports = {"author":"Numenta","brief":"REDWOOD CITY, Calif. --(BUSINESS WIRE)-- Numenta, Inc., a leader in machine intelligence, today announced the release of HTM Studio for anomaly detection, a desktop tool that makes it easy for businesses to experiment with advanced machine intelligence algorithms to uncover anomalies in their streaming data.","date":"2016/06/26","featured":false,"image":"../images/htm-studio.png","link":null,"org":"Press Release","tags":"numenta releases htm studio business wire machine intelligence find anomalies streaming data","title":"Numenta Releases HTM Studio","type":"release","body":"<h3>HTM Studio - Uncover anomalies in your streaming data</h3>\n<p>REDWOOD CITY, Calif.–(BUSINESS WIRE)-- <a href=\"/\">Numenta</a>, Inc., a leader in machine\nintelligence, today announced the release of HTM Studio for anomaly detection, a\ndesktop tool that makes it easy for businesses to experiment with advanced\nmachine intelligence algorithms to uncover anomalies in their streaming data.\nSimply add numeric, time-series data files to HTM Studio and with the click of a\nbutton, discover and visualize within minutes what anomalies can be found.</p>\n<blockquote>\n<p>#Numenta #HTMStudio for anomaly detection makes it easy to experiment with\nadvanced machine intelligence</p>\n</blockquote>\n<p>HTM Studio is based on Numenta’s HTM (Hierarchical Temporal Memory) biologically\ninspired machine intelligence technology. HTM learns time-based patterns in\nunlabeled streaming data, making it ideal for prediction, classification and\nanomaly detection. Because of its ability to perform continuous, unsupervised\nlearning, HTM can find subtle, temporal anomalies that other techniques cannot\nfind.</p>\n<p>&quot;I was impressed with the ease of use and how quickly it is to iterate on\ntesting a variety of data streams. The HTM was able to pick out and forecast the\nneedle I was interested in, within a haystack of needles,” commented early beta\ntester Vaughn DiMarco, Lead Data Science Consultant at Montreal-based\nVONALYTICS.</p>\n<p>HTM Studio provides an easy way for businesses interested in using Numenta’s\ntechnology for anomaly detection to undertake a proof of concept securely using\ntheir own data. If HTM Studio finds interesting anomalies, then a user can do a\nfull implementation or deployment of HTM.</p>\n<p>“Detecting anomalies early in streaming data can have significant value, but\nit’s difficult to do. We wanted to make it easy to try HTM on your own streaming\ndata,” said Donna Dubinsky, CEO of Numenta. “With HTM Studio, no coding skills\nare required. Parameters are automatically set. In a matter of minutes, you can\nvisualize anomalies in your datasets.”</p>\n<p>For those who don’t have streaming data readily available, HTM Studio includes\npre-loaded datasets for experimentation. Sample datasets include a variety of\nuse cases: IoT sensors, preventative maintenance, tracking vehicles and network\nservers.</p>\n<p>The tool is available at no charge for Mac and Windows desktop systems. Go to\n<a href=\"http://numenta.com/htm-studio/\">http://numenta.com/htm-studio/</a> for details and to get started with HTM Studio.</p>\n<p>To learn more about HTM go to <a href=\"http://numenta.com\">http://numenta.com</a>.</p>\n<h3>About Numenta</h3>\n<p>Founded in 2005, Numenta has developed a cohesive theory, core software\ntechnology, and numerous applications all based on principles of the neocortex.\nLaying the groundwork for the new era of machine intelligence, this technology\nis ideal for large-scale analysis of continuously streaming data sets and excels\nat modeling and predicting patterns in data. Numenta has also developed a suite\nof demonstration applications that utilize its flexible and generalizable HTM\nlearning algorithms to provide solutions that encompass the fields of machine\ngenerated data, human behavioral modeling, geo-location processing, semantic\nunderstanding and sensory-motor control. In addition, Numenta has created\n<a href=\"http://numenta.org\">NuPIC</a> (Platform for Intelligent Computing) as an open\nsource project. <a href=\"/\">Numenta</a> is based in Redwood City, California.</p>\n<p>Numenta Media Contact: <br/>\nKrause Taylor Associates,\nBetty Taylor:\n<a href=\"mailto:bettyt@krause-taylor.com\">bettyt@krause-taylor.com</a>\n<a href=\"tel:+1-408-981-7551\">408-981-7551</a></p>\n<p>Connect with Numenta: <br/> <t render=\"hbs\">\n<a href=\"%7B%7Bsite.paths.social.twitter%7D%7D\">Twitter</a>,\n<a href=\"%7B%7Bsite.paths.social.facebook%7D%7D\">Facebook</a>,\n<a href=\"%7B%7Bsite.paths.social.googleplus%7D%7D\">Google+</a> and\n<a href=\"%7B%7Bsite.paths.social.linkedin%7D%7D\">LinkedIn</a>\n</t></p>\n<p><a href=\"http://www.businesswire.com/news/home/20160627005453/en/Numenta-Releases-HTM-Studio\">http://www.businesswire.com/news/home/20160627005453/en/Numenta-Releases-HTM-Studio</a></p>\n"}

/***/ },
/* 1214 */
1145,
/* 1215 */
1146,
/* 1216 */
/***/ function(module, exports) {

	module.exports = {"author":"Kara Swisher","brief":"On the latest episode of Recode Decode, hosted by Kara Swisher, the co-founders of Numenta (who previously co-founded Palm and Handspring) predicted AI will indeed drive technological advances for the rest of the century","date":"2016/06/27","featured":false,"image":"../images/recode.png","link":"http://www.recode.net/2016/6/27/12037248/artificial-intelligence-machine-learning-numenta-jeff-hawkins-donna-dubinsky-podcast","org":"Re/Code","tags":"your fears about artificial intelligence are wrong recode podcast kara swisher jeff hawkins donna dubinsky numenta machine intelligence","title":"This Is Why Your Fears About Artificial Intelligence Are Wrong","type":"item","body":""}

/***/ },
/* 1217 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d074d6ca361e92237d809c07c90b2cbc.png";

/***/ },
/* 1218 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d03e106a2ce9bce7f7021ad06d449045.png";

/***/ },
/* 1219 */
/***/ function(module, exports) {

	module.exports = {"author":"Kypriani Sinaris","brief":"Note: original article published in German. Machine Learning is the new formula for what we once called Artificial Intelligence. In our Thematic Dossier we feel the new trend and introduce current ML solutions, including the Numenta platform for intelligent computing, ...and, the Natural Language Processing Project Cortical.io.","date":"2016/07/26","featured":false,"image":"../images/jaxenter.png","link":"https://jaxenter.de/machine-learning-experten-check-43830","org":"Jaxenter","tags":"machine learning expore check six tips getting started machine learning numenta htm hierarchical temporal memory cortical","title":"Machine Learning Expert Check: 6 Tips for Getting Started in the Machine Learning","type":"item","body":""}

/***/ },
/* 1220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _universal = __webpack_require__(376);
	
	var _List = __webpack_require__(529);
	
	var _List2 = _interopRequireDefault(_List);
	
	var _ListItem = __webpack_require__(532);
	
	var _ListItem2 = _interopRequireDefault(_ListItem);
	
	var _PostItem = __webpack_require__(852);
	
	var _PostItem2 = _interopRequireDefault(_PostItem);
	
	var _Section = __webpack_require__(675);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 *
	 */
	const PressPage = (props, { route }) => {
	  const { pages } = route;
	  const posts = pages.filter(({ file }) => file.path.match(/^press\/.*\.md/));
	  const items = posts.sort(_universal.sortDateDescend).map(post => _react2.default.createElement(
	    _ListItem2.default,
	    { key: post.file.stem },
	    _react2.default.createElement(_PostItem2.default, { post: post })
	  ));
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      _Section2.default,
	      { headline: true, open: true, title: 'Press' },
	      _react2.default.createElement(
	        _List2.default,
	        { copy: false },
	        items
	      )
	    )
	  );
	};
	
	PressPage.contextTypes = {
	  route: _react2.default.PropTypes.object
	};
	
	exports.default = PressPage;
	module.exports = exports['default'];

/***/ },
/* 1221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Paragraph = __webpack_require__(520);
	
	var _Paragraph2 = _interopRequireDefault(_Paragraph);
	
	var _Section = __webpack_require__(675);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import SubTitle from '../../components/SubTitle'
	// import TextLink from '../../components/TextLink'
	
	
	/**
	 *
	 */
	
	
	// import List from '../../components/List'
	// import ListItem from '../../components/ListItem'
	const SitemapPage = (props, { config }) => {
	  const { links } = config;
	
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      _Section2.default,
	      { headline: true, open: true, title: 'Sitemap' },
	      _react2.default.createElement(
	        _Paragraph2.default,
	        null,
	        'Coming Soon. ',
	        links.out.org
	      )
	    )
	  );
	};
	
	SitemapPage.contextTypes = {
	  config: _react2.default.PropTypes.object
	};
	
	exports.default = SitemapPage;
	module.exports = exports['default'];

/***/ },
/* 1222 */
1049,
/* 1223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _sections = __webpack_require__(542);
	
	var _Section = __webpack_require__(671);
	
	var _Section2 = _interopRequireDefault(_Section);
	
	var _Section3 = __webpack_require__(675);
	
	var _Section4 = _interopRequireDefault(_Section3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const Default = _react2.default.createElement(_Section2.default, null);
	
	/**
	 *
	 */
	class TechPage extends _react2.default.Component {
	  constructor(...args) {
	    var _temp;
	
	    return _temp = super(...args), this.state = {
	      sections: _react2.default.createElement(
	        _Section4.default,
	        { headline: true, open: true, title: 'Technology Overview' },
	        Default
	      )
	    }, _temp;
	  }
	
	  componentDidMount() {
	    this.setState({ // eslint-disable-line react/no-did-mount-set-state
	      sections: (0, _sections.getMainSectionComponents)(Default)
	    });
	  }
	
	  componentWillUnmount() {
	    this.setState({ sections: [] });
	  }
	
	  render() {
	    const { sections } = this.state;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      sections
	    );
	  }
	
	}
	
	exports.default = TechPage;
	module.exports = exports['default'];

/***/ }
/******/ ])));
//# sourceMappingURL=bundle.js.map